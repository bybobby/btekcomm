Microsoft (R) COFF/PE Dumper Version 14.20.27508.1
Copyright (C) Microsoft Corporation.  All rights reserved.


Dump of file ftd2xx_x86.lib

File Type: LIBRARY

@_guard_check_icall_nop@4:
  00000000: C3                 ret

@_guard_check_icall@4:
  00000000: FF 25 00 00 00 00  jmp         dword ptr [___guard_check_icall_fptr]

__guard_icall_checks_enforced:
  00000000: 33 C0              xor         eax,eax
  00000002: 81 3D 00 00 00 00  cmp         dword ptr [___guard_check_icall_fptr],offset @_guard_check_icall_nop@4
            00 00 00 00
  0000000C: 0F 95 C0           setne       al
  0000000F: C3                 ret

___guard_check_icall_thunk:
  00000000: 50                 push        eax
  00000001: 51                 push        ecx
  00000002: 52                 push        edx
  00000003: 8B C8              mov         ecx,eax
  00000005: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000000B: 5A                 pop         edx
  0000000C: 59                 pop         ecx
  0000000D: 58                 pop         eax
  0000000E: C3                 ret

_SQLConfigDataSource@16:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BE@LCNCPACH@SQLConfigDataSource?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 27              je          00000048
  00000021: FF 75 14           push        dword ptr [ebp+14h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 10           push        dword ptr [ebp+10h]
  00000029: FF 75 0C           push        dword ptr [ebp+0Ch]
  0000002C: FF 75 08           push        dword ptr [ebp+8]
  0000002F: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000035: FF D6              call        esi
  00000037: 5E                 pop         esi
  00000038: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000003B: 33 CD              xor         ecx,ebp
  0000003D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000042: 8B E5              mov         esp,ebp
  00000044: 5D                 pop         ebp
  00000045: C2 10 00           ret         10h
  00000048: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000004B: 33 C0              xor         eax,eax
  0000004D: 33 CD              xor         ecx,ebp
  0000004F: 5E                 pop         esi
  00000050: E8 00 00 00 00     call        @__security_check_cookie@4
  00000055: 8B E5              mov         esp,ebp
  00000057: 5D                 pop         ebp
  00000058: C2 10 00           ret         10h

_SQLConfigDataSourceW@16:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BF@FAECKMAI@SQLConfigDataSourceW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 27              je          00000048
  00000021: FF 75 14           push        dword ptr [ebp+14h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 10           push        dword ptr [ebp+10h]
  00000029: FF 75 0C           push        dword ptr [ebp+0Ch]
  0000002C: FF 75 08           push        dword ptr [ebp+8]
  0000002F: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000035: FF D6              call        esi
  00000037: 5E                 pop         esi
  00000038: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000003B: 33 CD              xor         ecx,ebp
  0000003D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000042: 8B E5              mov         esp,ebp
  00000044: 5D                 pop         ebp
  00000045: C2 10 00           ret         10h
  00000048: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000004B: 33 C0              xor         eax,eax
  0000004D: 33 CD              xor         ecx,ebp
  0000004F: 5E                 pop         esi
  00000050: E8 00 00 00 00     call        @__security_check_cookie@4
  00000055: 8B E5              mov         esp,ebp
  00000057: 5D                 pop         ebp
  00000058: C2 10 00           ret         10h

_SQLConfigDriver@28:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BA@HPACMNBB@SQLConfigDriver?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 30              je          00000051
  00000021: FF 75 20           push        dword ptr [ebp+20h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 1C           push        dword ptr [ebp+1Ch]
  00000029: FF 75 18           push        dword ptr [ebp+18h]
  0000002C: FF 75 14           push        dword ptr [ebp+14h]
  0000002F: FF 75 10           push        dword ptr [ebp+10h]
  00000032: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000035: FF 75 08           push        dword ptr [ebp+8]
  00000038: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000003E: FF D6              call        esi
  00000040: 5E                 pop         esi
  00000041: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000044: 33 CD              xor         ecx,ebp
  00000046: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004B: 8B E5              mov         esp,ebp
  0000004D: 5D                 pop         ebp
  0000004E: C2 1C 00           ret         1Ch
  00000051: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000054: 33 C0              xor         eax,eax
  00000056: 33 CD              xor         ecx,ebp
  00000058: 5E                 pop         esi
  00000059: E8 00 00 00 00     call        @__security_check_cookie@4
  0000005E: 8B E5              mov         esp,ebp
  00000060: 5D                 pop         ebp
  00000061: C2 1C 00           ret         1Ch

_SQLConfigDriverW@28:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BB@JPDFOJKM@SQLConfigDriverW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 30              je          00000051
  00000021: FF 75 20           push        dword ptr [ebp+20h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 1C           push        dword ptr [ebp+1Ch]
  00000029: FF 75 18           push        dword ptr [ebp+18h]
  0000002C: FF 75 14           push        dword ptr [ebp+14h]
  0000002F: FF 75 10           push        dword ptr [ebp+10h]
  00000032: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000035: FF 75 08           push        dword ptr [ebp+8]
  00000038: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000003E: FF D6              call        esi
  00000040: 5E                 pop         esi
  00000041: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000044: 33 CD              xor         ecx,ebp
  00000046: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004B: 8B E5              mov         esp,ebp
  0000004D: 5D                 pop         ebp
  0000004E: C2 1C 00           ret         1Ch
  00000051: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000054: 33 C0              xor         eax,eax
  00000056: 33 CD              xor         ecx,ebp
  00000058: 5E                 pop         esi
  00000059: E8 00 00 00 00     call        @__security_check_cookie@4
  0000005E: 8B E5              mov         esp,ebp
  00000060: 5D                 pop         ebp
  00000061: C2 1C 00           ret         1Ch

_SQLCreateDataSource@8:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BE@PJJGNIOF@SQLCreateDataSource?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 21              je          00000042
  00000021: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 08           push        dword ptr [ebp+8]
  00000029: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002F: FF D6              call        esi
  00000031: 5E                 pop         esi
  00000032: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000035: 33 CD              xor         ecx,ebp
  00000037: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003C: 8B E5              mov         esp,ebp
  0000003E: 5D                 pop         ebp
  0000003F: C2 08 00           ret         8
  00000042: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000045: 33 C0              xor         eax,eax
  00000047: 33 CD              xor         ecx,ebp
  00000049: 5E                 pop         esi
  0000004A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004F: 8B E5              mov         esp,ebp
  00000051: 5D                 pop         ebp
  00000052: C2 08 00           ret         8

_SQLCreateDataSourceW@8:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BF@CFGDELLM@SQLCreateDataSourceW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 21              je          00000042
  00000021: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 08           push        dword ptr [ebp+8]
  00000029: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002F: FF D6              call        esi
  00000031: 5E                 pop         esi
  00000032: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000035: 33 CD              xor         ecx,ebp
  00000037: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003C: 8B E5              mov         esp,ebp
  0000003E: 5D                 pop         ebp
  0000003F: C2 08 00           ret         8
  00000042: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000045: 33 C0              xor         eax,eax
  00000047: 33 CD              xor         ecx,ebp
  00000049: 5E                 pop         esi
  0000004A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004F: 8B E5              mov         esp,ebp
  00000051: 5D                 pop         ebp
  00000052: C2 08 00           ret         8

_SQLGetAvailableDrivers@16:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BH@KGKFGDBJ@SQLGetAvailableDrivers?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 23              je          00000044
  00000021: 6A 00              push        0
  00000023: 6A 00              push        0
  00000025: 6A 00              push        0
  00000027: 6A 00              push        0
  00000029: 8B CE              mov         ecx,esi
  0000002B: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000031: FF D6              call        esi
  00000033: 5E                 pop         esi
  00000034: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000037: 33 CD              xor         ecx,ebp
  00000039: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003E: 8B E5              mov         esp,ebp
  00000040: 5D                 pop         ebp
  00000041: C2 10 00           ret         10h
  00000044: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000047: 33 C0              xor         eax,eax
  00000049: 33 CD              xor         ecx,ebp
  0000004B: 5E                 pop         esi
  0000004C: E8 00 00 00 00     call        @__security_check_cookie@4
  00000051: 8B E5              mov         esp,ebp
  00000053: 5D                 pop         ebp
  00000054: C2 10 00           ret         10h

_SQLGetAvailableDriversW@16:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BI@JBDHMGDA@SQLGetAvailableDriversW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 23              je          00000044
  00000021: 6A 00              push        0
  00000023: 6A 00              push        0
  00000025: 6A 00              push        0
  00000027: 6A 00              push        0
  00000029: 8B CE              mov         ecx,esi
  0000002B: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000031: FF D6              call        esi
  00000033: 5E                 pop         esi
  00000034: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000037: 33 CD              xor         ecx,ebp
  00000039: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003E: 8B E5              mov         esp,ebp
  00000040: 5D                 pop         ebp
  00000041: C2 10 00           ret         10h
  00000044: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000047: 33 C0              xor         eax,eax
  00000049: 33 CD              xor         ecx,ebp
  0000004B: 5E                 pop         esi
  0000004C: E8 00 00 00 00     call        @__security_check_cookie@4
  00000051: 8B E5              mov         esp,ebp
  00000053: 5D                 pop         ebp
  00000054: C2 10 00           ret         10h

_SQLGetConfigMode@4:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BB@KEIIMOKK@SQLGetConfigMode?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 1E              je          0000003F
  00000021: FF 75 08           push        dword ptr [ebp+8]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002C: FF D6              call        esi
  0000002E: 5E                 pop         esi
  0000002F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000032: 33 CD              xor         ecx,ebp
  00000034: E8 00 00 00 00     call        @__security_check_cookie@4
  00000039: 8B E5              mov         esp,ebp
  0000003B: 5D                 pop         ebp
  0000003C: C2 04 00           ret         4
  0000003F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000042: 33 C0              xor         eax,eax
  00000044: 33 CD              xor         ecx,ebp
  00000046: 5E                 pop         esi
  00000047: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004C: 8B E5              mov         esp,ebp
  0000004E: 5D                 pop         ebp
  0000004F: C2 04 00           ret         4

_SQLGetInstalledDrivers@12:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BH@IILGJKKA@SQLGetInstalledDrivers?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 24              je          00000045
  00000021: FF 75 10           push        dword ptr [ebp+10h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000029: FF 75 08           push        dword ptr [ebp+8]
  0000002C: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000032: FF D6              call        esi
  00000034: 5E                 pop         esi
  00000035: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000038: 33 CD              xor         ecx,ebp
  0000003A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003F: 8B E5              mov         esp,ebp
  00000041: 5D                 pop         ebp
  00000042: C2 0C 00           ret         0Ch
  00000045: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000048: 33 C0              xor         eax,eax
  0000004A: 33 CD              xor         ecx,ebp
  0000004C: 5E                 pop         esi
  0000004D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000052: 8B E5              mov         esp,ebp
  00000054: 5D                 pop         ebp
  00000055: C2 0C 00           ret         0Ch

_SQLGetInstalledDriversW@12:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BI@CDKENOOB@SQLGetInstalledDriversW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 24              je          00000045
  00000021: FF 75 10           push        dword ptr [ebp+10h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000029: FF 75 08           push        dword ptr [ebp+8]
  0000002C: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000032: FF D6              call        esi
  00000034: 5E                 pop         esi
  00000035: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000038: 33 CD              xor         ecx,ebp
  0000003A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003F: 8B E5              mov         esp,ebp
  00000041: 5D                 pop         ebp
  00000042: C2 0C 00           ret         0Ch
  00000045: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000048: 33 C0              xor         eax,eax
  0000004A: 33 CD              xor         ecx,ebp
  0000004C: 5E                 pop         esi
  0000004D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000052: 8B E5              mov         esp,ebp
  00000054: 5D                 pop         ebp
  00000055: C2 0C 00           ret         0Ch

_SQLGetPrivateProfileString@24:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BL@KBJJEPE@SQLGetPrivateProfileString?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 2D              je          0000004E
  00000021: FF 75 1C           push        dword ptr [ebp+1Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 18           push        dword ptr [ebp+18h]
  00000029: FF 75 14           push        dword ptr [ebp+14h]
  0000002C: FF 75 10           push        dword ptr [ebp+10h]
  0000002F: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000032: FF 75 08           push        dword ptr [ebp+8]
  00000035: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000003B: FF D6              call        esi
  0000003D: 5E                 pop         esi
  0000003E: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000041: 33 CD              xor         ecx,ebp
  00000043: E8 00 00 00 00     call        @__security_check_cookie@4
  00000048: 8B E5              mov         esp,ebp
  0000004A: 5D                 pop         ebp
  0000004B: C2 18 00           ret         18h
  0000004E: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000051: 33 C0              xor         eax,eax
  00000053: 33 CD              xor         ecx,ebp
  00000055: 5E                 pop         esi
  00000056: E8 00 00 00 00     call        @__security_check_cookie@4
  0000005B: 8B E5              mov         esp,ebp
  0000005D: 5D                 pop         ebp
  0000005E: C2 18 00           ret         18h

_SQLGetPrivateProfileStringW@24:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BM@EPCAOEAC@SQLGetPrivateProfileStringW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 2D              je          0000004E
  00000021: FF 75 1C           push        dword ptr [ebp+1Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 18           push        dword ptr [ebp+18h]
  00000029: FF 75 14           push        dword ptr [ebp+14h]
  0000002C: FF 75 10           push        dword ptr [ebp+10h]
  0000002F: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000032: FF 75 08           push        dword ptr [ebp+8]
  00000035: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000003B: FF D6              call        esi
  0000003D: 5E                 pop         esi
  0000003E: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000041: 33 CD              xor         ecx,ebp
  00000043: E8 00 00 00 00     call        @__security_check_cookie@4
  00000048: 8B E5              mov         esp,ebp
  0000004A: 5D                 pop         ebp
  0000004B: C2 18 00           ret         18h
  0000004E: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000051: 33 C0              xor         eax,eax
  00000053: 33 CD              xor         ecx,ebp
  00000055: 5E                 pop         esi
  00000056: E8 00 00 00 00     call        @__security_check_cookie@4
  0000005B: 8B E5              mov         esp,ebp
  0000005D: 5D                 pop         ebp
  0000005E: C2 18 00           ret         18h

_SQLGetTranslator@32:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BB@NONPILHB@SQLGetTranslator?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 33              je          00000054
  00000021: FF 75 24           push        dword ptr [ebp+24h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 20           push        dword ptr [ebp+20h]
  00000029: FF 75 1C           push        dword ptr [ebp+1Ch]
  0000002C: FF 75 18           push        dword ptr [ebp+18h]
  0000002F: FF 75 14           push        dword ptr [ebp+14h]
  00000032: FF 75 10           push        dword ptr [ebp+10h]
  00000035: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000038: FF 75 08           push        dword ptr [ebp+8]
  0000003B: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000041: FF D6              call        esi
  00000043: 5E                 pop         esi
  00000044: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000047: 33 CD              xor         ecx,ebp
  00000049: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004E: 8B E5              mov         esp,ebp
  00000050: 5D                 pop         ebp
  00000051: C2 20 00           ret         20h
  00000054: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000057: 33 C0              xor         eax,eax
  00000059: 33 CD              xor         ecx,ebp
  0000005B: 5E                 pop         esi
  0000005C: E8 00 00 00 00     call        @__security_check_cookie@4
  00000061: 8B E5              mov         esp,ebp
  00000063: 5D                 pop         ebp
  00000064: C2 20 00           ret         20h

_SQLGetTranslatorW@32:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BC@NCCGFFLC@SQLGetTranslatorW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 33              je          00000054
  00000021: FF 75 24           push        dword ptr [ebp+24h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 20           push        dword ptr [ebp+20h]
  00000029: FF 75 1C           push        dword ptr [ebp+1Ch]
  0000002C: FF 75 18           push        dword ptr [ebp+18h]
  0000002F: FF 75 14           push        dword ptr [ebp+14h]
  00000032: FF 75 10           push        dword ptr [ebp+10h]
  00000035: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000038: FF 75 08           push        dword ptr [ebp+8]
  0000003B: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000041: FF D6              call        esi
  00000043: 5E                 pop         esi
  00000044: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000047: 33 CD              xor         ecx,ebp
  00000049: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004E: 8B E5              mov         esp,ebp
  00000050: 5D                 pop         ebp
  00000051: C2 20 00           ret         20h
  00000054: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000057: 33 C0              xor         eax,eax
  00000059: 33 CD              xor         ecx,ebp
  0000005B: 5E                 pop         esi
  0000005C: E8 00 00 00 00     call        @__security_check_cookie@4
  00000061: 8B E5              mov         esp,ebp
  00000063: 5D                 pop         ebp
  00000064: C2 20 00           ret         20h

_SQLInstallDriver@20:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BB@LMIMCDGA@SQLInstallDriver?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 2A              je          0000004B
  00000021: FF 75 18           push        dword ptr [ebp+18h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 14           push        dword ptr [ebp+14h]
  00000029: FF 75 10           push        dword ptr [ebp+10h]
  0000002C: FF 75 0C           push        dword ptr [ebp+0Ch]
  0000002F: FF 75 08           push        dword ptr [ebp+8]
  00000032: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000038: FF D6              call        esi
  0000003A: 5E                 pop         esi
  0000003B: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000003E: 33 CD              xor         ecx,ebp
  00000040: E8 00 00 00 00     call        @__security_check_cookie@4
  00000045: 8B E5              mov         esp,ebp
  00000047: 5D                 pop         ebp
  00000048: C2 14 00           ret         14h
  0000004B: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000004E: 33 C0              xor         eax,eax
  00000050: 33 CD              xor         ecx,ebp
  00000052: 5E                 pop         esi
  00000053: E8 00 00 00 00     call        @__security_check_cookie@4
  00000058: 8B E5              mov         esp,ebp
  0000005A: 5D                 pop         ebp
  0000005B: C2 14 00           ret         14h

_SQLInstallDriverEx@28:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BD@FGCNBKIM@SQLInstallDriverEx?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 30              je          00000051
  00000021: FF 75 20           push        dword ptr [ebp+20h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 1C           push        dword ptr [ebp+1Ch]
  00000029: FF 75 18           push        dword ptr [ebp+18h]
  0000002C: FF 75 14           push        dword ptr [ebp+14h]
  0000002F: FF 75 10           push        dword ptr [ebp+10h]
  00000032: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000035: FF 75 08           push        dword ptr [ebp+8]
  00000038: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000003E: FF D6              call        esi
  00000040: 5E                 pop         esi
  00000041: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000044: 33 CD              xor         ecx,ebp
  00000046: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004B: 8B E5              mov         esp,ebp
  0000004D: 5D                 pop         ebp
  0000004E: C2 1C 00           ret         1Ch
  00000051: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000054: 33 C0              xor         eax,eax
  00000056: 33 CD              xor         ecx,ebp
  00000058: 5E                 pop         esi
  00000059: E8 00 00 00 00     call        @__security_check_cookie@4
  0000005E: 8B E5              mov         esp,ebp
  00000060: 5D                 pop         ebp
  00000061: C2 1C 00           ret         1Ch

_SQLInstallDriverExW@28:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BE@BBKCCJIC@SQLInstallDriverExW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 30              je          00000051
  00000021: FF 75 20           push        dword ptr [ebp+20h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 1C           push        dword ptr [ebp+1Ch]
  00000029: FF 75 18           push        dword ptr [ebp+18h]
  0000002C: FF 75 14           push        dword ptr [ebp+14h]
  0000002F: FF 75 10           push        dword ptr [ebp+10h]
  00000032: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000035: FF 75 08           push        dword ptr [ebp+8]
  00000038: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000003E: FF D6              call        esi
  00000040: 5E                 pop         esi
  00000041: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000044: 33 CD              xor         ecx,ebp
  00000046: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004B: 8B E5              mov         esp,ebp
  0000004D: 5D                 pop         ebp
  0000004E: C2 1C 00           ret         1Ch
  00000051: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000054: 33 C0              xor         eax,eax
  00000056: 33 CD              xor         ecx,ebp
  00000058: 5E                 pop         esi
  00000059: E8 00 00 00 00     call        @__security_check_cookie@4
  0000005E: 8B E5              mov         esp,ebp
  00000060: 5D                 pop         ebp
  00000061: C2 1C 00           ret         1Ch

_SQLInstallDriverManager@12:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BI@NFCNOKHD@SQLInstallDriverManager?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 24              je          00000045
  00000021: FF 75 10           push        dword ptr [ebp+10h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000029: FF 75 08           push        dword ptr [ebp+8]
  0000002C: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000032: FF D6              call        esi
  00000034: 5E                 pop         esi
  00000035: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000038: 33 CD              xor         ecx,ebp
  0000003A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003F: 8B E5              mov         esp,ebp
  00000041: 5D                 pop         ebp
  00000042: C2 0C 00           ret         0Ch
  00000045: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000048: 33 C0              xor         eax,eax
  0000004A: 33 CD              xor         ecx,ebp
  0000004C: 5E                 pop         esi
  0000004D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000052: 8B E5              mov         esp,ebp
  00000054: 5D                 pop         ebp
  00000055: C2 0C 00           ret         0Ch

_SQLInstallDriverManagerW@12:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BJ@DMCDMGPP@SQLInstallDriverManagerW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 24              je          00000045
  00000021: FF 75 10           push        dword ptr [ebp+10h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000029: FF 75 08           push        dword ptr [ebp+8]
  0000002C: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000032: FF D6              call        esi
  00000034: 5E                 pop         esi
  00000035: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000038: 33 CD              xor         ecx,ebp
  0000003A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003F: 8B E5              mov         esp,ebp
  00000041: 5D                 pop         ebp
  00000042: C2 0C 00           ret         0Ch
  00000045: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000048: 33 C0              xor         eax,eax
  0000004A: 33 CD              xor         ecx,ebp
  0000004C: 5E                 pop         esi
  0000004D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000052: 8B E5              mov         esp,ebp
  00000054: 5D                 pop         ebp
  00000055: C2 0C 00           ret         0Ch

_SQLInstallDriverW@20:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BC@LIPECGOI@SQLInstallDriverW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 2A              je          0000004B
  00000021: FF 75 18           push        dword ptr [ebp+18h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 14           push        dword ptr [ebp+14h]
  00000029: FF 75 10           push        dword ptr [ebp+10h]
  0000002C: FF 75 0C           push        dword ptr [ebp+0Ch]
  0000002F: FF 75 08           push        dword ptr [ebp+8]
  00000032: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000038: FF D6              call        esi
  0000003A: 5E                 pop         esi
  0000003B: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000003E: 33 CD              xor         ecx,ebp
  00000040: E8 00 00 00 00     call        @__security_check_cookie@4
  00000045: 8B E5              mov         esp,ebp
  00000047: 5D                 pop         ebp
  00000048: C2 14 00           ret         14h
  0000004B: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000004E: 33 C0              xor         eax,eax
  00000050: 33 CD              xor         ecx,ebp
  00000052: 5E                 pop         esi
  00000053: E8 00 00 00 00     call        @__security_check_cookie@4
  00000058: 8B E5              mov         esp,ebp
  0000005A: 5D                 pop         ebp
  0000005B: C2 14 00           ret         14h

_SQLInstallODBC@16:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0P@HMFMOAPK@SQLInstallODBC?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 23              je          00000044
  00000021: 6A 00              push        0
  00000023: 6A 00              push        0
  00000025: 6A 00              push        0
  00000027: 6A 00              push        0
  00000029: 8B CE              mov         ecx,esi
  0000002B: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000031: FF D6              call        esi
  00000033: 5E                 pop         esi
  00000034: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000037: 33 CD              xor         ecx,ebp
  00000039: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003E: 8B E5              mov         esp,ebp
  00000040: 5D                 pop         ebp
  00000041: C2 10 00           ret         10h
  00000044: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000047: 33 C0              xor         eax,eax
  00000049: 33 CD              xor         ecx,ebp
  0000004B: 5E                 pop         esi
  0000004C: E8 00 00 00 00     call        @__security_check_cookie@4
  00000051: 8B E5              mov         esp,ebp
  00000053: 5D                 pop         ebp
  00000054: C2 10 00           ret         10h

_SQLInstallODBCW@16:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BA@KIOOIMHB@SQLInstallODBCW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 23              je          00000044
  00000021: 6A 00              push        0
  00000023: 6A 00              push        0
  00000025: 6A 00              push        0
  00000027: 6A 00              push        0
  00000029: 8B CE              mov         ecx,esi
  0000002B: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000031: FF D6              call        esi
  00000033: 5E                 pop         esi
  00000034: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000037: 33 CD              xor         ecx,ebp
  00000039: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003E: 8B E5              mov         esp,ebp
  00000040: 5D                 pop         ebp
  00000041: C2 10 00           ret         10h
  00000044: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000047: 33 C0              xor         eax,eax
  00000049: 33 CD              xor         ecx,ebp
  0000004B: 5E                 pop         esi
  0000004C: E8 00 00 00 00     call        @__security_check_cookie@4
  00000051: 8B E5              mov         esp,ebp
  00000053: 5D                 pop         ebp
  00000054: C2 10 00           ret         10h

_SQLInstallTranslator@32:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BF@MNODFPFH@SQLInstallTranslator?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 33              je          00000054
  00000021: FF 75 24           push        dword ptr [ebp+24h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 20           push        dword ptr [ebp+20h]
  00000029: FF 75 1C           push        dword ptr [ebp+1Ch]
  0000002C: FF 75 18           push        dword ptr [ebp+18h]
  0000002F: FF 75 14           push        dword ptr [ebp+14h]
  00000032: FF 75 10           push        dword ptr [ebp+10h]
  00000035: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000038: FF 75 08           push        dword ptr [ebp+8]
  0000003B: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000041: FF D6              call        esi
  00000043: 5E                 pop         esi
  00000044: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000047: 33 CD              xor         ecx,ebp
  00000049: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004E: 8B E5              mov         esp,ebp
  00000050: 5D                 pop         ebp
  00000051: C2 20 00           ret         20h
  00000054: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000057: 33 C0              xor         eax,eax
  00000059: 33 CD              xor         ecx,ebp
  0000005B: 5E                 pop         esi
  0000005C: E8 00 00 00 00     call        @__security_check_cookie@4
  00000061: 8B E5              mov         esp,ebp
  00000063: 5D                 pop         ebp
  00000064: C2 20 00           ret         20h

_SQLInstallTranslatorEx@28:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BH@JPJJPGMA@SQLInstallTranslatorEx?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 30              je          00000051
  00000021: FF 75 20           push        dword ptr [ebp+20h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 1C           push        dword ptr [ebp+1Ch]
  00000029: FF 75 18           push        dword ptr [ebp+18h]
  0000002C: FF 75 14           push        dword ptr [ebp+14h]
  0000002F: FF 75 10           push        dword ptr [ebp+10h]
  00000032: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000035: FF 75 08           push        dword ptr [ebp+8]
  00000038: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000003E: FF D6              call        esi
  00000040: 5E                 pop         esi
  00000041: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000044: 33 CD              xor         ecx,ebp
  00000046: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004B: 8B E5              mov         esp,ebp
  0000004D: 5D                 pop         ebp
  0000004E: C2 1C 00           ret         1Ch
  00000051: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000054: 33 C0              xor         eax,eax
  00000056: 33 CD              xor         ecx,ebp
  00000058: 5E                 pop         esi
  00000059: E8 00 00 00 00     call        @__security_check_cookie@4
  0000005E: 8B E5              mov         esp,ebp
  00000060: 5D                 pop         ebp
  00000061: C2 1C 00           ret         1Ch

_SQLInstallTranslatorExW@28:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BI@GOABJANF@SQLInstallTranslatorExW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 30              je          00000051
  00000021: FF 75 20           push        dword ptr [ebp+20h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 1C           push        dword ptr [ebp+1Ch]
  00000029: FF 75 18           push        dword ptr [ebp+18h]
  0000002C: FF 75 14           push        dword ptr [ebp+14h]
  0000002F: FF 75 10           push        dword ptr [ebp+10h]
  00000032: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000035: FF 75 08           push        dword ptr [ebp+8]
  00000038: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000003E: FF D6              call        esi
  00000040: 5E                 pop         esi
  00000041: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000044: 33 CD              xor         ecx,ebp
  00000046: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004B: 8B E5              mov         esp,ebp
  0000004D: 5D                 pop         ebp
  0000004E: C2 1C 00           ret         1Ch
  00000051: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000054: 33 C0              xor         eax,eax
  00000056: 33 CD              xor         ecx,ebp
  00000058: 5E                 pop         esi
  00000059: E8 00 00 00 00     call        @__security_check_cookie@4
  0000005E: 8B E5              mov         esp,ebp
  00000060: 5D                 pop         ebp
  00000061: C2 1C 00           ret         1Ch

_SQLInstallTranslatorW@32:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BG@DIOMJL@SQLInstallTranslatorW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 33              je          00000054
  00000021: FF 75 24           push        dword ptr [ebp+24h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 20           push        dword ptr [ebp+20h]
  00000029: FF 75 1C           push        dword ptr [ebp+1Ch]
  0000002C: FF 75 18           push        dword ptr [ebp+18h]
  0000002F: FF 75 14           push        dword ptr [ebp+14h]
  00000032: FF 75 10           push        dword ptr [ebp+10h]
  00000035: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000038: FF 75 08           push        dword ptr [ebp+8]
  0000003B: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000041: FF D6              call        esi
  00000043: 5E                 pop         esi
  00000044: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000047: 33 CD              xor         ecx,ebp
  00000049: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004E: 8B E5              mov         esp,ebp
  00000050: 5D                 pop         ebp
  00000051: C2 20 00           ret         20h
  00000054: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000057: 33 C0              xor         eax,eax
  00000059: 33 CD              xor         ecx,ebp
  0000005B: 5E                 pop         esi
  0000005C: E8 00 00 00 00     call        @__security_check_cookie@4
  00000061: 8B E5              mov         esp,ebp
  00000063: 5D                 pop         ebp
  00000064: C2 20 00           ret         20h

_SQLInstallerError@20:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BC@DJAFKIEP@SQLInstallerError?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 2A              je          0000004B
  00000021: FF 75 18           push        dword ptr [ebp+18h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 14           push        dword ptr [ebp+14h]
  00000029: FF 75 10           push        dword ptr [ebp+10h]
  0000002C: FF 75 0C           push        dword ptr [ebp+0Ch]
  0000002F: FF 75 08           push        dword ptr [ebp+8]
  00000032: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000038: FF D6              call        esi
  0000003A: 5E                 pop         esi
  0000003B: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000003E: 33 CD              xor         ecx,ebp
  00000040: E8 00 00 00 00     call        @__security_check_cookie@4
  00000045: 8B E5              mov         esp,ebp
  00000047: 5D                 pop         ebp
  00000048: C2 14 00           ret         14h
  0000004B: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000004E: 83 C8 FF           or          eax,0FFFFFFFFh
  00000051: 33 CD              xor         ecx,ebp
  00000053: 5E                 pop         esi
  00000054: E8 00 00 00 00     call        @__security_check_cookie@4
  00000059: 8B E5              mov         esp,ebp
  0000005B: 5D                 pop         ebp
  0000005C: C2 14 00           ret         14h

_SQLInstallerErrorW@20:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BD@BDKAJCDK@SQLInstallerErrorW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 2A              je          0000004B
  00000021: FF 75 18           push        dword ptr [ebp+18h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 14           push        dword ptr [ebp+14h]
  00000029: FF 75 10           push        dword ptr [ebp+10h]
  0000002C: FF 75 0C           push        dword ptr [ebp+0Ch]
  0000002F: FF 75 08           push        dword ptr [ebp+8]
  00000032: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000038: FF D6              call        esi
  0000003A: 5E                 pop         esi
  0000003B: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000003E: 33 CD              xor         ecx,ebp
  00000040: E8 00 00 00 00     call        @__security_check_cookie@4
  00000045: 8B E5              mov         esp,ebp
  00000047: 5D                 pop         ebp
  00000048: C2 14 00           ret         14h
  0000004B: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000004E: 83 C8 FF           or          eax,0FFFFFFFFh
  00000051: 33 CD              xor         ecx,ebp
  00000053: 5E                 pop         esi
  00000054: E8 00 00 00 00     call        @__security_check_cookie@4
  00000059: 8B E5              mov         esp,ebp
  0000005B: 5D                 pop         ebp
  0000005C: C2 14 00           ret         14h

_SQLManageDataSources@4:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BF@MJGFEIGA@SQLManageDataSources?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 1E              je          0000003F
  00000021: FF 75 08           push        dword ptr [ebp+8]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002C: FF D6              call        esi
  0000002E: 5E                 pop         esi
  0000002F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000032: 33 CD              xor         ecx,ebp
  00000034: E8 00 00 00 00     call        @__security_check_cookie@4
  00000039: 8B E5              mov         esp,ebp
  0000003B: 5D                 pop         ebp
  0000003C: C2 04 00           ret         4
  0000003F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000042: 33 C0              xor         eax,eax
  00000044: 33 CD              xor         ecx,ebp
  00000046: 5E                 pop         esi
  00000047: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004C: 8B E5              mov         esp,ebp
  0000004E: 5D                 pop         ebp
  0000004F: C2 04 00           ret         4

_SQLPostInstallerError@8:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BG@CDCFGBML@SQLPostInstallerError?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 21              je          00000042
  00000021: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 08           push        dword ptr [ebp+8]
  00000029: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002F: FF D6              call        esi
  00000031: 5E                 pop         esi
  00000032: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000035: 33 CD              xor         ecx,ebp
  00000037: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003C: 8B E5              mov         esp,ebp
  0000003E: 5D                 pop         ebp
  0000003F: C2 08 00           ret         8
  00000042: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000045: 83 C8 FF           or          eax,0FFFFFFFFh
  00000048: 33 CD              xor         ecx,ebp
  0000004A: 5E                 pop         esi
  0000004B: E8 00 00 00 00     call        @__security_check_cookie@4
  00000050: 8B E5              mov         esp,ebp
  00000052: 5D                 pop         ebp
  00000053: C2 08 00           ret         8

_SQLPostInstallerErrorW@8:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BH@PJGPPFMK@SQLPostInstallerErrorW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 21              je          00000042
  00000021: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 08           push        dword ptr [ebp+8]
  00000029: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002F: FF D6              call        esi
  00000031: 5E                 pop         esi
  00000032: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000035: 33 CD              xor         ecx,ebp
  00000037: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003C: 8B E5              mov         esp,ebp
  0000003E: 5D                 pop         ebp
  0000003F: C2 08 00           ret         8
  00000042: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000045: 33 C0              xor         eax,eax
  00000047: 33 CD              xor         ecx,ebp
  00000049: 5E                 pop         esi
  0000004A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004F: 8B E5              mov         esp,ebp
  00000051: 5D                 pop         ebp
  00000052: C2 08 00           ret         8

_SQLReadFileDSN@24:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0P@CPNMPJKP@SQLReadFileDSN?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 2D              je          0000004E
  00000021: FF 75 1C           push        dword ptr [ebp+1Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 18           push        dword ptr [ebp+18h]
  00000029: FF 75 14           push        dword ptr [ebp+14h]
  0000002C: FF 75 10           push        dword ptr [ebp+10h]
  0000002F: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000032: FF 75 08           push        dword ptr [ebp+8]
  00000035: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000003B: FF D6              call        esi
  0000003D: 5E                 pop         esi
  0000003E: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000041: 33 CD              xor         ecx,ebp
  00000043: E8 00 00 00 00     call        @__security_check_cookie@4
  00000048: 8B E5              mov         esp,ebp
  0000004A: 5D                 pop         ebp
  0000004B: C2 18 00           ret         18h
  0000004E: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000051: 33 C0              xor         eax,eax
  00000053: 33 CD              xor         ecx,ebp
  00000055: 5E                 pop         esi
  00000056: E8 00 00 00 00     call        @__security_check_cookie@4
  0000005B: 8B E5              mov         esp,ebp
  0000005D: 5D                 pop         ebp
  0000005E: C2 18 00           ret         18h

_SQLReadFileDSNW@24:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BA@LDLMKJBD@SQLReadFileDSNW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 2D              je          0000004E
  00000021: FF 75 1C           push        dword ptr [ebp+1Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 18           push        dword ptr [ebp+18h]
  00000029: FF 75 14           push        dword ptr [ebp+14h]
  0000002C: FF 75 10           push        dword ptr [ebp+10h]
  0000002F: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000032: FF 75 08           push        dword ptr [ebp+8]
  00000035: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000003B: FF D6              call        esi
  0000003D: 5E                 pop         esi
  0000003E: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000041: 33 CD              xor         ecx,ebp
  00000043: E8 00 00 00 00     call        @__security_check_cookie@4
  00000048: 8B E5              mov         esp,ebp
  0000004A: 5D                 pop         ebp
  0000004B: C2 18 00           ret         18h
  0000004E: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000051: 33 C0              xor         eax,eax
  00000053: 33 CD              xor         ecx,ebp
  00000055: 5E                 pop         esi
  00000056: E8 00 00 00 00     call        @__security_check_cookie@4
  0000005B: 8B E5              mov         esp,ebp
  0000005D: 5D                 pop         ebp
  0000005E: C2 18 00           ret         18h

_SQLRemoveDSNFromIni@4:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BE@IIEGFOOO@SQLRemoveDSNFromIni?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 1E              je          0000003F
  00000021: FF 75 08           push        dword ptr [ebp+8]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002C: FF D6              call        esi
  0000002E: 5E                 pop         esi
  0000002F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000032: 33 CD              xor         ecx,ebp
  00000034: E8 00 00 00 00     call        @__security_check_cookie@4
  00000039: 8B E5              mov         esp,ebp
  0000003B: 5D                 pop         ebp
  0000003C: C2 04 00           ret         4
  0000003F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000042: 33 C0              xor         eax,eax
  00000044: 33 CD              xor         ecx,ebp
  00000046: 5E                 pop         esi
  00000047: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004C: 8B E5              mov         esp,ebp
  0000004E: 5D                 pop         ebp
  0000004F: C2 04 00           ret         4

_SQLRemoveDSNFromIniW@4:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BF@LCMAECLC@SQLRemoveDSNFromIniW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 1E              je          0000003F
  00000021: FF 75 08           push        dword ptr [ebp+8]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002C: FF D6              call        esi
  0000002E: 5E                 pop         esi
  0000002F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000032: 33 CD              xor         ecx,ebp
  00000034: E8 00 00 00 00     call        @__security_check_cookie@4
  00000039: 8B E5              mov         esp,ebp
  0000003B: 5D                 pop         ebp
  0000003C: C2 04 00           ret         4
  0000003F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000042: 33 C0              xor         eax,eax
  00000044: 33 CD              xor         ecx,ebp
  00000046: 5E                 pop         esi
  00000047: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004C: 8B E5              mov         esp,ebp
  0000004E: 5D                 pop         ebp
  0000004F: C2 04 00           ret         4

_SQLRemoveDefaultDataSource@0:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BL@IAMOPLF@SQLRemoveDefaultDataSource?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 19              je          0000003A
  00000021: 8B CE              mov         ecx,esi
  00000023: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000029: FF D6              call        esi
  0000002B: 5E                 pop         esi
  0000002C: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000002F: 33 CD              xor         ecx,ebp
  00000031: E8 00 00 00 00     call        @__security_check_cookie@4
  00000036: 8B E5              mov         esp,ebp
  00000038: 5D                 pop         ebp
  00000039: C3                 ret
  0000003A: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000003D: 33 C0              xor         eax,eax
  0000003F: 33 CD              xor         ecx,ebp
  00000041: 5E                 pop         esi
  00000042: E8 00 00 00 00     call        @__security_check_cookie@4
  00000047: 8B E5              mov         esp,ebp
  00000049: 5D                 pop         ebp
  0000004A: C3                 ret

_SQLRemoveDriver@12:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BA@KIAPJNDJ@SQLRemoveDriver?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 24              je          00000045
  00000021: FF 75 10           push        dword ptr [ebp+10h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000029: FF 75 08           push        dword ptr [ebp+8]
  0000002C: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000032: FF D6              call        esi
  00000034: 5E                 pop         esi
  00000035: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000038: 33 CD              xor         ecx,ebp
  0000003A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003F: 8B E5              mov         esp,ebp
  00000041: 5D                 pop         ebp
  00000042: C2 0C 00           ret         0Ch
  00000045: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000048: 33 C0              xor         eax,eax
  0000004A: 33 CD              xor         ecx,ebp
  0000004C: 5E                 pop         esi
  0000004D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000052: 8B E5              mov         esp,ebp
  00000054: 5D                 pop         ebp
  00000055: C2 0C 00           ret         0Ch

_SQLRemoveDriverManager@4:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BH@GKJNDOJI@SQLRemoveDriverManager?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 1E              je          0000003F
  00000021: FF 75 08           push        dword ptr [ebp+8]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002C: FF D6              call        esi
  0000002E: 5E                 pop         esi
  0000002F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000032: 33 CD              xor         ecx,ebp
  00000034: E8 00 00 00 00     call        @__security_check_cookie@4
  00000039: 8B E5              mov         esp,ebp
  0000003B: 5D                 pop         ebp
  0000003C: C2 04 00           ret         4
  0000003F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000042: 33 C0              xor         eax,eax
  00000044: 33 CD              xor         ecx,ebp
  00000046: 5E                 pop         esi
  00000047: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004C: 8B E5              mov         esp,ebp
  0000004E: 5D                 pop         ebp
  0000004F: C2 04 00           ret         4

_SQLRemoveDriverW@12:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BB@KKFHEMAG@SQLRemoveDriverW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 24              je          00000045
  00000021: FF 75 10           push        dword ptr [ebp+10h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000029: FF 75 08           push        dword ptr [ebp+8]
  0000002C: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000032: FF D6              call        esi
  00000034: 5E                 pop         esi
  00000035: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000038: 33 CD              xor         ecx,ebp
  0000003A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003F: 8B E5              mov         esp,ebp
  00000041: 5D                 pop         ebp
  00000042: C2 0C 00           ret         0Ch
  00000045: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000048: 33 C0              xor         eax,eax
  0000004A: 33 CD              xor         ecx,ebp
  0000004C: 5E                 pop         esi
  0000004D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000052: 8B E5              mov         esp,ebp
  00000054: 5D                 pop         ebp
  00000055: C2 0C 00           ret         0Ch

_SQLRemoveTranslator@8:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BE@LOFCNDJA@SQLRemoveTranslator?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 21              je          00000042
  00000021: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 08           push        dword ptr [ebp+8]
  00000029: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002F: FF D6              call        esi
  00000031: 5E                 pop         esi
  00000032: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000035: 33 CD              xor         ecx,ebp
  00000037: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003C: 8B E5              mov         esp,ebp
  0000003E: 5D                 pop         ebp
  0000003F: C2 08 00           ret         8
  00000042: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000045: 33 C0              xor         eax,eax
  00000047: 33 CD              xor         ecx,ebp
  00000049: 5E                 pop         esi
  0000004A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004F: 8B E5              mov         esp,ebp
  00000051: 5D                 pop         ebp
  00000052: C2 08 00           ret         8

_SQLRemoveTranslatorW@8:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BF@FELAKAE@SQLRemoveTranslatorW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 21              je          00000042
  00000021: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 08           push        dword ptr [ebp+8]
  00000029: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002F: FF D6              call        esi
  00000031: 5E                 pop         esi
  00000032: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000035: 33 CD              xor         ecx,ebp
  00000037: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003C: 8B E5              mov         esp,ebp
  0000003E: 5D                 pop         ebp
  0000003F: C2 08 00           ret         8
  00000042: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000045: 33 C0              xor         eax,eax
  00000047: 33 CD              xor         ecx,ebp
  00000049: 5E                 pop         esi
  0000004A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004F: 8B E5              mov         esp,ebp
  00000051: 5D                 pop         ebp
  00000052: C2 08 00           ret         8

_SQLSetConfigMode@4:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BB@NLJGHNNN@SQLSetConfigMode?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 1E              je          0000003F
  00000021: FF 75 08           push        dword ptr [ebp+8]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002C: FF D6              call        esi
  0000002E: 5E                 pop         esi
  0000002F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000032: 33 CD              xor         ecx,ebp
  00000034: E8 00 00 00 00     call        @__security_check_cookie@4
  00000039: 8B E5              mov         esp,ebp
  0000003B: 5D                 pop         ebp
  0000003C: C2 04 00           ret         4
  0000003F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000042: 33 C0              xor         eax,eax
  00000044: 33 CD              xor         ecx,ebp
  00000046: 5E                 pop         esi
  00000047: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004C: 8B E5              mov         esp,ebp
  0000004E: 5D                 pop         ebp
  0000004F: C2 04 00           ret         4

_SQLValidDSN@4:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0M@PEFJFIPJ@SQLValidDSN?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 1E              je          0000003F
  00000021: FF 75 08           push        dword ptr [ebp+8]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002C: FF D6              call        esi
  0000002E: 5E                 pop         esi
  0000002F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000032: 33 CD              xor         ecx,ebp
  00000034: E8 00 00 00 00     call        @__security_check_cookie@4
  00000039: 8B E5              mov         esp,ebp
  0000003B: 5D                 pop         ebp
  0000003C: C2 04 00           ret         4
  0000003F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000042: 33 C0              xor         eax,eax
  00000044: 33 CD              xor         ecx,ebp
  00000046: 5E                 pop         esi
  00000047: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004C: 8B E5              mov         esp,ebp
  0000004E: 5D                 pop         ebp
  0000004F: C2 04 00           ret         4

_SQLValidDSNW@4:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0N@DBGPNIHD@SQLValidDSNW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 1E              je          0000003F
  00000021: FF 75 08           push        dword ptr [ebp+8]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002C: FF D6              call        esi
  0000002E: 5E                 pop         esi
  0000002F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000032: 33 CD              xor         ecx,ebp
  00000034: E8 00 00 00 00     call        @__security_check_cookie@4
  00000039: 8B E5              mov         esp,ebp
  0000003B: 5D                 pop         ebp
  0000003C: C2 04 00           ret         4
  0000003F: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000042: 33 C0              xor         eax,eax
  00000044: 33 CD              xor         ecx,ebp
  00000046: 5E                 pop         esi
  00000047: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004C: 8B E5              mov         esp,ebp
  0000004E: 5D                 pop         ebp
  0000004F: C2 04 00           ret         4

_SQLWriteDSNToIni@8:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BB@ECPGBBGJ@SQLWriteDSNToIni?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 21              je          00000042
  00000021: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 08           push        dword ptr [ebp+8]
  00000029: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002F: FF D6              call        esi
  00000031: 5E                 pop         esi
  00000032: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000035: 33 CD              xor         ecx,ebp
  00000037: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003C: 8B E5              mov         esp,ebp
  0000003E: 5D                 pop         ebp
  0000003F: C2 08 00           ret         8
  00000042: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000045: 33 C0              xor         eax,eax
  00000047: 33 CD              xor         ecx,ebp
  00000049: 5E                 pop         esi
  0000004A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004F: 8B E5              mov         esp,ebp
  00000051: 5D                 pop         ebp
  00000052: C2 08 00           ret         8

_SQLWriteDSNToIniW@8:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BC@MBNGOEHO@SQLWriteDSNToIniW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 21              je          00000042
  00000021: FF 75 0C           push        dword ptr [ebp+0Ch]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 08           push        dword ptr [ebp+8]
  00000029: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  0000002F: FF D6              call        esi
  00000031: 5E                 pop         esi
  00000032: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000035: 33 CD              xor         ecx,ebp
  00000037: E8 00 00 00 00     call        @__security_check_cookie@4
  0000003C: 8B E5              mov         esp,ebp
  0000003E: 5D                 pop         ebp
  0000003F: C2 08 00           ret         8
  00000042: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000045: 33 C0              xor         eax,eax
  00000047: 33 CD              xor         ecx,ebp
  00000049: 5E                 pop         esi
  0000004A: E8 00 00 00 00     call        @__security_check_cookie@4
  0000004F: 8B E5              mov         esp,ebp
  00000051: 5D                 pop         ebp
  00000052: C2 08 00           ret         8

_SQLWriteFileDSN@16:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BA@BLPCDOIE@SQLWriteFileDSN?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 27              je          00000048
  00000021: FF 75 14           push        dword ptr [ebp+14h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 10           push        dword ptr [ebp+10h]
  00000029: FF 75 0C           push        dword ptr [ebp+0Ch]
  0000002C: FF 75 08           push        dword ptr [ebp+8]
  0000002F: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000035: FF D6              call        esi
  00000037: 5E                 pop         esi
  00000038: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000003B: 33 CD              xor         ecx,ebp
  0000003D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000042: 8B E5              mov         esp,ebp
  00000044: 5D                 pop         ebp
  00000045: C2 10 00           ret         10h
  00000048: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000004B: 33 C0              xor         eax,eax
  0000004D: 33 CD              xor         ecx,ebp
  0000004F: 5E                 pop         esi
  00000050: E8 00 00 00 00     call        @__security_check_cookie@4
  00000055: 8B E5              mov         esp,ebp
  00000057: 5D                 pop         ebp
  00000058: C2 10 00           ret         10h

_SQLWriteFileDSNW@16:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BB@BPDEHOJE@SQLWriteFileDSNW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 27              je          00000048
  00000021: FF 75 14           push        dword ptr [ebp+14h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 10           push        dword ptr [ebp+10h]
  00000029: FF 75 0C           push        dword ptr [ebp+0Ch]
  0000002C: FF 75 08           push        dword ptr [ebp+8]
  0000002F: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000035: FF D6              call        esi
  00000037: 5E                 pop         esi
  00000038: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000003B: 33 CD              xor         ecx,ebp
  0000003D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000042: 8B E5              mov         esp,ebp
  00000044: 5D                 pop         ebp
  00000045: C2 10 00           ret         10h
  00000048: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000004B: 33 C0              xor         eax,eax
  0000004D: 33 CD              xor         ecx,ebp
  0000004F: 5E                 pop         esi
  00000050: E8 00 00 00 00     call        @__security_check_cookie@4
  00000055: 8B E5              mov         esp,ebp
  00000057: 5D                 pop         ebp
  00000058: C2 10 00           ret         10h

_SQLWritePrivateProfileString@16:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BN@FPPPBCJE@SQLWritePrivateProfileString?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 27              je          00000048
  00000021: FF 75 14           push        dword ptr [ebp+14h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 10           push        dword ptr [ebp+10h]
  00000029: FF 75 0C           push        dword ptr [ebp+0Ch]
  0000002C: FF 75 08           push        dword ptr [ebp+8]
  0000002F: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000035: FF D6              call        esi
  00000037: 5E                 pop         esi
  00000038: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000003B: 33 CD              xor         ecx,ebp
  0000003D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000042: 8B E5              mov         esp,ebp
  00000044: 5D                 pop         ebp
  00000045: C2 10 00           ret         10h
  00000048: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000004B: 33 C0              xor         eax,eax
  0000004D: 33 CD              xor         ecx,ebp
  0000004F: 5E                 pop         esi
  00000050: E8 00 00 00 00     call        @__security_check_cookie@4
  00000055: 8B E5              mov         esp,ebp
  00000057: 5D                 pop         ebp
  00000058: C2 10 00           ret         10h

_SQLWritePrivateProfileStringW@16:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 51                 push        ecx
  00000006: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  0000000B: 33 C5              xor         eax,ebp
  0000000D: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000010: 56                 push        esi
  00000011: 68 00 00 00 00     push        offset ??_C@_0BO@CMHGDNM@SQLWritePrivateProfileStringW?$AA@
  00000016: E8 00 00 00 00     call        _ODBC___GetSetupProc@4
  0000001B: 8B F0              mov         esi,eax
  0000001D: 85 F6              test        esi,esi
  0000001F: 74 27              je          00000048
  00000021: FF 75 14           push        dword ptr [ebp+14h]
  00000024: 8B CE              mov         ecx,esi
  00000026: FF 75 10           push        dword ptr [ebp+10h]
  00000029: FF 75 0C           push        dword ptr [ebp+0Ch]
  0000002C: FF 75 08           push        dword ptr [ebp+8]
  0000002F: FF 15 00 00 00 00  call        dword ptr [___guard_check_icall_fptr]
  00000035: FF D6              call        esi
  00000037: 5E                 pop         esi
  00000038: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000003B: 33 CD              xor         ecx,ebp
  0000003D: E8 00 00 00 00     call        @__security_check_cookie@4
  00000042: 8B E5              mov         esp,ebp
  00000044: 5D                 pop         ebp
  00000045: C2 10 00           ret         10h
  00000048: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000004B: 33 C0              xor         eax,eax
  0000004D: 33 CD              xor         ecx,ebp
  0000004F: 5E                 pop         esi
  00000050: E8 00 00 00 00     call        @__security_check_cookie@4
  00000055: 8B E5              mov         esp,ebp
  00000057: 5D                 pop         ebp
  00000058: C2 10 00           ret         10h

_LoadProperSetupDLL@0:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 81 EC 18 04 00 00  sub         esp,418h
  0000000B: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  00000010: 33 C5              xor         eax,ebp
  00000012: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000015: 33 C0              xor         eax,eax
  00000017: 66 89 85 E8 FB FF  mov         word ptr [ebp-418h],ax
            FF
  0000001E: 8D 85 E8 FB FF FF  lea         eax,[ebp-418h]
  00000024: 68 0A 02 00 00     push        20Ah
  00000029: 50                 push        eax
  0000002A: FF 15 00 00 00 00  call        dword ptr [__imp__GetSystemDirectoryW@8]
  00000030: 85 C0              test        eax,eax
  00000032: 74 44              je          00000078
  00000034: 3D 0A 02 00 00     cmp         eax,20Ah
  00000039: 73 3D              jae         00000078
  0000003B: 68 00 00 00 00     push        offset ??_C@_1BM@GPGPKJLG@?$AA?2?$AAo?$AAd?$AAb?$AAc?$AAc?$AAp?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@
  00000040: B9 0A 02 00 00     mov         ecx,20Ah
  00000045: 2B C8              sub         ecx,eax
  00000047: 8D 84 45 E8 FB FF  lea         eax,[ebp+eax*2-418h]
            FF
  0000004E: 51                 push        ecx
  0000004F: 50                 push        eax
  00000050: E8 00 00 00 00     call        _StringCchCopyW@12
  00000055: 85 C0              test        eax,eax
  00000057: 78 1F              js          00000078
  00000059: 6A 00              push        0
  0000005B: 6A 00              push        0
  0000005D: 8D 85 E8 FB FF FF  lea         eax,[ebp-418h]
  00000063: 50                 push        eax
  00000064: FF 15 00 00 00 00  call        dword ptr [__imp__LoadLibraryExW@12]
  0000006A: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000006D: 33 CD              xor         ecx,ebp
  0000006F: E8 00 00 00 00     call        @__security_check_cookie@4
  00000074: 8B E5              mov         esp,ebp
  00000076: 5D                 pop         ebp
  00000077: C3                 ret
  00000078: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  0000007B: 33 C0              xor         eax,eax
  0000007D: 33 CD              xor         ecx,ebp
  0000007F: E8 00 00 00 00     call        @__security_check_cookie@4
  00000084: 8B E5              mov         esp,ebp
  00000086: 5D                 pop         ebp
  00000087: C3                 ret

_ODBC___GetSetupProc@4:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 81 EC 3C 0A 00 00  sub         esp,0A3Ch
  0000000B: A1 00 00 00 00     mov         eax,dword ptr [___security_cookie]
  00000010: 33 C5              xor         eax,ebp
  00000012: 89 45 FC           mov         dword ptr [ebp-4],eax
  00000015: A1 00 00 00 00     mov         eax,dword ptr [_g_hInstSetup]
  0000001A: 57                 push        edi
  0000001B: 8B 7D 08           mov         edi,dword ptr [ebp+8]
  0000001E: 85 C0              test        eax,eax
  00000020: 75 34              jne         00000056
  00000022: E8 00 00 00 00     call        _LoadProperSetupDLL@0
  00000027: A3 00 00 00 00     mov         dword ptr [_g_hInstSetup],eax
  0000002C: 85 C0              test        eax,eax
  0000002E: 75 26              jne         00000056
  00000030: 6A 40              push        40h
  00000032: 68 00 00 00 00     push        offset _INSTALLER_ERROR_TITLE
  00000037: 68 00 00 00 00     push        offset _INSTALLER_ERROR_NOT_INSTALLED
  0000003C: 50                 push        eax
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__MessageBoxW@16]
  00000043: 33 C0              xor         eax,eax
  00000045: 5F                 pop         edi
  00000046: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  00000049: 33 CD              xor         ecx,ebp
  0000004B: E8 00 00 00 00     call        @__security_check_cookie@4
  00000050: 8B E5              mov         esp,ebp
  00000052: 5D                 pop         ebp
  00000053: C2 04 00           ret         4
  00000056: 56                 push        esi
  00000057: 57                 push        edi
  00000058: 50                 push        eax
  00000059: FF 15 00 00 00 00  call        dword ptr [__imp__GetProcAddress@8]
  0000005F: 8B F0              mov         esi,eax
  00000061: 85 F6              test        esi,esi
  00000063: 75 7D              jne         000000E2
  00000065: 66 89 85 C4 F5 FF  mov         word ptr [ebp-0A3Ch],ax
            FF
  0000006C: 66 89 85 E4 FB FF  mov         word ptr [ebp-41Ch],ax
            FF
  00000073: 66 89 85 F0 FD FF  mov         word ptr [ebp-210h],ax
            FF
  0000007A: 8D 85 E4 FB FF FF  lea         eax,[ebp-41Ch]
  00000080: 68 05 01 00 00     push        105h
  00000085: 50                 push        eax
  00000086: FF 35 00 00 00 00  push        dword ptr [_g_hInstSetup]
  0000008C: FF 15 00 00 00 00  call        dword ptr [__imp__GetModuleFileNameW@12]
  00000092: 68 05 01 00 00     push        105h
  00000097: 8D 85 F0 FD FF FF  lea         eax,[ebp-210h]
  0000009D: 50                 push        eax
  0000009E: 56                 push        esi
  0000009F: FF 15 00 00 00 00  call        dword ptr [__imp__GetModuleFileNameW@12]
  000000A5: 8D 85 E4 FB FF FF  lea         eax,[ebp-41Ch]
  000000AB: 50                 push        eax
  000000AC: 57                 push        edi
  000000AD: 8D 85 F0 FD FF FF  lea         eax,[ebp-210h]
  000000B3: 50                 push        eax
  000000B4: 68 00 00 00 00     push        offset _INSTALLER_ERROR_API_NOTEXIST_FORMAT
  000000B9: 8D 85 C4 F5 FF FF  lea         eax,[ebp-0A3Ch]
  000000BF: 68 0F 03 00 00     push        30Fh
  000000C4: 50                 push        eax
  000000C5: E8 00 00 00 00     call        _StringCchPrintfW
  000000CA: 83 C4 18           add         esp,18h
  000000CD: 8D 85 C4 F5 FF FF  lea         eax,[ebp-0A3Ch]
  000000D3: 6A 40              push        40h
  000000D5: 68 00 00 00 00     push        offset _INSTALLER_ERROR_TITLE
  000000DA: 50                 push        eax
  000000DB: 56                 push        esi
  000000DC: FF 15 00 00 00 00  call        dword ptr [__imp__MessageBoxW@16]
  000000E2: 8B 4D FC           mov         ecx,dword ptr [ebp-4]
  000000E5: 8B C6              mov         eax,esi
  000000E7: 5E                 pop         esi
  000000E8: 33 CD              xor         ecx,ebp
  000000EA: 5F                 pop         edi
  000000EB: E8 00 00 00 00     call        @__security_check_cookie@4
  000000F0: 8B E5              mov         esp,ebp
  000000F2: 5D                 pop         ebp
  000000F3: C2 04 00           ret         4

_StringCchCopyW@12:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 8B 55 0C           mov         edx,dword ptr [ebp+0Ch]
  00000008: 33 C0              xor         eax,eax
  0000000A: 85 D2              test        edx,edx
  0000000C: 74 08              je          00000016
  0000000E: 81 FA FF FF FF 7F  cmp         edx,7FFFFFFFh
  00000014: 76 05              jbe         0000001B
  00000016: B8 57 00 07 80     mov         eax,80070057h
  0000001B: 85 C0              test        eax,eax
  0000001D: 78 4D              js          0000006C
  0000001F: 8B 4D 08           mov         ecx,dword ptr [ebp+8]
  00000022: 53                 push        ebx
  00000023: 56                 push        esi
  00000024: 33 DB              xor         ebx,ebx
  00000026: 57                 push        edi
  00000027: 85 D2              test        edx,edx
  00000029: 74 2B              je          00000056
  0000002B: 8B 7D 10           mov         edi,dword ptr [ebp+10h]
  0000002E: BE FE FF FF 7F     mov         esi,7FFFFFFEh
  00000033: 2B F2              sub         esi,edx
  00000035: 2B F9              sub         edi,ecx
  00000037: 8D 04 16           lea         eax,[esi+edx]
  0000003A: 85 C0              test        eax,eax
  0000003C: 74 14              je          00000052
  0000003E: 0F B7 04 0F        movzx       eax,word ptr [edi+ecx]
  00000042: 66 85 C0           test        ax,ax
  00000045: 74 0B              je          00000052
  00000047: 66 89 01           mov         word ptr [ecx],ax
  0000004A: 83 C1 02           add         ecx,2
  0000004D: 4A                 dec         edx
  0000004E: 75 E7              jne         00000037
  00000050: EB 04              jmp         00000056
  00000052: 85 D2              test        edx,edx
  00000054: 75 08              jne         0000005E
  00000056: 83 E9 02           sub         ecx,2
  00000059: BB 7A 00 07 80     mov         ebx,8007007Ah
  0000005E: 33 C0              xor         eax,eax
  00000060: 5F                 pop         edi
  00000061: 66 89 01           mov         word ptr [ecx],ax
  00000064: 8B C3              mov         eax,ebx
  00000066: 5E                 pop         esi
  00000067: 5B                 pop         ebx
  00000068: 5D                 pop         ebp
  00000069: C2 0C 00           ret         0Ch
  0000006C: 85 D2              test        edx,edx
  0000006E: 74 08              je          00000078
  00000070: 8B 4D 08           mov         ecx,dword ptr [ebp+8]
  00000073: 33 D2              xor         edx,edx
  00000075: 66 89 11           mov         word ptr [ecx],dx
  00000078: 5D                 pop         ebp
  00000079: C2 0C 00           ret         0Ch

_StringCchPrintfW:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 8B 4D 0C           mov         ecx,dword ptr [ebp+0Ch]
  00000008: 33 C0              xor         eax,eax
  0000000A: 85 C9              test        ecx,ecx
  0000000C: 74 08              je          00000016
  0000000E: 81 F9 FF FF FF 7F  cmp         ecx,7FFFFFFFh
  00000014: 76 05              jbe         0000001B
  00000016: B8 57 00 07 80     mov         eax,80070057h
  0000001B: 85 C0              test        eax,eax
  0000001D: 78 46              js          00000065
  0000001F: 53                 push        ebx
  00000020: 56                 push        esi
  00000021: 57                 push        edi
  00000022: 8B 7D 08           mov         edi,dword ptr [ebp+8]
  00000025: 8D 45 14           lea         eax,[ebp+14h]
  00000028: 50                 push        eax
  00000029: FF 75 10           push        dword ptr [ebp+10h]
  0000002C: 8D 71 FF           lea         esi,[ecx-1]
  0000002F: 33 DB              xor         ebx,ebx
  00000031: 56                 push        esi
  00000032: 51                 push        ecx
  00000033: 57                 push        edi
  00000034: E8 00 00 00 00     call        __vsnwprintf_s
  00000039: 83 C4 14           add         esp,14h
  0000003C: 85 C0              test        eax,eax
  0000003E: 78 13              js          00000053
  00000040: 3B C6              cmp         eax,esi
  00000042: 77 0F              ja          00000053
  00000044: 75 18              jne         0000005E
  00000046: 33 C0              xor         eax,eax
  00000048: 66 89 04 77        mov         word ptr [edi+esi*2],ax
  0000004C: 8B C3              mov         eax,ebx
  0000004E: 5F                 pop         edi
  0000004F: 5E                 pop         esi
  00000050: 5B                 pop         ebx
  00000051: 5D                 pop         ebp
  00000052: C3                 ret
  00000053: 33 C0              xor         eax,eax
  00000055: BB 7A 00 07 80     mov         ebx,8007007Ah
  0000005A: 66 89 04 77        mov         word ptr [edi+esi*2],ax
  0000005E: 5F                 pop         edi
  0000005F: 5E                 pop         esi
  00000060: 8B C3              mov         eax,ebx
  00000062: 5B                 pop         ebx
  00000063: 5D                 pop         ebp
  00000064: C3                 ret
  00000065: 85 C9              test        ecx,ecx
  00000067: 74 08              je          00000071
  00000069: 8B 4D 08           mov         ecx,dword ptr [ebp+8]
  0000006C: 33 D2              xor         edx,edx
  0000006E: 66 89 11           mov         word ptr [ecx],dx
  00000071: 5D                 pop         ebp
  00000072: C3                 ret

_StringCopyWorkerW@20:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 8B 4D 0C           mov         ecx,dword ptr [ebp+0Ch]
  00000008: 33 D2              xor         edx,edx
  0000000A: 8B 45 08           mov         eax,dword ptr [ebp+8]
  0000000D: 53                 push        ebx
  0000000E: 56                 push        esi
  0000000F: 57                 push        edi
  00000010: 85 C9              test        ecx,ecx
  00000012: 74 33              je          00000047
  00000014: 8B 5D 14           mov         ebx,dword ptr [ebp+14h]
  00000017: 8B 75 18           mov         esi,dword ptr [ebp+18h]
  0000001A: 2B D8              sub         ebx,eax
  0000001C: 8D 64 24 00        lea         esp,[esp]
  00000020: 85 F6              test        esi,esi
  00000022: 74 1F              je          00000043
  00000024: 0F B7 3C 03        movzx       edi,word ptr [ebx+eax]
  00000028: 66 85 FF           test        di,di
  0000002B: 74 16              je          00000043
  0000002D: 66 89 38           mov         word ptr [eax],di
  00000030: 4E                 dec         esi
  00000031: 83 C0 02           add         eax,2
  00000034: 42                 inc         edx
  00000035: 49                 dec         ecx
  00000036: 75 E8              jne         00000020
  00000038: 83 E8 02           sub         eax,2
  0000003B: BF 7A 00 07 80     mov         edi,8007007Ah
  00000040: 4A                 dec         edx
  00000041: EB 11              jmp         00000054
  00000043: 85 C9              test        ecx,ecx
  00000045: 75 0B              jne         00000052
  00000047: 83 E8 02           sub         eax,2
  0000004A: BF 7A 00 07 80     mov         edi,8007007Ah
  0000004F: 4A                 dec         edx
  00000050: EB 02              jmp         00000054
  00000052: 33 FF              xor         edi,edi
  00000054: 33 C9              xor         ecx,ecx
  00000056: 66 89 08           mov         word ptr [eax],cx
  00000059: 8B 45 10           mov         eax,dword ptr [ebp+10h]
  0000005C: 85 C0              test        eax,eax
  0000005E: 74 02              je          00000062
  00000060: 89 10              mov         dword ptr [eax],edx
  00000062: 8B C7              mov         eax,edi
  00000064: 5F                 pop         edi
  00000065: 5E                 pop         esi
  00000066: 5B                 pop         ebx
  00000067: 5D                 pop         ebp
  00000068: C2 14 00           ret         14h

_StringVPrintfWorkerW@20:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 8B 45 0C           mov         eax,dword ptr [ebp+0Ch]
  00000008: 53                 push        ebx
  00000009: 8B 5D 08           mov         ebx,dword ptr [ebp+8]
  0000000C: 56                 push        esi
  0000000D: 57                 push        edi
  0000000E: FF 75 18           push        dword ptr [ebp+18h]
  00000011: 8D 70 FF           lea         esi,[eax-1]
  00000014: 33 FF              xor         edi,edi
  00000016: FF 75 14           push        dword ptr [ebp+14h]
  00000019: 56                 push        esi
  0000001A: 50                 push        eax
  0000001B: 53                 push        ebx
  0000001C: E8 00 00 00 00     call        __vsnwprintf_s
  00000021: 83 C4 14           add         esp,14h
  00000024: 85 C0              test        eax,eax
  00000026: 78 0A              js          00000032
  00000028: 3B C6              cmp         eax,esi
  0000002A: 77 06              ja          00000032
  0000002C: 74 09              je          00000037
  0000002E: 8B F0              mov         esi,eax
  00000030: EB 0B              jmp         0000003D
  00000032: BF 7A 00 07 80     mov         edi,8007007Ah
  00000037: 33 C0              xor         eax,eax
  00000039: 66 89 04 73        mov         word ptr [ebx+esi*2],ax
  0000003D: 8B 45 10           mov         eax,dword ptr [ebp+10h]
  00000040: 85 C0              test        eax,eax
  00000042: 74 02              je          00000046
  00000044: 89 30              mov         dword ptr [eax],esi
  00000046: 8B C7              mov         eax,edi
  00000048: 5F                 pop         edi
  00000049: 5E                 pop         esi
  0000004A: 5B                 pop         ebx
  0000004B: 5D                 pop         ebp
  0000004C: C2 14 00           ret         14h

_StringValidateDestW@12:
  00000000: 8B FF              mov         edi,edi
  00000002: 55                 push        ebp
  00000003: 8B EC              mov         ebp,esp
  00000005: 8B 4D 0C           mov         ecx,dword ptr [ebp+0Ch]
  00000008: 85 C9              test        ecx,ecx
  0000000A: 74 0B              je          00000017
  0000000C: 3B 4D 10           cmp         ecx,dword ptr [ebp+10h]
  0000000F: 77 06              ja          00000017
  00000011: 33 C0              xor         eax,eax
  00000013: 5D                 pop         ebp
  00000014: C2 0C 00           ret         0Ch
  00000017: B8 57 00 07 80     mov         eax,80070057h
  0000001C: 5D                 pop         ebp
  0000001D: C2 0C 00           ret         0Ch

??0TSerialNumber@@QAE@PADG@Z (public: __thiscall TSerialNumber::TSerialNumber(char *,unsigned short)):
  00000000: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  00000004: 8B D0              mov         edx,eax
  00000006: 56                 push        esi
  00000007: 57                 push        edi
  00000008: 8B F9              mov         edi,ecx
  0000000A: 8D 77 10           lea         esi,[edi+10h]
  0000000D: 2B F0              sub         esi,eax
  0000000F: 90                 nop
  00000010: 8A 0A              mov         cl,byte ptr [edx]
  00000012: 8D 52 01           lea         edx,[edx+1]
  00000015: 88 4C 16 FF        mov         byte ptr [esi+edx-1],cl
  00000019: 84 C9              test        cl,cl
  0000001B: 75 F3              jne         00000010
  0000001D: 8B D7              mov         edx,edi
  0000001F: 2B D0              sub         edx,eax
  00000021: 8A 08              mov         cl,byte ptr [eax]
  00000023: 8D 40 01           lea         eax,[eax+1]
  00000026: 88 4C 02 FF        mov         byte ptr [edx+eax-1],cl
  0000002A: 84 C9              test        cl,cl
  0000002C: 75 F3              jne         00000021
  0000002E: 66 8B 44 24 10     mov         ax,word ptr [esp+10h]
  00000033: 8B CF              mov         ecx,edi
  00000035: 66 89 47 14        mov         word ptr [edi+14h],ax
  00000039: E8 00 00 00 00     call        ?Build@TSerialNumber@@QAEXXZ
  0000003E: 8B C7              mov         eax,edi
  00000040: 5F                 pop         edi
  00000041: 5E                 pop         esi
  00000042: C2 08 00           ret         8

?Build@TSerialNumber@@QAEXXZ (public: void __thiscall TSerialNumber::Build(void)):
  00000000: 83 EC 2C           sub         esp,2Ch
  00000003: 53                 push        ebx
  00000004: 56                 push        esi
  00000005: 57                 push        edi
  00000006: 6A 00              push        0
  00000008: 8B D9              mov         ebx,ecx
  0000000A: FF 15 00 00 00 00  call        dword ptr [__imp___time64]
  00000010: 89 44 24 10        mov         dword ptr [esp+10h],eax
  00000014: 8D 44 24 10        lea         eax,[esp+10h]
  00000018: 50                 push        eax
  00000019: 89 54 24 18        mov         dword ptr [esp+18h],edx
  0000001D: FF 15 00 00 00 00  call        dword ptr [__imp___localtime64]
  00000023: 8B C8              mov         ecx,eax
  00000025: 6A 24              push        24h
  00000027: 8B 41 14           mov         eax,dword ptr [ecx+14h]
  0000002A: 83 E8 63           sub         eax,63h
  0000002D: 99                 cdq
  0000002E: 8B F8              mov         edi,eax
  00000030: 8B F2              mov         esi,edx
  00000032: 0F B7 43 14        movzx       eax,word ptr [ebx+14h]
  00000036: 99                 cdq
  00000037: 0F A4 C2 04        shld        edx,eax,4
  0000003B: C1 E0 04           shl         eax,4
  0000003E: 0B F2              or          esi,edx
  00000040: 0B F8              or          edi,eax
  00000042: 8B 41 10           mov         eax,dword ptr [ecx+10h]
  00000045: 0F A4 FE 04        shld        esi,edi,4
  00000049: 99                 cdq
  0000004A: C1 E7 04           shl         edi,4
  0000004D: 0B F2              or          esi,edx
  0000004F: 0B F8              or          edi,eax
  00000051: 8B 41 0C           mov         eax,dword ptr [ecx+0Ch]
  00000054: 0F A4 FE 05        shld        esi,edi,5
  00000058: 99                 cdq
  00000059: C1 E7 05           shl         edi,5
  0000005C: 0B F2              or          esi,edx
  0000005E: 0B F8              or          edi,eax
  00000060: 8B 41 08           mov         eax,dword ptr [ecx+8]
  00000063: 0F A4 FE 05        shld        esi,edi,5
  00000067: 99                 cdq
  00000068: C1 E7 05           shl         edi,5
  0000006B: 0B F2              or          esi,edx
  0000006D: 0B F8              or          edi,eax
  0000006F: 8B 41 04           mov         eax,dword ptr [ecx+4]
  00000072: 0F A4 FE 06        shld        esi,edi,6
  00000076: 99                 cdq
  00000077: C1 E7 06           shl         edi,6
  0000007A: 0B F2              or          esi,edx
  0000007C: 0B F8              or          edi,eax
  0000007E: 8B 01              mov         eax,dword ptr [ecx]
  00000080: 99                 cdq
  00000081: 2B C2              sub         eax,edx
  00000083: 0F A4 FE 05        shld        esi,edi,5
  00000087: D1 F8              sar         eax,1
  00000089: 99                 cdq
  0000008A: C1 E7 05           shl         edi,5
  0000008D: 0B F2              or          esi,edx
  0000008F: 0B F8              or          edi,eax
  00000091: 89 74 24 24        mov         dword ptr [esp+24h],esi
  00000095: 8D 44 24 20        lea         eax,[esp+20h]
  00000099: 89 7C 24 20        mov         dword ptr [esp+20h],edi
  0000009D: 50                 push        eax
  0000009E: 56                 push        esi
  0000009F: 57                 push        edi
  000000A0: FF 15 00 00 00 00  call        dword ptr [__imp___i64toa]
  000000A6: 50                 push        eax
  000000A7: FF 15 00 00 00 00  call        dword ptr [__imp___strupr]
  000000AD: 83 C4 1C           add         esp,1Ch
  000000B0: 8D 54 24 14        lea         edx,[esp+14h]
  000000B4: 83 C3 02           add         ebx,2
  000000B7: 8D 4A 01           lea         ecx,[edx+1]
  000000BA: 8B F3              mov         esi,ebx
  000000BC: 8D 64 24 00        lea         esp,[esp]
  000000C0: 8A 02              mov         al,byte ptr [edx]
  000000C2: 42                 inc         edx
  000000C3: 84 C0              test        al,al
  000000C5: 75 F9              jne         000000C0
  000000C7: 2B D1              sub         edx,ecx
  000000C9: 83 FA 06           cmp         edx,6
  000000CC: 73 54              jae         00000122
  000000CE: 8B CB              mov         ecx,ebx
  000000D0: 88 03              mov         byte ptr [ebx],al
  000000D2: 8D 79 01           lea         edi,[ecx+1]
  000000D5: 8A 01              mov         al,byte ptr [ecx]
  000000D7: 41                 inc         ecx
  000000D8: 84 C0              test        al,al
  000000DA: 75 F9              jne         000000D5
  000000DC: 2B CF              sub         ecx,edi
  000000DE: 8D 04 0A           lea         eax,[edx+ecx]
  000000E1: 83 F8 06           cmp         eax,6
  000000E4: 73 4D              jae         00000133
  000000E6: 8D 7B FF           lea         edi,[ebx-1]
  000000E9: 8D A4 24 00 00 00  lea         esp,[esp]
            00
  000000F0: 8A 47 01           mov         al,byte ptr [edi+1]
  000000F3: 8D 7F 01           lea         edi,[edi+1]
  000000F6: 84 C0              test        al,al
  000000F8: 75 F6              jne         000000F0
  000000FA: 66 A1 00 00 00 00  mov         ax,word ptr [??_C@_01GBGANLPD@0?$AA@]
  00000100: 46                 inc         esi
  00000101: 66 89 07           mov         word ptr [edi],ax
  00000104: 8B C3              mov         eax,ebx
  00000106: 8D 78 01           lea         edi,[eax+1]
  00000109: 8D A4 24 00 00 00  lea         esp,[esp]
            00
  00000110: 8A 08              mov         cl,byte ptr [eax]
  00000112: 40                 inc         eax
  00000113: 84 C9              test        cl,cl
  00000115: 75 F9              jne         00000110
  00000117: 2B C7              sub         eax,edi
  00000119: 03 C2              add         eax,edx
  0000011B: 83 F8 06           cmp         eax,6
  0000011E: 72 C6              jb          000000E6
  00000120: EB 11              jmp         00000133
  00000122: 0F B6 44 24 1A     movzx       eax,byte ptr [esp+1Ah]
  00000127: 33 C9              xor         ecx,ecx
  00000129: 83 FA 06           cmp         edx,6
  0000012C: 0F 47 C1           cmova       eax,ecx
  0000012F: 88 44 24 1A        mov         byte ptr [esp+1Ah],al
  00000133: 8D 4C 24 14        lea         ecx,[esp+14h]
  00000137: 8B C1              mov         eax,ecx
  00000139: 2B F0              sub         esi,eax
  0000013B: EB 03              jmp         00000140
  0000013D: 8D 49 00           lea         ecx,[ecx]
  00000140: 8A 01              mov         al,byte ptr [ecx]
  00000142: 8D 49 01           lea         ecx,[ecx+1]
  00000145: 88 44 0E FF        mov         byte ptr [esi+ecx-1],al
  00000149: 84 C0              test        al,al
  0000014B: 75 F3              jne         00000140
  0000014D: 5F                 pop         edi
  0000014E: 5E                 pop         esi
  0000014F: 5B                 pop         ebx
  00000150: 83 C4 2C           add         esp,2Ch
  00000153: C3                 ret

?Get@TSerialNumber@@QAEHPADPAH@Z (public: int __thiscall TSerialNumber::Get(char *,int *)):
  00000000: 56                 push        esi
  00000001: 8B 74 24 08        mov         esi,dword ptr [esp+8]
  00000005: 8B C1              mov         eax,ecx
  00000007: 2B F1              sub         esi,ecx
  00000009: 8D A4 24 00 00 00  lea         esp,[esp+00000000h]
            00
  00000010: 8A 10              mov         dl,byte ptr [eax]
  00000012: 8D 40 01           lea         eax,[eax+1]
  00000015: 88 54 06 FF        mov         byte ptr [esi+eax-1],dl
  00000019: 84 D2              test        dl,dl
  0000001B: 75 F3              jne         00000010
  0000001D: 8D 51 01           lea         edx,[ecx+1]
  00000020: 5E                 pop         esi
  00000021: 8A 01              mov         al,byte ptr [ecx]
  00000023: 41                 inc         ecx
  00000024: 84 C0              test        al,al
  00000026: 75 F9              jne         00000021
  00000028: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  0000002C: 2B CA              sub         ecx,edx
  0000002E: 89 08              mov         dword ptr [eax],ecx
  00000030: B8 01 00 00 00     mov         eax,1
  00000035: C2 08 00           ret         8

?GetSerialNo@TSerialNumber@@QAEPADXZ (public: char * __thiscall TSerialNumber::GetSerialNo(void)):
  00000000: 8B C1              mov         eax,ecx
  00000002: C3                 ret

_localtime:
  00000000: FF 25 00 00 00 00  jmp         dword ptr [__imp___localtime64]

_time:
  00000000: FF 25 00 00 00 00  jmp         dword ptr [__imp___time64]

??0TFtEEFTX@@QAE@PAUft_private_vars@@@Z (public: __thiscall TFtEEFTX::TFtEEFTX(struct ft_private_vars *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAUft_private_vars@@@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEEFTX@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  0000001E: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],400h
            00 04 00 00
  00000028: 5E                 pop         esi
  00000029: C2 04 00           ret         4

??0TFtEEFTX@@QAE@PAX@Z (public: __thiscall TFtEEFTX::TFtEEFTX(void *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAX@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEEFTX@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  0000001E: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],400h
            00 04 00 00
  00000028: 5E                 pop         esi
  00000029: C2 04 00           ret         4

??0TFtEEFTX@@QAE@XZ (public: __thiscall TFtEEFTX::TFtEEFTX(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@XZ
  00000008: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEEFTX@@6B@
  0000000E: 8B C6              mov         eax,esi
  00000010: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  0000001A: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],400h
            00 04 00 00
  00000024: 5E                 pop         esi
  00000025: C3                 ret

?AddUserArea@TFtEEFTX@@UAEHPAEK@Z (public: virtual int __thiscall TFtEEFTX::AddUserArea(unsigned char *,unsigned long)):
  00000000: 53                 push        ebx
  00000001: 8B 5C 24 08        mov         ebx,dword ptr [esp+8]
  00000005: B8 5C 00 00 00     mov         eax,5Ch
  0000000A: 55                 push        ebp
  0000000B: 56                 push        esi
  0000000C: 8B 74 24 14        mov         esi,dword ptr [esp+14h]
  00000010: 8B EE              mov         ebp,esi
  00000012: 3B F0              cmp         esi,eax
  00000014: 57                 push        edi
  00000015: 0F 47 E8           cmova       ebp,eax
  00000018: 8B F9              mov         edi,ecx
  0000001A: 55                 push        ebp
  0000001B: 53                 push        ebx
  0000001C: E8 00 00 00 00     call        ?AddUserArea@TFtE2Data@@UAEHPAEK@Z
  00000021: 89 44 24 18        mov         dword ptr [esp+18h],eax
  00000025: 85 C0              test        eax,eax
  00000027: 74 3C              je          00000065
  00000029: 2B F5              sub         esi,ebp
  0000002B: 74 38              je          00000065
  0000002D: BA 00 01 00 00     mov         edx,100h
  00000032: 83 C3 5C           add         ebx,5Ch
  00000035: 8A 03              mov         al,byte ptr [ebx]
  00000037: 8D 5B 01           lea         ebx,[ebx+1]
  0000003A: 0F B7 CA           movzx       ecx,dx
  0000003D: 4E                 dec         esi
  0000003E: 42                 inc         edx
  0000003F: 88 44 39 04        mov         byte ptr [ecx+edi+4],al
  00000043: 8B 8F 30 08 00 00  mov         ecx,dword ptr [edi+830h]
  00000049: 83 E9 02           sub         ecx,2
  0000004C: 0F B7 C2           movzx       eax,dx
  0000004F: 3B C1              cmp         eax,ecx
  00000051: 75 0E              jne         00000061
  00000053: 66 8B 87 30 08 00  mov         ax,word ptr [edi+830h]
            00
  0000005A: 66 83 C0 02        add         ax,2
  0000005E: 0F B7 D0           movzx       edx,ax
  00000061: 85 F6              test        esi,esi
  00000063: 75 D0              jne         00000035
  00000065: 8B 07              mov         eax,dword ptr [edi]
  00000067: 8B CF              mov         ecx,edi
  00000069: FF 50 04           call        dword ptr [eax+4]
  0000006C: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  00000070: 5F                 pop         edi
  00000071: 5E                 pop         esi
  00000072: 5D                 pop         ebp
  00000073: 5B                 pop         ebx
  00000074: C2 08 00           ret         8

?GetChipID@TFtEEFTX@@QAEKPAK@Z (public: unsigned long __thiscall TFtEEFTX::GetChipID(unsigned long *)):
  00000000: 83 EC 08           sub         esp,8
  00000003: 8D 44 24 04        lea         eax,[esp+4]
  00000007: 56                 push        esi
  00000008: 8D 71 04           lea         esi,[ecx+4]
  0000000B: 50                 push        eax
  0000000C: 6A 43              push        43h
  0000000E: 8B CE              mov         ecx,esi
  00000010: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000015: 85 C0              test        eax,eax
  00000017: 74 30              je          00000049
  00000019: 8D 44 24 04        lea         eax,[esp+4]
  0000001D: 8B CE              mov         ecx,esi
  0000001F: 50                 push        eax
  00000020: 6A 44              push        44h
  00000022: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000027: 85 C0              test        eax,eax
  00000029: 74 1E              je          00000049
  0000002B: 0F B7 4C 24 04     movzx       ecx,word ptr [esp+4]
  00000030: 0F B7 44 24 08     movzx       eax,word ptr [esp+8]
  00000035: C1 E1 10           shl         ecx,10h
  00000038: 0B C8              or          ecx,eax
  0000003A: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  0000003E: 5E                 pop         esi
  0000003F: 89 08              mov         dword ptr [eax],ecx
  00000041: 33 C0              xor         eax,eax
  00000043: 83 C4 08           add         esp,8
  00000046: C2 04 00           ret         4
  00000049: B8 0B 00 00 00     mov         eax,0Bh
  0000004E: 5E                 pop         esi
  0000004F: 83 C4 08           add         esp,8
  00000052: C2 04 00           ret         4

?GetChipType@TFtEEFTX@@QAEKPAK@Z (public: unsigned long __thiscall TFtEEFTX::GetChipType(unsigned long *)):
  00000000: 51                 push        ecx
  00000001: 8D 04 24           lea         eax,[esp]
  00000004: 83 C1 04           add         ecx,4
  00000007: 50                 push        eax
  00000008: 6A 49              push        49h
  0000000A: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  0000000F: 85 C0              test        eax,eax
  00000011: 74 10              je          00000023
  00000013: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000017: 0F B7 0C 24        movzx       ecx,word ptr [esp]
  0000001B: 89 08              mov         dword ptr [eax],ecx
  0000001D: 33 C0              xor         eax,eax
  0000001F: 59                 pop         ecx
  00000020: C2 04 00           ret         4
  00000023: B8 0B 00 00 00     mov         eax,0Bh
  00000028: 59                 pop         ecx
  00000029: C2 04 00           ret         4

?GetUserArea@TFtEEFTX@@UAEXPAEKPAK@Z (public: virtual void __thiscall TFtEEFTX::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  00000000: 53                 push        ebx
  00000001: 8B 5C 24 0C        mov         ebx,dword ptr [esp+0Ch]
  00000005: B8 5C 00 00 00     mov         eax,5Ch
  0000000A: 55                 push        ebp
  0000000B: 56                 push        esi
  0000000C: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  00000010: 3B D8              cmp         ebx,eax
  00000012: 57                 push        edi
  00000013: 8B EB              mov         ebp,ebx
  00000015: 8B F9              mov         edi,ecx
  00000017: 0F 47 E8           cmova       ebp,eax
  0000001A: 8D 44 24 18        lea         eax,[esp+18h]
  0000001E: 50                 push        eax
  0000001F: 55                 push        ebp
  00000020: 56                 push        esi
  00000021: E8 00 00 00 00     call        ?GetUserArea@TFtE2Data@@UAEXPAEKPAK@Z
  00000026: 8B 4C 24 1C        mov         ecx,dword ptr [esp+1Ch]
  0000002A: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  0000002E: 89 01              mov         dword ptr [ecx],eax
  00000030: 3B C5              cmp         eax,ebp
  00000032: 75 40              jne         00000074
  00000034: 2B DD              sub         ebx,ebp
  00000036: 74 3C              je          00000074
  00000038: B9 00 01 00 00     mov         ecx,100h
  0000003D: 83 C6 5C           add         esi,5Ch
  00000040: 8B D3              mov         edx,ebx
  00000042: 0F B7 C1           movzx       eax,cx
  00000045: 8D 76 01           lea         esi,[esi+1]
  00000048: 41                 inc         ecx
  00000049: 4A                 dec         edx
  0000004A: 8A 44 38 04        mov         al,byte ptr [eax+edi+4]
  0000004E: 88 46 FF           mov         byte ptr [esi-1],al
  00000051: 0F B7 C1           movzx       eax,cx
  00000054: 3B 87 30 08 00 00  cmp         eax,dword ptr [edi+830h]
  0000005A: 75 0E              jne         0000006A
  0000005C: 66 8B 87 30 08 00  mov         ax,word ptr [edi+830h]
            00
  00000063: 66 83 C0 02        add         ax,2
  00000067: 0F B7 C8           movzx       ecx,ax
  0000006A: 85 D2              test        edx,edx
  0000006C: 75 D4              jne         00000042
  0000006E: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  00000072: 01 18              add         dword ptr [eax],ebx
  00000074: 5F                 pop         edi
  00000075: 5E                 pop         esi
  00000076: 5D                 pop         ebp
  00000077: 5B                 pop         ebx
  00000078: C2 0C 00           ret         0Ch

?GetUserAreaAboveStringsOffset@TFtEEFTX@@QAEGXZ (public: unsigned short __thiscall TFtEEFTX::GetUserAreaAboveStringsOffset(void)):
  00000000: 8B 81 2C 08 00 00  mov         eax,dword ptr [ecx+0000082Ch]
  00000006: 0F BE 54 08 04     movsx       edx,byte ptr [eax+ecx+4]
  0000000B: 8B 89 30 08 00 00  mov         ecx,dword ptr [ecx+00000830h]
  00000011: 03 C2              add         eax,edx
  00000013: 83 E9 02           sub         ecx,2
  00000016: 3B C1              cmp         eax,ecx
  00000018: 73 03              jae         0000001D
  0000001A: D1 E8              shr         eax,1
  0000001C: C3                 ret
  0000001D: 33 C0              xor         eax,eax
  0000001F: C3                 ret

?GetUserAreaOffset@TFtEEFTX@@UAEGXZ (public: virtual unsigned short __thiscall TFtEEFTX::GetUserAreaOffset(void)):
  00000000: B8 12 00 00 00     mov         eax,12h
  00000005: C3                 ret

?GetUserAreaSize@TFtEEFTX@@UAEGXZ (public: virtual unsigned short __thiscall TFtEEFTX::GetUserAreaSize(void)):
  00000000: B8 AE 03 00 00     mov         eax,3AEh
  00000005: C3                 ret

?Init@TFtEEFTX@@UAEXPAX@Z (public: virtual void __thiscall TFtEEFTX::Init(void *)):
  00000000: C2 04 00           ret         4

?MoveStrings@TFtEEFTX@@UAEXXZ (public: virtual void __thiscall TFtEEFTX::MoveStrings(void)):
  00000000: C3                 ret

?Program@TFtEEFTX@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEEFTX::Program(void *,char *,char *,char *,char *)):
  00000000: 81 EC A0 00 00 00  sub         esp,0A0h
  00000006: 55                 push        ebp
  00000007: 33 ED              xor         ebp,ebp
  00000009: C6 44 24 07 80     mov         byte ptr [esp+7],80h
  0000000E: 56                 push        esi
  0000000F: 8B F1              mov         esi,ecx
  00000011: 39 AC 24 B0 00 00  cmp         dword ptr [esp+0B0h],ebp
            00
  00000018: 0F 84 3F 04 00 00  je          0000045D
  0000001E: 53                 push        ebx
  0000001F: 8B 9C 24 B8 00 00  mov         ebx,dword ptr [esp+0B8h]
            00
  00000026: 85 DB              test        ebx,ebx
  00000028: 0F 84 1E 04 00 00  je          0000044C
  0000002E: 39 AC 24 BC 00 00  cmp         dword ptr [esp+0BCh],ebp
            00
  00000035: 0F 84 11 04 00 00  je          0000044C
  0000003B: 57                 push        edi
  0000003C: 8B BC 24 B4 00 00  mov         edi,dword ptr [esp+0B4h]
            00
  00000043: 66 39 6F 04        cmp         word ptr [edi+4],bp
  00000047: 0F 84 ED 03 00 00  je          0000043A
  0000004D: 66 39 6F 06        cmp         word ptr [edi+6],bp
  00000051: 0F 84 E3 03 00 00  je          0000043A
  00000057: 80 7F 16 15        cmp         byte ptr [edi+16h],15h
  0000005B: 0F 87 D9 03 00 00  ja          0000043A
  00000061: 80 7F 17 15        cmp         byte ptr [edi+17h],15h
  00000065: 0F 87 CF 03 00 00  ja          0000043A
  0000006B: 80 7F 18 15        cmp         byte ptr [edi+18h],15h
  0000006F: 0F 87 C5 03 00 00  ja          0000043A
  00000075: 80 7F 19 15        cmp         byte ptr [edi+19h],15h
  00000079: 0F 87 BB 03 00 00  ja          0000043A
  0000007F: 80 7F 1A 15        cmp         byte ptr [edi+1Ah],15h
  00000083: 0F 87 B1 03 00 00  ja          0000043A
  00000089: 80 7F 1B 15        cmp         byte ptr [edi+1Bh],15h
  0000008D: 0F 87 A7 03 00 00  ja          0000043A
  00000093: 80 7F 1C 15        cmp         byte ptr [edi+1Ch],15h
  00000097: 0F 87 9D 03 00 00  ja          0000043A
  0000009D: 68 00 08 00 00     push        800h
  000000A2: 8D 46 04           lea         eax,[esi+4]
  000000A5: 55                 push        ebp
  000000A6: 50                 push        eax
  000000A7: E8 00 00 00 00     call        _memset
  000000AC: 83 C4 0C           add         esp,0Ch
  000000AF: 8B CE              mov         ecx,esi
  000000B1: E8 00 00 00 00     call        ?RetrieveLowerUserAreaData@TFtEEFTX@@QAEXXZ
  000000B6: 8B CE              mov         ecx,esi
  000000B8: E8 00 00 00 00     call        ?RetrieveProtectedAreaData@TFtEEFTX@@QAEXXZ
  000000BD: 8B CE              mov         ecx,esi
  000000BF: E8 00 00 00 00     call        ?RetrieveUpperUserAreaData@TFtEEFTX@@QAEXXZ
  000000C4: 8B 8C 24 C4 00 00  mov         ecx,dword ptr [esp+0C4h]
            00
  000000CB: B8 00 10 00 00     mov         eax,1000h
  000000D0: 66 89 46 0A        mov         word ptr [esi+0Ah],ax
  000000D4: 85 C9              test        ecx,ecx
  000000D6: 74 1C              je          000000F4
  000000D8: 8D 51 01           lea         edx,[ecx+1]
  000000DB: EB 03              jmp         000000E0
  000000DD: 8D 49 00           lea         ecx,[ecx]
  000000E0: 8A 01              mov         al,byte ptr [ecx]
  000000E2: 41                 inc         ecx
  000000E3: 84 C0              test        al,al
  000000E5: 75 F9              jne         000000E0
  000000E7: 2B CA              sub         ecx,edx
  000000E9: 74 09              je          000000F4
  000000EB: 8B 9C 24 C4 00 00  mov         ebx,dword ptr [esp+0C4h]
            00
  000000F2: EB 32              jmp         00000126
  000000F4: 0F B7 47 06        movzx       eax,word ptr [edi+6]
  000000F8: 25 03 00 00 80     and         eax,80000003h
  000000FD: 79 05              jns         00000104
  000000FF: 48                 dec         eax
  00000100: 83 C8 FC           or          eax,0FFFFFFFCh
  00000103: 40                 inc         eax
  00000104: 50                 push        eax
  00000105: 53                 push        ebx
  00000106: 8D 4C 24 20        lea         ecx,[esp+20h]
  0000010A: E8 00 00 00 00     call        ??0TSerialNumber@@QAE@PADG@Z
  0000010F: 8D 44 24 14        lea         eax,[esp+14h]
  00000113: 50                 push        eax
  00000114: 8D 44 24 34        lea         eax,[esp+34h]
  00000118: 50                 push        eax
  00000119: 8D 4C 24 20        lea         ecx,[esp+20h]
  0000011D: E8 00 00 00 00     call        ?Get@TSerialNumber@@QAEHPADPAH@Z
  00000122: 8D 5C 24 30        lea         ebx,[esp+30h]
  00000126: 0F B7 47 04        movzx       eax,word ptr [edi+4]
  0000012A: 8B CE              mov         ecx,esi
  0000012C: 50                 push        eax
  0000012D: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QAEXG@Z
  00000132: 0F B7 47 06        movzx       eax,word ptr [edi+6]
  00000136: 8B CE              mov         ecx,esi
  00000138: 50                 push        eax
  00000139: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QAEXG@Z
  0000013E: 80 7F 08 00        cmp         byte ptr [edi+8],0
  00000142: 74 04              je          00000148
  00000144: 80 4E 0E 08        or          byte ptr [esi+0Eh],8
  00000148: 0F B7 47 0A        movzx       eax,word ptr [edi+0Ah]
  0000014C: 8B CE              mov         ecx,esi
  0000014E: 50                 push        eax
  0000014F: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QAEXH@Z
  00000154: 80 7F 0C 00        cmp         byte ptr [edi+0Ch],0
  00000158: B9 C0 00 00 00     mov         ecx,0C0h
  0000015D: 0F B6 44 24 13     movzx       eax,byte ptr [esp+13h]
  00000162: 0F 45 C1           cmovne      eax,ecx
  00000165: 80 7F 0D 00        cmp         byte ptr [edi+0Dh],0
  00000169: 88 44 24 14        mov         byte ptr [esp+14h],al
  0000016D: 74 06              je          00000175
  0000016F: 0C 20              or          al,20h
  00000171: 88 44 24 14        mov         byte ptr [esp+14h],al
  00000175: FF 74 24 14        push        dword ptr [esp+14h]
  00000179: 8B CE              mov         ecx,esi
  0000017B: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QAEXE@Z
  00000180: 80 7F 0E 00        cmp         byte ptr [edi+0Eh],0
  00000184: 74 04              je          0000018A
  00000186: 80 4E 0E 04        or          byte ptr [esi+0Eh],4
  0000018A: 8B 8C 24 B8 00 00  mov         ecx,dword ptr [esp+0B8h]
            00
  00000191: C6 46 12 A0        mov         byte ptr [esi+12h],0A0h
  00000195: 8D 51 01           lea         edx,[ecx+1]
  00000198: 8A 01              mov         al,byte ptr [ecx]
  0000019A: 41                 inc         ecx
  0000019B: 84 C0              test        al,al
  0000019D: 75 F9              jne         00000198
  0000019F: 2B CA              sub         ecx,edx
  000001A1: FE C1              inc         cl
  000001A3: 02 C9              add         cl,cl
  000001A5: 88 4E 13           mov         byte ptr [esi+13h],cl
  000001A8: 80 E9 60           sub         cl,60h
  000001AB: 88 4E 14           mov         byte ptr [esi+14h],cl
  000001AE: 8B 8C 24 C0 00 00  mov         ecx,dword ptr [esp+0C0h]
            00
  000001B5: 8D 51 01           lea         edx,[ecx+1]
  000001B8: 8A 01              mov         al,byte ptr [ecx]
  000001BA: 41                 inc         ecx
  000001BB: 84 C0              test        al,al
  000001BD: 75 F9              jne         000001B8
  000001BF: 8A 46 14           mov         al,byte ptr [esi+14h]
  000001C2: 2B CA              sub         ecx,edx
  000001C4: FE C1              inc         cl
  000001C6: 02 C9              add         cl,cl
  000001C8: 02 C1              add         al,cl
  000001CA: 88 4E 15           mov         byte ptr [esi+15h],cl
  000001CD: 8B CB              mov         ecx,ebx
  000001CF: 88 46 16           mov         byte ptr [esi+16h],al
  000001D2: 8D 51 01           lea         edx,[ecx+1]
  000001D5: 8A 01              mov         al,byte ptr [ecx]
  000001D7: 41                 inc         ecx
  000001D8: 84 C0              test        al,al
  000001DA: 75 F9              jne         000001D5
  000001DC: FF B4 24 B8 00 00  push        dword ptr [esp+0B8h]
            00
  000001E3: 2B CA              sub         ecx,edx
  000001E5: 8D 86 A4 00 00 00  lea         eax,[esi+0A4h]
  000001EB: FE C1              inc         cl
  000001ED: 02 C9              add         cl,cl
  000001EF: 88 4E 17           mov         byte ptr [esi+17h],cl
  000001F2: 8B CE              mov         ecx,esi
  000001F4: 50                 push        eax
  000001F5: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001FA: 0F B6 46 14        movzx       eax,byte ptr [esi+14h]
  000001FE: 8B CE              mov         ecx,esi
  00000200: FF B4 24 C0 00 00  push        dword ptr [esp+0C0h]
            00
  00000207: 83 C0 04           add         eax,4
  0000020A: 03 C6              add         eax,esi
  0000020C: 50                 push        eax
  0000020D: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000212: 0F B6 46 16        movzx       eax,byte ptr [esi+16h]
  00000216: 8B CE              mov         ecx,esi
  00000218: 83 C0 04           add         eax,4
  0000021B: 53                 push        ebx
  0000021C: 03 C6              add         eax,esi
  0000021E: 50                 push        eax
  0000021F: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000224: 8A 4E 12           mov         cl,byte ptr [esi+12h]
  00000227: 8A 56 14           mov         dl,byte ptr [esi+14h]
  0000022A: 8A 5E 16           mov         bl,byte ptr [esi+16h]
  0000022D: 0F BE C1           movsx       eax,cl
  00000230: 80 C9 80           or          cl,80h
  00000233: 89 86 24 08 00 00  mov         dword ptr [esi+824h],eax
  00000239: 0F BE C2           movsx       eax,dl
  0000023C: 80 CA 80           or          dl,80h
  0000023F: 89 86 28 08 00 00  mov         dword ptr [esi+828h],eax
  00000245: 0F BE C3           movsx       eax,bl
  00000248: 80 CB 80           or          bl,80h
  0000024B: 88 5E 16           mov         byte ptr [esi+16h],bl
  0000024E: 8D 5E 04           lea         ebx,[esi+4]
  00000251: 89 86 2C 08 00 00  mov         dword ptr [esi+82Ch],eax
  00000257: 88 4E 12           mov         byte ptr [esi+12h],cl
  0000025A: 88 56 14           mov         byte ptr [esi+14h],dl
  0000025D: 80 7F 25 00        cmp         byte ptr [edi+25h],0
  00000261: 74 03              je          00000266
  00000263: 80 0B 01           or          byte ptr [ebx],1
  00000266: 80 7F 26 00        cmp         byte ptr [edi+26h],0
  0000026A: 74 03              je          0000026F
  0000026C: 80 0B 02           or          byte ptr [ebx],2
  0000026F: 80 7F 27 00        cmp         byte ptr [edi+27h],0
  00000273: 74 03              je          00000278
  00000275: 80 0B 04           or          byte ptr [ebx],4
  00000278: 80 7F 34 00        cmp         byte ptr [edi+34h],0
  0000027C: 74 03              je          00000281
  0000027E: 80 0B 08           or          byte ptr [ebx],8
  00000281: 80 7F 35 00        cmp         byte ptr [edi+35h],0
  00000285: 74 03              je          0000028A
  00000287: 80 0B 40           or          byte ptr [ebx],40h
  0000028A: 80 7F 36 01        cmp         byte ptr [edi+36h],1
  0000028E: 75 03              jne         00000293
  00000290: 80 0B 80           or          byte ptr [ebx],80h
  00000293: 80 7F 31 00        cmp         byte ptr [edi+31h],0
  00000297: 74 04              je          0000029D
  00000299: 80 4E 0E 10        or          byte ptr [esi+0Eh],10h
  0000029D: 80 7F 32 00        cmp         byte ptr [edi+32h],0
  000002A1: 74 04              je          000002A7
  000002A3: 80 4E 0E 20        or          byte ptr [esi+0Eh],20h
  000002A7: 80 7F 33 00        cmp         byte ptr [edi+33h],0
  000002AB: 74 04              je          000002B1
  000002AD: 80 4E 0E 40        or          byte ptr [esi+0Eh],40h
  000002B1: 80 7F 30 00        cmp         byte ptr [edi+30h],0
  000002B5: 74 04              je          000002BB
  000002B7: 80 4E 0E 80        or          byte ptr [esi+0Eh],80h
  000002BB: 80 7F 1D 00        cmp         byte ptr [edi+1Dh],0
  000002BF: 74 04              je          000002C5
  000002C1: 80 4E 0F 01        or          byte ptr [esi+0Fh],1
  000002C5: 80 7F 1E 00        cmp         byte ptr [edi+1Eh],0
  000002C9: 74 04              je          000002CF
  000002CB: 80 4E 0F 02        or          byte ptr [esi+0Fh],2
  000002CF: 80 7F 1F 00        cmp         byte ptr [edi+1Fh],0
  000002D3: 74 04              je          000002D9
  000002D5: 80 4E 0F 04        or          byte ptr [esi+0Fh],4
  000002D9: 80 7F 20 00        cmp         byte ptr [edi+20h],0
  000002DD: 74 04              je          000002E3
  000002DF: 80 4E 0F 08        or          byte ptr [esi+0Fh],8
  000002E3: 80 7F 21 00        cmp         byte ptr [edi+21h],0
  000002E7: 74 04              je          000002ED
  000002E9: 80 4E 0F 10        or          byte ptr [esi+0Fh],10h
  000002ED: 80 7F 22 00        cmp         byte ptr [edi+22h],0
  000002F1: 74 04              je          000002F7
  000002F3: 80 4E 0F 20        or          byte ptr [esi+0Fh],20h
  000002F7: 80 7F 23 00        cmp         byte ptr [edi+23h],0
  000002FB: 74 04              je          00000301
  000002FD: 80 4E 0F 40        or          byte ptr [esi+0Fh],40h
  00000301: 80 7F 24 00        cmp         byte ptr [edi+24h],0
  00000305: 74 04              je          0000030B
  00000307: 80 4E 0F 80        or          byte ptr [esi+0Fh],80h
  0000030B: 8A 47 15           mov         al,byte ptr [edi+15h]
  0000030E: 3C 04              cmp         al,4
  00000310: 74 20              je          00000332
  00000312: 3C 08              cmp         al,8
  00000314: 75 07              jne         0000031D
  00000316: BD 01 00 00 00     mov         ebp,1
  0000031B: EB 15              jmp         00000332
  0000031D: 3C 0C              cmp         al,0Ch
  0000031F: 75 07              jne         00000328
  00000321: BD 02 00 00 00     mov         ebp,2
  00000326: EB 0A              jmp         00000332
  00000328: 3C 10              cmp         al,10h
  0000032A: B9 03 00 00 00     mov         ecx,3
  0000032F: 0F 44 E9           cmove       ebp,ecx
  00000332: 80 7F 13 00        cmp         byte ptr [edi+13h],0
  00000336: 74 03              je          0000033B
  00000338: 83 CD 04           or          ebp,4
  0000033B: 80 7F 14 00        cmp         byte ptr [edi+14h],0
  0000033F: 74 03              je          00000344
  00000341: 83 CD 08           or          ebp,8
  00000344: 8A 47 12           mov         al,byte ptr [edi+12h]
  00000347: 3C 04              cmp         al,4
  00000349: 74 19              je          00000364
  0000034B: 3C 08              cmp         al,8
  0000034D: 75 05              jne         00000354
  0000034F: 83 CD 10           or          ebp,10h
  00000352: EB 10              jmp         00000364
  00000354: 3C 0C              cmp         al,0Ch
  00000356: 75 05              jne         0000035D
  00000358: 83 CD 20           or          ebp,20h
  0000035B: EB 07              jmp         00000364
  0000035D: 3C 10              cmp         al,10h
  0000035F: 75 03              jne         00000364
  00000361: 83 CD 30           or          ebp,30h
  00000364: 80 7F 10 00        cmp         byte ptr [edi+10h],0
  00000368: 74 03              je          0000036D
  0000036A: 83 CD 40           or          ebp,40h
  0000036D: 80 7F 11 00        cmp         byte ptr [edi+11h],0
  00000371: 74 06              je          00000379
  00000373: 81 CD 80 00 00 00  or          ebp,80h
  00000379: 66 89 6E 10        mov         word ptr [esi+10h],bp
  0000037D: 8B CE              mov         ecx,esi
  0000037F: 0F B6 47 28        movzx       eax,byte ptr [edi+28h]
  00000383: 88 46 18           mov         byte ptr [esi+18h],al
  00000386: 0F B6 47 29        movzx       eax,byte ptr [edi+29h]
  0000038A: 88 46 19           mov         byte ptr [esi+19h],al
  0000038D: 0F B6 47 2C        movzx       eax,byte ptr [edi+2Ch]
  00000391: 88 46 1A           mov         byte ptr [esi+1Ah],al
  00000394: 0F B6 47 2D        movzx       eax,byte ptr [edi+2Dh]
  00000398: 88 46 1B           mov         byte ptr [esi+1Bh],al
  0000039B: 0F B6 47 2E        movzx       eax,byte ptr [edi+2Eh]
  0000039F: 88 46 1C           mov         byte ptr [esi+1Ch],al
  000003A2: 0F B6 47 16        movzx       eax,byte ptr [edi+16h]
  000003A6: 88 46 1E           mov         byte ptr [esi+1Eh],al
  000003A9: 0F B6 47 17        movzx       eax,byte ptr [edi+17h]
  000003AD: 88 46 1F           mov         byte ptr [esi+1Fh],al
  000003B0: 0F B6 47 18        movzx       eax,byte ptr [edi+18h]
  000003B4: 88 46 20           mov         byte ptr [esi+20h],al
  000003B7: 0F B6 47 19        movzx       eax,byte ptr [edi+19h]
  000003BB: 88 46 21           mov         byte ptr [esi+21h],al
  000003BE: 0F B6 47 1A        movzx       eax,byte ptr [edi+1Ah]
  000003C2: 88 46 22           mov         byte ptr [esi+22h],al
  000003C5: 0F B6 47 1B        movzx       eax,byte ptr [edi+1Bh]
  000003C9: 88 46 23           mov         byte ptr [esi+23h],al
  000003CC: 0F B6 47 1C        movzx       eax,byte ptr [edi+1Ch]
  000003D0: 88 46 24           mov         byte ptr [esi+24h],al
  000003D3: 8B 06              mov         eax,dword ptr [esi]
  000003D5: FF 50 04           call        dword ptr [eax+4]
  000003D8: 8B CB              mov         ecx,ebx
  000003DA: C7 86 08 08 00 00  mov         dword ptr [esi+808h],0
            00 00 00 00
  000003E4: E8 00 00 00 00     call        ?Erase@TEeData@@QAEHXZ
  000003E9: 85 C0              test        eax,eax
  000003EB: 75 12              jne         000003FF
  000003ED: 5F                 pop         edi
  000003EE: 5B                 pop         ebx
  000003EF: 5E                 pop         esi
  000003F0: B8 0D 00 00 00     mov         eax,0Dh
  000003F5: 5D                 pop         ebp
  000003F6: 81 C4 A0 00 00 00  add         esp,0A0h
  000003FC: C2 14 00           ret         14h
  000003FF: 8B CB              mov         ecx,ebx
  00000401: E8 00 00 00 00     call        ?Write@TEeData@@QAEHXZ
  00000406: 85 C0              test        eax,eax
  00000408: 75 12              jne         0000041C
  0000040A: 5F                 pop         edi
  0000040B: 5B                 pop         ebx
  0000040C: 5E                 pop         esi
  0000040D: B8 0C 00 00 00     mov         eax,0Ch
  00000412: 5D                 pop         ebp
  00000413: 81 C4 A0 00 00 00  add         esp,0A0h
  00000419: C2 14 00           ret         14h
  0000041C: 8B CB              mov         ecx,ebx
  0000041E: E8 00 00 00 00     call        ?Confirm@TEeData@@QAEHXZ
  00000423: F7 D8              neg         eax
  00000425: 5F                 pop         edi
  00000426: 1B C0              sbb         eax,eax
  00000428: 5B                 pop         ebx
  00000429: 83 E0 F4           and         eax,0FFFFFFF4h
  0000042C: 5E                 pop         esi
  0000042D: 83 C0 0C           add         eax,0Ch
  00000430: 5D                 pop         ebp
  00000431: 81 C4 A0 00 00 00  add         esp,0A0h
  00000437: C2 14 00           ret         14h
  0000043A: 5F                 pop         edi
  0000043B: 5B                 pop         ebx
  0000043C: 5E                 pop         esi
  0000043D: B8 06 00 00 00     mov         eax,6
  00000442: 5D                 pop         ebp
  00000443: 81 C4 A0 00 00 00  add         esp,0A0h
  00000449: C2 14 00           ret         14h
  0000044C: 5B                 pop         ebx
  0000044D: 5E                 pop         esi
  0000044E: B8 06 00 00 00     mov         eax,6
  00000453: 5D                 pop         ebp
  00000454: 81 C4 A0 00 00 00  add         esp,0A0h
  0000045A: C2 14 00           ret         14h
  0000045D: 5E                 pop         esi
  0000045E: B8 06 00 00 00     mov         eax,6
  00000463: 5D                 pop         ebp
  00000464: 81 C4 A0 00 00 00  add         esp,0A0h
  0000046A: C2 14 00           ret         14h

?Read@TFtEEFTX@@UAEHXZ (public: virtual int __thiscall TFtEEFTX::Read(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ?Read@TFtE2Data@@UAEHXZ
  00000008: 85 C0              test        eax,eax
  0000000A: 75 02              jne         0000000E
  0000000C: 5E                 pop         esi
  0000000D: C3                 ret
  0000000E: 83 AE 24 08 00 00  sub         dword ptr [esi+824h],0FFFFFF80h
            80
  00000015: B8 01 00 00 00     mov         eax,1
  0000001A: 83 AE 28 08 00 00  sub         dword ptr [esi+828h],0FFFFFF80h
            80
  00000021: 83 AE 2C 08 00 00  sub         dword ptr [esi+82Ch],0FFFFFF80h
            80
  00000028: 5E                 pop         esi
  00000029: C3                 ret

?ReadAndParse@TFtEEFTX@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEEFTX::ReadAndParse(void *,char *,char *,char *,char *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 53                 push        ebx
  00000004: 55                 push        ebp
  00000005: 56                 push        esi
  00000006: 8B 74 24 50        mov         esi,dword ptr [esp+50h]
  0000000A: 57                 push        edi
  0000000B: 8B F9              mov         edi,ecx
  0000000D: 85 F6              test        esi,esi
  0000000F: 0F 84 19 03 00 00  je          0000032E
  00000015: 83 7C 24 58 00     cmp         dword ptr [esp+58h],0
  0000001A: 0F 84 0E 03 00 00  je          0000032E
  00000020: 8B 5C 24 5C        mov         ebx,dword ptr [esp+5Ch]
  00000024: 85 DB              test        ebx,ebx
  00000026: 0F 84 02 03 00 00  je          0000032E
  0000002C: 8B 6C 24 60        mov         ebp,dword ptr [esp+60h]
  00000030: 85 ED              test        ebp,ebp
  00000032: 0F 84 F6 02 00 00  je          0000032E
  00000038: 83 7C 24 64 00     cmp         dword ptr [esp+64h],0
  0000003D: 0F 84 EB 02 00 00  je          0000032E
  00000043: 8B 07              mov         eax,dword ptr [edi]
  00000045: FF 10              call        dword ptr [eax]
  00000047: 85 C0              test        eax,eax
  00000049: 0F 84 D0 02 00 00  je          0000031F
  0000004F: 8B CF              mov         ecx,edi
  00000051: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  00000056: 0F B7 C0           movzx       eax,ax
  00000059: 66 85 C0           test        ax,ax
  0000005C: 75 0F              jne         0000006D
  0000005E: 5F                 pop         edi
  0000005F: 5E                 pop         esi
  00000060: 5D                 pop         ebp
  00000061: B8 0E 00 00 00     mov         eax,0Eh
  00000066: 5B                 pop         ebx
  00000067: 83 C4 40           add         esp,40h
  0000006A: C2 14 00           ret         14h
  0000006D: B9 FF FF 00 00     mov         ecx,0FFFFh
  00000072: 66 3B C1           cmp         ax,cx
  00000075: 75 0F              jne         00000086
  00000077: 5F                 pop         edi
  00000078: 5E                 pop         esi
  00000079: 5D                 pop         ebp
  0000007A: B8 0F 00 00 00     mov         eax,0Fh
  0000007F: 5B                 pop         ebx
  00000080: 83 C4 40           add         esp,40h
  00000083: C2 14 00           ret         14h
  00000086: 8B CF              mov         ecx,edi
  00000088: 66 89 46 04        mov         word ptr [esi+4],ax
  0000008C: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  00000091: 66 89 46 06        mov         word ptr [esi+6],ax
  00000095: 8B CF              mov         ecx,edi
  00000097: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  0000009B: C1 E8 03           shr         eax,3
  0000009E: 24 01              and         al,1
  000000A0: 88 46 08           mov         byte ptr [esi+8],al
  000000A3: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  000000A8: 8B CF              mov         ecx,edi
  000000AA: 66 89 46 0A        mov         word ptr [esi+0Ah],ax
  000000AE: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  000000B3: 8A C8              mov         cl,al
  000000B5: C0 E8 06           shr         al,6
  000000B8: 24 01              and         al,1
  000000BA: C0 E9 05           shr         cl,5
  000000BD: 88 46 0C           mov         byte ptr [esi+0Ch],al
  000000C0: 80 E1 01           and         cl,1
  000000C3: 88 4E 0D           mov         byte ptr [esi+0Dh],cl
  000000C6: 8B CF              mov         ecx,edi
  000000C8: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  000000CC: C1 E8 02           shr         eax,2
  000000CF: 24 01              and         al,1
  000000D1: 88 46 0E           mov         byte ptr [esi+0Eh],al
  000000D4: 8D 44 24 10        lea         eax,[esp+10h]
  000000D8: 50                 push        eax
  000000D9: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  000000DE: 8B 54 24 58        mov         edx,dword ptr [esp+58h]
  000000E2: 8D 4C 24 10        lea         ecx,[esp+10h]
  000000E6: 8B C1              mov         eax,ecx
  000000E8: 2B D0              sub         edx,eax
  000000EA: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  000000F0: 8A 01              mov         al,byte ptr [ecx]
  000000F2: 8D 49 01           lea         ecx,[ecx+1]
  000000F5: 88 44 0A FF        mov         byte ptr [edx+ecx-1],al
  000000F9: 84 C0              test        al,al
  000000FB: 75 F3              jne         000000F0
  000000FD: 8D 44 24 10        lea         eax,[esp+10h]
  00000101: 8B CF              mov         ecx,edi
  00000103: 50                 push        eax
  00000104: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  00000109: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000010D: 8B C1              mov         eax,ecx
  0000010F: 2B D8              sub         ebx,eax
  00000111: 8A 01              mov         al,byte ptr [ecx]
  00000113: 8D 49 01           lea         ecx,[ecx+1]
  00000116: 88 44 0B FF        mov         byte ptr [ebx+ecx-1],al
  0000011A: 84 C0              test        al,al
  0000011C: 75 F3              jne         00000111
  0000011E: 8D 44 24 10        lea         eax,[esp+10h]
  00000122: 8B CF              mov         ecx,edi
  00000124: 50                 push        eax
  00000125: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  0000012A: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000012E: 8B C1              mov         eax,ecx
  00000130: 2B E8              sub         ebp,eax
  00000132: 8A 01              mov         al,byte ptr [ecx]
  00000134: 8D 49 01           lea         ecx,[ecx+1]
  00000137: 88 44 29 FF        mov         byte ptr [ecx+ebp-1],al
  0000013B: 84 C0              test        al,al
  0000013D: 75 F3              jne         00000132
  0000013F: 8D 44 24 10        lea         eax,[esp+10h]
  00000143: 8B CF              mov         ecx,edi
  00000145: 50                 push        eax
  00000146: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  0000014B: 8B 54 24 64        mov         edx,dword ptr [esp+64h]
  0000014F: 8D 4C 24 10        lea         ecx,[esp+10h]
  00000153: 8B C1              mov         eax,ecx
  00000155: 2B D0              sub         edx,eax
  00000157: 8A 01              mov         al,byte ptr [ecx]
  00000159: 8D 49 01           lea         ecx,[ecx+1]
  0000015C: 88 44 0A FF        mov         byte ptr [edx+ecx-1],al
  00000160: 84 C0              test        al,al
  00000162: 75 F3              jne         00000157
  00000164: 8A 47 04           mov         al,byte ptr [edi+4]
  00000167: 24 01              and         al,1
  00000169: 88 46 25           mov         byte ptr [esi+25h],al
  0000016C: 0F BE 47 04        movsx       eax,byte ptr [edi+4]
  00000170: D1 E8              shr         eax,1
  00000172: 24 01              and         al,1
  00000174: 88 46 26           mov         byte ptr [esi+26h],al
  00000177: 0F BE 47 04        movsx       eax,byte ptr [edi+4]
  0000017B: C1 E8 02           shr         eax,2
  0000017E: 24 01              and         al,1
  00000180: 88 46 27           mov         byte ptr [esi+27h],al
  00000183: 0F BE 47 04        movsx       eax,byte ptr [edi+4]
  00000187: C1 E8 03           shr         eax,3
  0000018A: 24 01              and         al,1
  0000018C: 88 46 34           mov         byte ptr [esi+34h],al
  0000018F: 0F BE 47 04        movsx       eax,byte ptr [edi+4]
  00000193: C1 E8 06           shr         eax,6
  00000196: 24 01              and         al,1
  00000198: 88 46 35           mov         byte ptr [esi+35h],al
  0000019B: 0F BE 47 04        movsx       eax,byte ptr [edi+4]
  0000019F: C1 E8 07           shr         eax,7
  000001A2: 24 01              and         al,1
  000001A4: 88 46 36           mov         byte ptr [esi+36h],al
  000001A7: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  000001AB: C1 E8 04           shr         eax,4
  000001AE: 24 01              and         al,1
  000001B0: 88 46 31           mov         byte ptr [esi+31h],al
  000001B3: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  000001B7: C1 E8 05           shr         eax,5
  000001BA: 24 01              and         al,1
  000001BC: 88 46 32           mov         byte ptr [esi+32h],al
  000001BF: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  000001C3: C1 E8 06           shr         eax,6
  000001C6: 24 01              and         al,1
  000001C8: 88 46 33           mov         byte ptr [esi+33h],al
  000001CB: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  000001CF: C1 E8 07           shr         eax,7
  000001D2: 24 01              and         al,1
  000001D4: 88 46 30           mov         byte ptr [esi+30h],al
  000001D7: 8A 47 0F           mov         al,byte ptr [edi+0Fh]
  000001DA: 24 01              and         al,1
  000001DC: 88 46 1D           mov         byte ptr [esi+1Dh],al
  000001DF: 0F BE 47 0F        movsx       eax,byte ptr [edi+0Fh]
  000001E3: D1 E8              shr         eax,1
  000001E5: 24 01              and         al,1
  000001E7: 88 46 1E           mov         byte ptr [esi+1Eh],al
  000001EA: 0F BE 47 0F        movsx       eax,byte ptr [edi+0Fh]
  000001EE: C1 E8 02           shr         eax,2
  000001F1: 24 01              and         al,1
  000001F3: 88 46 1F           mov         byte ptr [esi+1Fh],al
  000001F6: 0F BE 47 0F        movsx       eax,byte ptr [edi+0Fh]
  000001FA: C1 E8 03           shr         eax,3
  000001FD: 24 01              and         al,1
  000001FF: 88 46 20           mov         byte ptr [esi+20h],al
  00000202: 0F BE 47 0F        movsx       eax,byte ptr [edi+0Fh]
  00000206: C1 E8 04           shr         eax,4
  00000209: 24 01              and         al,1
  0000020B: 88 46 21           mov         byte ptr [esi+21h],al
  0000020E: 0F BE 47 0F        movsx       eax,byte ptr [edi+0Fh]
  00000212: C1 E8 05           shr         eax,5
  00000215: 24 01              and         al,1
  00000217: 88 46 22           mov         byte ptr [esi+22h],al
  0000021A: 0F BE 47 0F        movsx       eax,byte ptr [edi+0Fh]
  0000021E: C1 E8 06           shr         eax,6
  00000221: 24 01              and         al,1
  00000223: 88 46 23           mov         byte ptr [esi+23h],al
  00000226: 0F BE 47 0F        movsx       eax,byte ptr [edi+0Fh]
  0000022A: C1 E8 07           shr         eax,7
  0000022D: 24 01              and         al,1
  0000022F: 88 46 24           mov         byte ptr [esi+24h],al
  00000232: 0F B7 4F 10        movzx       ecx,word ptr [edi+10h]
  00000236: 8B C1              mov         eax,ecx
  00000238: 83 E0 03           and         eax,3
  0000023B: 83 F8 03           cmp         eax,3
  0000023E: 75 06              jne         00000246
  00000240: C6 46 15 10        mov         byte ptr [esi+15h],10h
  00000244: EB 1F              jmp         00000265
  00000246: 83 F8 02           cmp         eax,2
  00000249: 75 06              jne         00000251
  0000024B: C6 46 15 0C        mov         byte ptr [esi+15h],0Ch
  0000024F: EB 14              jmp         00000265
  00000251: 83 F8 01           cmp         eax,1
  00000254: 75 06              jne         0000025C
  00000256: C6 46 15 08        mov         byte ptr [esi+15h],8
  0000025A: EB 09              jmp         00000265
  0000025C: 66 85 C0           test        ax,ax
  0000025F: 75 04              jne         00000265
  00000261: C6 46 15 04        mov         byte ptr [esi+15h],4
  00000265: 8A C1              mov         al,cl
  00000267: C0 E8 02           shr         al,2
  0000026A: 24 01              and         al,1
  0000026C: 88 46 13           mov         byte ptr [esi+13h],al
  0000026F: 8A C1              mov         al,cl
  00000271: C0 E8 03           shr         al,3
  00000274: 24 01              and         al,1
  00000276: 88 46 14           mov         byte ptr [esi+14h],al
  00000279: 8B C1              mov         eax,ecx
  0000027B: 83 E0 30           and         eax,30h
  0000027E: 83 F8 30           cmp         eax,30h
  00000281: 75 06              jne         00000289
  00000283: C6 46 12 10        mov         byte ptr [esi+12h],10h
  00000287: EB 1F              jmp         000002A8
  00000289: 83 F8 20           cmp         eax,20h
  0000028C: 75 06              jne         00000294
  0000028E: C6 46 12 0C        mov         byte ptr [esi+12h],0Ch
  00000292: EB 14              jmp         000002A8
  00000294: 83 F8 10           cmp         eax,10h
  00000297: 75 06              jne         0000029F
  00000299: C6 46 12 08        mov         byte ptr [esi+12h],8
  0000029D: EB 09              jmp         000002A8
  0000029F: 66 85 C0           test        ax,ax
  000002A2: 75 04              jne         000002A8
  000002A4: C6 46 12 04        mov         byte ptr [esi+12h],4
  000002A8: 8A C1              mov         al,cl
  000002AA: C0 E9 07           shr         cl,7
  000002AD: C0 E8 06           shr         al,6
  000002B0: 80 E1 01           and         cl,1
  000002B3: 88 4E 11           mov         byte ptr [esi+11h],cl
  000002B6: 24 01              and         al,1
  000002B8: 88 46 10           mov         byte ptr [esi+10h],al
  000002BB: 66 0F BE 4F 19     movsx       cx,byte ptr [edi+19h]
  000002C0: 66 0F BE 47 18     movsx       ax,byte ptr [edi+18h]
  000002C5: 66 C1 E1 08        shl         cx,8
  000002C9: 66 0B C8           or          cx,ax
  000002CC: 66 89 4E 28        mov         word ptr [esi+28h],cx
  000002D0: 0F BE 4F 1C        movsx       ecx,byte ptr [edi+1Ch]
  000002D4: 0F BE 47 1B        movsx       eax,byte ptr [edi+1Bh]
  000002D8: C1 E1 08           shl         ecx,8
  000002DB: 0B C8              or          ecx,eax
  000002DD: 0F BE 47 1A        movsx       eax,byte ptr [edi+1Ah]
  000002E1: C1 E1 08           shl         ecx,8
  000002E4: 0B C8              or          ecx,eax
  000002E6: 89 4E 2C           mov         dword ptr [esi+2Ch],ecx
  000002E9: 8A 47 1E           mov         al,byte ptr [edi+1Eh]
  000002EC: 88 46 16           mov         byte ptr [esi+16h],al
  000002EF: 8A 47 1F           mov         al,byte ptr [edi+1Fh]
  000002F2: 88 46 17           mov         byte ptr [esi+17h],al
  000002F5: 8A 47 20           mov         al,byte ptr [edi+20h]
  000002F8: 88 46 18           mov         byte ptr [esi+18h],al
  000002FB: 8A 47 21           mov         al,byte ptr [edi+21h]
  000002FE: 88 46 19           mov         byte ptr [esi+19h],al
  00000301: 8A 47 22           mov         al,byte ptr [edi+22h]
  00000304: 88 46 1A           mov         byte ptr [esi+1Ah],al
  00000307: 8A 47 23           mov         al,byte ptr [edi+23h]
  0000030A: 88 46 1B           mov         byte ptr [esi+1Bh],al
  0000030D: 8A 47 24           mov         al,byte ptr [edi+24h]
  00000310: 5F                 pop         edi
  00000311: 88 46 1C           mov         byte ptr [esi+1Ch],al
  00000314: 33 C0              xor         eax,eax
  00000316: 5E                 pop         esi
  00000317: 5D                 pop         ebp
  00000318: 5B                 pop         ebx
  00000319: 83 C4 40           add         esp,40h
  0000031C: C2 14 00           ret         14h
  0000031F: 5F                 pop         edi
  00000320: 5E                 pop         esi
  00000321: 5D                 pop         ebp
  00000322: B8 0B 00 00 00     mov         eax,0Bh
  00000327: 5B                 pop         ebx
  00000328: 83 C4 40           add         esp,40h
  0000032B: C2 14 00           ret         14h
  0000032E: 5F                 pop         edi
  0000032F: 5E                 pop         esi
  00000330: 5D                 pop         ebp
  00000331: B8 06 00 00 00     mov         eax,6
  00000336: 5B                 pop         ebx
  00000337: 83 C4 40           add         esp,40h
  0000033A: C2 14 00           ret         14h

?ReadAndParse@TFtEEFTX@@UAEKPAX@Z (public: virtual unsigned long __thiscall TFtEEFTX::ReadAndParse(void *)):
  00000000: 33 C0              xor         eax,eax
  00000002: C2 04 00           ret         4

?RetrieveLowerUserAreaData@TFtEEFTX@@QAEXXZ (public: void __thiscall TFtEEFTX::RetrieveLowerUserAreaData(void)):
  00000000: 83 EC 0C           sub         esp,0Ch
  00000003: 56                 push        esi
  00000004: 57                 push        edi
  00000005: 8B 3D 00 00 00 00  mov         edi,dword ptr [__imp__DeviceIoControl@32]
  0000000B: 8B F1              mov         esi,ecx
  0000000D: C7 44 24 0C 12 00  mov         dword ptr [esp+0Ch],12h
            00 00
  00000015: 6A 00              push        0
  00000017: 8D 44 24 14        lea         eax,[esp+14h]
  0000001B: 50                 push        eax
  0000001C: 6A 02              push        2
  0000001E: 8D 44 24 14        lea         eax,[esp+14h]
  00000022: 50                 push        eax
  00000023: 6A 04              push        4
  00000025: 8D 44 24 20        lea         eax,[esp+20h]
  00000029: 50                 push        eax
  0000002A: FF B6 14 08 00 00  push        dword ptr [esi+814h]
  00000030: FF B6 10 08 00 00  push        dword ptr [esi+810h]
  00000036: FF D7              call        edi
  00000038: 8B 4C 24 0C        mov         ecx,dword ptr [esp+0Ch]
  0000003C: 66 8B 44 24 08     mov         ax,word ptr [esp+8]
  00000041: 66 89 44 4E 04     mov         word ptr [esi+ecx*2+4],ax
  00000046: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  0000004A: 40                 inc         eax
  0000004B: 89 44 24 0C        mov         dword ptr [esp+0Ch],eax
  0000004F: 83 F8 40           cmp         eax,40h
  00000052: 72 C1              jb          00000015
  00000054: 5F                 pop         edi
  00000055: 5E                 pop         esi
  00000056: 83 C4 0C           add         esp,0Ch
  00000059: C3                 ret

?RetrieveProtectedAreaData@TFtEEFTX@@QAEXXZ (public: void __thiscall TFtEEFTX::RetrieveProtectedAreaData(void)):
  00000000: 83 EC 0C           sub         esp,0Ch
  00000003: 56                 push        esi
  00000004: 57                 push        edi
  00000005: 8B 3D 00 00 00 00  mov         edi,dword ptr [__imp__DeviceIoControl@32]
  0000000B: 8B F1              mov         esi,ecx
  0000000D: C7 44 24 0C 40 00  mov         dword ptr [esp+0Ch],40h
            00 00
  00000015: 6A 00              push        0
  00000017: 8D 44 24 14        lea         eax,[esp+14h]
  0000001B: 50                 push        eax
  0000001C: 6A 02              push        2
  0000001E: 8D 44 24 14        lea         eax,[esp+14h]
  00000022: 50                 push        eax
  00000023: 6A 04              push        4
  00000025: 8D 44 24 20        lea         eax,[esp+20h]
  00000029: 50                 push        eax
  0000002A: FF B6 14 08 00 00  push        dword ptr [esi+814h]
  00000030: FF B6 10 08 00 00  push        dword ptr [esi+810h]
  00000036: FF D7              call        edi
  00000038: 8B 4C 24 0C        mov         ecx,dword ptr [esp+0Ch]
  0000003C: 66 8B 44 24 08     mov         ax,word ptr [esp+8]
  00000041: 66 89 44 4E 04     mov         word ptr [esi+ecx*2+4],ax
  00000046: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  0000004A: 40                 inc         eax
  0000004B: 89 44 24 0C        mov         dword ptr [esp+0Ch],eax
  0000004F: 83 F8 50           cmp         eax,50h
  00000052: 72 C1              jb          00000015
  00000054: 5F                 pop         edi
  00000055: 5E                 pop         esi
  00000056: 83 C4 0C           add         esp,0Ch
  00000059: C3                 ret

?RetrieveUpperUserAreaData@TFtEEFTX@@QAEXXZ (public: void __thiscall TFtEEFTX::RetrieveUpperUserAreaData(void)):
  00000000: 83 EC 0C           sub         esp,0Ch
  00000003: 56                 push        esi
  00000004: 57                 push        edi
  00000005: 8B 3D 00 00 00 00  mov         edi,dword ptr [__imp__DeviceIoControl@32]
  0000000B: 8B F1              mov         esi,ecx
  0000000D: C7 44 24 0C 80 00  mov         dword ptr [esp+0Ch],80h
            00 00
  00000015: 6A 00              push        0
  00000017: 8D 44 24 14        lea         eax,[esp+14h]
  0000001B: 50                 push        eax
  0000001C: 6A 02              push        2
  0000001E: 8D 44 24 14        lea         eax,[esp+14h]
  00000022: 50                 push        eax
  00000023: 6A 04              push        4
  00000025: 8D 44 24 20        lea         eax,[esp+20h]
  00000029: 50                 push        eax
  0000002A: FF B6 14 08 00 00  push        dword ptr [esi+814h]
  00000030: FF B6 10 08 00 00  push        dword ptr [esi+810h]
  00000036: FF D7              call        edi
  00000038: 8B 4C 24 0C        mov         ecx,dword ptr [esp+0Ch]
  0000003C: 66 8B 44 24 08     mov         ax,word ptr [esp+8]
  00000041: 66 89 44 4E 04     mov         word ptr [esi+ecx*2+4],ax
  00000046: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  0000004A: 40                 inc         eax
  0000004B: 89 44 24 0C        mov         dword ptr [esp+0Ch],eax
  0000004F: 3D 00 04 00 00     cmp         eax,400h
  00000054: 72 BF              jb          00000015
  00000056: 5F                 pop         edi
  00000057: 5E                 pop         esi
  00000058: 83 C4 0C           add         esp,0Ch
  0000005B: C3                 ret

?SetChecksum@TFtEEFTX@@UAEXXZ (public: virtual void __thiscall TFtEEFTX::SetChecksum(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: B8 AA AA 00 00     mov         eax,0AAAAh
  00000008: 57                 push        edi
  00000009: 8D 7E 04           lea         edi,[esi+4]
  0000000C: 66 89 86 20 08 00  mov         word ptr [esi+00000820h],ax
            00
  00000013: 03 BE 30 08 00 00  add         edi,dword ptr [esi+00000830h]
  00000019: 8D 46 04           lea         eax,[esi+4]
  0000001C: 3B C7              cmp         eax,edi
  0000001E: 73 46              jae         00000066
  00000020: 53                 push        ebx
  00000021: 8D 5E 28           lea         ebx,[esi+28h]
  00000024: BA AA AA 00 00     mov         edx,0AAAAh
  00000029: 8D A4 24 00 00 00  lea         esp,[esp+00000000h]
            00
  00000030: 66 33 10           xor         dx,word ptr [eax]
  00000033: 83 C0 02           add         eax,2
  00000036: 66 8B CA           mov         cx,dx
  00000039: 03 D2              add         edx,edx
  0000003B: 66 C1 E9 0F        shr         cx,0Fh
  0000003F: 0F B7 C9           movzx       ecx,cx
  00000042: 0B D1              or          edx,ecx
  00000044: 0F B7 D2           movzx       edx,dx
  00000047: 66 89 96 20 08 00  mov         word ptr [esi+00000820h],dx
            00
  0000004E: 3B C3              cmp         eax,ebx
  00000050: 75 06              jne         00000058
  00000052: 8D 86 84 00 00 00  lea         eax,[esi+00000084h]
  00000058: 3B C7              cmp         eax,edi
  0000005A: 72 D4              jb          00000030
  0000005C: 66 8B C2           mov         ax,dx
  0000005F: 5B                 pop         ebx
  00000060: 66 89 07           mov         word ptr [edi],ax
  00000063: 5F                 pop         edi
  00000064: 5E                 pop         esi
  00000065: C3                 ret
  00000066: 66 8B 86 20 08 00  mov         ax,word ptr [esi+00000820h]
            00
  0000006D: 66 89 07           mov         word ptr [edi],ax
  00000070: 5F                 pop         edi
  00000071: 5E                 pop         esi
  00000072: C3                 ret

?SetRomType@TFtEEFTX@@UAEXXZ (public: virtual void __thiscall TFtEEFTX::SetRomType(void)):
  00000000: B8 31 58 00 00     mov         eax,5831h
  00000005: 66 89 81 22 08 00  mov         word ptr [ecx+00000822h],ax
            00
  0000000C: C3                 ret

??0TFtEE4232H@@QAE@PAUft_private_vars@@@Z (public: __thiscall TFtEE4232H::TFtEE4232H(struct ft_private_vars *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAUft_private_vars@@@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE4232H@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001E: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000028: 5E                 pop         esi
  00000029: C2 04 00           ret         4

??0TFtEE4232H@@QAE@PAX@Z (public: __thiscall TFtEE4232H::TFtEE4232H(void *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAX@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE4232H@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001E: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000028: 5E                 pop         esi
  00000029: C2 04 00           ret         4

??0TFtEE4232H@@QAE@XZ (public: __thiscall TFtEE4232H::TFtEE4232H(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@XZ
  00000008: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE4232H@@6B@
  0000000E: 8B C6              mov         eax,esi
  00000010: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001A: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000024: 5E                 pop         esi
  00000025: C3                 ret

?AddUserArea@TFtEE4232H@@UAEHPAEK@Z (public: virtual int __thiscall TFtEE4232H::AddUserArea(unsigned char *,unsigned long)):
  00000000: 53                 push        ebx
  00000001: 55                 push        ebp
  00000002: 56                 push        esi
  00000003: 8B 74 24 14        mov         esi,dword ptr [esp+14h]
  00000007: B8 80 00 00 00     mov         eax,80h
  0000000C: 3B F0              cmp         esi,eax
  0000000E: 8B EE              mov         ebp,esi
  00000010: 57                 push        edi
  00000011: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  00000015: 0F 47 E8           cmova       ebp,eax
  00000018: 55                 push        ebp
  00000019: 57                 push        edi
  0000001A: 8B D9              mov         ebx,ecx
  0000001C: E8 00 00 00 00     call        ?AddUserArea@TFtE2Data@@UAEHPAEK@Z
  00000021: 89 44 24 18        mov         dword ptr [esp+18h],eax
  00000025: 85 C0              test        eax,eax
  00000027: 74 27              je          00000050
  00000029: 2B F5              sub         esi,ebp
  0000002B: 74 23              je          00000050
  0000002D: 8B CB              mov         ecx,ebx
  0000002F: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  00000034: 66 03 C0           add         ax,ax
  00000037: 83 EF 80           sub         edi,0FFFFFF80h
  0000003A: 0F B7 D0           movzx       edx,ax
  0000003D: 8D 49 00           lea         ecx,[ecx]
  00000040: 8A 07              mov         al,byte ptr [edi]
  00000042: 8D 7F 01           lea         edi,[edi+1]
  00000045: 0F B7 CA           movzx       ecx,dx
  00000048: 42                 inc         edx
  00000049: 88 44 19 04        mov         byte ptr [ecx+ebx+4],al
  0000004D: 4E                 dec         esi
  0000004E: 75 F0              jne         00000040
  00000050: 8B 03              mov         eax,dword ptr [ebx]
  00000052: 8B CB              mov         ecx,ebx
  00000054: FF 50 04           call        dword ptr [eax+4]
  00000057: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  0000005B: 5F                 pop         edi
  0000005C: 5E                 pop         esi
  0000005D: 5D                 pop         ebp
  0000005E: 5B                 pop         ebx
  0000005F: C2 08 00           ret         8

?Erase@TFtEE4232H@@QAEHXZ (public: int __thiscall TFtEE4232H::Erase(void)):
  00000000: 8B 01              mov         eax,dword ptr [ecx]
  00000002: FF 50 20           call        dword ptr [eax+20h]
  00000005: B8 01 00 00 00     mov         eax,1
  0000000A: C3                 ret

?GetUserArea@TFtEE4232H@@UAEXPAEKPAK@Z (public: virtual void __thiscall TFtEE4232H::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  00000000: 53                 push        ebx
  00000001: 55                 push        ebp
  00000002: 56                 push        esi
  00000003: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  00000007: B8 80 00 00 00     mov         eax,80h
  0000000C: 57                 push        edi
  0000000D: 8B 7C 24 18        mov         edi,dword ptr [esp+18h]
  00000011: 8B D9              mov         ebx,ecx
  00000013: 3B F8              cmp         edi,eax
  00000015: 8B EF              mov         ebp,edi
  00000017: 0F 47 E8           cmova       ebp,eax
  0000001A: 8D 44 24 18        lea         eax,[esp+18h]
  0000001E: 50                 push        eax
  0000001F: 55                 push        ebp
  00000020: 56                 push        esi
  00000021: E8 00 00 00 00     call        ?GetUserArea@TFtE2Data@@UAEXPAEKPAK@Z
  00000026: 8B 4C 24 1C        mov         ecx,dword ptr [esp+1Ch]
  0000002A: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  0000002E: 89 01              mov         dword ptr [ecx],eax
  00000030: 3B C5              cmp         eax,ebp
  00000032: 75 33              jne         00000067
  00000034: 2B FD              sub         edi,ebp
  00000036: 74 2F              je          00000067
  00000038: 8B CB              mov         ecx,ebx
  0000003A: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  0000003F: 66 03 C0           add         ax,ax
  00000042: 8B D7              mov         edx,edi
  00000044: 0F B7 C8           movzx       ecx,ax
  00000047: 83 EE 80           sub         esi,0FFFFFF80h
  0000004A: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  00000050: 0F B7 C1           movzx       eax,cx
  00000053: 8D 76 01           lea         esi,[esi+1]
  00000056: 41                 inc         ecx
  00000057: 8A 44 18 04        mov         al,byte ptr [eax+ebx+4]
  0000005B: 88 46 FF           mov         byte ptr [esi-1],al
  0000005E: 4A                 dec         edx
  0000005F: 75 EF              jne         00000050
  00000061: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  00000065: 01 38              add         dword ptr [eax],edi
  00000067: 5F                 pop         edi
  00000068: 5E                 pop         esi
  00000069: 5D                 pop         ebp
  0000006A: 5B                 pop         ebx
  0000006B: C2 0C 00           ret         0Ch

?GetUserAreaOffset@TFtEE4232H@@UAEGXZ (public: virtual unsigned short __thiscall TFtEE4232H::GetUserAreaOffset(void)):
  00000000: 0F B7 81 22 08 00  movzx       eax,word ptr [ecx+822h]
            00
  00000007: 83 F8 56           cmp         eax,56h
  0000000A: 74 09              je          00000015
  0000000C: 83 F8 66           cmp         eax,66h
  0000000F: 0F 85 00 00 00 00  jne         ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  00000015: B8 0D 00 00 00     mov         eax,0Dh
  0000001A: C3                 ret

?GetUserAreaSize@TFtEE4232H@@UAEGXZ (public: virtual unsigned short __thiscall TFtEE4232H::GetUserAreaSize(void)):
  00000000: 0F B7 81 22 08 00  movzx       eax,word ptr [ecx+822h]
            00
  00000007: 83 F8 56           cmp         eax,56h
  0000000A: 74 09              je          00000015
  0000000C: 83 F8 66           cmp         eax,66h
  0000000F: 0F 85 00 00 00 00  jne         ?GetUserAreaSize@TFtE2Data@@UAEGXZ
  00000015: E8 00 00 00 00     call        ?GetUserAreaSize@TFtE2Data@@UAEGXZ
  0000001A: 83 C0 40           add         eax,40h
  0000001D: C3                 ret

?Init@TFtEE4232H@@UAEXPAX@Z (public: virtual void __thiscall TFtEE4232H::Init(void *)):
  00000000: 83 EC 08           sub         esp,8
  00000003: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  00000007: 53                 push        ebx
  00000008: 55                 push        ebp
  00000009: 8B E9              mov         ebp,ecx
  0000000B: 33 DB              xor         ebx,ebx
  0000000D: 8B 10              mov         edx,dword ptr [eax]
  0000000F: 33 C9              xor         ecx,ecx
  00000011: 56                 push        esi
  00000012: 89 54 24 0C        mov         dword ptr [esp+0Ch],edx
  00000016: 33 F6              xor         esi,esi
  00000018: 8B 50 04           mov         edx,dword ptr [eax+4]
  0000001B: 38 48 1E           cmp         byte ptr [eax+1Eh],cl
  0000001E: 89 54 24 10        mov         dword ptr [esp+10h],edx
  00000022: BA 08 00 00 00     mov         edx,8
  00000027: 0F 45 CA           cmovne      ecx,edx
  0000002A: 57                 push        edi
  0000002B: 89 4C 24 1C        mov         dword ptr [esp+1Ch],ecx
  0000002F: 38 58 1F           cmp         byte ptr [eax+1Fh],bl
  00000032: 74 0A              je          0000003E
  00000034: 81 C9 00 08 00 00  or          ecx,800h
  0000003A: 89 4C 24 1C        mov         dword ptr [esp+1Ch],ecx
  0000003E: 38 58 20           cmp         byte ptr [eax+20h],bl
  00000041: 74 0A              je          0000004D
  00000043: 81 C9 80 00 00 00  or          ecx,80h
  00000049: 89 4C 24 1C        mov         dword ptr [esp+1Ch],ecx
  0000004D: 38 58 21           cmp         byte ptr [eax+21h],bl
  00000050: 74 0A              je          0000005C
  00000052: 81 C9 00 80 00 00  or          ecx,8000h
  00000058: 89 4C 24 1C        mov         dword ptr [esp+1Ch],ecx
  0000005C: 38 58 0C           cmp         byte ptr [eax+0Ch],bl
  0000005F: B9 04 00 00 00     mov         ecx,4
  00000064: 0F 45 D9           cmovne      ebx,ecx
  00000067: 80 78 0D 00        cmp         byte ptr [eax+0Dh],0
  0000006B: 74 02              je          0000006F
  0000006D: 0B DA              or          ebx,edx
  0000006F: 80 78 1A 00        cmp         byte ptr [eax+1Ah],0
  00000073: 74 06              je          0000007B
  00000075: 81 CB 00 10 00 00  or          ebx,1000h
  0000007B: 80 78 1B 00        cmp         byte ptr [eax+1Bh],0
  0000007F: 74 06              je          00000087
  00000081: 81 CB 00 20 00 00  or          ebx,2000h
  00000087: 80 78 1C 00        cmp         byte ptr [eax+1Ch],0
  0000008B: 74 06              je          00000093
  0000008D: 81 CB 00 40 00 00  or          ebx,4000h
  00000093: 80 78 1D 00        cmp         byte ptr [eax+1Dh],0
  00000097: 74 06              je          0000009F
  00000099: 81 CB 00 80 00 00  or          ebx,8000h
  0000009F: 8A 48 10           mov         cl,byte ptr [eax+10h]
  000000A2: 80 F9 04           cmp         cl,4
  000000A5: 74 22              je          000000C9
  000000A7: 3A CA              cmp         cl,dl
  000000A9: 75 07              jne         000000B2
  000000AB: BE 01 00 00 00     mov         esi,1
  000000B0: EB 17              jmp         000000C9
  000000B2: 80 F9 0C           cmp         cl,0Ch
  000000B5: 75 07              jne         000000BE
  000000B7: BE 02 00 00 00     mov         esi,2
  000000BC: EB 0B              jmp         000000C9
  000000BE: 80 F9 10           cmp         cl,10h
  000000C1: BA 03 00 00 00     mov         edx,3
  000000C6: 0F 44 F2           cmove       esi,edx
  000000C9: 80 78 0E 00        cmp         byte ptr [eax+0Eh],0
  000000CD: 74 03              je          000000D2
  000000CF: 83 CE 04           or          esi,4
  000000D2: 80 78 0F 00        cmp         byte ptr [eax+0Fh],0
  000000D6: 74 03              je          000000DB
  000000D8: 83 CE 08           or          esi,8
  000000DB: 8A 48 13           mov         cl,byte ptr [eax+13h]
  000000DE: 80 F9 04           cmp         cl,4
  000000E1: 74 1C              je          000000FF
  000000E3: 80 F9 08           cmp         cl,8
  000000E6: 75 05              jne         000000ED
  000000E8: 83 CE 10           or          esi,10h
  000000EB: EB 12              jmp         000000FF
  000000ED: 80 F9 0C           cmp         cl,0Ch
  000000F0: 75 05              jne         000000F7
  000000F2: 83 CE 20           or          esi,20h
  000000F5: EB 08              jmp         000000FF
  000000F7: 80 F9 10           cmp         cl,10h
  000000FA: 75 03              jne         000000FF
  000000FC: 83 CE 30           or          esi,30h
  000000FF: 80 78 11 00        cmp         byte ptr [eax+11h],0
  00000103: 74 03              je          00000108
  00000105: 83 CE 40           or          esi,40h
  00000108: 80 78 12 00        cmp         byte ptr [eax+12h],0
  0000010C: 74 06              je          00000114
  0000010E: 81 CE 80 00 00 00  or          esi,80h
  00000114: 8A 48 16           mov         cl,byte ptr [eax+16h]
  00000117: 80 F9 04           cmp         cl,4
  0000011A: 74 25              je          00000141
  0000011C: 80 F9 08           cmp         cl,8
  0000011F: 75 08              jne         00000129
  00000121: 81 CE 00 01 00 00  or          esi,100h
  00000127: EB 18              jmp         00000141
  00000129: 80 F9 0C           cmp         cl,0Ch
  0000012C: 75 08              jne         00000136
  0000012E: 81 CE 00 02 00 00  or          esi,200h
  00000134: EB 0B              jmp         00000141
  00000136: 80 F9 10           cmp         cl,10h
  00000139: 75 06              jne         00000141
  0000013B: 81 CE 00 03 00 00  or          esi,300h
  00000141: 80 78 14 00        cmp         byte ptr [eax+14h],0
  00000145: 74 06              je          0000014D
  00000147: 81 CE 00 04 00 00  or          esi,400h
  0000014D: 80 78 15 00        cmp         byte ptr [eax+15h],0
  00000151: 74 06              je          00000159
  00000153: 81 CE 00 08 00 00  or          esi,800h
  00000159: 8A 48 19           mov         cl,byte ptr [eax+19h]
  0000015C: 80 F9 04           cmp         cl,4
  0000015F: 74 25              je          00000186
  00000161: 80 F9 08           cmp         cl,8
  00000164: 75 08              jne         0000016E
  00000166: 81 CE 00 10 00 00  or          esi,1000h
  0000016C: EB 18              jmp         00000186
  0000016E: 80 F9 0C           cmp         cl,0Ch
  00000171: 75 08              jne         0000017B
  00000173: 81 CE 00 20 00 00  or          esi,2000h
  00000179: EB 0B              jmp         00000186
  0000017B: 80 F9 10           cmp         cl,10h
  0000017E: 75 06              jne         00000186
  00000180: 81 CE 00 30 00 00  or          esi,3000h
  00000186: 80 78 17 00        cmp         byte ptr [eax+17h],0
  0000018A: 74 06              je          00000192
  0000018C: 81 CE 00 40 00 00  or          esi,4000h
  00000192: 80 78 18 00        cmp         byte ptr [eax+18h],0
  00000196: 74 06              je          0000019E
  00000198: 81 CE 00 80 00 00  or          esi,8000h
  0000019E: 68 00 08 00 00     push        800h
  000001A3: 8D 7D 04           lea         edi,[ebp+4]
  000001A6: 6A 00              push        0
  000001A8: 57                 push        edi
  000001A9: E8 00 00 00 00     call        _memset
  000001AE: 8B 44 24 28        mov         eax,dword ptr [esp+28h]
  000001B2: 83 C4 0C           add         esp,0Ch
  000001B5: 66 89 75 10        mov         word ptr [ebp+10h],si
  000001B9: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  000001BD: 8B CE              mov         ecx,esi
  000001BF: 66 89 07           mov         word ptr [edi],ax
  000001C2: C7 45 06 03 04 10  mov         dword ptr [ebp+6],60100403h
            60
  000001C9: C7 45 0A 00 08 A0  mov         dword ptr [ebp+0Ah],64A00800h
            64
  000001D0: 66 89 5D 0E        mov         word ptr [ebp+0Eh],bx
  000001D4: 8D 51 01           lea         edx,[ecx+1]
  000001D7: C6 45 12 1A        mov         byte ptr [ebp+12h],1Ah
  000001DB: EB 03              jmp         000001E0
  000001DD: 8D 49 00           lea         ecx,[ecx]
  000001E0: 8A 01              mov         al,byte ptr [ecx]
  000001E2: 41                 inc         ecx
  000001E3: 84 C0              test        al,al
  000001E5: 75 F9              jne         000001E0
  000001E7: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  000001EB: 2B CA              sub         ecx,edx
  000001ED: FE C1              inc         cl
  000001EF: 02 C9              add         cl,cl
  000001F1: 88 4D 13           mov         byte ptr [ebp+13h],cl
  000001F4: 80 C1 1A           add         cl,1Ah
  000001F7: 88 4D 14           mov         byte ptr [ebp+14h],cl
  000001FA: 8B CF              mov         ecx,edi
  000001FC: 8D 51 01           lea         edx,[ecx+1]
  000001FF: 90                 nop
  00000200: 8A 01              mov         al,byte ptr [ecx]
  00000202: 41                 inc         ecx
  00000203: 84 C0              test        al,al
  00000205: 75 F9              jne         00000200
  00000207: 8A 45 14           mov         al,byte ptr [ebp+14h]
  0000020A: 2B CA              sub         ecx,edx
  0000020C: FE C1              inc         cl
  0000020E: C6 45 17 02        mov         byte ptr [ebp+17h],2
  00000212: 02 C9              add         cl,cl
  00000214: 02 C1              add         al,cl
  00000216: 88 4D 15           mov         byte ptr [ebp+15h],cl
  00000219: 88 45 16           mov         byte ptr [ebp+16h],al
  0000021C: 0F B7 85 22 08 00  movzx       eax,word ptr [ebp+822h]
            00
  00000223: 66 85 C0           test        ax,ax
  00000226: 75 05              jne         0000022D
  00000228: B8 46 00 00 00     mov         eax,46h
  0000022D: 66 89 45 1C        mov         word ptr [ebp+1Ch],ax
  00000231: 8B CD              mov         ecx,ebp
  00000233: 56                 push        esi
  00000234: 8D 45 1E           lea         eax,[ebp+1Eh]
  00000237: 50                 push        eax
  00000238: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  0000023D: 0F BE 45 14        movsx       eax,byte ptr [ebp+14h]
  00000241: 8B CD              mov         ecx,ebp
  00000243: 83 C0 04           add         eax,4
  00000246: 57                 push        edi
  00000247: 03 C5              add         eax,ebp
  00000249: 50                 push        eax
  0000024A: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  0000024F: 0F BE 45 16        movsx       eax,byte ptr [ebp+16h]
  00000253: 8B CD              mov         ecx,ebp
  00000255: 83 C0 04           add         eax,4
  00000258: 68 00 00 00 00     push        offset ??_C@_00CNPNBAHC@?$AA@
  0000025D: 03 C5              add         eax,ebp
  0000025F: 50                 push        eax
  00000260: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000265: 8A 4D 12           mov         cl,byte ptr [ebp+12h]
  00000268: 8A 55 14           mov         dl,byte ptr [ebp+14h]
  0000026B: 8A 5D 16           mov         bl,byte ptr [ebp+16h]
  0000026E: 0F BE C1           movsx       eax,cl
  00000271: 80 C9 80           or          cl,80h
  00000274: 89 85 24 08 00 00  mov         dword ptr [ebp+824h],eax
  0000027A: 0F BE C2           movsx       eax,dl
  0000027D: 80 CA 80           or          dl,80h
  00000280: 89 85 28 08 00 00  mov         dword ptr [ebp+828h],eax
  00000286: 0F BE C3           movsx       eax,bl
  00000289: 80 CB 80           or          bl,80h
  0000028C: 89 85 2C 08 00 00  mov         dword ptr [ebp+82Ch],eax
  00000292: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000296: 88 4D 12           mov         byte ptr [ebp+12h],cl
  00000299: 8B CD              mov         ecx,ebp
  0000029B: 50                 push        eax
  0000029C: 88 55 14           mov         byte ptr [ebp+14h],dl
  0000029F: 88 5D 16           mov         byte ptr [ebp+16h],bl
  000002A2: C7 44 24 20 02 03  mov         dword ptr [esp+20h],302h
            00 00
  000002AA: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  000002AF: 6A 00              push        0
  000002B1: 8B CD              mov         ecx,ebp
  000002B3: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  000002B8: 8B 45 00           mov         eax,dword ptr [ebp]
  000002BB: 8B CD              mov         ecx,ebp
  000002BD: FF 50 04           call        dword ptr [eax+4]
  000002C0: 5F                 pop         edi
  000002C1: 5E                 pop         esi
  000002C2: C7 85 08 08 00 00  mov         dword ptr [ebp+808h],0
            00 00 00 00
  000002CC: 5D                 pop         ebp
  000002CD: 5B                 pop         ebx
  000002CE: 83 C4 08           add         esp,8
  000002D1: C2 04 00           ret         4

?MoveStrings@TFtEE4232H@@UAEXXZ (public: virtual void __thiscall TFtEE4232H::MoveStrings(void)):
  00000000: 55                 push        ebp
  00000001: 8B E9              mov         ebp,ecx
  00000003: 0F B7 85 22 08 00  movzx       eax,word ptr [ebp+00000822h]
            00
  0000000A: 83 F8 56           cmp         eax,56h
  0000000D: 74 05              je          00000014
  0000000F: 83 F8 66           cmp         eax,66h
  00000012: 75 5C              jne         00000070
  00000014: 53                 push        ebx
  00000015: 56                 push        esi
  00000016: 8D 45 1E           lea         eax,[ebp+1Eh]
  00000019: 33 D2              xor         edx,edx
  0000001B: 8D 8D 84 00 00 00  lea         ecx,[ebp+00000084h]
  00000021: 8B F1              mov         esi,ecx
  00000023: 8D 98 80 00 00 00  lea         ebx,[eax+00000080h]
  00000029: 2B F0              sub         esi,eax
  0000002B: 46                 inc         esi
  0000002C: D1 EE              shr         esi,1
  0000002E: 57                 push        edi
  0000002F: 33 FF              xor         edi,edi
  00000031: 3B C1              cmp         eax,ecx
  00000033: 0F 47 F2           cmova       esi,edx
  00000036: 8B D0              mov         edx,eax
  00000038: 85 F6              test        esi,esi
  0000003A: 74 14              je          00000050
  0000003C: 2B D8              sub         ebx,eax
  0000003E: 8B FF              mov         edi,edi
  00000040: 66 8B 0A           mov         cx,word ptr [edx]
  00000043: 8D 52 02           lea         edx,[edx+2]
  00000046: 47                 inc         edi
  00000047: 66 89 4C 13 FE     mov         word ptr [ebx+edx-2],cx
  0000004C: 3B FE              cmp         edi,esi
  0000004E: 72 F0              jb          00000040
  00000050: 33 C9              xor         ecx,ecx
  00000052: 85 F6              test        esi,esi
  00000054: 74 0E              je          00000064
  00000056: 33 D2              xor         edx,edx
  00000058: 8D 40 02           lea         eax,[eax+2]
  0000005B: 41                 inc         ecx
  0000005C: 66 89 50 FE        mov         word ptr [eax-2],dx
  00000060: 3B CE              cmp         ecx,esi
  00000062: 72 F2              jb          00000056
  00000064: 8B 45 00           mov         eax,dword ptr [ebp]
  00000067: 8B CD              mov         ecx,ebp
  00000069: 5F                 pop         edi
  0000006A: 5E                 pop         esi
  0000006B: 5B                 pop         ebx
  0000006C: 5D                 pop         ebp
  0000006D: FF 60 04           jmp         dword ptr [eax+4]
  00000070: 5D                 pop         ebp
  00000071: C3                 ret

?Program@TFtEE4232H@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE4232H::Program(void *,char *,char *,char *,char *)):
  00000000: 81 EC A8 00 00 00  sub         esp,0A8h
  00000006: 53                 push        ebx
  00000007: 55                 push        ebp
  00000008: 56                 push        esi
  00000009: 33 F6              xor         esi,esi
  0000000B: C6 44 24 0F 80     mov         byte ptr [esp+0Fh],80h
  00000010: 33 ED              xor         ebp,ebp
  00000012: 8B D9              mov         ebx,ecx
  00000014: 39 B4 24 BC 00 00  cmp         dword ptr [esp+0BCh],esi
            00
  0000001B: 0F 84 EA 03 00 00  je          0000040B
  00000021: 39 B4 24 C0 00 00  cmp         dword ptr [esp+0C0h],esi
            00
  00000028: 0F 84 DD 03 00 00  je          0000040B
  0000002E: 39 B4 24 C4 00 00  cmp         dword ptr [esp+0C4h],esi
            00
  00000035: 0F 84 D0 03 00 00  je          0000040B
  0000003B: 57                 push        edi
  0000003C: 8B BC 24 BC 00 00  mov         edi,dword ptr [esp+0BCh]
            00
  00000043: 66 39 77 04        cmp         word ptr [edi+4],si
  00000047: 0F 84 AC 03 00 00  je          000003F9
  0000004D: 66 39 77 06        cmp         word ptr [edi+6],si
  00000051: 0F 84 A2 03 00 00  je          000003F9
  00000057: 68 00 08 00 00     push        800h
  0000005C: 8D 43 04           lea         eax,[ebx+4]
  0000005F: 56                 push        esi
  00000060: 50                 push        eax
  00000061: 89 44 24 28        mov         dword ptr [esp+28h],eax
  00000065: E8 00 00 00 00     call        _memset
  0000006A: 8B 03              mov         eax,dword ptr [ebx]
  0000006C: 83 C4 0C           add         esp,0Ch
  0000006F: 8B CB              mov         ecx,ebx
  00000071: FF 50 20           call        dword ptr [eax+20h]
  00000074: B8 00 08 00 00     mov         eax,800h
  00000079: 66 89 43 0A        mov         word ptr [ebx+0Ah],ax
  0000007D: 8B 84 24 CC 00 00  mov         eax,dword ptr [esp+0CCh]
            00
  00000084: 85 C0              test        eax,eax
  00000086: 74 13              je          0000009B
  00000088: 8B C8              mov         ecx,eax
  0000008A: 8D 51 01           lea         edx,[ecx+1]
  0000008D: 8D 49 00           lea         ecx,[ecx]
  00000090: 8A 01              mov         al,byte ptr [ecx]
  00000092: 41                 inc         ecx
  00000093: 84 C0              test        al,al
  00000095: 75 F9              jne         00000090
  00000097: 2B CA              sub         ecx,edx
  00000099: 75 3F              jne         000000DA
  0000009B: 0F B7 47 06        movzx       eax,word ptr [edi+6]
  0000009F: 25 03 00 00 80     and         eax,80000003h
  000000A4: 79 05              jns         000000AB
  000000A6: 48                 dec         eax
  000000A7: 83 C8 FC           or          eax,0FFFFFFFCh
  000000AA: 40                 inc         eax
  000000AB: 50                 push        eax
  000000AC: FF B4 24 C8 00 00  push        dword ptr [esp+0C8h]
            00
  000000B3: 8D 4C 24 28        lea         ecx,[esp+28h]
  000000B7: E8 00 00 00 00     call        ??0TSerialNumber@@QAE@PADG@Z
  000000BC: 8D 44 24 14        lea         eax,[esp+14h]
  000000C0: 50                 push        eax
  000000C1: 8D 44 24 3C        lea         eax,[esp+3Ch]
  000000C5: 50                 push        eax
  000000C6: 8D 4C 24 28        lea         ecx,[esp+28h]
  000000CA: E8 00 00 00 00     call        ?Get@TSerialNumber@@QAEHPADPAH@Z
  000000CF: 8D 44 24 38        lea         eax,[esp+38h]
  000000D3: 89 84 24 CC 00 00  mov         dword ptr [esp+0CCh],eax
            00
  000000DA: 0F B7 47 04        movzx       eax,word ptr [edi+4]
  000000DE: 8B CB              mov         ecx,ebx
  000000E0: 50                 push        eax
  000000E1: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QAEXG@Z
  000000E6: 0F B7 47 06        movzx       eax,word ptr [edi+6]
  000000EA: 8B CB              mov         ecx,ebx
  000000EC: 50                 push        eax
  000000ED: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QAEXG@Z
  000000F2: 80 7F 08 00        cmp         byte ptr [edi+8],0
  000000F6: 74 04              je          000000FC
  000000F8: 80 4B 0E 08        or          byte ptr [ebx+0Eh],8
  000000FC: 0F B7 47 0A        movzx       eax,word ptr [edi+0Ah]
  00000100: 8B CB              mov         ecx,ebx
  00000102: 50                 push        eax
  00000103: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QAEXH@Z
  00000108: 80 7F 0C 00        cmp         byte ptr [edi+0Ch],0
  0000010C: B9 C0 00 00 00     mov         ecx,0C0h
  00000111: 0F B6 44 24 13     movzx       eax,byte ptr [esp+13h]
  00000116: 0F 45 C1           cmovne      eax,ecx
  00000119: 80 7F 0D 00        cmp         byte ptr [edi+0Dh],0
  0000011D: 88 44 24 14        mov         byte ptr [esp+14h],al
  00000121: 74 06              je          00000129
  00000123: 0C 20              or          al,20h
  00000125: 88 44 24 14        mov         byte ptr [esp+14h],al
  00000129: FF 74 24 14        push        dword ptr [esp+14h]
  0000012D: 8B CB              mov         ecx,ebx
  0000012F: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QAEXE@Z
  00000134: 80 7F 0E 00        cmp         byte ptr [edi+0Eh],0
  00000138: 74 04              je          0000013E
  0000013A: 80 4B 0E 04        or          byte ptr [ebx+0Eh],4
  0000013E: 8B 8C 24 C0 00 00  mov         ecx,dword ptr [esp+0C0h]
            00
  00000145: C6 43 12 1A        mov         byte ptr [ebx+12h],1Ah
  00000149: 8D 51 01           lea         edx,[ecx+1]
  0000014C: 8D 64 24 00        lea         esp,[esp]
  00000150: 8A 01              mov         al,byte ptr [ecx]
  00000152: 41                 inc         ecx
  00000153: 84 C0              test        al,al
  00000155: 75 F9              jne         00000150
  00000157: 2B CA              sub         ecx,edx
  00000159: FE C1              inc         cl
  0000015B: 02 C9              add         cl,cl
  0000015D: 88 4B 13           mov         byte ptr [ebx+13h],cl
  00000160: 80 C1 1A           add         cl,1Ah
  00000163: 88 4B 14           mov         byte ptr [ebx+14h],cl
  00000166: 8B 8C 24 C8 00 00  mov         ecx,dword ptr [esp+0C8h]
            00
  0000016D: 8D 51 01           lea         edx,[ecx+1]
  00000170: 8A 01              mov         al,byte ptr [ecx]
  00000172: 41                 inc         ecx
  00000173: 84 C0              test        al,al
  00000175: 75 F9              jne         00000170
  00000177: 8A 43 14           mov         al,byte ptr [ebx+14h]
  0000017A: 2B CA              sub         ecx,edx
  0000017C: FE C1              inc         cl
  0000017E: 02 C9              add         cl,cl
  00000180: 02 C1              add         al,cl
  00000182: 88 4B 15           mov         byte ptr [ebx+15h],cl
  00000185: 8B 8C 24 CC 00 00  mov         ecx,dword ptr [esp+0CCh]
            00
  0000018C: 88 43 16           mov         byte ptr [ebx+16h],al
  0000018F: 8D 51 01           lea         edx,[ecx+1]
  00000192: 8A 01              mov         al,byte ptr [ecx]
  00000194: 41                 inc         ecx
  00000195: 84 C0              test        al,al
  00000197: 75 F9              jne         00000192
  00000199: FF B4 24 C0 00 00  push        dword ptr [esp+0C0h]
            00
  000001A0: 2B CA              sub         ecx,edx
  000001A2: 8D 43 1E           lea         eax,[ebx+1Eh]
  000001A5: FE C1              inc         cl
  000001A7: 02 C9              add         cl,cl
  000001A9: 88 4B 17           mov         byte ptr [ebx+17h],cl
  000001AC: 8B CB              mov         ecx,ebx
  000001AE: 50                 push        eax
  000001AF: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001B4: 0F B6 43 14        movzx       eax,byte ptr [ebx+14h]
  000001B8: 8B CB              mov         ecx,ebx
  000001BA: FF B4 24 C8 00 00  push        dword ptr [esp+0C8h]
            00
  000001C1: 83 C0 04           add         eax,4
  000001C4: 03 C3              add         eax,ebx
  000001C6: 50                 push        eax
  000001C7: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001CC: 0F B6 43 16        movzx       eax,byte ptr [ebx+16h]
  000001D0: 8B CB              mov         ecx,ebx
  000001D2: FF B4 24 CC 00 00  push        dword ptr [esp+0CCh]
            00
  000001D9: 83 C0 04           add         eax,4
  000001DC: 03 C3              add         eax,ebx
  000001DE: 50                 push        eax
  000001DF: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001E4: 0F BE 43 12        movsx       eax,byte ptr [ebx+12h]
  000001E8: 8B CB              mov         ecx,ebx
  000001EA: 89 83 24 08 00 00  mov         dword ptr [ebx+824h],eax
  000001F0: 0F BE 43 14        movsx       eax,byte ptr [ebx+14h]
  000001F4: 89 83 28 08 00 00  mov         dword ptr [ebx+828h],eax
  000001FA: 0F BE 43 16        movsx       eax,byte ptr [ebx+16h]
  000001FE: 89 83 2C 08 00 00  mov         dword ptr [ebx+82Ch],eax
  00000204: 80 4B 12 80        or          byte ptr [ebx+12h],80h
  00000208: 80 4B 14 80        or          byte ptr [ebx+14h],80h
  0000020C: 80 4B 16 80        or          byte ptr [ebx+16h],80h
  00000210: 8B 03              mov         eax,dword ptr [ebx]
  00000212: FF 50 24           call        dword ptr [eax+24h]
  00000215: 80 7F 20 01        cmp         byte ptr [edi+20h],1
  00000219: B9 08 00 00 00     mov         ecx,8
  0000021E: 8B C6              mov         eax,esi
  00000220: 0F 44 C1           cmove       eax,ecx
  00000223: 80 7F 21 01        cmp         byte ptr [edi+21h],1
  00000227: 75 05              jne         0000022E
  00000229: 0D 00 08 00 00     or          eax,800h
  0000022E: 80 7F 22 01        cmp         byte ptr [edi+22h],1
  00000232: 75 05              jne         00000239
  00000234: 0D 80 00 00 00     or          eax,80h
  00000239: 80 7F 23 01        cmp         byte ptr [edi+23h],1
  0000023D: 75 05              jne         00000244
  0000023F: 0D 00 80 00 00     or          eax,8000h
  00000244: 66 89 43 04        mov         word ptr [ebx+4],ax
  00000248: B8 00 10 00 00     mov         eax,1000h
  0000024D: 80 7F 1C 00        cmp         byte ptr [edi+1Ch],0
  00000251: 0F 45 E8           cmovne      ebp,eax
  00000254: 80 7F 1D 00        cmp         byte ptr [edi+1Dh],0
  00000258: 74 06              je          00000260
  0000025A: 81 CD 00 20 00 00  or          ebp,2000h
  00000260: 80 7F 1E 00        cmp         byte ptr [edi+1Eh],0
  00000264: 74 06              je          0000026C
  00000266: 81 CD 00 40 00 00  or          ebp,4000h
  0000026C: 80 7F 1F 00        cmp         byte ptr [edi+1Fh],0
  00000270: 74 06              je          00000278
  00000272: 81 CD 00 80 00 00  or          ebp,8000h
  00000278: 66 09 6B 0E        or          word ptr [ebx+0Eh],bp
  0000027C: 8A 47 12           mov         al,byte ptr [edi+12h]
  0000027F: 3C 04              cmp         al,4
  00000281: 74 20              je          000002A3
  00000283: 3C 08              cmp         al,8
  00000285: 75 07              jne         0000028E
  00000287: BE 01 00 00 00     mov         esi,1
  0000028C: EB 15              jmp         000002A3
  0000028E: 3C 0C              cmp         al,0Ch
  00000290: 75 07              jne         00000299
  00000292: BE 02 00 00 00     mov         esi,2
  00000297: EB 0A              jmp         000002A3
  00000299: 3C 10              cmp         al,10h
  0000029B: B9 03 00 00 00     mov         ecx,3
  000002A0: 0F 44 F1           cmove       esi,ecx
  000002A3: 80 7F 10 00        cmp         byte ptr [edi+10h],0
  000002A7: 74 03              je          000002AC
  000002A9: 83 CE 04           or          esi,4
  000002AC: 80 7F 11 00        cmp         byte ptr [edi+11h],0
  000002B0: 74 03              je          000002B5
  000002B2: 83 CE 08           or          esi,8
  000002B5: 8A 47 15           mov         al,byte ptr [edi+15h]
  000002B8: 3C 04              cmp         al,4
  000002BA: 74 19              je          000002D5
  000002BC: 3C 08              cmp         al,8
  000002BE: 75 05              jne         000002C5
  000002C0: 83 CE 10           or          esi,10h
  000002C3: EB 10              jmp         000002D5
  000002C5: 3C 0C              cmp         al,0Ch
  000002C7: 75 05              jne         000002CE
  000002C9: 83 CE 20           or          esi,20h
  000002CC: EB 07              jmp         000002D5
  000002CE: 3C 10              cmp         al,10h
  000002D0: 75 03              jne         000002D5
  000002D2: 83 CE 30           or          esi,30h
  000002D5: 80 7F 13 00        cmp         byte ptr [edi+13h],0
  000002D9: 74 03              je          000002DE
  000002DB: 83 CE 40           or          esi,40h
  000002DE: 80 7F 14 00        cmp         byte ptr [edi+14h],0
  000002E2: 74 06              je          000002EA
  000002E4: 81 CE 80 00 00 00  or          esi,80h
  000002EA: 8A 47 18           mov         al,byte ptr [edi+18h]
  000002ED: 3C 04              cmp         al,4
  000002EF: 74 22              je          00000313
  000002F1: 3C 08              cmp         al,8
  000002F3: 75 08              jne         000002FD
  000002F5: 81 CE 00 01 00 00  or          esi,100h
  000002FB: EB 16              jmp         00000313
  000002FD: 3C 0C              cmp         al,0Ch
  000002FF: 75 08              jne         00000309
  00000301: 81 CE 00 02 00 00  or          esi,200h
  00000307: EB 0A              jmp         00000313
  00000309: 3C 10              cmp         al,10h
  0000030B: 75 06              jne         00000313
  0000030D: 81 CE 00 03 00 00  or          esi,300h
  00000313: 80 7F 16 00        cmp         byte ptr [edi+16h],0
  00000317: 74 06              je          0000031F
  00000319: 81 CE 00 04 00 00  or          esi,400h
  0000031F: 80 7F 17 00        cmp         byte ptr [edi+17h],0
  00000323: 74 06              je          0000032B
  00000325: 81 CE 00 08 00 00  or          esi,800h
  0000032B: 8A 47 1B           mov         al,byte ptr [edi+1Bh]
  0000032E: 3C 04              cmp         al,4
  00000330: 74 22              je          00000354
  00000332: 3C 08              cmp         al,8
  00000334: 75 08              jne         0000033E
  00000336: 81 CE 00 10 00 00  or          esi,1000h
  0000033C: EB 16              jmp         00000354
  0000033E: 3C 0C              cmp         al,0Ch
  00000340: 75 08              jne         0000034A
  00000342: 81 CE 00 20 00 00  or          esi,2000h
  00000348: EB 0A              jmp         00000354
  0000034A: 3C 10              cmp         al,10h
  0000034C: 75 06              jne         00000354
  0000034E: 81 CE 00 30 00 00  or          esi,3000h
  00000354: 80 7F 19 00        cmp         byte ptr [edi+19h],0
  00000358: 74 06              je          00000360
  0000035A: 81 CE 00 40 00 00  or          esi,4000h
  00000360: 80 7F 1A 00        cmp         byte ptr [edi+1Ah],0
  00000364: 74 06              je          0000036C
  00000366: 81 CE 00 80 00 00  or          esi,8000h
  0000036C: 66 89 73 10        mov         word ptr [ebx+10h],si
  00000370: 0F B7 83 22 08 00  movzx       eax,word ptr [ebx+822h]
            00
  00000377: 66 85 C0           test        ax,ax
  0000037A: 75 05              jne         00000381
  0000037C: B8 46 00 00 00     mov         eax,46h
  00000381: 66 89 43 1C        mov         word ptr [ebx+1Ch],ax
  00000385: 8B CB              mov         ecx,ebx
  00000387: 8D 44 24 18        lea         eax,[esp+18h]
  0000038B: C7 44 24 18 02 03  mov         dword ptr [esp+18h],302h
            00 00
  00000393: 50                 push        eax
  00000394: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  00000399: 6A 00              push        0
  0000039B: 8B CB              mov         ecx,ebx
  0000039D: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  000003A2: 8B 03              mov         eax,dword ptr [ebx]
  000003A4: 8B CB              mov         ecx,ebx
  000003A6: FF 50 04           call        dword ptr [eax+4]
  000003A9: 8B 03              mov         eax,dword ptr [ebx]
  000003AB: 8B CB              mov         ecx,ebx
  000003AD: C7 83 08 08 00 00  mov         dword ptr [ebx+808h],0
            00 00 00 00
  000003B7: FF 50 20           call        dword ptr [eax+20h]
  000003BA: 8B 5C 24 1C        mov         ebx,dword ptr [esp+1Ch]
  000003BE: 8B CB              mov         ecx,ebx
  000003C0: E8 00 00 00 00     call        ?Write@TEeData@@QAEHXZ
  000003C5: 85 C0              test        eax,eax
  000003C7: 75 12              jne         000003DB
  000003C9: 5F                 pop         edi
  000003CA: 5E                 pop         esi
  000003CB: 5D                 pop         ebp
  000003CC: B8 0C 00 00 00     mov         eax,0Ch
  000003D1: 5B                 pop         ebx
  000003D2: 81 C4 A8 00 00 00  add         esp,0A8h
  000003D8: C2 14 00           ret         14h
  000003DB: 8B CB              mov         ecx,ebx
  000003DD: E8 00 00 00 00     call        ?Confirm@TEeData@@QAEHXZ
  000003E2: F7 D8              neg         eax
  000003E4: 5F                 pop         edi
  000003E5: 1B C0              sbb         eax,eax
  000003E7: 5E                 pop         esi
  000003E8: 83 E0 F4           and         eax,0FFFFFFF4h
  000003EB: 5D                 pop         ebp
  000003EC: 83 C0 0C           add         eax,0Ch
  000003EF: 5B                 pop         ebx
  000003F0: 81 C4 A8 00 00 00  add         esp,0A8h
  000003F6: C2 14 00           ret         14h
  000003F9: 5F                 pop         edi
  000003FA: 5E                 pop         esi
  000003FB: 5D                 pop         ebp
  000003FC: B8 06 00 00 00     mov         eax,6
  00000401: 5B                 pop         ebx
  00000402: 81 C4 A8 00 00 00  add         esp,0A8h
  00000408: C2 14 00           ret         14h
  0000040B: 5E                 pop         esi
  0000040C: 5D                 pop         ebp
  0000040D: B8 06 00 00 00     mov         eax,6
  00000412: 5B                 pop         ebx
  00000413: 81 C4 A8 00 00 00  add         esp,0A8h
  00000419: C2 14 00           ret         14h

?Read@TFtEE4232H@@UAEHXZ (public: virtual int __thiscall TFtEE4232H::Read(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ?Read@TFtE2Data@@UAEHXZ
  00000008: 85 C0              test        eax,eax
  0000000A: 75 02              jne         0000000E
  0000000C: 5E                 pop         esi
  0000000D: C3                 ret
  0000000E: 0F B7 46 1C        movzx       eax,word ptr [esi+1Ch]
  00000012: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  00000019: 83 F8 56           cmp         eax,56h
  0000001C: 74 16              je          00000034
  0000001E: 83 F8 66           cmp         eax,66h
  00000021: 74 11              je          00000034
  00000023: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],40h
            40 00 00 00
  0000002D: B8 01 00 00 00     mov         eax,1
  00000032: 5E                 pop         esi
  00000033: C3                 ret
  00000034: 83 AE 24 08 00 00  sub         dword ptr [esi+824h],0FFFFFF80h
            80
  0000003B: B8 01 00 00 00     mov         eax,1
  00000040: 83 AE 28 08 00 00  sub         dword ptr [esi+828h],0FFFFFF80h
            80
  00000047: 83 AE 2C 08 00 00  sub         dword ptr [esi+82Ch],0FFFFFF80h
            80
  0000004E: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  00000058: 5E                 pop         esi
  00000059: C3                 ret

?ReadAndParse@TFtEE4232H@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE4232H::ReadAndParse(void *,char *,char *,char *,char *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 53                 push        ebx
  00000004: 55                 push        ebp
  00000005: 56                 push        esi
  00000006: 8B 74 24 50        mov         esi,dword ptr [esp+50h]
  0000000A: 57                 push        edi
  0000000B: 8B F9              mov         edi,ecx
  0000000D: 85 F6              test        esi,esi
  0000000F: 0F 84 FA 02 00 00  je          0000030F
  00000015: 83 7C 24 58 00     cmp         dword ptr [esp+58h],0
  0000001A: 0F 84 EF 02 00 00  je          0000030F
  00000020: 8B 5C 24 5C        mov         ebx,dword ptr [esp+5Ch]
  00000024: 85 DB              test        ebx,ebx
  00000026: 0F 84 E3 02 00 00  je          0000030F
  0000002C: 8B 6C 24 60        mov         ebp,dword ptr [esp+60h]
  00000030: 85 ED              test        ebp,ebp
  00000032: 0F 84 D7 02 00 00  je          0000030F
  00000038: 83 7C 24 64 00     cmp         dword ptr [esp+64h],0
  0000003D: 0F 84 CC 02 00 00  je          0000030F
  00000043: 8B 07              mov         eax,dword ptr [edi]
  00000045: FF 10              call        dword ptr [eax]
  00000047: 85 C0              test        eax,eax
  00000049: 0F 84 B1 02 00 00  je          00000300
  0000004F: 66 8B 47 1C        mov         ax,word ptr [edi+1Ch]
  00000053: 8B CF              mov         ecx,edi
  00000055: 66 89 87 22 08 00  mov         word ptr [edi+822h],ax
            00
  0000005C: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  00000061: 0F B7 C0           movzx       eax,ax
  00000064: 66 85 C0           test        ax,ax
  00000067: 75 0F              jne         00000078
  00000069: 5F                 pop         edi
  0000006A: 5E                 pop         esi
  0000006B: 5D                 pop         ebp
  0000006C: B8 0E 00 00 00     mov         eax,0Eh
  00000071: 5B                 pop         ebx
  00000072: 83 C4 40           add         esp,40h
  00000075: C2 14 00           ret         14h
  00000078: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000007D: 66 3B C1           cmp         ax,cx
  00000080: 75 0F              jne         00000091
  00000082: 5F                 pop         edi
  00000083: 5E                 pop         esi
  00000084: 5D                 pop         ebp
  00000085: B8 0F 00 00 00     mov         eax,0Fh
  0000008A: 5B                 pop         ebx
  0000008B: 83 C4 40           add         esp,40h
  0000008E: C2 14 00           ret         14h
  00000091: 8B CF              mov         ecx,edi
  00000093: 66 89 46 04        mov         word ptr [esi+4],ax
  00000097: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  0000009C: 66 89 46 06        mov         word ptr [esi+6],ax
  000000A0: 8B CF              mov         ecx,edi
  000000A2: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  000000A6: C1 E8 03           shr         eax,3
  000000A9: 24 01              and         al,1
  000000AB: 88 46 08           mov         byte ptr [esi+8],al
  000000AE: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  000000B3: 8B CF              mov         ecx,edi
  000000B5: 66 89 46 0A        mov         word ptr [esi+0Ah],ax
  000000B9: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  000000BE: 8A C8              mov         cl,al
  000000C0: C0 E8 06           shr         al,6
  000000C3: 24 01              and         al,1
  000000C5: C0 E9 05           shr         cl,5
  000000C8: 88 46 0C           mov         byte ptr [esi+0Ch],al
  000000CB: 80 E1 01           and         cl,1
  000000CE: 88 4E 0D           mov         byte ptr [esi+0Dh],cl
  000000D1: 8B CF              mov         ecx,edi
  000000D3: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  000000D7: C1 E8 02           shr         eax,2
  000000DA: 24 01              and         al,1
  000000DC: 88 46 0E           mov         byte ptr [esi+0Eh],al
  000000DF: 8D 44 24 10        lea         eax,[esp+10h]
  000000E3: 50                 push        eax
  000000E4: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  000000E9: 8B 54 24 58        mov         edx,dword ptr [esp+58h]
  000000ED: 8D 4C 24 10        lea         ecx,[esp+10h]
  000000F1: 8B C1              mov         eax,ecx
  000000F3: 2B D0              sub         edx,eax
  000000F5: 8A 01              mov         al,byte ptr [ecx]
  000000F7: 8D 49 01           lea         ecx,[ecx+1]
  000000FA: 88 44 11 FF        mov         byte ptr [ecx+edx-1],al
  000000FE: 84 C0              test        al,al
  00000100: 75 F3              jne         000000F5
  00000102: 8D 44 24 10        lea         eax,[esp+10h]
  00000106: 8B CF              mov         ecx,edi
  00000108: 50                 push        eax
  00000109: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  0000010E: 8D 4C 24 10        lea         ecx,[esp+10h]
  00000112: 8B C1              mov         eax,ecx
  00000114: 2B D8              sub         ebx,eax
  00000116: 8A 01              mov         al,byte ptr [ecx]
  00000118: 8D 49 01           lea         ecx,[ecx+1]
  0000011B: 88 44 19 FF        mov         byte ptr [ecx+ebx-1],al
  0000011F: 84 C0              test        al,al
  00000121: 75 F3              jne         00000116
  00000123: 8D 44 24 10        lea         eax,[esp+10h]
  00000127: 8B CF              mov         ecx,edi
  00000129: 50                 push        eax
  0000012A: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  0000012F: 8D 4C 24 10        lea         ecx,[esp+10h]
  00000133: 8B C1              mov         eax,ecx
  00000135: 2B E8              sub         ebp,eax
  00000137: 8A 01              mov         al,byte ptr [ecx]
  00000139: 8D 49 01           lea         ecx,[ecx+1]
  0000013C: 88 44 29 FF        mov         byte ptr [ecx+ebp-1],al
  00000140: 84 C0              test        al,al
  00000142: 75 F3              jne         00000137
  00000144: 8D 44 24 10        lea         eax,[esp+10h]
  00000148: 8B CF              mov         ecx,edi
  0000014A: 50                 push        eax
  0000014B: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  00000150: 8B 54 24 64        mov         edx,dword ptr [esp+64h]
  00000154: 8D 4C 24 10        lea         ecx,[esp+10h]
  00000158: 8B C1              mov         eax,ecx
  0000015A: 2B D0              sub         edx,eax
  0000015C: 8D 64 24 00        lea         esp,[esp]
  00000160: 8A 01              mov         al,byte ptr [ecx]
  00000162: 8D 49 01           lea         ecx,[ecx+1]
  00000165: 88 44 11 FF        mov         byte ptr [ecx+edx-1],al
  00000169: 84 C0              test        al,al
  0000016B: 75 F3              jne         00000160
  0000016D: 0F B7 4F 04        movzx       ecx,word ptr [edi+4]
  00000171: 8A C1              mov         al,cl
  00000173: C0 E8 03           shr         al,3
  00000176: 24 01              and         al,1
  00000178: 88 46 20           mov         byte ptr [esi+20h],al
  0000017B: 8B C1              mov         eax,ecx
  0000017D: C1 E8 0B           shr         eax,0Bh
  00000180: 24 01              and         al,1
  00000182: 88 46 21           mov         byte ptr [esi+21h],al
  00000185: 8A C1              mov         al,cl
  00000187: C0 E8 07           shr         al,7
  0000018A: 24 01              and         al,1
  0000018C: C1 E9 0F           shr         ecx,0Fh
  0000018F: 88 46 22           mov         byte ptr [esi+22h],al
  00000192: 80 E1 01           and         cl,1
  00000195: 88 4E 23           mov         byte ptr [esi+23h],cl
  00000198: 0F B7 4F 0E        movzx       ecx,word ptr [edi+0Eh]
  0000019C: 8B C1              mov         eax,ecx
  0000019E: C1 E8 0C           shr         eax,0Ch
  000001A1: 24 01              and         al,1
  000001A3: 88 46 1C           mov         byte ptr [esi+1Ch],al
  000001A6: 8B C1              mov         eax,ecx
  000001A8: C1 E8 0D           shr         eax,0Dh
  000001AB: 24 01              and         al,1
  000001AD: 88 46 1D           mov         byte ptr [esi+1Dh],al
  000001B0: 8B C1              mov         eax,ecx
  000001B2: C1 E8 0E           shr         eax,0Eh
  000001B5: C1 E9 0F           shr         ecx,0Fh
  000001B8: 24 01              and         al,1
  000001BA: 80 E1 01           and         cl,1
  000001BD: 88 46 1E           mov         byte ptr [esi+1Eh],al
  000001C0: 88 4E 1F           mov         byte ptr [esi+1Fh],cl
  000001C3: 0F B7 4F 10        movzx       ecx,word ptr [edi+10h]
  000001C7: 8B C1              mov         eax,ecx
  000001C9: 83 E0 03           and         eax,3
  000001CC: 83 F8 03           cmp         eax,3
  000001CF: 75 06              jne         000001D7
  000001D1: C6 46 12 10        mov         byte ptr [esi+12h],10h
  000001D5: EB 1F              jmp         000001F6
  000001D7: 83 F8 02           cmp         eax,2
  000001DA: 75 06              jne         000001E2
  000001DC: C6 46 12 0C        mov         byte ptr [esi+12h],0Ch
  000001E0: EB 14              jmp         000001F6
  000001E2: 83 F8 01           cmp         eax,1
  000001E5: 75 06              jne         000001ED
  000001E7: C6 46 12 08        mov         byte ptr [esi+12h],8
  000001EB: EB 09              jmp         000001F6
  000001ED: 66 85 C0           test        ax,ax
  000001F0: 75 04              jne         000001F6
  000001F2: C6 46 12 04        mov         byte ptr [esi+12h],4
  000001F6: 8A C1              mov         al,cl
  000001F8: C0 E8 02           shr         al,2
  000001FB: 24 01              and         al,1
  000001FD: 88 46 10           mov         byte ptr [esi+10h],al
  00000200: 8A C1              mov         al,cl
  00000202: C0 E8 03           shr         al,3
  00000205: 24 01              and         al,1
  00000207: 88 46 11           mov         byte ptr [esi+11h],al
  0000020A: 8B C1              mov         eax,ecx
  0000020C: 83 E0 30           and         eax,30h
  0000020F: 83 F8 30           cmp         eax,30h
  00000212: 75 06              jne         0000021A
  00000214: C6 46 15 10        mov         byte ptr [esi+15h],10h
  00000218: EB 1F              jmp         00000239
  0000021A: 83 F8 20           cmp         eax,20h
  0000021D: 75 06              jne         00000225
  0000021F: C6 46 15 0C        mov         byte ptr [esi+15h],0Ch
  00000223: EB 14              jmp         00000239
  00000225: 83 F8 10           cmp         eax,10h
  00000228: 75 06              jne         00000230
  0000022A: C6 46 15 08        mov         byte ptr [esi+15h],8
  0000022E: EB 09              jmp         00000239
  00000230: 66 85 C0           test        ax,ax
  00000233: 75 04              jne         00000239
  00000235: C6 46 15 04        mov         byte ptr [esi+15h],4
  00000239: 8A C1              mov         al,cl
  0000023B: BA 00 03 00 00     mov         edx,300h
  00000240: C0 E8 06           shr         al,6
  00000243: 24 01              and         al,1
  00000245: 88 46 13           mov         byte ptr [esi+13h],al
  00000248: 8A C1              mov         al,cl
  0000024A: C0 E8 07           shr         al,7
  0000024D: 24 01              and         al,1
  0000024F: 88 46 14           mov         byte ptr [esi+14h],al
  00000252: 8B C1              mov         eax,ecx
  00000254: 25 00 03 00 00     and         eax,300h
  00000259: 66 3B C2           cmp         ax,dx
  0000025C: 75 06              jne         00000264
  0000025E: C6 46 18 10        mov         byte ptr [esi+18h],10h
  00000262: EB 29              jmp         0000028D
  00000264: BA 00 02 00 00     mov         edx,200h
  00000269: 66 3B C2           cmp         ax,dx
  0000026C: 75 06              jne         00000274
  0000026E: C6 46 18 0C        mov         byte ptr [esi+18h],0Ch
  00000272: EB 19              jmp         0000028D
  00000274: BA 00 01 00 00     mov         edx,100h
  00000279: 66 3B C2           cmp         ax,dx
  0000027C: 75 06              jne         00000284
  0000027E: C6 46 18 08        mov         byte ptr [esi+18h],8
  00000282: EB 09              jmp         0000028D
  00000284: 66 85 C0           test        ax,ax
  00000287: 75 04              jne         0000028D
  00000289: C6 46 18 04        mov         byte ptr [esi+18h],4
  0000028D: 8B C1              mov         eax,ecx
  0000028F: BA 00 30 00 00     mov         edx,3000h
  00000294: C1 E8 0A           shr         eax,0Ah
  00000297: 24 01              and         al,1
  00000299: 88 46 16           mov         byte ptr [esi+16h],al
  0000029C: 8B C1              mov         eax,ecx
  0000029E: C1 E8 0B           shr         eax,0Bh
  000002A1: 24 01              and         al,1
  000002A3: 88 46 17           mov         byte ptr [esi+17h],al
  000002A6: 8B C1              mov         eax,ecx
  000002A8: 25 00 30 00 00     and         eax,3000h
  000002AD: 66 3B C2           cmp         ax,dx
  000002B0: 75 06              jne         000002B8
  000002B2: C6 46 1B 10        mov         byte ptr [esi+1Bh],10h
  000002B6: EB 29              jmp         000002E1
  000002B8: BA 00 20 00 00     mov         edx,2000h
  000002BD: 66 3B C2           cmp         ax,dx
  000002C0: 75 06              jne         000002C8
  000002C2: C6 46 1B 0C        mov         byte ptr [esi+1Bh],0Ch
  000002C6: EB 19              jmp         000002E1
  000002C8: BA 00 10 00 00     mov         edx,1000h
  000002CD: 66 3B C2           cmp         ax,dx
  000002D0: 75 06              jne         000002D8
  000002D2: C6 46 1B 08        mov         byte ptr [esi+1Bh],8
  000002D6: EB 09              jmp         000002E1
  000002D8: 66 85 C0           test        ax,ax
  000002DB: 75 04              jne         000002E1
  000002DD: C6 46 1B 04        mov         byte ptr [esi+1Bh],4
  000002E1: 8B C1              mov         eax,ecx
  000002E3: C1 E9 0F           shr         ecx,0Fh
  000002E6: C1 E8 0E           shr         eax,0Eh
  000002E9: 80 E1 01           and         cl,1
  000002EC: 24 01              and         al,1
  000002EE: 88 4E 1A           mov         byte ptr [esi+1Ah],cl
  000002F1: 5F                 pop         edi
  000002F2: 88 46 19           mov         byte ptr [esi+19h],al
  000002F5: 33 C0              xor         eax,eax
  000002F7: 5E                 pop         esi
  000002F8: 5D                 pop         ebp
  000002F9: 5B                 pop         ebx
  000002FA: 83 C4 40           add         esp,40h
  000002FD: C2 14 00           ret         14h
  00000300: 5F                 pop         edi
  00000301: 5E                 pop         esi
  00000302: 5D                 pop         ebp
  00000303: B8 0B 00 00 00     mov         eax,0Bh
  00000308: 5B                 pop         ebx
  00000309: 83 C4 40           add         esp,40h
  0000030C: C2 14 00           ret         14h
  0000030F: 5F                 pop         edi
  00000310: 5E                 pop         esi
  00000311: 5D                 pop         ebp
  00000312: B8 06 00 00 00     mov         eax,6
  00000317: 5B                 pop         ebx
  00000318: 83 C4 40           add         esp,40h
  0000031B: C2 14 00           ret         14h

?ReadAndParse@TFtEE4232H@@UAEKPAX@Z (public: virtual unsigned long __thiscall TFtEE4232H::ReadAndParse(void *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 57                 push        edi
  00000004: 8B F9              mov         edi,ecx
  00000006: 8B 07              mov         eax,dword ptr [edi]
  00000008: FF 10              call        dword ptr [eax]
  0000000A: 85 C0              test        eax,eax
  0000000C: 75 0C              jne         0000001A
  0000000E: B8 0B 00 00 00     mov         eax,0Bh
  00000013: 5F                 pop         edi
  00000014: 83 C4 40           add         esp,40h
  00000017: C2 04 00           ret         4
  0000001A: 8B CF              mov         ecx,edi
  0000001C: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  00000021: 0F B7 C0           movzx       eax,ax
  00000024: 66 85 C0           test        ax,ax
  00000027: 75 0C              jne         00000035
  00000029: B8 0E 00 00 00     mov         eax,0Eh
  0000002E: 5F                 pop         edi
  0000002F: 83 C4 40           add         esp,40h
  00000032: C2 04 00           ret         4
  00000035: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000003A: 66 3B C1           cmp         ax,cx
  0000003D: 75 0C              jne         0000004B
  0000003F: B8 0F 00 00 00     mov         eax,0Fh
  00000044: 5F                 pop         edi
  00000045: 83 C4 40           add         esp,40h
  00000048: C2 04 00           ret         4
  0000004B: 56                 push        esi
  0000004C: 8B 74 24 4C        mov         esi,dword ptr [esp+4Ch]
  00000050: 8B CF              mov         ecx,edi
  00000052: 66 89 46 0C        mov         word ptr [esi+0Ch],ax
  00000056: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  0000005B: 66 89 46 0E        mov         word ptr [esi+0Eh],ax
  0000005F: 8B CF              mov         ecx,edi
  00000061: 8D 44 24 08        lea         eax,[esp+8]
  00000065: 50                 push        eax
  00000066: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  0000006B: 8B 4E 10           mov         ecx,dword ptr [esi+10h]
  0000006E: 85 C9              test        ecx,ecx
  00000070: 74 12              je          00000084
  00000072: 8D 54 24 08        lea         edx,[esp+8]
  00000076: 8A 02              mov         al,byte ptr [edx]
  00000078: 8D 52 01           lea         edx,[edx+1]
  0000007B: 88 01              mov         byte ptr [ecx],al
  0000007D: 8D 49 01           lea         ecx,[ecx+1]
  00000080: 84 C0              test        al,al
  00000082: 75 F2              jne         00000076
  00000084: 8D 44 24 08        lea         eax,[esp+8]
  00000088: 8B CF              mov         ecx,edi
  0000008A: 50                 push        eax
  0000008B: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  00000090: 8B 4E 14           mov         ecx,dword ptr [esi+14h]
  00000093: 85 C9              test        ecx,ecx
  00000095: 74 17              je          000000AE
  00000097: 8D 54 24 08        lea         edx,[esp+8]
  0000009B: EB 03              jmp         000000A0
  0000009D: 8D 49 00           lea         ecx,[ecx]
  000000A0: 8A 02              mov         al,byte ptr [edx]
  000000A2: 8D 52 01           lea         edx,[edx+1]
  000000A5: 88 01              mov         byte ptr [ecx],al
  000000A7: 8D 49 01           lea         ecx,[ecx+1]
  000000AA: 84 C0              test        al,al
  000000AC: 75 F2              jne         000000A0
  000000AE: 8D 44 24 08        lea         eax,[esp+8]
  000000B2: 8B CF              mov         ecx,edi
  000000B4: 50                 push        eax
  000000B5: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  000000BA: 8B 4E 18           mov         ecx,dword ptr [esi+18h]
  000000BD: 85 C9              test        ecx,ecx
  000000BF: 74 12              je          000000D3
  000000C1: 8D 54 24 08        lea         edx,[esp+8]
  000000C5: 8A 02              mov         al,byte ptr [edx]
  000000C7: 8D 52 01           lea         edx,[edx+1]
  000000CA: 88 01              mov         byte ptr [ecx],al
  000000CC: 8D 49 01           lea         ecx,[ecx+1]
  000000CF: 84 C0              test        al,al
  000000D1: 75 F2              jne         000000C5
  000000D3: 8D 44 24 08        lea         eax,[esp+8]
  000000D7: 8B CF              mov         ecx,edi
  000000D9: 50                 push        eax
  000000DA: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  000000DF: 8B 4E 1C           mov         ecx,dword ptr [esi+1Ch]
  000000E2: 85 C9              test        ecx,ecx
  000000E4: 74 18              je          000000FE
  000000E6: 8D 54 24 08        lea         edx,[esp+8]
  000000EA: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  000000F0: 8A 02              mov         al,byte ptr [edx]
  000000F2: 8D 52 01           lea         edx,[edx+1]
  000000F5: 88 01              mov         byte ptr [ecx],al
  000000F7: 8D 49 01           lea         ecx,[ecx+1]
  000000FA: 84 C0              test        al,al
  000000FC: 75 F2              jne         000000F0
  000000FE: 8B CF              mov         ecx,edi
  00000100: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  00000105: 8B CF              mov         ecx,edi
  00000107: 66 89 46 20        mov         word ptr [esi+20h],ax
  0000010B: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QAEGXZ
  00000110: 33 C9              xor         ecx,ecx
  00000112: 66 85 C0           test        ax,ax
  00000115: 0F 94 C1           sete        cl
  00000118: 66 89 4E 22        mov         word ptr [esi+22h],cx
  0000011C: 8B CF              mov         ecx,edi
  0000011E: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  00000123: 8A C8              mov         cl,al
  00000125: C7 46 28 00 00 00  mov         dword ptr [esi+28h],0
            00
  0000012C: C0 E8 05           shr         al,5
  0000012F: 24 01              and         al,1
  00000131: C0 E9 06           shr         cl,6
  00000134: 0F B6 C0           movzx       eax,al
  00000137: 80 E1 01           and         cl,1
  0000013A: 66 89 46 26        mov         word ptr [esi+26h],ax
  0000013E: 0F B6 C9           movzx       ecx,cl
  00000141: 66 89 4E 24        mov         word ptr [esi+24h],cx
  00000145: C7 46 2C 00 00 00  mov         dword ptr [esi+2Ch],0
            00
  0000014C: C7 46 30 00 00 00  mov         dword ptr [esi+30h],0
            00
  00000153: C7 46 38 00 00 00  mov         dword ptr [esi+38h],0
            00
  0000015A: C7 46 3C 00 00 00  mov         dword ptr [esi+3Ch],0
            00
  00000161: C7 46 40 00 00 00  mov         dword ptr [esi+40h],0
            00
  00000168: 66 C7 46 35 00 00  mov         word ptr [esi+35h],0
  0000016E: C6 46 37 00        mov         byte ptr [esi+37h],0
  00000172: C6 46 34 00        mov         byte ptr [esi+34h],0
  00000176: C7 46 44 00 00 00  mov         dword ptr [esi+44h],0
            00
  0000017D: C7 46 55 00 00 00  mov         dword ptr [esi+55h],0
            00
  00000184: C7 46 48 00 00 00  mov         dword ptr [esi+48h],0
            00
  0000018B: C7 46 4C 00 00 00  mov         dword ptr [esi+4Ch],0
            00
  00000192: C7 46 50 00 00 00  mov         dword ptr [esi+50h],0
            00
  00000199: C6 46 54 00        mov         byte ptr [esi+54h],0
  0000019D: C7 46 65 00 00 00  mov         dword ptr [esi+65h],0
            00
  000001A4: C7 46 69 00 00 00  mov         dword ptr [esi+69h],0
            00
  000001AB: 66 C7 46 5A 00 00  mov         word ptr [esi+5Ah],0
  000001B1: C6 46 59 00        mov         byte ptr [esi+59h],0
  000001B5: 66 C7 46 5D 00 00  mov         word ptr [esi+5Dh],0
  000001BB: C6 46 5C 00        mov         byte ptr [esi+5Ch],0
  000001BF: 66 C7 46 60 00 00  mov         word ptr [esi+60h],0
  000001C5: C6 46 5F 00        mov         byte ptr [esi+5Fh],0
  000001C9: 66 C7 46 63 00 00  mov         word ptr [esi+63h],0
  000001CF: C6 46 62 00        mov         byte ptr [esi+62h],0
  000001D3: 0F B7 4F 04        movzx       ecx,word ptr [edi+4]
  000001D7: 8A C1              mov         al,cl
  000001D9: C0 E8 03           shr         al,3
  000001DC: 24 01              and         al,1
  000001DE: 88 86 80 00 00 00  mov         byte ptr [esi+80h],al
  000001E4: 8B C1              mov         eax,ecx
  000001E6: C1 E8 0B           shr         eax,0Bh
  000001E9: 24 01              and         al,1
  000001EB: 88 86 81 00 00 00  mov         byte ptr [esi+81h],al
  000001F1: 8A C1              mov         al,cl
  000001F3: C0 E8 07           shr         al,7
  000001F6: 24 01              and         al,1
  000001F8: C1 E9 0F           shr         ecx,0Fh
  000001FB: 88 86 82 00 00 00  mov         byte ptr [esi+82h],al
  00000201: 80 E1 01           and         cl,1
  00000204: 88 8E 83 00 00 00  mov         byte ptr [esi+83h],cl
  0000020A: 0F B7 4F 0E        movzx       ecx,word ptr [edi+0Eh]
  0000020E: 8A C1              mov         al,cl
  00000210: C0 E8 02           shr         al,2
  00000213: 24 01              and         al,1
  00000215: 88 46 6E           mov         byte ptr [esi+6Eh],al
  00000218: 8A C1              mov         al,cl
  0000021A: C0 E8 03           shr         al,3
  0000021D: 24 01              and         al,1
  0000021F: 88 46 6F           mov         byte ptr [esi+6Fh],al
  00000222: 8B C1              mov         eax,ecx
  00000224: C1 E8 0C           shr         eax,0Ch
  00000227: 24 01              and         al,1
  00000229: 88 46 7C           mov         byte ptr [esi+7Ch],al
  0000022C: 8B C1              mov         eax,ecx
  0000022E: C1 E8 0D           shr         eax,0Dh
  00000231: 24 01              and         al,1
  00000233: 88 46 7D           mov         byte ptr [esi+7Dh],al
  00000236: 8B C1              mov         eax,ecx
  00000238: C1 E8 0E           shr         eax,0Eh
  0000023B: 24 01              and         al,1
  0000023D: C1 E9 0F           shr         ecx,0Fh
  00000240: 80 E1 01           and         cl,1
  00000243: 88 46 7E           mov         byte ptr [esi+7Eh],al
  00000246: 88 4E 7F           mov         byte ptr [esi+7Fh],cl
  00000249: 0F B7 4F 10        movzx       ecx,word ptr [edi+10h]
  0000024D: 8A C1              mov         al,cl
  0000024F: 24 03              and         al,3
  00000251: 3C 03              cmp         al,3
  00000253: 75 06              jne         0000025B
  00000255: C6 46 72 10        mov         byte ptr [esi+72h],10h
  00000259: EB 1B              jmp         00000276
  0000025B: F6 C1 02           test        cl,2
  0000025E: 74 06              je          00000266
  00000260: C6 46 72 0C        mov         byte ptr [esi+72h],0Ch
  00000264: EB 10              jmp         00000276
  00000266: F6 C1 01           test        cl,1
  00000269: 0F 95 C0           setne       al
  0000026C: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  00000273: 88 46 72           mov         byte ptr [esi+72h],al
  00000276: 8A C1              mov         al,cl
  00000278: C0 E8 02           shr         al,2
  0000027B: 24 01              and         al,1
  0000027D: 88 46 70           mov         byte ptr [esi+70h],al
  00000280: 8A C1              mov         al,cl
  00000282: C0 E8 03           shr         al,3
  00000285: 24 01              and         al,1
  00000287: 88 46 71           mov         byte ptr [esi+71h],al
  0000028A: 8A C1              mov         al,cl
  0000028C: 24 30              and         al,30h
  0000028E: 3C 30              cmp         al,30h
  00000290: 75 06              jne         00000298
  00000292: C6 46 75 10        mov         byte ptr [esi+75h],10h
  00000296: EB 1B              jmp         000002B3
  00000298: F6 C1 20           test        cl,20h
  0000029B: 74 06              je          000002A3
  0000029D: C6 46 75 0C        mov         byte ptr [esi+75h],0Ch
  000002A1: EB 10              jmp         000002B3
  000002A3: F6 C1 10           test        cl,10h
  000002A6: 0F 95 C0           setne       al
  000002A9: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  000002B0: 88 46 75           mov         byte ptr [esi+75h],al
  000002B3: 8A C1              mov         al,cl
  000002B5: C0 E8 06           shr         al,6
  000002B8: 24 01              and         al,1
  000002BA: 88 46 73           mov         byte ptr [esi+73h],al
  000002BD: 8A C1              mov         al,cl
  000002BF: C0 E8 07           shr         al,7
  000002C2: 24 01              and         al,1
  000002C4: 88 46 74           mov         byte ptr [esi+74h],al
  000002C7: 8B C1              mov         eax,ecx
  000002C9: 25 00 03 00 00     and         eax,300h
  000002CE: 3D 00 03 00 00     cmp         eax,300h
  000002D3: 75 06              jne         000002DB
  000002D5: C6 46 78 10        mov         byte ptr [esi+78h],10h
  000002D9: EB 21              jmp         000002FC
  000002DB: F7 C1 00 02 00 00  test        ecx,200h
  000002E1: 74 06              je          000002E9
  000002E3: C6 46 78 0C        mov         byte ptr [esi+78h],0Ch
  000002E7: EB 13              jmp         000002FC
  000002E9: F7 C1 00 01 00 00  test        ecx,100h
  000002EF: 0F 95 C0           setne       al
  000002F2: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  000002F9: 88 46 78           mov         byte ptr [esi+78h],al
  000002FC: 8B C1              mov         eax,ecx
  000002FE: C1 E8 0A           shr         eax,0Ah
  00000301: 24 01              and         al,1
  00000303: 88 46 76           mov         byte ptr [esi+76h],al
  00000306: 8B C1              mov         eax,ecx
  00000308: C1 E8 0B           shr         eax,0Bh
  0000030B: 24 01              and         al,1
  0000030D: 88 46 77           mov         byte ptr [esi+77h],al
  00000310: 8B C1              mov         eax,ecx
  00000312: 25 00 30 00 00     and         eax,3000h
  00000317: 3D 00 30 00 00     cmp         eax,3000h
  0000031C: 75 06              jne         00000324
  0000031E: C6 46 7B 10        mov         byte ptr [esi+7Bh],10h
  00000322: EB 21              jmp         00000345
  00000324: F7 C1 00 20 00 00  test        ecx,2000h
  0000032A: 74 06              je          00000332
  0000032C: C6 46 7B 0C        mov         byte ptr [esi+7Bh],0Ch
  00000330: EB 13              jmp         00000345
  00000332: F7 C1 00 10 00 00  test        ecx,1000h
  00000338: 0F 95 C0           setne       al
  0000033B: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  00000342: 88 46 7B           mov         byte ptr [esi+7Bh],al
  00000345: 8B C1              mov         eax,ecx
  00000347: C1 E9 0F           shr         ecx,0Fh
  0000034A: C1 E8 0E           shr         eax,0Eh
  0000034D: 80 E1 01           and         cl,1
  00000350: 24 01              and         al,1
  00000352: 88 46 79           mov         byte ptr [esi+79h],al
  00000355: 33 C0              xor         eax,eax
  00000357: 88 4E 7A           mov         byte ptr [esi+7Ah],cl
  0000035A: 5E                 pop         esi
  0000035B: 5F                 pop         edi
  0000035C: 83 C4 40           add         esp,40h
  0000035F: C2 04 00           ret         4

?SetRomType@TFtEE4232H@@UAEXXZ (public: virtual void __thiscall TFtEE4232H::SetRomType(void)):
  00000000: 51                 push        ecx
  00000001: 53                 push        ebx
  00000002: 56                 push        esi
  00000003: 8B F1              mov         esi,ecx
  00000005: C7 44 24 08 00 00  mov         dword ptr [esp+8],0
            00 00
  0000000D: 57                 push        edi
  0000000E: 8D 4E 04           lea         ecx,[esi+4]
  00000011: E8 00 00 00 00     call        ?Erase@TEeData@@QAEHXZ
  00000016: 68 C0 00 00 00     push        0C0h
  0000001B: 68 C0 00 00 00     push        0C0h
  00000020: 8D 4E 04           lea         ecx,[esi+4]
  00000023: E8 00 00 00 00     call        ?WriteWord@TEeData@@QAEHKG@Z
  00000028: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000002C: 50                 push        eax
  0000002D: 6A 00              push        0
  0000002F: 8D 4E 04           lea         ecx,[esi+4]
  00000032: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000037: BB C0 00 00 00     mov         ebx,0C0h
  0000003C: 66 39 5C 24 0C     cmp         word ptr [esp+0Ch],bx
  00000041: 75 05              jne         00000048
  00000043: 8D 43 86           lea         eax,[ebx-7Ah]
  00000046: EB 67              jmp         000000AF
  00000048: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000004C: 50                 push        eax
  0000004D: 6A 40              push        40h
  0000004F: 8D 4E 04           lea         ecx,[esi+4]
  00000052: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000057: 66 39 5C 24 0C     cmp         word ptr [esp+0Ch],bx
  0000005C: 75 1B              jne         00000079
  0000005E: B8 56 00 00 00     mov         eax,56h
  00000063: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  0000006D: 5F                 pop         edi
  0000006E: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  00000075: 5E                 pop         esi
  00000076: 5B                 pop         ebx
  00000077: 59                 pop         ecx
  00000078: C3                 ret
  00000079: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000007D: 50                 push        eax
  0000007E: 68 C0 00 00 00     push        0C0h
  00000083: 8D 4E 04           lea         ecx,[esi+4]
  00000086: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  0000008B: 66 39 5C 24 0C     cmp         word ptr [esp+0Ch],bx
  00000090: 75 1B              jne         000000AD
  00000092: B8 66 00 00 00     mov         eax,66h
  00000097: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  000000A1: 5F                 pop         edi
  000000A2: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  000000A9: 5E                 pop         esi
  000000AA: 5B                 pop         ebx
  000000AB: 59                 pop         ecx
  000000AC: C3                 ret
  000000AD: 33 C0              xor         eax,eax
  000000AF: 5F                 pop         edi
  000000B0: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],40h
            40 00 00 00
  000000BA: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  000000C4: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  000000CB: 5E                 pop         esi
  000000CC: 5B                 pop         ebx
  000000CD: 59                 pop         ecx
  000000CE: C3                 ret

??0TFtEE232R@@QAE@PAUft_private_vars@@@Z (public: __thiscall TFtEE232R::TFtEE232R(struct ft_private_vars *)):
  00000000: 56                 push        esi
  00000001: 8B 74 24 08        mov         esi,dword ptr [esp+8]
  00000005: 57                 push        edi
  00000006: 56                 push        esi
  00000007: 8B F9              mov         edi,ecx
  00000009: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAUft_private_vars@@@Z
  0000000E: 89 B7 34 08 00 00  mov         dword ptr [edi+834h],esi
  00000014: 8B C7              mov         eax,edi
  00000016: C7 07 00 00 00 00  mov         dword ptr [edi],offset ??_7TFtEE232R@@6B@
  0000001C: C7 87 30 08 00 00  mov         dword ptr [edi+830h],7Eh
            7E 00 00 00
  00000026: 5F                 pop         edi
  00000027: 5E                 pop         esi
  00000028: C2 04 00           ret         4

??0TFtEE232R@@QAE@PAX@Z (public: __thiscall TFtEE232R::TFtEE232R(void *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAX@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE232R@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001E: 5E                 pop         esi
  0000001F: C2 04 00           ret         4

??0TFtEE232R@@QAE@XZ (public: __thiscall TFtEE232R::TFtEE232R(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@XZ
  00000008: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE232R@@6B@
  0000000E: 8B C6              mov         eax,esi
  00000010: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001A: 5E                 pop         esi
  0000001B: C3                 ret

?GetChipID@TFtEE232R@@QAEKPAK@Z (public: unsigned long __thiscall TFtEE232R::GetChipID(unsigned long *)):
  00000000: 83 EC 08           sub         esp,8
  00000003: 8D 44 24 04        lea         eax,[esp+4]
  00000007: 56                 push        esi
  00000008: 8D 71 04           lea         esi,[ecx+4]
  0000000B: 50                 push        eax
  0000000C: 6A 43              push        43h
  0000000E: 8B CE              mov         ecx,esi
  00000010: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000015: 85 C0              test        eax,eax
  00000017: 74 30              je          00000049
  00000019: 8D 44 24 04        lea         eax,[esp+4]
  0000001D: 8B CE              mov         ecx,esi
  0000001F: 50                 push        eax
  00000020: 6A 44              push        44h
  00000022: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000027: 85 C0              test        eax,eax
  00000029: 74 1E              je          00000049
  0000002B: 0F B7 4C 24 04     movzx       ecx,word ptr [esp+4]
  00000030: 0F B7 44 24 08     movzx       eax,word ptr [esp+8]
  00000035: C1 E1 10           shl         ecx,10h
  00000038: 0B C8              or          ecx,eax
  0000003A: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  0000003E: 5E                 pop         esi
  0000003F: 89 08              mov         dword ptr [eax],ecx
  00000041: 33 C0              xor         eax,eax
  00000043: 83 C4 08           add         esp,8
  00000046: C2 04 00           ret         4
  00000049: B8 0B 00 00 00     mov         eax,0Bh
  0000004E: 5E                 pop         esi
  0000004F: 83 C4 08           add         esp,8
  00000052: C2 04 00           ret         4

?GetChipType@TFtEE232R@@QAEKPAK@Z (public: unsigned long __thiscall TFtEE232R::GetChipType(unsigned long *)):
  00000000: 51                 push        ecx
  00000001: 8D 04 24           lea         eax,[esp]
  00000004: 83 C1 04           add         ecx,4
  00000007: 50                 push        eax
  00000008: 6A 42              push        42h
  0000000A: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  0000000F: 85 C0              test        eax,eax
  00000011: 74 10              je          00000023
  00000013: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000017: 0F B7 0C 24        movzx       ecx,word ptr [esp]
  0000001B: 89 08              mov         dword ptr [eax],ecx
  0000001D: 33 C0              xor         eax,eax
  0000001F: 59                 pop         ecx
  00000020: C2 04 00           ret         4
  00000023: B8 0B 00 00 00     mov         eax,0Bh
  00000028: 59                 pop         ecx
  00000029: C2 04 00           ret         4

?Init@TFtEE232R@@UAEXPAX@Z (public: virtual void __thiscall TFtEE232R::Init(void *)):
  00000000: 83 EC 08           sub         esp,8
  00000003: 53                 push        ebx
  00000004: 55                 push        ebp
  00000005: 56                 push        esi
  00000006: 57                 push        edi
  00000007: 8B 7C 24 1C        mov         edi,dword ptr [esp+1Ch]
  0000000B: 8B F1              mov         esi,ecx
  0000000D: 68 00 08 00 00     push        800h
  00000012: 6A 00              push        0
  00000014: 8B 47 04           mov         eax,dword ptr [edi+4]
  00000017: 8D 5E 04           lea         ebx,[esi+4]
  0000001A: 8B 2F              mov         ebp,dword ptr [edi]
  0000001C: 53                 push        ebx
  0000001D: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  00000021: E8 00 00 00 00     call        _memset
  00000026: 83 C4 0C           add         esp,0Ch
  00000029: C6 03 00           mov         byte ptr [ebx],0
  0000002C: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000030: 8B CB              mov         ecx,ebx
  00000032: 50                 push        eax
  00000033: 6A 42              push        42h
  00000035: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  0000003A: 85 C0              test        eax,eax
  0000003C: 74 13              je          00000051
  0000003E: 0F B7 44 24 1C     movzx       eax,word ptr [esp+1Ch]
  00000043: A8 01              test        al,1
  00000045: 74 0A              je          00000051
  00000047: 3D FF FF 00 00     cmp         eax,0FFFFh
  0000004C: 74 03              je          00000051
  0000004E: 80 0B 01           or          byte ptr [ebx],1
  00000051: 80 7F 0C 00        cmp         byte ptr [edi+0Ch],0
  00000055: 74 03              je          0000005A
  00000057: 80 0B 02           or          byte ptr [ebx],2
  0000005A: 80 7F 0D 00        cmp         byte ptr [edi+0Dh],0
  0000005E: 74 03              je          00000063
  00000060: 80 0B 04           or          byte ptr [ebx],4
  00000063: 80 7F 1E 00        cmp         byte ptr [edi+1Eh],0
  00000067: 74 03              je          0000006C
  00000069: 80 0B 08           or          byte ptr [ebx],8
  0000006C: 8A 47 0E           mov         al,byte ptr [edi+0Eh]
  0000006F: 88 46 05           mov         byte ptr [esi+5],al
  00000072: C7 46 06 03 04 01  mov         dword ptr [esi+6],60010403h
            60
  00000079: C7 46 0A 00 06 A0  mov         dword ptr [esi+0Ah],2DA00600h
            2D
  00000080: C6 46 0E 00        mov         byte ptr [esi+0Eh],0
  00000084: 80 7F 0F 00        cmp         byte ptr [edi+0Fh],0
  00000088: 74 04              je          0000008E
  0000008A: C6 46 0E 04        mov         byte ptr [esi+0Eh],4
  0000008E: 80 7F 10 00        cmp         byte ptr [edi+10h],0
  00000092: 74 04              je          00000098
  00000094: 80 4E 0E 08        or          byte ptr [esi+0Eh],8
  00000098: C6 46 0F 00        mov         byte ptr [esi+0Fh],0
  0000009C: 80 7F 11 00        cmp         byte ptr [edi+11h],0
  000000A0: 74 04              je          000000A6
  000000A2: C6 46 0F 01        mov         byte ptr [esi+0Fh],1
  000000A6: 80 7F 12 00        cmp         byte ptr [edi+12h],0
  000000AA: 74 04              je          000000B0
  000000AC: 80 4E 0F 02        or          byte ptr [esi+0Fh],2
  000000B0: 80 7F 13 00        cmp         byte ptr [edi+13h],0
  000000B4: 74 04              je          000000BA
  000000B6: 80 4E 0F 04        or          byte ptr [esi+0Fh],4
  000000BA: 80 7F 14 00        cmp         byte ptr [edi+14h],0
  000000BE: 74 04              je          000000C4
  000000C0: 80 4E 0F 08        or          byte ptr [esi+0Fh],8
  000000C4: 80 7F 15 00        cmp         byte ptr [edi+15h],0
  000000C8: 74 04              je          000000CE
  000000CA: 80 4E 0F 10        or          byte ptr [esi+0Fh],10h
  000000CE: 80 7F 16 00        cmp         byte ptr [edi+16h],0
  000000D2: 74 04              je          000000D8
  000000D4: 80 4E 0F 20        or          byte ptr [esi+0Fh],20h
  000000D8: 80 7F 17 00        cmp         byte ptr [edi+17h],0
  000000DC: 74 04              je          000000E2
  000000DE: 80 4E 0F 40        or          byte ptr [esi+0Fh],40h
  000000E2: 80 7F 18 00        cmp         byte ptr [edi+18h],0
  000000E6: 74 04              je          000000EC
  000000E8: 80 4E 0F 80        or          byte ptr [esi+0Fh],80h
  000000EC: 8B CD              mov         ecx,ebp
  000000EE: B8 00 02 00 00     mov         eax,200h
  000000F3: 66 89 46 10        mov         word ptr [esi+10h],ax
  000000F7: C6 46 12 18        mov         byte ptr [esi+12h],18h
  000000FB: 8D 51 01           lea         edx,[ecx+1]
  000000FE: 8B FF              mov         edi,edi
  00000100: 8A 01              mov         al,byte ptr [ecx]
  00000102: 41                 inc         ecx
  00000103: 84 C0              test        al,al
  00000105: 75 F9              jne         00000100
  00000107: 8B 5C 24 10        mov         ebx,dword ptr [esp+10h]
  0000010B: 2B CA              sub         ecx,edx
  0000010D: FE C1              inc         cl
  0000010F: 02 C9              add         cl,cl
  00000111: 88 4E 13           mov         byte ptr [esi+13h],cl
  00000114: 80 C1 18           add         cl,18h
  00000117: 88 4E 14           mov         byte ptr [esi+14h],cl
  0000011A: 8B CB              mov         ecx,ebx
  0000011C: 8D 51 01           lea         edx,[ecx+1]
  0000011F: 90                 nop
  00000120: 8A 01              mov         al,byte ptr [ecx]
  00000122: 41                 inc         ecx
  00000123: 84 C0              test        al,al
  00000125: 75 F9              jne         00000120
  00000127: 0F B6 46 14        movzx       eax,byte ptr [esi+14h]
  0000012B: 2B CA              sub         ecx,edx
  0000012D: FE C1              inc         cl
  0000012F: C6 46 17 02        mov         byte ptr [esi+17h],2
  00000133: 02 C9              add         cl,cl
  00000135: 02 C1              add         al,cl
  00000137: 88 4E 15           mov         byte ptr [esi+15h],cl
  0000013A: 88 46 16           mov         byte ptr [esi+16h],al
  0000013D: 8B CE              mov         ecx,esi
  0000013F: 55                 push        ebp
  00000140: 8D 46 1C           lea         eax,[esi+1Ch]
  00000143: 50                 push        eax
  00000144: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000149: 0F BE 46 14        movsx       eax,byte ptr [esi+14h]
  0000014D: 8B CE              mov         ecx,esi
  0000014F: 83 C0 04           add         eax,4
  00000152: 53                 push        ebx
  00000153: 03 C6              add         eax,esi
  00000155: 50                 push        eax
  00000156: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  0000015B: 0F BE 46 16        movsx       eax,byte ptr [esi+16h]
  0000015F: 8B CE              mov         ecx,esi
  00000161: 83 C0 04           add         eax,4
  00000164: 68 00 00 00 00     push        offset ??_C@_00CNPNBAHC@?$AA@
  00000169: 03 C6              add         eax,esi
  0000016B: 50                 push        eax
  0000016C: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000171: 8A 4E 12           mov         cl,byte ptr [esi+12h]
  00000174: 8A 56 14           mov         dl,byte ptr [esi+14h]
  00000177: 8A 5E 16           mov         bl,byte ptr [esi+16h]
  0000017A: 0F BE C1           movsx       eax,cl
  0000017D: 80 C9 80           or          cl,80h
  00000180: 89 86 24 08 00 00  mov         dword ptr [esi+824h],eax
  00000186: 0F BE C2           movsx       eax,dl
  00000189: 80 CA 80           or          dl,80h
  0000018C: 89 86 28 08 00 00  mov         dword ptr [esi+828h],eax
  00000192: 88 4E 12           mov         byte ptr [esi+12h],cl
  00000195: 0F BE C3           movsx       eax,bl
  00000198: 80 CB 80           or          bl,80h
  0000019B: 89 86 2C 08 00 00  mov         dword ptr [esi+82Ch],eax
  000001A1: 88 56 14           mov         byte ptr [esi+14h],dl
  000001A4: 88 5E 16           mov         byte ptr [esi+16h],bl
  000001A7: 8A 4F 19           mov         cl,byte ptr [edi+19h]
  000001AA: 88 4E 18           mov         byte ptr [esi+18h],cl
  000001AD: 0F B6 47 1A        movzx       eax,byte ptr [edi+1Ah]
  000001B1: C0 E0 04           shl         al,4
  000001B4: 0A C1              or          al,cl
  000001B6: C7 44 24 14 02 03  mov         dword ptr [esp+14h],302h
            00 00
  000001BE: 88 46 18           mov         byte ptr [esi+18h],al
  000001C1: 8A 4F 1B           mov         cl,byte ptr [edi+1Bh]
  000001C4: 88 4E 19           mov         byte ptr [esi+19h],cl
  000001C7: 0F B6 47 1C        movzx       eax,byte ptr [edi+1Ch]
  000001CB: C0 E0 04           shl         al,4
  000001CE: 0A C1              or          al,cl
  000001D0: 8B CE              mov         ecx,esi
  000001D2: 88 46 19           mov         byte ptr [esi+19h],al
  000001D5: 0F B6 47 1D        movzx       eax,byte ptr [edi+1Dh]
  000001D9: 88 46 1A           mov         byte ptr [esi+1Ah],al
  000001DC: 8D 44 24 14        lea         eax,[esp+14h]
  000001E0: 50                 push        eax
  000001E1: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  000001E6: 6A 00              push        0
  000001E8: 8B CE              mov         ecx,esi
  000001EA: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  000001EF: 8B 06              mov         eax,dword ptr [esi]
  000001F1: 8B CE              mov         ecx,esi
  000001F3: FF 50 04           call        dword ptr [eax+4]
  000001F6: 5F                 pop         edi
  000001F7: C7 86 08 08 00 00  mov         dword ptr [esi+808h],0
            00 00 00 00
  00000201: 5E                 pop         esi
  00000202: 5D                 pop         ebp
  00000203: 5B                 pop         ebx
  00000204: 83 C4 08           add         esp,8
  00000207: C2 04 00           ret         4

?MoveStrings@TFtEE232R@@UAEXXZ (public: virtual void __thiscall TFtEE232R::MoveStrings(void)):
  00000000: C3                 ret

?Program@TFtEE232R@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE232R::Program(void *,char *,char *,char *,char *)):
  00000000: 81 EC A8 00 00 00  sub         esp,0A8h
  00000006: 83 BC 24 B0 00 00  cmp         dword ptr [esp+0B0h],0
            00 00
  0000000E: 56                 push        esi
  0000000F: 8B F1              mov         esi,ecx
  00000011: C6 44 24 07 80     mov         byte ptr [esp+7],80h
  00000016: 0F 84 BB 03 00 00  je          000003D7
  0000001C: 55                 push        ebp
  0000001D: 8B AC 24 BC 00 00  mov         ebp,dword ptr [esp+0BCh]
            00
  00000024: 85 ED              test        ebp,ebp
  00000026: 0F 84 9B 03 00 00  je          000003C7
  0000002C: 83 BC 24 C0 00 00  cmp         dword ptr [esp+0C0h],0
            00 00
  00000034: 0F 84 8D 03 00 00  je          000003C7
  0000003A: 57                 push        edi
  0000003B: 8B BC 24 B8 00 00  mov         edi,dword ptr [esp+0B8h]
            00
  00000042: 66 83 7F 04 00     cmp         word ptr [edi+4],0
  00000047: 0F 84 69 03 00 00  je          000003B6
  0000004D: 66 83 7F 06 00     cmp         word ptr [edi+6],0
  00000052: 0F 84 5E 03 00 00  je          000003B6
  00000058: 80 7F 1A 0C        cmp         byte ptr [edi+1Ah],0Ch
  0000005C: 0F 87 54 03 00 00  ja          000003B6
  00000062: 80 7F 1B 0C        cmp         byte ptr [edi+1Bh],0Ch
  00000066: 0F 87 4A 03 00 00  ja          000003B6
  0000006C: 80 7F 1C 0C        cmp         byte ptr [edi+1Ch],0Ch
  00000070: 0F 87 40 03 00 00  ja          000003B6
  00000076: 80 7F 1D 0C        cmp         byte ptr [edi+1Dh],0Ch
  0000007A: 0F 87 36 03 00 00  ja          000003B6
  00000080: 80 7F 1E 0C        cmp         byte ptr [edi+1Eh],0Ch
  00000084: 0F 87 2C 03 00 00  ja          000003B6
  0000008A: 53                 push        ebx
  0000008B: 68 00 08 00 00     push        800h
  00000090: 8D 5E 04           lea         ebx,[esi+4]
  00000093: 6A 00              push        0
  00000095: 53                 push        ebx
  00000096: E8 00 00 00 00     call        _memset
  0000009B: 8B 06              mov         eax,dword ptr [esi]
  0000009D: 83 C4 0C           add         esp,0Ch
  000000A0: 8B CE              mov         ecx,esi
  000000A2: FF 50 20           call        dword ptr [eax+20h]
  000000A5: 8B 8C 24 CC 00 00  mov         ecx,dword ptr [esp+0CCh]
            00
  000000AC: B8 00 06 00 00     mov         eax,600h
  000000B1: 66 89 46 0A        mov         word ptr [esi+0Ah],ax
  000000B5: 85 C9              test        ecx,ecx
  000000B7: 74 1B              je          000000D4
  000000B9: 8D 51 01           lea         edx,[ecx+1]
  000000BC: 8D 64 24 00        lea         esp,[esp]
  000000C0: 8A 01              mov         al,byte ptr [ecx]
  000000C2: 41                 inc         ecx
  000000C3: 84 C0              test        al,al
  000000C5: 75 F9              jne         000000C0
  000000C7: 2B CA              sub         ecx,edx
  000000C9: 74 09              je          000000D4
  000000CB: 8B AC 24 CC 00 00  mov         ebp,dword ptr [esp+0CCh]
            00
  000000D2: EB 32              jmp         00000106
  000000D4: 0F B7 47 06        movzx       eax,word ptr [edi+6]
  000000D8: 25 03 00 00 80     and         eax,80000003h
  000000DD: 79 05              jns         000000E4
  000000DF: 48                 dec         eax
  000000E0: 83 C8 FC           or          eax,0FFFFFFFCh
  000000E3: 40                 inc         eax
  000000E4: 50                 push        eax
  000000E5: 55                 push        ebp
  000000E6: 8D 4C 24 28        lea         ecx,[esp+28h]
  000000EA: E8 00 00 00 00     call        ??0TSerialNumber@@QAE@PADG@Z
  000000EF: 8D 44 24 14        lea         eax,[esp+14h]
  000000F3: 50                 push        eax
  000000F4: 8D 44 24 3C        lea         eax,[esp+3Ch]
  000000F8: 50                 push        eax
  000000F9: 8D 4C 24 28        lea         ecx,[esp+28h]
  000000FD: E8 00 00 00 00     call        ?Get@TSerialNumber@@QAEHPADPAH@Z
  00000102: 8D 6C 24 38        lea         ebp,[esp+38h]
  00000106: 0F B7 47 04        movzx       eax,word ptr [edi+4]
  0000010A: 8B CE              mov         ecx,esi
  0000010C: 50                 push        eax
  0000010D: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QAEXG@Z
  00000112: 0F B7 47 06        movzx       eax,word ptr [edi+6]
  00000116: 8B CE              mov         ecx,esi
  00000118: 50                 push        eax
  00000119: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QAEXG@Z
  0000011E: 80 7F 08 00        cmp         byte ptr [edi+8],0
  00000122: 74 04              je          00000128
  00000124: 80 4E 0E 08        or          byte ptr [esi+0Eh],8
  00000128: 0F B7 47 0A        movzx       eax,word ptr [edi+0Ah]
  0000012C: 8B CE              mov         ecx,esi
  0000012E: 50                 push        eax
  0000012F: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QAEXH@Z
  00000134: 80 7F 0C 00        cmp         byte ptr [edi+0Ch],0
  00000138: B9 C0 00 00 00     mov         ecx,0C0h
  0000013D: 0F B6 44 24 13     movzx       eax,byte ptr [esp+13h]
  00000142: 0F 45 C1           cmovne      eax,ecx
  00000145: 80 7F 0D 00        cmp         byte ptr [edi+0Dh],0
  00000149: 88 44 24 14        mov         byte ptr [esp+14h],al
  0000014D: 74 06              je          00000155
  0000014F: 0C 20              or          al,20h
  00000151: 88 44 24 14        mov         byte ptr [esp+14h],al
  00000155: FF 74 24 14        push        dword ptr [esp+14h]
  00000159: 8B CE              mov         ecx,esi
  0000015B: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QAEXE@Z
  00000160: 80 7F 0E 00        cmp         byte ptr [edi+0Eh],0
  00000164: 74 04              je          0000016A
  00000166: 80 4E 0E 04        or          byte ptr [esi+0Eh],4
  0000016A: 8B 8C 24 C0 00 00  mov         ecx,dword ptr [esp+0C0h]
            00
  00000171: C6 46 12 18        mov         byte ptr [esi+12h],18h
  00000175: 8D 51 01           lea         edx,[ecx+1]
  00000178: 8A 01              mov         al,byte ptr [ecx]
  0000017A: 41                 inc         ecx
  0000017B: 84 C0              test        al,al
  0000017D: 75 F9              jne         00000178
  0000017F: 2B CA              sub         ecx,edx
  00000181: FE C1              inc         cl
  00000183: 02 C9              add         cl,cl
  00000185: 88 4E 13           mov         byte ptr [esi+13h],cl
  00000188: 80 C1 18           add         cl,18h
  0000018B: 88 4E 14           mov         byte ptr [esi+14h],cl
  0000018E: 8B 8C 24 C8 00 00  mov         ecx,dword ptr [esp+0C8h]
            00
  00000195: 8D 51 01           lea         edx,[ecx+1]
  00000198: 8A 01              mov         al,byte ptr [ecx]
  0000019A: 41                 inc         ecx
  0000019B: 84 C0              test        al,al
  0000019D: 75 F9              jne         00000198
  0000019F: 8A 46 14           mov         al,byte ptr [esi+14h]
  000001A2: 2B CA              sub         ecx,edx
  000001A4: FE C1              inc         cl
  000001A6: 02 C9              add         cl,cl
  000001A8: 02 C1              add         al,cl
  000001AA: 88 4E 15           mov         byte ptr [esi+15h],cl
  000001AD: 8B CD              mov         ecx,ebp
  000001AF: 88 46 16           mov         byte ptr [esi+16h],al
  000001B2: 8D 51 01           lea         edx,[ecx+1]
  000001B5: 8A 01              mov         al,byte ptr [ecx]
  000001B7: 41                 inc         ecx
  000001B8: 84 C0              test        al,al
  000001BA: 75 F9              jne         000001B5
  000001BC: FF B4 24 C0 00 00  push        dword ptr [esp+0C0h]
            00
  000001C3: 2B CA              sub         ecx,edx
  000001C5: 8D 46 1C           lea         eax,[esi+1Ch]
  000001C8: FE C1              inc         cl
  000001CA: 02 C9              add         cl,cl
  000001CC: 88 4E 17           mov         byte ptr [esi+17h],cl
  000001CF: 8B CE              mov         ecx,esi
  000001D1: 50                 push        eax
  000001D2: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001D7: 0F B6 46 14        movzx       eax,byte ptr [esi+14h]
  000001DB: 8B CE              mov         ecx,esi
  000001DD: FF B4 24 C8 00 00  push        dword ptr [esp+0C8h]
            00
  000001E4: 83 C0 04           add         eax,4
  000001E7: 03 C6              add         eax,esi
  000001E9: 50                 push        eax
  000001EA: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001EF: 0F B6 46 16        movzx       eax,byte ptr [esi+16h]
  000001F3: 8B CE              mov         ecx,esi
  000001F5: 83 C0 04           add         eax,4
  000001F8: 55                 push        ebp
  000001F9: 03 C6              add         eax,esi
  000001FB: 50                 push        eax
  000001FC: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000201: 0F BE 46 12        movsx       eax,byte ptr [esi+12h]
  00000205: 8B CE              mov         ecx,esi
  00000207: 89 86 24 08 00 00  mov         dword ptr [esi+824h],eax
  0000020D: 0F BE 46 14        movsx       eax,byte ptr [esi+14h]
  00000211: 89 86 28 08 00 00  mov         dword ptr [esi+828h],eax
  00000217: 0F BE 46 16        movsx       eax,byte ptr [esi+16h]
  0000021B: 89 86 2C 08 00 00  mov         dword ptr [esi+82Ch],eax
  00000221: 80 4E 12 80        or          byte ptr [esi+12h],80h
  00000225: 80 4E 14 80        or          byte ptr [esi+14h],80h
  00000229: 80 4E 16 80        or          byte ptr [esi+16h],80h
  0000022D: 8B 06              mov         eax,dword ptr [esi]
  0000022F: FF 50 24           call        dword ptr [eax+24h]
  00000232: 80 7F 11 00        cmp         byte ptr [edi+11h],0
  00000236: B8 00 40 00 00     mov         eax,4000h
  0000023B: B9 02 40 00 00     mov         ecx,4002h
  00000240: 0F 45 C1           cmovne      eax,ecx
  00000243: 80 7F 10 00        cmp         byte ptr [edi+10h],0
  00000247: 74 03              je          0000024C
  00000249: 83 C8 04           or          eax,4
  0000024C: 80 7F 1F 00        cmp         byte ptr [edi+1Fh],0
  00000250: 75 03              jne         00000255
  00000252: 83 C8 08           or          eax,8
  00000255: 66 89 03           mov         word ptr [ebx],ax
  00000258: 8B CE              mov         ecx,esi
  0000025A: 8D 44 24 14        lea         eax,[esp+14h]
  0000025E: C7 44 24 14 00 00  mov         dword ptr [esp+14h],0
            00 00
  00000266: 50                 push        eax
  00000267: E8 00 00 00 00     call        ?GetChipType@TFtEE232R@@QAEKPAK@Z
  0000026C: 85 C0              test        eax,eax
  0000026E: 75 12              jne         00000282
  00000270: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000274: A8 01              test        al,1
  00000276: 74 0A              je          00000282
  00000278: 3D FF FF 00 00     cmp         eax,0FFFFh
  0000027D: 74 03              je          00000282
  0000027F: 80 0B 01           or          byte ptr [ebx],1
  00000282: C6 46 0F 00        mov         byte ptr [esi+0Fh],0
  00000286: 80 7F 12 00        cmp         byte ptr [edi+12h],0
  0000028A: 74 04              je          00000290
  0000028C: C6 46 0F 01        mov         byte ptr [esi+0Fh],1
  00000290: 80 7F 13 00        cmp         byte ptr [edi+13h],0
  00000294: 74 04              je          0000029A
  00000296: 80 4E 0F 02        or          byte ptr [esi+0Fh],2
  0000029A: 80 7F 14 00        cmp         byte ptr [edi+14h],0
  0000029E: 74 04              je          000002A4
  000002A0: 80 4E 0F 04        or          byte ptr [esi+0Fh],4
  000002A4: 80 7F 15 00        cmp         byte ptr [edi+15h],0
  000002A8: 74 04              je          000002AE
  000002AA: 80 4E 0F 08        or          byte ptr [esi+0Fh],8
  000002AE: 80 7F 16 00        cmp         byte ptr [edi+16h],0
  000002B2: 74 04              je          000002B8
  000002B4: 80 4E 0F 10        or          byte ptr [esi+0Fh],10h
  000002B8: 80 7F 17 00        cmp         byte ptr [edi+17h],0
  000002BC: 74 04              je          000002C2
  000002BE: 80 4E 0F 20        or          byte ptr [esi+0Fh],20h
  000002C2: 80 7F 18 00        cmp         byte ptr [edi+18h],0
  000002C6: 74 04              je          000002CC
  000002C8: 80 4E 0F 40        or          byte ptr [esi+0Fh],40h
  000002CC: 80 7F 19 00        cmp         byte ptr [edi+19h],0
  000002D0: 74 04              je          000002D6
  000002D2: 80 4E 0F 80        or          byte ptr [esi+0Fh],80h
  000002D6: B8 00 02 00 00     mov         eax,200h
  000002DB: C7 44 24 18 02 03  mov         dword ptr [esp+18h],302h
            00 00
  000002E3: 66 89 46 10        mov         word ptr [esi+10h],ax
  000002E7: 8A 4F 1A           mov         cl,byte ptr [edi+1Ah]
  000002EA: 88 4E 18           mov         byte ptr [esi+18h],cl
  000002ED: 0F B6 47 1B        movzx       eax,byte ptr [edi+1Bh]
  000002F1: C0 E0 04           shl         al,4
  000002F4: 0A C1              or          al,cl
  000002F6: 88 46 18           mov         byte ptr [esi+18h],al
  000002F9: 8A 4F 1C           mov         cl,byte ptr [edi+1Ch]
  000002FC: 88 4E 19           mov         byte ptr [esi+19h],cl
  000002FF: 0F B6 47 1D        movzx       eax,byte ptr [edi+1Dh]
  00000303: C0 E0 04           shl         al,4
  00000306: 0A C1              or          al,cl
  00000308: 8B CE              mov         ecx,esi
  0000030A: 88 46 19           mov         byte ptr [esi+19h],al
  0000030D: 0F B6 47 1E        movzx       eax,byte ptr [edi+1Eh]
  00000311: 88 46 1A           mov         byte ptr [esi+1Ah],al
  00000314: 8D 44 24 18        lea         eax,[esp+18h]
  00000318: 50                 push        eax
  00000319: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  0000031E: 6A 00              push        0
  00000320: 8B CE              mov         ecx,esi
  00000322: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  00000327: 8B 06              mov         eax,dword ptr [esi]
  00000329: 8B CE              mov         ecx,esi
  0000032B: FF 50 04           call        dword ptr [eax+4]
  0000032E: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000332: C7 86 08 08 00 00  mov         dword ptr [esi+808h],0
            00 00 00 00
  0000033C: 50                 push        eax
  0000033D: FF B6 34 08 00 00  push        dword ptr [esi+834h]
  00000343: E8 00 00 00 00     call        _FT_GetLatencyTimer@8
  00000348: 6A 77              push        77h
  0000034A: FF B6 34 08 00 00  push        dword ptr [esi+834h]
  00000350: E8 00 00 00 00     call        _FT_SetLatencyTimer@8
  00000355: 8B CB              mov         ecx,ebx
  00000357: E8 00 00 00 00     call        ?Erase@TEeData@@QAEHXZ
  0000035C: 85 C0              test        eax,eax
  0000035E: 75 12              jne         00000372
  00000360: 5B                 pop         ebx
  00000361: 5F                 pop         edi
  00000362: 5D                 pop         ebp
  00000363: B8 0D 00 00 00     mov         eax,0Dh
  00000368: 5E                 pop         esi
  00000369: 81 C4 A8 00 00 00  add         esp,0A8h
  0000036F: C2 14 00           ret         14h
  00000372: 8B CB              mov         ecx,ebx
  00000374: E8 00 00 00 00     call        ?Write@TEeData@@QAEHXZ
  00000379: 85 C0              test        eax,eax
  0000037B: 74 0B              je          00000388
  0000037D: 8B CB              mov         ecx,ebx
  0000037F: E8 00 00 00 00     call        ?Confirm@TEeData@@QAEHXZ
  00000384: 85 C0              test        eax,eax
  00000386: 75 12              jne         0000039A
  00000388: 5B                 pop         ebx
  00000389: 5F                 pop         edi
  0000038A: 5D                 pop         ebp
  0000038B: B8 0C 00 00 00     mov         eax,0Ch
  00000390: 5E                 pop         esi
  00000391: 81 C4 A8 00 00 00  add         esp,0A8h
  00000397: C2 14 00           ret         14h
  0000039A: FF 74 24 1C        push        dword ptr [esp+1Ch]
  0000039E: FF B6 34 08 00 00  push        dword ptr [esi+834h]
  000003A4: E8 00 00 00 00     call        _FT_SetLatencyTimer@8
  000003A9: 5B                 pop         ebx
  000003AA: 5F                 pop         edi
  000003AB: 5D                 pop         ebp
  000003AC: 5E                 pop         esi
  000003AD: 81 C4 A8 00 00 00  add         esp,0A8h
  000003B3: C2 14 00           ret         14h
  000003B6: 5F                 pop         edi
  000003B7: 5D                 pop         ebp
  000003B8: B8 06 00 00 00     mov         eax,6
  000003BD: 5E                 pop         esi
  000003BE: 81 C4 A8 00 00 00  add         esp,0A8h
  000003C4: C2 14 00           ret         14h
  000003C7: 5D                 pop         ebp
  000003C8: B8 06 00 00 00     mov         eax,6
  000003CD: 5E                 pop         esi
  000003CE: 81 C4 A8 00 00 00  add         esp,0A8h
  000003D4: C2 14 00           ret         14h
  000003D7: B8 06 00 00 00     mov         eax,6
  000003DC: 5E                 pop         esi
  000003DD: 81 C4 A8 00 00 00  add         esp,0A8h
  000003E3: C2 14 00           ret         14h

?ReadAndParse@TFtEE232R@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE232R::ReadAndParse(void *,char *,char *,char *,char *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 53                 push        ebx
  00000004: 55                 push        ebp
  00000005: 56                 push        esi
  00000006: 8B F1              mov         esi,ecx
  00000008: 8B 4C 24 50        mov         ecx,dword ptr [esp+50h]
  0000000C: 57                 push        edi
  0000000D: 85 C9              test        ecx,ecx
  0000000F: 0F 84 26 02 00 00  je          0000023B
  00000015: 83 7C 24 58 00     cmp         dword ptr [esp+58h],0
  0000001A: 0F 84 1B 02 00 00  je          0000023B
  00000020: 8B 7C 24 5C        mov         edi,dword ptr [esp+5Ch]
  00000024: 85 FF              test        edi,edi
  00000026: 0F 84 0F 02 00 00  je          0000023B
  0000002C: 8B 5C 24 60        mov         ebx,dword ptr [esp+60h]
  00000030: 85 DB              test        ebx,ebx
  00000032: 0F 84 03 02 00 00  je          0000023B
  00000038: 8B 6C 24 64        mov         ebp,dword ptr [esp+64h]
  0000003C: 85 ED              test        ebp,ebp
  0000003E: 0F 84 F7 01 00 00  je          0000023B
  00000044: 8B 06              mov         eax,dword ptr [esi]
  00000046: 8B CE              mov         ecx,esi
  00000048: FF 10              call        dword ptr [eax]
  0000004A: 85 C0              test        eax,eax
  0000004C: 0F 84 DA 01 00 00  je          0000022C
  00000052: 8B CE              mov         ecx,esi
  00000054: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  00000059: 0F B7 C8           movzx       ecx,ax
  0000005C: 66 85 C9           test        cx,cx
  0000005F: 75 0F              jne         00000070
  00000061: 5F                 pop         edi
  00000062: 5E                 pop         esi
  00000063: 5D                 pop         ebp
  00000064: B8 0E 00 00 00     mov         eax,0Eh
  00000069: 5B                 pop         ebx
  0000006A: 83 C4 40           add         esp,40h
  0000006D: C2 14 00           ret         14h
  00000070: B8 FF FF 00 00     mov         eax,0FFFFh
  00000075: 66 3B C8           cmp         cx,ax
  00000078: 75 0F              jne         00000089
  0000007A: 5F                 pop         edi
  0000007B: 5E                 pop         esi
  0000007C: 5D                 pop         ebp
  0000007D: B8 0F 00 00 00     mov         eax,0Fh
  00000082: 5B                 pop         ebx
  00000083: 83 C4 40           add         esp,40h
  00000086: C2 14 00           ret         14h
  00000089: 8B 44 24 54        mov         eax,dword ptr [esp+54h]
  0000008D: 66 89 48 04        mov         word ptr [eax+4],cx
  00000091: 8B CE              mov         ecx,esi
  00000093: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  00000098: 8B 4C 24 54        mov         ecx,dword ptr [esp+54h]
  0000009C: 66 89 41 06        mov         word ptr [ecx+6],ax
  000000A0: 0F BE 46 0E        movsx       eax,byte ptr [esi+0Eh]
  000000A4: C1 E8 03           shr         eax,3
  000000A7: 24 01              and         al,1
  000000A9: 88 41 08           mov         byte ptr [ecx+8],al
  000000AC: 8B CE              mov         ecx,esi
  000000AE: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  000000B3: 8B 4C 24 54        mov         ecx,dword ptr [esp+54h]
  000000B7: 66 89 41 0A        mov         word ptr [ecx+0Ah],ax
  000000BB: 8B CE              mov         ecx,esi
  000000BD: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  000000C2: 8B 54 24 54        mov         edx,dword ptr [esp+54h]
  000000C6: 8A C8              mov         cl,al
  000000C8: C0 E8 06           shr         al,6
  000000CB: 24 01              and         al,1
  000000CD: C0 E9 05           shr         cl,5
  000000D0: 80 E1 01           and         cl,1
  000000D3: 88 42 0C           mov         byte ptr [edx+0Ch],al
  000000D6: 88 4A 0D           mov         byte ptr [edx+0Dh],cl
  000000D9: 8B CE              mov         ecx,esi
  000000DB: 0F BE 46 0E        movsx       eax,byte ptr [esi+0Eh]
  000000DF: C1 E8 02           shr         eax,2
  000000E2: 24 01              and         al,1
  000000E4: 88 42 0E           mov         byte ptr [edx+0Eh],al
  000000E7: 8D 44 24 10        lea         eax,[esp+10h]
  000000EB: 50                 push        eax
  000000EC: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  000000F1: 8B 54 24 58        mov         edx,dword ptr [esp+58h]
  000000F5: 8D 4C 24 10        lea         ecx,[esp+10h]
  000000F9: 8B C1              mov         eax,ecx
  000000FB: 2B D0              sub         edx,eax
  000000FD: 8D 49 00           lea         ecx,[ecx]
  00000100: 8A 01              mov         al,byte ptr [ecx]
  00000102: 8D 49 01           lea         ecx,[ecx+1]
  00000105: 88 44 11 FF        mov         byte ptr [ecx+edx-1],al
  00000109: 84 C0              test        al,al
  0000010B: 75 F3              jne         00000100
  0000010D: 8D 44 24 10        lea         eax,[esp+10h]
  00000111: 8B CE              mov         ecx,esi
  00000113: 50                 push        eax
  00000114: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  00000119: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000011D: 8B C1              mov         eax,ecx
  0000011F: 2B F8              sub         edi,eax
  00000121: 8A 01              mov         al,byte ptr [ecx]
  00000123: 8D 49 01           lea         ecx,[ecx+1]
  00000126: 88 44 39 FF        mov         byte ptr [ecx+edi-1],al
  0000012A: 84 C0              test        al,al
  0000012C: 75 F3              jne         00000121
  0000012E: 8D 44 24 10        lea         eax,[esp+10h]
  00000132: 8B CE              mov         ecx,esi
  00000134: 50                 push        eax
  00000135: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  0000013A: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000013E: 8B C1              mov         eax,ecx
  00000140: 2B D8              sub         ebx,eax
  00000142: 8A 01              mov         al,byte ptr [ecx]
  00000144: 8D 49 01           lea         ecx,[ecx+1]
  00000147: 88 44 19 FF        mov         byte ptr [ecx+ebx-1],al
  0000014B: 84 C0              test        al,al
  0000014D: 75 F3              jne         00000142
  0000014F: 8D 44 24 10        lea         eax,[esp+10h]
  00000153: 8B CE              mov         ecx,esi
  00000155: 50                 push        eax
  00000156: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  0000015B: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000015F: 8B C1              mov         eax,ecx
  00000161: 2B E8              sub         ebp,eax
  00000163: 8A 01              mov         al,byte ptr [ecx]
  00000165: 8D 49 01           lea         ecx,[ecx+1]
  00000168: 88 44 29 FF        mov         byte ptr [ecx+ebp-1],al
  0000016C: 84 C0              test        al,al
  0000016E: 75 F3              jne         00000163
  00000170: 0F BE 46 04        movsx       eax,byte ptr [esi+4]
  00000174: 8B 4C 24 54        mov         ecx,dword ptr [esp+54h]
  00000178: D1 E8              shr         eax,1
  0000017A: 24 01              and         al,1
  0000017C: 5F                 pop         edi
  0000017D: 88 41 11           mov         byte ptr [ecx+11h],al
  00000180: 0F BE 46 04        movsx       eax,byte ptr [esi+4]
  00000184: C1 E8 02           shr         eax,2
  00000187: 24 01              and         al,1
  00000189: 88 41 10           mov         byte ptr [ecx+10h],al
  0000018C: 0F BE 46 04        movsx       eax,byte ptr [esi+4]
  00000190: C1 E8 03           shr         eax,3
  00000193: F6 D0              not         al
  00000195: 24 01              and         al,1
  00000197: 88 41 1F           mov         byte ptr [ecx+1Fh],al
  0000019A: 8A 46 0F           mov         al,byte ptr [esi+0Fh]
  0000019D: 24 01              and         al,1
  0000019F: 88 41 12           mov         byte ptr [ecx+12h],al
  000001A2: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  000001A6: D1 E8              shr         eax,1
  000001A8: 24 01              and         al,1
  000001AA: 88 41 13           mov         byte ptr [ecx+13h],al
  000001AD: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  000001B1: C1 E8 02           shr         eax,2
  000001B4: 24 01              and         al,1
  000001B6: 88 41 14           mov         byte ptr [ecx+14h],al
  000001B9: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  000001BD: C1 E8 03           shr         eax,3
  000001C0: 24 01              and         al,1
  000001C2: 88 41 15           mov         byte ptr [ecx+15h],al
  000001C5: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  000001C9: C1 E8 04           shr         eax,4
  000001CC: 24 01              and         al,1
  000001CE: 88 41 16           mov         byte ptr [ecx+16h],al
  000001D1: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  000001D5: C1 E8 05           shr         eax,5
  000001D8: 24 01              and         al,1
  000001DA: 88 41 17           mov         byte ptr [ecx+17h],al
  000001DD: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  000001E1: C1 E8 06           shr         eax,6
  000001E4: 24 01              and         al,1
  000001E6: 88 41 18           mov         byte ptr [ecx+18h],al
  000001E9: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  000001ED: C1 E8 07           shr         eax,7
  000001F0: 24 01              and         al,1
  000001F2: 88 41 19           mov         byte ptr [ecx+19h],al
  000001F5: 8A 46 18           mov         al,byte ptr [esi+18h]
  000001F8: 24 0F              and         al,0Fh
  000001FA: 88 41 1A           mov         byte ptr [ecx+1Ah],al
  000001FD: 8A 46 18           mov         al,byte ptr [esi+18h]
  00000200: C0 F8 04           sar         al,4
  00000203: 24 0F              and         al,0Fh
  00000205: 88 41 1B           mov         byte ptr [ecx+1Bh],al
  00000208: 8A 46 19           mov         al,byte ptr [esi+19h]
  0000020B: 24 0F              and         al,0Fh
  0000020D: 88 41 1C           mov         byte ptr [ecx+1Ch],al
  00000210: 8A 46 19           mov         al,byte ptr [esi+19h]
  00000213: C0 F8 04           sar         al,4
  00000216: 24 0F              and         al,0Fh
  00000218: 88 41 1D           mov         byte ptr [ecx+1Dh],al
  0000021B: 8A 46 1A           mov         al,byte ptr [esi+1Ah]
  0000021E: 5E                 pop         esi
  0000021F: 5D                 pop         ebp
  00000220: 88 41 1E           mov         byte ptr [ecx+1Eh],al
  00000223: 33 C0              xor         eax,eax
  00000225: 5B                 pop         ebx
  00000226: 83 C4 40           add         esp,40h
  00000229: C2 14 00           ret         14h
  0000022C: 5F                 pop         edi
  0000022D: 5E                 pop         esi
  0000022E: 5D                 pop         ebp
  0000022F: B8 0B 00 00 00     mov         eax,0Bh
  00000234: 5B                 pop         ebx
  00000235: 83 C4 40           add         esp,40h
  00000238: C2 14 00           ret         14h
  0000023B: 5F                 pop         edi
  0000023C: 5E                 pop         esi
  0000023D: 5D                 pop         ebp
  0000023E: B8 06 00 00 00     mov         eax,6
  00000243: 5B                 pop         ebx
  00000244: 83 C4 40           add         esp,40h
  00000247: C2 14 00           ret         14h

?ReadAndParse@TFtEE232R@@UAEKPAX@Z (public: virtual unsigned long __thiscall TFtEE232R::ReadAndParse(void *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 56                 push        esi
  00000004: 8B F1              mov         esi,ecx
  00000006: 8B 06              mov         eax,dword ptr [esi]
  00000008: FF 10              call        dword ptr [eax]
  0000000A: 85 C0              test        eax,eax
  0000000C: 0F 84 62 02 00 00  je          00000274
  00000012: 8B CE              mov         ecx,esi
  00000014: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  00000019: 0F B7 C0           movzx       eax,ax
  0000001C: 66 85 C0           test        ax,ax
  0000001F: 75 0C              jne         0000002D
  00000021: B8 0E 00 00 00     mov         eax,0Eh
  00000026: 5E                 pop         esi
  00000027: 83 C4 40           add         esp,40h
  0000002A: C2 04 00           ret         4
  0000002D: B9 FF FF 00 00     mov         ecx,0FFFFh
  00000032: 66 3B C1           cmp         ax,cx
  00000035: 75 0C              jne         00000043
  00000037: B8 0F 00 00 00     mov         eax,0Fh
  0000003C: 5E                 pop         esi
  0000003D: 83 C4 40           add         esp,40h
  00000040: C2 04 00           ret         4
  00000043: 57                 push        edi
  00000044: 8B 7C 24 4C        mov         edi,dword ptr [esp+4Ch]
  00000048: 8B CE              mov         ecx,esi
  0000004A: 66 89 47 0C        mov         word ptr [edi+0Ch],ax
  0000004E: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  00000053: 66 89 47 0E        mov         word ptr [edi+0Eh],ax
  00000057: 8B CE              mov         ecx,esi
  00000059: 8D 44 24 08        lea         eax,[esp+8]
  0000005D: 50                 push        eax
  0000005E: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  00000063: 8B 4F 10           mov         ecx,dword ptr [edi+10h]
  00000066: 85 C9              test        ecx,ecx
  00000068: 74 14              je          0000007E
  0000006A: 8D 54 24 08        lea         edx,[esp+8]
  0000006E: 8B FF              mov         edi,edi
  00000070: 8A 02              mov         al,byte ptr [edx]
  00000072: 8D 52 01           lea         edx,[edx+1]
  00000075: 88 01              mov         byte ptr [ecx],al
  00000077: 8D 49 01           lea         ecx,[ecx+1]
  0000007A: 84 C0              test        al,al
  0000007C: 75 F2              jne         00000070
  0000007E: 8D 44 24 08        lea         eax,[esp+8]
  00000082: 8B CE              mov         ecx,esi
  00000084: 50                 push        eax
  00000085: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  0000008A: 8B 4F 14           mov         ecx,dword ptr [edi+14h]
  0000008D: 85 C9              test        ecx,ecx
  0000008F: 74 12              je          000000A3
  00000091: 8D 54 24 08        lea         edx,[esp+8]
  00000095: 8A 02              mov         al,byte ptr [edx]
  00000097: 8D 52 01           lea         edx,[edx+1]
  0000009A: 88 01              mov         byte ptr [ecx],al
  0000009C: 8D 49 01           lea         ecx,[ecx+1]
  0000009F: 84 C0              test        al,al
  000000A1: 75 F2              jne         00000095
  000000A3: 8D 44 24 08        lea         eax,[esp+8]
  000000A7: 8B CE              mov         ecx,esi
  000000A9: 50                 push        eax
  000000AA: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  000000AF: 8B 4F 18           mov         ecx,dword ptr [edi+18h]
  000000B2: 85 C9              test        ecx,ecx
  000000B4: 74 18              je          000000CE
  000000B6: 8D 54 24 08        lea         edx,[esp+8]
  000000BA: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  000000C0: 8A 02              mov         al,byte ptr [edx]
  000000C2: 8D 52 01           lea         edx,[edx+1]
  000000C5: 88 01              mov         byte ptr [ecx],al
  000000C7: 8D 49 01           lea         ecx,[ecx+1]
  000000CA: 84 C0              test        al,al
  000000CC: 75 F2              jne         000000C0
  000000CE: 8D 44 24 08        lea         eax,[esp+8]
  000000D2: 8B CE              mov         ecx,esi
  000000D4: 50                 push        eax
  000000D5: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  000000DA: 8B 47 1C           mov         eax,dword ptr [edi+1Ch]
  000000DD: 85 C0              test        eax,eax
  000000DF: 74 12              je          000000F3
  000000E1: 8D 54 24 08        lea         edx,[esp+8]
  000000E5: 8A 0A              mov         cl,byte ptr [edx]
  000000E7: 8D 52 01           lea         edx,[edx+1]
  000000EA: 88 08              mov         byte ptr [eax],cl
  000000EC: 8D 40 01           lea         eax,[eax+1]
  000000EF: 84 C9              test        cl,cl
  000000F1: 75 F2              jne         000000E5
  000000F3: 8B CE              mov         ecx,esi
  000000F5: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  000000FA: 8B CE              mov         ecx,esi
  000000FC: 66 89 47 20        mov         word ptr [edi+20h],ax
  00000100: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QAEGXZ
  00000105: 33 C9              xor         ecx,ecx
  00000107: 66 85 C0           test        ax,ax
  0000010A: 0F 94 C1           sete        cl
  0000010D: 66 89 4F 22        mov         word ptr [edi+22h],cx
  00000111: 8B CE              mov         ecx,esi
  00000113: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  00000118: 8A C8              mov         cl,al
  0000011A: C0 E8 06           shr         al,6
  0000011D: 24 01              and         al,1
  0000011F: C0 E9 05           shr         cl,5
  00000122: 0F B6 C0           movzx       eax,al
  00000125: 80 E1 01           and         cl,1
  00000128: 66 89 47 24        mov         word ptr [edi+24h],ax
  0000012C: 0F B6 C1           movzx       eax,cl
  0000012F: 8B CE              mov         ecx,esi
  00000131: 66 89 47 26        mov         word ptr [edi+26h],ax
  00000135: E8 00 00 00 00     call        ?GetRev4@TFtE2Data@@QAE_NXZ
  0000013A: 8B CE              mov         ecx,esi
  0000013C: 88 47 28           mov         byte ptr [edi+28h],al
  0000013F: E8 00 00 00 00     call        ?GetIsoIn@TFtE2Data@@QAE_NXZ
  00000144: 8B CE              mov         ecx,esi
  00000146: 88 47 29           mov         byte ptr [edi+29h],al
  00000149: E8 00 00 00 00     call        ?GetIsoOut@TFtE2Data@@QAE_NXZ
  0000014E: 8B CE              mov         ecx,esi
  00000150: 88 47 2A           mov         byte ptr [edi+2Ah],al
  00000153: E8 00 00 00 00     call        ?GetPullDownEnable@TFtE2Data@@QAE_NXZ
  00000158: 8B CE              mov         ecx,esi
  0000015A: 88 47 2B           mov         byte ptr [edi+2Bh],al
  0000015D: E8 00 00 00 00     call        ?GetSerialNumberEnable@TFtE2Data@@QAE_NXZ
  00000162: 8B CE              mov         ecx,esi
  00000164: 88 47 2C           mov         byte ptr [edi+2Ch],al
  00000167: E8 00 00 00 00     call        ?GetUSBVersionEnable@TFtE2Data@@QAE_NXZ
  0000016C: 8B CE              mov         ecx,esi
  0000016E: 88 47 2D           mov         byte ptr [edi+2Dh],al
  00000171: E8 00 00 00 00     call        ?GetUSBVersion@TFtE2Data@@QAEGXZ
  00000176: 66 89 47 2E        mov         word ptr [edi+2Eh],ax
  0000017A: C6 47 30 00        mov         byte ptr [edi+30h],0
  0000017E: C7 47 38 00 00 00  mov         dword ptr [edi+38h],0
            00
  00000185: C7 47 3C 00 00 00  mov         dword ptr [edi+3Ch],0
            00
  0000018C: C7 47 40 00 00 00  mov         dword ptr [edi+40h],0
            00
  00000193: 66 C7 47 35 00 00  mov         word ptr [edi+35h],0
  00000199: C6 47 37 00        mov         byte ptr [edi+37h],0
  0000019D: 0F BE 46 04        movsx       eax,byte ptr [esi+4]
  000001A1: D1 E8              shr         eax,1
  000001A3: 24 01              and         al,1
  000001A5: 88 47 44           mov         byte ptr [edi+44h],al
  000001A8: 0F BE 46 04        movsx       eax,byte ptr [esi+4]
  000001AC: C1 E8 02           shr         eax,2
  000001AF: 24 01              and         al,1
  000001B1: 88 47 45           mov         byte ptr [edi+45h],al
  000001B4: 0F BE 46 04        movsx       eax,byte ptr [esi+4]
  000001B8: C1 E8 03           shr         eax,3
  000001BB: 24 01              and         al,1
  000001BD: 88 47 56           mov         byte ptr [edi+56h],al
  000001C0: 8A 46 05           mov         al,byte ptr [esi+5]
  000001C3: 88 47 46           mov         byte ptr [edi+46h],al
  000001C6: 0F BE 46 0E        movsx       eax,byte ptr [esi+0Eh]
  000001CA: C1 E8 02           shr         eax,2
  000001CD: 24 01              and         al,1
  000001CF: 88 47 47           mov         byte ptr [edi+47h],al
  000001D2: 0F BE 46 0E        movsx       eax,byte ptr [esi+0Eh]
  000001D6: C1 E8 03           shr         eax,3
  000001D9: 24 01              and         al,1
  000001DB: 88 47 48           mov         byte ptr [edi+48h],al
  000001DE: 8A 46 0F           mov         al,byte ptr [esi+0Fh]
  000001E1: 24 01              and         al,1
  000001E3: 88 47 49           mov         byte ptr [edi+49h],al
  000001E6: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  000001EA: D1 E8              shr         eax,1
  000001EC: 24 01              and         al,1
  000001EE: 88 47 4A           mov         byte ptr [edi+4Ah],al
  000001F1: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  000001F5: C1 E8 02           shr         eax,2
  000001F8: 24 01              and         al,1
  000001FA: 88 47 4B           mov         byte ptr [edi+4Bh],al
  000001FD: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  00000201: C1 E8 03           shr         eax,3
  00000204: 24 01              and         al,1
  00000206: 88 47 4C           mov         byte ptr [edi+4Ch],al
  00000209: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  0000020D: C1 E8 04           shr         eax,4
  00000210: 24 01              and         al,1
  00000212: 88 47 4D           mov         byte ptr [edi+4Dh],al
  00000215: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  00000219: C1 E8 05           shr         eax,5
  0000021C: 24 01              and         al,1
  0000021E: 88 47 4E           mov         byte ptr [edi+4Eh],al
  00000221: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  00000225: C1 E8 06           shr         eax,6
  00000228: 24 01              and         al,1
  0000022A: 88 47 4F           mov         byte ptr [edi+4Fh],al
  0000022D: 0F BE 46 0F        movsx       eax,byte ptr [esi+0Fh]
  00000231: C1 E8 07           shr         eax,7
  00000234: 24 01              and         al,1
  00000236: 88 47 50           mov         byte ptr [edi+50h],al
  00000239: 8A 46 18           mov         al,byte ptr [esi+18h]
  0000023C: 24 0F              and         al,0Fh
  0000023E: 88 47 51           mov         byte ptr [edi+51h],al
  00000241: 8A 46 18           mov         al,byte ptr [esi+18h]
  00000244: C0 F8 04           sar         al,4
  00000247: 24 0F              and         al,0Fh
  00000249: 88 47 52           mov         byte ptr [edi+52h],al
  0000024C: 0F B6 4E 19        movzx       ecx,byte ptr [esi+19h]
  00000250: 80 E1 0F           and         cl,0Fh
  00000253: 88 4F 53           mov         byte ptr [edi+53h],cl
  00000256: 0F B6 4E 19        movzx       ecx,byte ptr [esi+19h]
  0000025A: C0 F9 04           sar         cl,4
  0000025D: 80 E1 0F           and         cl,0Fh
  00000260: 33 C0              xor         eax,eax
  00000262: 88 4F 54           mov         byte ptr [edi+54h],cl
  00000265: 0F B6 4E 1A        movzx       ecx,byte ptr [esi+1Ah]
  00000269: 88 4F 55           mov         byte ptr [edi+55h],cl
  0000026C: 5F                 pop         edi
  0000026D: 5E                 pop         esi
  0000026E: 83 C4 40           add         esp,40h
  00000271: C2 04 00           ret         4
  00000274: B8 0B 00 00 00     mov         eax,0Bh
  00000279: 5E                 pop         esi
  0000027A: 83 C4 40           add         esp,40h
  0000027D: C2 04 00           ret         4

?SetRomType@TFtEE232R@@UAEXXZ (public: virtual void __thiscall TFtEE232R::SetRomType(void)):
  00000000: B8 46 00 00 00     mov         eax,46h
  00000005: 66 89 81 22 08 00  mov         word ptr [ecx+00000822h],ax
            00
  0000000C: C3                 ret

??0TFtEE232H@@QAE@PAUft_private_vars@@@Z (public: __thiscall TFtEE232H::TFtEE232H(struct ft_private_vars *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAUft_private_vars@@@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE232H@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  0000001E: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000028: 5E                 pop         esi
  00000029: C2 04 00           ret         4

??0TFtEE232H@@QAE@PAX@Z (public: __thiscall TFtEE232H::TFtEE232H(void *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAX@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE232H@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  0000001E: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000028: 5E                 pop         esi
  00000029: C2 04 00           ret         4

??0TFtEE232H@@QAE@XZ (public: __thiscall TFtEE232H::TFtEE232H(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@XZ
  00000008: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE232H@@6B@
  0000000E: 8B C6              mov         eax,esi
  00000010: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  0000001A: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000024: 5E                 pop         esi
  00000025: C3                 ret

?AddUserArea@TFtEE232H@@UAEHPAEK@Z (public: virtual int __thiscall TFtEE232H::AddUserArea(unsigned char *,unsigned long)):
  00000000: 53                 push        ebx
  00000001: 55                 push        ebp
  00000002: 56                 push        esi
  00000003: 8B 74 24 14        mov         esi,dword ptr [esp+14h]
  00000007: B8 60 00 00 00     mov         eax,60h
  0000000C: 3B F0              cmp         esi,eax
  0000000E: 8B EE              mov         ebp,esi
  00000010: 57                 push        edi
  00000011: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  00000015: 0F 47 E8           cmova       ebp,eax
  00000018: 55                 push        ebp
  00000019: 57                 push        edi
  0000001A: 8B D9              mov         ebx,ecx
  0000001C: E8 00 00 00 00     call        ?AddUserArea@TFtE2Data@@UAEHPAEK@Z
  00000021: 89 44 24 18        mov         dword ptr [esp+18h],eax
  00000025: 85 C0              test        eax,eax
  00000027: 74 27              je          00000050
  00000029: 2B F5              sub         esi,ebp
  0000002B: 74 23              je          00000050
  0000002D: 8B CB              mov         ecx,ebx
  0000002F: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  00000034: 66 03 C0           add         ax,ax
  00000037: 83 C7 60           add         edi,60h
  0000003A: 0F B7 D0           movzx       edx,ax
  0000003D: 8D 49 00           lea         ecx,[ecx]
  00000040: 8A 07              mov         al,byte ptr [edi]
  00000042: 8D 7F 01           lea         edi,[edi+1]
  00000045: 0F B7 CA           movzx       ecx,dx
  00000048: 42                 inc         edx
  00000049: 88 44 19 04        mov         byte ptr [ecx+ebx+4],al
  0000004D: 4E                 dec         esi
  0000004E: 75 F0              jne         00000040
  00000050: 8B 03              mov         eax,dword ptr [ebx]
  00000052: 8B CB              mov         ecx,ebx
  00000054: FF 50 04           call        dword ptr [eax+4]
  00000057: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  0000005B: 5F                 pop         edi
  0000005C: 5E                 pop         esi
  0000005D: 5D                 pop         ebp
  0000005E: 5B                 pop         ebx
  0000005F: C2 08 00           ret         8

?Erase@TFtEE232H@@QAEHXZ (public: int __thiscall TFtEE232H::Erase(void)):
  00000000: 8B 01              mov         eax,dword ptr [ecx]
  00000002: FF 50 20           call        dword ptr [eax+20h]
  00000005: B8 01 00 00 00     mov         eax,1
  0000000A: C3                 ret

?GetUserArea@TFtEE232H@@UAEXPAEKPAK@Z (public: virtual void __thiscall TFtEE232H::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  00000000: 53                 push        ebx
  00000001: 55                 push        ebp
  00000002: 56                 push        esi
  00000003: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  00000007: B8 60 00 00 00     mov         eax,60h
  0000000C: 57                 push        edi
  0000000D: 8B 7C 24 18        mov         edi,dword ptr [esp+18h]
  00000011: 8B D9              mov         ebx,ecx
  00000013: 3B F8              cmp         edi,eax
  00000015: 8B EF              mov         ebp,edi
  00000017: 0F 47 E8           cmova       ebp,eax
  0000001A: 8D 44 24 18        lea         eax,[esp+18h]
  0000001E: 50                 push        eax
  0000001F: 55                 push        ebp
  00000020: 56                 push        esi
  00000021: E8 00 00 00 00     call        ?GetUserArea@TFtE2Data@@UAEXPAEKPAK@Z
  00000026: 8B 4C 24 1C        mov         ecx,dword ptr [esp+1Ch]
  0000002A: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  0000002E: 89 01              mov         dword ptr [ecx],eax
  00000030: 3B C5              cmp         eax,ebp
  00000032: 75 33              jne         00000067
  00000034: 2B FD              sub         edi,ebp
  00000036: 74 2F              je          00000067
  00000038: 8B CB              mov         ecx,ebx
  0000003A: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  0000003F: 66 03 C0           add         ax,ax
  00000042: 8B D7              mov         edx,edi
  00000044: 0F B7 C8           movzx       ecx,ax
  00000047: 83 C6 60           add         esi,60h
  0000004A: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  00000050: 0F B7 C1           movzx       eax,cx
  00000053: 8D 76 01           lea         esi,[esi+1]
  00000056: 41                 inc         ecx
  00000057: 8A 44 18 04        mov         al,byte ptr [eax+ebx+4]
  0000005B: 88 46 FF           mov         byte ptr [esi-1],al
  0000005E: 4A                 dec         edx
  0000005F: 75 EF              jne         00000050
  00000061: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  00000065: 01 38              add         dword ptr [eax],edi
  00000067: 5F                 pop         edi
  00000068: 5E                 pop         esi
  00000069: 5D                 pop         ebp
  0000006A: 5B                 pop         ebx
  0000006B: C2 0C 00           ret         0Ch

?GetUserAreaOffset@TFtEE232H@@UAEGXZ (public: virtual unsigned short __thiscall TFtEE232H::GetUserAreaOffset(void)):
  00000000: 0F B7 81 22 08 00  movzx       eax,word ptr [ecx+822h]
            00
  00000007: 83 F8 56           cmp         eax,56h
  0000000A: 74 13              je          0000001F
  0000000C: 83 F8 66           cmp         eax,66h
  0000000F: 74 0E              je          0000001F
  00000011: BA 31 52 00 00     mov         edx,5231h
  00000016: 66 3B C2           cmp         ax,dx
  00000019: 0F 85 00 00 00 00  jne         ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  0000001F: B8 10 00 00 00     mov         eax,10h
  00000024: C3                 ret

?GetUserAreaSize@TFtEE232H@@UAEGXZ (public: virtual unsigned short __thiscall TFtEE232H::GetUserAreaSize(void)):
  00000000: 0F B7 81 22 08 00  movzx       eax,word ptr [ecx+822h]
            00
  00000007: 83 F8 56           cmp         eax,56h
  0000000A: 74 13              je          0000001F
  0000000C: 83 F8 66           cmp         eax,66h
  0000000F: 74 0E              je          0000001F
  00000011: BA 31 52 00 00     mov         edx,5231h
  00000016: 66 3B C2           cmp         ax,dx
  00000019: 0F 85 00 00 00 00  jne         ?GetUserAreaSize@TFtE2Data@@UAEGXZ
  0000001F: E8 00 00 00 00     call        ?GetUserAreaSize@TFtE2Data@@UAEGXZ
  00000024: 83 C0 30           add         eax,30h
  00000027: C3                 ret

?Init@TFtEE232H@@UAEXPAX@Z (public: virtual void __thiscall TFtEE232H::Init(void *)):
  00000000: 83 EC 0C           sub         esp,0Ch
  00000003: 53                 push        ebx
  00000004: 8B 5C 24 14        mov         ebx,dword ptr [esp+14h]
  00000008: 33 C0              xor         eax,eax
  0000000A: 55                 push        ebp
  0000000B: 56                 push        esi
  0000000C: 57                 push        edi
  0000000D: 8B 13              mov         edx,dword ptr [ebx]
  0000000F: 8B E9              mov         ebp,ecx
  00000011: 33 C9              xor         ecx,ecx
  00000013: 89 54 24 14        mov         dword ptr [esp+14h],edx
  00000017: 8B 53 04           mov         edx,dword ptr [ebx+4]
  0000001A: 33 FF              xor         edi,edi
  0000001C: 89 54 24 18        mov         dword ptr [esp+18h],edx
  00000020: 38 43 1E           cmp         byte ptr [ebx+1Eh],al
  00000023: 74 05              je          0000002A
  00000025: 8D 41 01           lea         eax,[ecx+1]
  00000028: EB 23              jmp         0000004D
  0000002A: 38 43 1F           cmp         byte ptr [ebx+1Fh],al
  0000002D: 74 07              je          00000036
  0000002F: B8 02 00 00 00     mov         eax,2
  00000034: EB 17              jmp         0000004D
  00000036: 38 43 20           cmp         byte ptr [ebx+20h],al
  00000039: 74 07              je          00000042
  0000003B: B8 04 00 00 00     mov         eax,4
  00000040: EB 0B              jmp         0000004D
  00000042: 38 43 21           cmp         byte ptr [ebx+21h],al
  00000045: BA 08 00 00 00     mov         edx,8
  0000004A: 0F 45 C2           cmovne      eax,edx
  0000004D: 89 44 24 20        mov         dword ptr [esp+20h],eax
  00000051: 38 4B 25           cmp         byte ptr [ebx+25h],cl
  00000054: 74 07              je          0000005D
  00000056: 83 C8 10           or          eax,10h
  00000059: 89 44 24 20        mov         dword ptr [esp+20h],eax
  0000005D: 38 4B 22           cmp         byte ptr [ebx+22h],cl
  00000060: 74 09              je          0000006B
  00000062: 0D 00 01 00 00     or          eax,100h
  00000067: 89 44 24 20        mov         dword ptr [esp+20h],eax
  0000006B: 38 4B 23           cmp         byte ptr [ebx+23h],cl
  0000006E: 74 09              je          00000079
  00000070: 0D 00 02 00 00     or          eax,200h
  00000075: 89 44 24 20        mov         dword ptr [esp+20h],eax
  00000079: 38 4B 24           cmp         byte ptr [ebx+24h],cl
  0000007C: 74 09              je          00000087
  0000007E: 0D 00 04 00 00     or          eax,400h
  00000083: 89 44 24 20        mov         dword ptr [esp+20h],eax
  00000087: 38 4B 26           cmp         byte ptr [ebx+26h],cl
  0000008A: 74 09              je          00000095
  0000008C: 0D 00 80 00 00     or          eax,8000h
  00000091: 89 44 24 20        mov         dword ptr [esp+20h],eax
  00000095: 38 4B 0C           cmp         byte ptr [ebx+0Ch],cl
  00000098: B8 04 00 00 00     mov         eax,4
  0000009D: 0F 45 C8           cmovne      ecx,eax
  000000A0: 80 7B 0D 00        cmp         byte ptr [ebx+0Dh],0
  000000A4: 89 4C 24 10        mov         dword ptr [esp+10h],ecx
  000000A8: 74 07              je          000000B1
  000000AA: 83 C9 08           or          ecx,8
  000000AD: 89 4C 24 10        mov         dword ptr [esp+10h],ecx
  000000B1: 8A 43 10           mov         al,byte ptr [ebx+10h]
  000000B4: 3C 04              cmp         al,4
  000000B6: 74 20              je          000000D8
  000000B8: 3C 08              cmp         al,8
  000000BA: 75 07              jne         000000C3
  000000BC: BF 01 00 00 00     mov         edi,1
  000000C1: EB 15              jmp         000000D8
  000000C3: 3C 0C              cmp         al,0Ch
  000000C5: 75 07              jne         000000CE
  000000C7: BF 02 00 00 00     mov         edi,2
  000000CC: EB 0A              jmp         000000D8
  000000CE: 3C 10              cmp         al,10h
  000000D0: B9 03 00 00 00     mov         ecx,3
  000000D5: 0F 44 F9           cmove       edi,ecx
  000000D8: 80 7B 0E 00        cmp         byte ptr [ebx+0Eh],0
  000000DC: 74 03              je          000000E1
  000000DE: 83 CF 04           or          edi,4
  000000E1: 80 7B 0F 00        cmp         byte ptr [ebx+0Fh],0
  000000E5: 74 03              je          000000EA
  000000E7: 83 CF 08           or          edi,8
  000000EA: 8A 43 13           mov         al,byte ptr [ebx+13h]
  000000ED: 3C 04              cmp         al,4
  000000EF: 74 19              je          0000010A
  000000F1: 3C 08              cmp         al,8
  000000F3: 75 05              jne         000000FA
  000000F5: 83 CF 10           or          edi,10h
  000000F8: EB 10              jmp         0000010A
  000000FA: 3C 0C              cmp         al,0Ch
  000000FC: 75 05              jne         00000103
  000000FE: 83 CF 20           or          edi,20h
  00000101: EB 07              jmp         0000010A
  00000103: 3C 10              cmp         al,10h
  00000105: 75 03              jne         0000010A
  00000107: 83 CF 30           or          edi,30h
  0000010A: 80 7B 11 00        cmp         byte ptr [ebx+11h],0
  0000010E: 74 03              je          00000113
  00000110: 83 CF 40           or          edi,40h
  00000113: 80 7B 12 00        cmp         byte ptr [ebx+12h],0
  00000117: 74 06              je          0000011F
  00000119: 81 CF 80 00 00 00  or          edi,80h
  0000011F: 68 00 08 00 00     push        800h
  00000124: 8D 75 04           lea         esi,[ebp+4]
  00000127: 6A 00              push        0
  00000129: 56                 push        esi
  0000012A: E8 00 00 00 00     call        _memset
  0000012F: 8B 44 24 2C        mov         eax,dword ptr [esp+2Ch]
  00000133: 83 C4 0C           add         esp,0Ch
  00000136: 66 89 06           mov         word ptr [esi],ax
  00000139: 8B 74 24 14        mov         esi,dword ptr [esp+14h]
  0000013D: 8B CE              mov         ecx,esi
  0000013F: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000143: C7 45 06 03 04 10  mov         dword ptr [ebp+6],60100403h
            60
  0000014A: C7 45 0A 00 09 A0  mov         dword ptr [ebp+0Ah],64A00900h
            64
  00000151: 66 89 45 0E        mov         word ptr [ebp+0Eh],ax
  00000155: 8D 51 01           lea         edx,[ecx+1]
  00000158: 66 89 7D 10        mov         word ptr [ebp+10h],di
  0000015C: C6 45 12 20        mov         byte ptr [ebp+12h],20h
  00000160: 8A 01              mov         al,byte ptr [ecx]
  00000162: 41                 inc         ecx
  00000163: 84 C0              test        al,al
  00000165: 75 F9              jne         00000160
  00000167: 8B 7C 24 18        mov         edi,dword ptr [esp+18h]
  0000016B: 2B CA              sub         ecx,edx
  0000016D: FE C1              inc         cl
  0000016F: 02 C9              add         cl,cl
  00000171: 88 4D 13           mov         byte ptr [ebp+13h],cl
  00000174: 80 C1 20           add         cl,20h
  00000177: 88 4D 14           mov         byte ptr [ebp+14h],cl
  0000017A: 8B CF              mov         ecx,edi
  0000017C: 8D 51 01           lea         edx,[ecx+1]
  0000017F: 90                 nop
  00000180: 8A 01              mov         al,byte ptr [ecx]
  00000182: 41                 inc         ecx
  00000183: 84 C0              test        al,al
  00000185: 75 F9              jne         00000180
  00000187: 0F B6 45 14        movzx       eax,byte ptr [ebp+14h]
  0000018B: 2B CA              sub         ecx,edx
  0000018D: FE C1              inc         cl
  0000018F: C6 45 17 02        mov         byte ptr [ebp+17h],2
  00000193: 02 C9              add         cl,cl
  00000195: 02 C1              add         al,cl
  00000197: 88 4D 15           mov         byte ptr [ebp+15h],cl
  0000019A: 88 45 16           mov         byte ptr [ebp+16h],al
  0000019D: 8A 4B 14           mov         cl,byte ptr [ebx+14h]
  000001A0: 88 4D 1C           mov         byte ptr [ebp+1Ch],cl
  000001A3: 0F B6 43 15        movzx       eax,byte ptr [ebx+15h]
  000001A7: C0 E0 04           shl         al,4
  000001AA: 0A C1              or          al,cl
  000001AC: 88 45 1C           mov         byte ptr [ebp+1Ch],al
  000001AF: 8A 4B 16           mov         cl,byte ptr [ebx+16h]
  000001B2: 88 4D 1D           mov         byte ptr [ebp+1Dh],cl
  000001B5: 0F B6 43 17        movzx       eax,byte ptr [ebx+17h]
  000001B9: C0 E0 04           shl         al,4
  000001BC: 0A C1              or          al,cl
  000001BE: 88 45 1D           mov         byte ptr [ebp+1Dh],al
  000001C1: 8A 4B 18           mov         cl,byte ptr [ebx+18h]
  000001C4: 88 4D 1E           mov         byte ptr [ebp+1Eh],cl
  000001C7: 0F B6 43 19        movzx       eax,byte ptr [ebx+19h]
  000001CB: C0 E0 04           shl         al,4
  000001CE: 0A C1              or          al,cl
  000001D0: 88 45 1E           mov         byte ptr [ebp+1Eh],al
  000001D3: 8A 4B 1A           mov         cl,byte ptr [ebx+1Ah]
  000001D6: 88 4D 1F           mov         byte ptr [ebp+1Fh],cl
  000001D9: 0F B6 43 1B        movzx       eax,byte ptr [ebx+1Bh]
  000001DD: C0 E0 04           shl         al,4
  000001E0: 0A C1              or          al,cl
  000001E2: 88 45 1F           mov         byte ptr [ebp+1Fh],al
  000001E5: 8A 4B 1C           mov         cl,byte ptr [ebx+1Ch]
  000001E8: 88 4D 20           mov         byte ptr [ebp+20h],cl
  000001EB: 0F B6 43 1D        movzx       eax,byte ptr [ebx+1Dh]
  000001EF: C0 E0 04           shl         al,4
  000001F2: 0A C1              or          al,cl
  000001F4: 88 45 20           mov         byte ptr [ebp+20h],al
  000001F7: 0F B7 85 22 08 00  movzx       eax,word ptr [ebp+822h]
            00
  000001FE: 66 85 C0           test        ax,ax
  00000201: 75 05              jne         00000208
  00000203: B8 56 00 00 00     mov         eax,56h
  00000208: 66 89 45 22        mov         word ptr [ebp+22h],ax
  0000020C: 8B CD              mov         ecx,ebp
  0000020E: 56                 push        esi
  0000020F: 8D 45 24           lea         eax,[ebp+24h]
  00000212: C6 85 8E 00 00 00  mov         byte ptr [ebp+8Eh],48h
            48
  00000219: 50                 push        eax
  0000021A: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  0000021F: 0F BE 45 14        movsx       eax,byte ptr [ebp+14h]
  00000223: 8B CD              mov         ecx,ebp
  00000225: 83 C0 04           add         eax,4
  00000228: 57                 push        edi
  00000229: 03 C5              add         eax,ebp
  0000022B: 50                 push        eax
  0000022C: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000231: 0F BE 45 16        movsx       eax,byte ptr [ebp+16h]
  00000235: 8B CD              mov         ecx,ebp
  00000237: 83 C0 04           add         eax,4
  0000023A: 68 00 00 00 00     push        offset ??_C@_00CNPNBAHC@?$AA@
  0000023F: 03 C5              add         eax,ebp
  00000241: 50                 push        eax
  00000242: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000247: 8A 4D 12           mov         cl,byte ptr [ebp+12h]
  0000024A: 8A 55 14           mov         dl,byte ptr [ebp+14h]
  0000024D: 8A 5D 16           mov         bl,byte ptr [ebp+16h]
  00000250: 0F BE C1           movsx       eax,cl
  00000253: 80 C9 80           or          cl,80h
  00000256: 89 85 24 08 00 00  mov         dword ptr [ebp+824h],eax
  0000025C: 0F BE C2           movsx       eax,dl
  0000025F: 80 CA 80           or          dl,80h
  00000262: 89 85 28 08 00 00  mov         dword ptr [ebp+828h],eax
  00000268: 0F BE C3           movsx       eax,bl
  0000026B: 80 CB 80           or          bl,80h
  0000026E: 89 85 2C 08 00 00  mov         dword ptr [ebp+82Ch],eax
  00000274: 8D 44 24 20        lea         eax,[esp+20h]
  00000278: 88 4D 12           mov         byte ptr [ebp+12h],cl
  0000027B: 8B CD              mov         ecx,ebp
  0000027D: 50                 push        eax
  0000027E: 88 55 14           mov         byte ptr [ebp+14h],dl
  00000281: 88 5D 16           mov         byte ptr [ebp+16h],bl
  00000284: C7 44 24 24 02 03  mov         dword ptr [esp+24h],302h
            00 00
  0000028C: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  00000291: 6A 00              push        0
  00000293: 8B CD              mov         ecx,ebp
  00000295: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  0000029A: 8B 45 00           mov         eax,dword ptr [ebp]
  0000029D: 8B CD              mov         ecx,ebp
  0000029F: FF 50 04           call        dword ptr [eax+4]
  000002A2: 5F                 pop         edi
  000002A3: 5E                 pop         esi
  000002A4: C7 85 08 08 00 00  mov         dword ptr [ebp+808h],0
            00 00 00 00
  000002AE: 5D                 pop         ebp
  000002AF: 5B                 pop         ebx
  000002B0: 83 C4 0C           add         esp,0Ch
  000002B3: C2 04 00           ret         4

?MoveStrings@TFtEE232H@@UAEXXZ (public: virtual void __thiscall TFtEE232H::MoveStrings(void)):
  00000000: 55                 push        ebp
  00000001: 8B E9              mov         ebp,ecx
  00000003: 0F B7 85 22 08 00  movzx       eax,word ptr [ebp+00000822h]
            00
  0000000A: 83 F8 56           cmp         eax,56h
  0000000D: 74 0F              je          0000001E
  0000000F: 83 F8 66           cmp         eax,66h
  00000012: 74 0A              je          0000001E
  00000014: B9 31 52 00 00     mov         ecx,5231h
  00000019: 66 3B C1           cmp         ax,cx
  0000001C: 75 5C              jne         0000007A
  0000001E: 53                 push        ebx
  0000001F: 56                 push        esi
  00000020: 8D 4D 24           lea         ecx,[ebp+24h]
  00000023: 33 D2              xor         edx,edx
  00000025: 8D 85 84 00 00 00  lea         eax,[ebp+00000084h]
  0000002B: 8B F0              mov         esi,eax
  0000002D: 8D 99 80 00 00 00  lea         ebx,[ecx+00000080h]
  00000033: 2B F1              sub         esi,ecx
  00000035: 46                 inc         esi
  00000036: D1 EE              shr         esi,1
  00000038: 57                 push        edi
  00000039: 33 FF              xor         edi,edi
  0000003B: 3B C8              cmp         ecx,eax
  0000003D: 0F 47 F2           cmova       esi,edx
  00000040: 8B D1              mov         edx,ecx
  00000042: 85 F6              test        esi,esi
  00000044: 74 12              je          00000058
  00000046: 2B D9              sub         ebx,ecx
  00000048: 66 8B 02           mov         ax,word ptr [edx]
  0000004B: 8D 52 02           lea         edx,[edx+2]
  0000004E: 47                 inc         edi
  0000004F: 66 89 44 13 FE     mov         word ptr [ebx+edx-2],ax
  00000054: 3B FE              cmp         edi,esi
  00000056: 72 F0              jb          00000048
  00000058: 33 C0              xor         eax,eax
  0000005A: 85 F6              test        esi,esi
  0000005C: 74 10              je          0000006E
  0000005E: 8B FF              mov         edi,edi
  00000060: 33 D2              xor         edx,edx
  00000062: 8D 49 02           lea         ecx,[ecx+2]
  00000065: 40                 inc         eax
  00000066: 66 89 51 FE        mov         word ptr [ecx-2],dx
  0000006A: 3B C6              cmp         eax,esi
  0000006C: 72 F2              jb          00000060
  0000006E: 8B 45 00           mov         eax,dword ptr [ebp]
  00000071: 8B CD              mov         ecx,ebp
  00000073: 5F                 pop         edi
  00000074: 5E                 pop         esi
  00000075: 5B                 pop         ebx
  00000076: 5D                 pop         ebp
  00000077: FF 60 04           jmp         dword ptr [eax+4]
  0000007A: 5D                 pop         ebp
  0000007B: C3                 ret

?Program@TFtEE232H@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE232H::Program(void *,char *,char *,char *,char *)):
  00000000: 81 EC A4 00 00 00  sub         esp,0A4h
  00000006: 53                 push        ebx
  00000007: 55                 push        ebp
  00000008: 33 DB              xor         ebx,ebx
  0000000A: C6 44 24 0B 80     mov         byte ptr [esp+0Bh],80h
  0000000F: 33 ED              xor         ebp,ebp
  00000011: 57                 push        edi
  00000012: 8B F9              mov         edi,ecx
  00000014: 39 9C 24 B8 00 00  cmp         dword ptr [esp+0B8h],ebx
            00
  0000001B: 0F 84 26 04 00 00  je          00000447
  00000021: 39 9C 24 BC 00 00  cmp         dword ptr [esp+0BCh],ebx
            00
  00000028: 0F 84 19 04 00 00  je          00000447
  0000002E: 39 9C 24 C0 00 00  cmp         dword ptr [esp+0C0h],ebx
            00
  00000035: 0F 84 0C 04 00 00  je          00000447
  0000003B: 56                 push        esi
  0000003C: 8B B4 24 B8 00 00  mov         esi,dword ptr [esp+0B8h]
            00
  00000043: 66 39 5E 04        cmp         word ptr [esi+4],bx
  00000047: 0F 84 E8 03 00 00  je          00000435
  0000004D: 66 39 5E 06        cmp         word ptr [esi+6],bx
  00000051: 0F 84 DE 03 00 00  je          00000435
  00000057: 80 7E 16 0C        cmp         byte ptr [esi+16h],0Ch
  0000005B: 0F 87 D4 03 00 00  ja          00000435
  00000061: 80 7E 17 0C        cmp         byte ptr [esi+17h],0Ch
  00000065: 0F 87 CA 03 00 00  ja          00000435
  0000006B: 80 7E 18 0C        cmp         byte ptr [esi+18h],0Ch
  0000006F: 0F 87 C0 03 00 00  ja          00000435
  00000075: 80 7E 19 0C        cmp         byte ptr [esi+19h],0Ch
  00000079: 0F 87 B6 03 00 00  ja          00000435
  0000007F: 80 7E 1A 0C        cmp         byte ptr [esi+1Ah],0Ch
  00000083: 0F 87 AC 03 00 00  ja          00000435
  00000089: 80 7E 1B 0C        cmp         byte ptr [esi+1Bh],0Ch
  0000008D: 0F 87 A2 03 00 00  ja          00000435
  00000093: 80 7E 1C 0C        cmp         byte ptr [esi+1Ch],0Ch
  00000097: 0F 87 98 03 00 00  ja          00000435
  0000009D: 80 7E 1D 0C        cmp         byte ptr [esi+1Dh],0Ch
  000000A1: 0F 87 8E 03 00 00  ja          00000435
  000000A7: 80 7E 1E 0C        cmp         byte ptr [esi+1Eh],0Ch
  000000AB: 0F 87 84 03 00 00  ja          00000435
  000000B1: 80 7E 1F 0C        cmp         byte ptr [esi+1Fh],0Ch
  000000B5: 0F 87 7A 03 00 00  ja          00000435
  000000BB: 68 00 08 00 00     push        800h
  000000C0: 8D 47 04           lea         eax,[edi+4]
  000000C3: 53                 push        ebx
  000000C4: 50                 push        eax
  000000C5: E8 00 00 00 00     call        _memset
  000000CA: 8B 07              mov         eax,dword ptr [edi]
  000000CC: 83 C4 0C           add         esp,0Ch
  000000CF: 8B CF              mov         ecx,edi
  000000D1: FF 50 20           call        dword ptr [eax+20h]
  000000D4: B8 00 09 00 00     mov         eax,900h
  000000D9: 66 89 47 0A        mov         word ptr [edi+0Ah],ax
  000000DD: 8B 84 24 C8 00 00  mov         eax,dword ptr [esp+0C8h]
            00
  000000E4: 85 C0              test        eax,eax
  000000E6: 74 13              je          000000FB
  000000E8: 8B C8              mov         ecx,eax
  000000EA: 8D 51 01           lea         edx,[ecx+1]
  000000ED: 8D 49 00           lea         ecx,[ecx]
  000000F0: 8A 01              mov         al,byte ptr [ecx]
  000000F2: 41                 inc         ecx
  000000F3: 84 C0              test        al,al
  000000F5: 75 F9              jne         000000F0
  000000F7: 2B CA              sub         ecx,edx
  000000F9: 75 3F              jne         0000013A
  000000FB: 0F B7 46 06        movzx       eax,word ptr [esi+6]
  000000FF: 25 03 00 00 80     and         eax,80000003h
  00000104: 79 05              jns         0000010B
  00000106: 48                 dec         eax
  00000107: 83 C8 FC           or          eax,0FFFFFFFCh
  0000010A: 40                 inc         eax
  0000010B: 50                 push        eax
  0000010C: FF B4 24 C4 00 00  push        dword ptr [esp+0C4h]
            00
  00000113: 8D 4C 24 24        lea         ecx,[esp+24h]
  00000117: E8 00 00 00 00     call        ??0TSerialNumber@@QAE@PADG@Z
  0000011C: 8D 44 24 14        lea         eax,[esp+14h]
  00000120: 50                 push        eax
  00000121: 8D 44 24 38        lea         eax,[esp+38h]
  00000125: 50                 push        eax
  00000126: 8D 4C 24 24        lea         ecx,[esp+24h]
  0000012A: E8 00 00 00 00     call        ?Get@TSerialNumber@@QAEHPADPAH@Z
  0000012F: 8D 44 24 34        lea         eax,[esp+34h]
  00000133: 89 84 24 C8 00 00  mov         dword ptr [esp+0C8h],eax
            00
  0000013A: 0F B7 46 04        movzx       eax,word ptr [esi+4]
  0000013E: 8B CF              mov         ecx,edi
  00000140: 50                 push        eax
  00000141: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QAEXG@Z
  00000146: 0F B7 46 06        movzx       eax,word ptr [esi+6]
  0000014A: 8B CF              mov         ecx,edi
  0000014C: 50                 push        eax
  0000014D: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QAEXG@Z
  00000152: 38 5E 08           cmp         byte ptr [esi+8],bl
  00000155: 74 04              je          0000015B
  00000157: 80 4F 0E 08        or          byte ptr [edi+0Eh],8
  0000015B: 0F B7 46 0A        movzx       eax,word ptr [esi+0Ah]
  0000015F: 8B CF              mov         ecx,edi
  00000161: 50                 push        eax
  00000162: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QAEXH@Z
  00000167: 38 5E 0C           cmp         byte ptr [esi+0Ch],bl
  0000016A: B9 C0 00 00 00     mov         ecx,0C0h
  0000016F: 0F B6 44 24 13     movzx       eax,byte ptr [esp+13h]
  00000174: 0F 45 C1           cmovne      eax,ecx
  00000177: 88 44 24 14        mov         byte ptr [esp+14h],al
  0000017B: 38 5E 0D           cmp         byte ptr [esi+0Dh],bl
  0000017E: 74 06              je          00000186
  00000180: 0C 20              or          al,20h
  00000182: 88 44 24 14        mov         byte ptr [esp+14h],al
  00000186: FF 74 24 14        push        dword ptr [esp+14h]
  0000018A: 8B CF              mov         ecx,edi
  0000018C: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QAEXE@Z
  00000191: 38 5E 0E           cmp         byte ptr [esi+0Eh],bl
  00000194: 74 04              je          0000019A
  00000196: 80 4F 0E 04        or          byte ptr [edi+0Eh],4
  0000019A: 8B 8C 24 BC 00 00  mov         ecx,dword ptr [esp+0BCh]
            00
  000001A1: C6 47 12 20        mov         byte ptr [edi+12h],20h
  000001A5: 8D 51 01           lea         edx,[ecx+1]
  000001A8: 8A 01              mov         al,byte ptr [ecx]
  000001AA: 41                 inc         ecx
  000001AB: 84 C0              test        al,al
  000001AD: 75 F9              jne         000001A8
  000001AF: 2B CA              sub         ecx,edx
  000001B1: FE C1              inc         cl
  000001B3: 02 C9              add         cl,cl
  000001B5: 88 4F 13           mov         byte ptr [edi+13h],cl
  000001B8: 80 C1 20           add         cl,20h
  000001BB: 88 4F 14           mov         byte ptr [edi+14h],cl
  000001BE: 8B 8C 24 C4 00 00  mov         ecx,dword ptr [esp+0C4h]
            00
  000001C5: 8D 51 01           lea         edx,[ecx+1]
  000001C8: 8A 01              mov         al,byte ptr [ecx]
  000001CA: 41                 inc         ecx
  000001CB: 84 C0              test        al,al
  000001CD: 75 F9              jne         000001C8
  000001CF: 8A 47 14           mov         al,byte ptr [edi+14h]
  000001D2: 2B CA              sub         ecx,edx
  000001D4: FE C1              inc         cl
  000001D6: 02 C9              add         cl,cl
  000001D8: 02 C1              add         al,cl
  000001DA: 88 4F 15           mov         byte ptr [edi+15h],cl
  000001DD: 8B 8C 24 C8 00 00  mov         ecx,dword ptr [esp+0C8h]
            00
  000001E4: 88 47 16           mov         byte ptr [edi+16h],al
  000001E7: 8D 51 01           lea         edx,[ecx+1]
  000001EA: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  000001F0: 8A 01              mov         al,byte ptr [ecx]
  000001F2: 41                 inc         ecx
  000001F3: 84 C0              test        al,al
  000001F5: 75 F9              jne         000001F0
  000001F7: FF B4 24 BC 00 00  push        dword ptr [esp+0BCh]
            00
  000001FE: 2B CA              sub         ecx,edx
  00000200: 8D 47 24           lea         eax,[edi+24h]
  00000203: FE C1              inc         cl
  00000205: 02 C9              add         cl,cl
  00000207: 88 4F 17           mov         byte ptr [edi+17h],cl
  0000020A: 8B CF              mov         ecx,edi
  0000020C: 50                 push        eax
  0000020D: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000212: 0F B6 47 14        movzx       eax,byte ptr [edi+14h]
  00000216: 8B CF              mov         ecx,edi
  00000218: FF B4 24 C4 00 00  push        dword ptr [esp+0C4h]
            00
  0000021F: 83 C0 04           add         eax,4
  00000222: 03 C7              add         eax,edi
  00000224: 50                 push        eax
  00000225: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  0000022A: 0F B6 47 16        movzx       eax,byte ptr [edi+16h]
  0000022E: 8B CF              mov         ecx,edi
  00000230: FF B4 24 C8 00 00  push        dword ptr [esp+0C8h]
            00
  00000237: 83 C0 04           add         eax,4
  0000023A: 03 C7              add         eax,edi
  0000023C: 50                 push        eax
  0000023D: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000242: 0F BE 47 12        movsx       eax,byte ptr [edi+12h]
  00000246: 8B CF              mov         ecx,edi
  00000248: 89 87 24 08 00 00  mov         dword ptr [edi+824h],eax
  0000024E: 0F BE 47 14        movsx       eax,byte ptr [edi+14h]
  00000252: 89 87 28 08 00 00  mov         dword ptr [edi+828h],eax
  00000258: 0F BE 47 16        movsx       eax,byte ptr [edi+16h]
  0000025C: 89 87 2C 08 00 00  mov         dword ptr [edi+82Ch],eax
  00000262: 80 4F 12 80        or          byte ptr [edi+12h],80h
  00000266: 80 4F 14 80        or          byte ptr [edi+14h],80h
  0000026A: 80 4F 16 80        or          byte ptr [edi+16h],80h
  0000026E: 8B 07              mov         eax,dword ptr [edi]
  00000270: FF 50 24           call        dword ptr [eax+24h]
  00000273: 38 5E 23           cmp         byte ptr [esi+23h],bl
  00000276: 74 07              je          0000027F
  00000278: BD 01 00 00 00     mov         ebp,1
  0000027D: EB 23              jmp         000002A2
  0000027F: 38 5E 24           cmp         byte ptr [esi+24h],bl
  00000282: 74 07              je          0000028B
  00000284: BD 02 00 00 00     mov         ebp,2
  00000289: EB 17              jmp         000002A2
  0000028B: 38 5E 25           cmp         byte ptr [esi+25h],bl
  0000028E: 74 07              je          00000297
  00000290: BD 04 00 00 00     mov         ebp,4
  00000295: EB 0B              jmp         000002A2
  00000297: 38 5E 26           cmp         byte ptr [esi+26h],bl
  0000029A: B8 08 00 00 00     mov         eax,8
  0000029F: 0F 45 E8           cmovne      ebp,eax
  000002A2: 80 7E 28 01        cmp         byte ptr [esi+28h],1
  000002A6: 75 03              jne         000002AB
  000002A8: 83 CD 10           or          ebp,10h
  000002AB: 38 5E 20           cmp         byte ptr [esi+20h],bl
  000002AE: 74 06              je          000002B6
  000002B0: 81 CD 00 01 00 00  or          ebp,100h
  000002B6: 38 5E 21           cmp         byte ptr [esi+21h],bl
  000002B9: 74 06              je          000002C1
  000002BB: 81 CD 00 02 00 00  or          ebp,200h
  000002C1: 38 5E 22           cmp         byte ptr [esi+22h],bl
  000002C4: 74 06              je          000002CC
  000002C6: 81 CD 00 04 00 00  or          ebp,400h
  000002CC: 38 5E 27           cmp         byte ptr [esi+27h],bl
  000002CF: 74 06              je          000002D7
  000002D1: 81 CD 00 80 00 00  or          ebp,8000h
  000002D7: 66 89 6F 04        mov         word ptr [edi+4],bp
  000002DB: 8A 46 15           mov         al,byte ptr [esi+15h]
  000002DE: 3C 04              cmp         al,4
  000002E0: 74 20              je          00000302
  000002E2: 3C 08              cmp         al,8
  000002E4: 75 07              jne         000002ED
  000002E6: BB 10 00 00 00     mov         ebx,10h
  000002EB: EB 15              jmp         00000302
  000002ED: 3C 0C              cmp         al,0Ch
  000002EF: 75 07              jne         000002F8
  000002F1: BB 20 00 00 00     mov         ebx,20h
  000002F6: EB 0A              jmp         00000302
  000002F8: 3C 10              cmp         al,10h
  000002FA: B9 30 00 00 00     mov         ecx,30h
  000002FF: 0F 44 D9           cmove       ebx,ecx
  00000302: 80 7E 13 00        cmp         byte ptr [esi+13h],0
  00000306: 74 03              je          0000030B
  00000308: 83 CB 40           or          ebx,40h
  0000030B: 80 7E 14 00        cmp         byte ptr [esi+14h],0
  0000030F: 74 06              je          00000317
  00000311: 81 CB 80 00 00 00  or          ebx,80h
  00000317: 8A 46 12           mov         al,byte ptr [esi+12h]
  0000031A: 3C 04              cmp         al,4
  0000031C: 74 19              je          00000337
  0000031E: 3C 08              cmp         al,8
  00000320: 75 05              jne         00000327
  00000322: 83 CB 01           or          ebx,1
  00000325: EB 10              jmp         00000337
  00000327: 3C 0C              cmp         al,0Ch
  00000329: 75 05              jne         00000330
  0000032B: 83 CB 02           or          ebx,2
  0000032E: EB 07              jmp         00000337
  00000330: 3C 10              cmp         al,10h
  00000332: 75 03              jne         00000337
  00000334: 83 CB 03           or          ebx,3
  00000337: 80 7E 10 00        cmp         byte ptr [esi+10h],0
  0000033B: 74 03              je          00000340
  0000033D: 83 CB 04           or          ebx,4
  00000340: 80 7E 11 00        cmp         byte ptr [esi+11h],0
  00000344: 74 03              je          00000349
  00000346: 83 CB 08           or          ebx,8
  00000349: 66 89 5F 10        mov         word ptr [edi+10h],bx
  0000034D: 8A 4E 16           mov         cl,byte ptr [esi+16h]
  00000350: 88 4F 1C           mov         byte ptr [edi+1Ch],cl
  00000353: 0F B6 46 17        movzx       eax,byte ptr [esi+17h]
  00000357: C0 E0 04           shl         al,4
  0000035A: 0A C1              or          al,cl
  0000035C: 88 47 1C           mov         byte ptr [edi+1Ch],al
  0000035F: 8A 4E 18           mov         cl,byte ptr [esi+18h]
  00000362: 88 4F 1D           mov         byte ptr [edi+1Dh],cl
  00000365: 0F B6 46 19        movzx       eax,byte ptr [esi+19h]
  00000369: C0 E0 04           shl         al,4
  0000036C: 0A C1              or          al,cl
  0000036E: 88 47 1D           mov         byte ptr [edi+1Dh],al
  00000371: 8A 4E 1A           mov         cl,byte ptr [esi+1Ah]
  00000374: 88 4F 1E           mov         byte ptr [edi+1Eh],cl
  00000377: 0F B6 46 1B        movzx       eax,byte ptr [esi+1Bh]
  0000037B: C0 E0 04           shl         al,4
  0000037E: 0A C1              or          al,cl
  00000380: 88 47 1E           mov         byte ptr [edi+1Eh],al
  00000383: 8A 4E 1C           mov         cl,byte ptr [esi+1Ch]
  00000386: 88 4F 1F           mov         byte ptr [edi+1Fh],cl
  00000389: 0F B6 46 1D        movzx       eax,byte ptr [esi+1Dh]
  0000038D: C0 E0 04           shl         al,4
  00000390: 0A C1              or          al,cl
  00000392: 88 47 1F           mov         byte ptr [edi+1Fh],al
  00000395: 8A 4E 1E           mov         cl,byte ptr [esi+1Eh]
  00000398: 88 4F 20           mov         byte ptr [edi+20h],cl
  0000039B: 0F B6 46 1F        movzx       eax,byte ptr [esi+1Fh]
  0000039F: C0 E0 04           shl         al,4
  000003A2: 0A C1              or          al,cl
  000003A4: 88 47 20           mov         byte ptr [edi+20h],al
  000003A7: 0F B7 87 22 08 00  movzx       eax,word ptr [edi+822h]
            00
  000003AE: 66 85 C0           test        ax,ax
  000003B1: 75 05              jne         000003B8
  000003B3: B8 56 00 00 00     mov         eax,56h
  000003B8: 66 89 47 22        mov         word ptr [edi+22h],ax
  000003BC: 8B CF              mov         ecx,edi
  000003BE: 8D 44 24 18        lea         eax,[esp+18h]
  000003C2: C6 87 8E 00 00 00  mov         byte ptr [edi+8Eh],48h
            48
  000003C9: 50                 push        eax
  000003CA: C7 44 24 1C 02 03  mov         dword ptr [esp+1Ch],302h
            00 00
  000003D2: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  000003D7: 6A 00              push        0
  000003D9: 8B CF              mov         ecx,edi
  000003DB: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  000003E0: 8B 07              mov         eax,dword ptr [edi]
  000003E2: 8B CF              mov         ecx,edi
  000003E4: FF 50 04           call        dword ptr [eax+4]
  000003E7: 8B 07              mov         eax,dword ptr [edi]
  000003E9: 8B CF              mov         ecx,edi
  000003EB: C7 87 08 08 00 00  mov         dword ptr [edi+808h],0
            00 00 00 00
  000003F5: FF 50 20           call        dword ptr [eax+20h]
  000003F8: 8D 4F 04           lea         ecx,[edi+4]
  000003FB: E8 00 00 00 00     call        ?Write@TEeData@@QAEHXZ
  00000400: 85 C0              test        eax,eax
  00000402: 75 12              jne         00000416
  00000404: 5E                 pop         esi
  00000405: 5F                 pop         edi
  00000406: 5D                 pop         ebp
  00000407: B8 0C 00 00 00     mov         eax,0Ch
  0000040C: 5B                 pop         ebx
  0000040D: 81 C4 A4 00 00 00  add         esp,0A4h
  00000413: C2 14 00           ret         14h
  00000416: 8D 4F 04           lea         ecx,[edi+4]
  00000419: E8 00 00 00 00     call        ?Confirm@TEeData@@QAEHXZ
  0000041E: F7 D8              neg         eax
  00000420: 5E                 pop         esi
  00000421: 1B C0              sbb         eax,eax
  00000423: 5F                 pop         edi
  00000424: 83 E0 F4           and         eax,0FFFFFFF4h
  00000427: 5D                 pop         ebp
  00000428: 83 C0 0C           add         eax,0Ch
  0000042B: 5B                 pop         ebx
  0000042C: 81 C4 A4 00 00 00  add         esp,0A4h
  00000432: C2 14 00           ret         14h
  00000435: 5E                 pop         esi
  00000436: 5F                 pop         edi
  00000437: 5D                 pop         ebp
  00000438: B8 06 00 00 00     mov         eax,6
  0000043D: 5B                 pop         ebx
  0000043E: 81 C4 A4 00 00 00  add         esp,0A4h
  00000444: C2 14 00           ret         14h
  00000447: 5F                 pop         edi
  00000448: 5D                 pop         ebp
  00000449: B8 06 00 00 00     mov         eax,6
  0000044E: 5B                 pop         ebx
  0000044F: 81 C4 A4 00 00 00  add         esp,0A4h
  00000455: C2 14 00           ret         14h

?Read@TFtEE232H@@UAEHXZ (public: virtual int __thiscall TFtEE232H::Read(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ?Read@TFtE2Data@@UAEHXZ
  00000008: 85 C0              test        eax,eax
  0000000A: 75 02              jne         0000000E
  0000000C: 5E                 pop         esi
  0000000D: C3                 ret
  0000000E: 0F B7 46 22        movzx       eax,word ptr [esi+22h]
  00000012: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  00000019: 83 F8 56           cmp         eax,56h
  0000001C: 74 20              je          0000003E
  0000001E: 83 F8 66           cmp         eax,66h
  00000021: 74 1B              je          0000003E
  00000023: B9 31 52 00 00     mov         ecx,5231h
  00000028: 66 3B C1           cmp         ax,cx
  0000002B: 74 11              je          0000003E
  0000002D: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],40h
            40 00 00 00
  00000037: B8 01 00 00 00     mov         eax,1
  0000003C: 5E                 pop         esi
  0000003D: C3                 ret
  0000003E: 83 AE 24 08 00 00  sub         dword ptr [esi+824h],0FFFFFF80h
            80
  00000045: B8 01 00 00 00     mov         eax,1
  0000004A: 83 AE 28 08 00 00  sub         dword ptr [esi+828h],0FFFFFF80h
            80
  00000051: 83 AE 2C 08 00 00  sub         dword ptr [esi+82Ch],0FFFFFF80h
            80
  00000058: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  00000062: 5E                 pop         esi
  00000063: C3                 ret

?ReadAndParse@TFtEE232H@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE232H::ReadAndParse(void *,char *,char *,char *,char *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 53                 push        ebx
  00000004: 55                 push        ebp
  00000005: 56                 push        esi
  00000006: 8B 74 24 50        mov         esi,dword ptr [esp+50h]
  0000000A: 57                 push        edi
  0000000B: 8B F9              mov         edi,ecx
  0000000D: 85 F6              test        esi,esi
  0000000F: 0F 84 B4 02 00 00  je          000002C9
  00000015: 83 7C 24 58 00     cmp         dword ptr [esp+58h],0
  0000001A: 0F 84 A9 02 00 00  je          000002C9
  00000020: 8B 5C 24 5C        mov         ebx,dword ptr [esp+5Ch]
  00000024: 85 DB              test        ebx,ebx
  00000026: 0F 84 9D 02 00 00  je          000002C9
  0000002C: 8B 6C 24 60        mov         ebp,dword ptr [esp+60h]
  00000030: 85 ED              test        ebp,ebp
  00000032: 0F 84 91 02 00 00  je          000002C9
  00000038: 83 7C 24 64 00     cmp         dword ptr [esp+64h],0
  0000003D: 0F 84 86 02 00 00  je          000002C9
  00000043: 8B 07              mov         eax,dword ptr [edi]
  00000045: FF 10              call        dword ptr [eax]
  00000047: 85 C0              test        eax,eax
  00000049: 0F 84 6B 02 00 00  je          000002BA
  0000004F: 66 8B 47 22        mov         ax,word ptr [edi+22h]
  00000053: 8B CF              mov         ecx,edi
  00000055: 66 89 87 22 08 00  mov         word ptr [edi+822h],ax
            00
  0000005C: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  00000061: 0F B7 C0           movzx       eax,ax
  00000064: 66 85 C0           test        ax,ax
  00000067: 75 0F              jne         00000078
  00000069: 5F                 pop         edi
  0000006A: 5E                 pop         esi
  0000006B: 5D                 pop         ebp
  0000006C: B8 0E 00 00 00     mov         eax,0Eh
  00000071: 5B                 pop         ebx
  00000072: 83 C4 40           add         esp,40h
  00000075: C2 14 00           ret         14h
  00000078: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000007D: 66 3B C1           cmp         ax,cx
  00000080: 75 0F              jne         00000091
  00000082: 5F                 pop         edi
  00000083: 5E                 pop         esi
  00000084: 5D                 pop         ebp
  00000085: B8 0F 00 00 00     mov         eax,0Fh
  0000008A: 5B                 pop         ebx
  0000008B: 83 C4 40           add         esp,40h
  0000008E: C2 14 00           ret         14h
  00000091: 8B CF              mov         ecx,edi
  00000093: 66 89 46 04        mov         word ptr [esi+4],ax
  00000097: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  0000009C: 66 89 46 06        mov         word ptr [esi+6],ax
  000000A0: 8B CF              mov         ecx,edi
  000000A2: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  000000A6: C1 E8 03           shr         eax,3
  000000A9: 24 01              and         al,1
  000000AB: 88 46 08           mov         byte ptr [esi+8],al
  000000AE: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  000000B3: 8B CF              mov         ecx,edi
  000000B5: 66 89 46 0A        mov         word ptr [esi+0Ah],ax
  000000B9: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  000000BE: 8A C8              mov         cl,al
  000000C0: C0 E8 06           shr         al,6
  000000C3: 24 01              and         al,1
  000000C5: C0 E9 05           shr         cl,5
  000000C8: 88 46 0C           mov         byte ptr [esi+0Ch],al
  000000CB: 80 E1 01           and         cl,1
  000000CE: 88 4E 0D           mov         byte ptr [esi+0Dh],cl
  000000D1: 8B CF              mov         ecx,edi
  000000D3: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  000000D7: C1 E8 02           shr         eax,2
  000000DA: 24 01              and         al,1
  000000DC: 88 46 0E           mov         byte ptr [esi+0Eh],al
  000000DF: 8D 44 24 10        lea         eax,[esp+10h]
  000000E3: 50                 push        eax
  000000E4: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  000000E9: 8B 54 24 58        mov         edx,dword ptr [esp+58h]
  000000ED: 8D 4C 24 10        lea         ecx,[esp+10h]
  000000F1: 8B C1              mov         eax,ecx
  000000F3: 2B D0              sub         edx,eax
  000000F5: 8A 01              mov         al,byte ptr [ecx]
  000000F7: 8D 49 01           lea         ecx,[ecx+1]
  000000FA: 88 44 0A FF        mov         byte ptr [edx+ecx-1],al
  000000FE: 84 C0              test        al,al
  00000100: 75 F3              jne         000000F5
  00000102: 8D 44 24 10        lea         eax,[esp+10h]
  00000106: 8B CF              mov         ecx,edi
  00000108: 50                 push        eax
  00000109: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  0000010E: 8D 4C 24 10        lea         ecx,[esp+10h]
  00000112: 8B C1              mov         eax,ecx
  00000114: 2B D8              sub         ebx,eax
  00000116: 8A 01              mov         al,byte ptr [ecx]
  00000118: 8D 49 01           lea         ecx,[ecx+1]
  0000011B: 88 44 0B FF        mov         byte ptr [ebx+ecx-1],al
  0000011F: 84 C0              test        al,al
  00000121: 75 F3              jne         00000116
  00000123: 8D 44 24 10        lea         eax,[esp+10h]
  00000127: 8B CF              mov         ecx,edi
  00000129: 50                 push        eax
  0000012A: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  0000012F: 8D 4C 24 10        lea         ecx,[esp+10h]
  00000133: 8B C1              mov         eax,ecx
  00000135: 2B E8              sub         ebp,eax
  00000137: 8A 01              mov         al,byte ptr [ecx]
  00000139: 8D 49 01           lea         ecx,[ecx+1]
  0000013C: 88 44 29 FF        mov         byte ptr [ecx+ebp-1],al
  00000140: 84 C0              test        al,al
  00000142: 75 F3              jne         00000137
  00000144: 8D 44 24 10        lea         eax,[esp+10h]
  00000148: 8B CF              mov         ecx,edi
  0000014A: 50                 push        eax
  0000014B: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  00000150: 8B 54 24 64        mov         edx,dword ptr [esp+64h]
  00000154: 8D 4C 24 10        lea         ecx,[esp+10h]
  00000158: 8B C1              mov         eax,ecx
  0000015A: 2B D0              sub         edx,eax
  0000015C: 8D 64 24 00        lea         esp,[esp]
  00000160: 8A 01              mov         al,byte ptr [ecx]
  00000162: 8D 49 01           lea         ecx,[ecx+1]
  00000165: 88 44 11 FF        mov         byte ptr [ecx+edx-1],al
  00000169: 84 C0              test        al,al
  0000016B: 75 F3              jne         00000160
  0000016D: 0F B7 4F 04        movzx       ecx,word ptr [edi+4]
  00000171: 8A C1              mov         al,cl
  00000173: 24 01              and         al,1
  00000175: 88 46 23           mov         byte ptr [esi+23h],al
  00000178: 8A C1              mov         al,cl
  0000017A: D0 E8              shr         al,1
  0000017C: 24 01              and         al,1
  0000017E: 88 46 24           mov         byte ptr [esi+24h],al
  00000181: 8A C1              mov         al,cl
  00000183: C0 E8 02           shr         al,2
  00000186: 24 01              and         al,1
  00000188: 88 46 25           mov         byte ptr [esi+25h],al
  0000018B: 8A C1              mov         al,cl
  0000018D: C0 E8 03           shr         al,3
  00000190: 24 01              and         al,1
  00000192: 88 46 26           mov         byte ptr [esi+26h],al
  00000195: 8B C1              mov         eax,ecx
  00000197: C1 E8 08           shr         eax,8
  0000019A: 24 01              and         al,1
  0000019C: 88 46 20           mov         byte ptr [esi+20h],al
  0000019F: 8B C1              mov         eax,ecx
  000001A1: C1 E8 09           shr         eax,9
  000001A4: 24 01              and         al,1
  000001A6: 88 46 21           mov         byte ptr [esi+21h],al
  000001A9: 8B C1              mov         eax,ecx
  000001AB: C1 E8 0A           shr         eax,0Ah
  000001AE: 24 01              and         al,1
  000001B0: 88 46 22           mov         byte ptr [esi+22h],al
  000001B3: 8A C1              mov         al,cl
  000001B5: C0 E8 04           shr         al,4
  000001B8: C1 E9 0F           shr         ecx,0Fh
  000001BB: 24 01              and         al,1
  000001BD: 80 E1 01           and         cl,1
  000001C0: 88 46 28           mov         byte ptr [esi+28h],al
  000001C3: 88 4E 27           mov         byte ptr [esi+27h],cl
  000001C6: 0F B7 4F 10        movzx       ecx,word ptr [edi+10h]
  000001CA: 8B C1              mov         eax,ecx
  000001CC: 83 E0 30           and         eax,30h
  000001CF: 83 F8 30           cmp         eax,30h
  000001D2: 75 06              jne         000001DA
  000001D4: C6 46 15 10        mov         byte ptr [esi+15h],10h
  000001D8: EB 1F              jmp         000001F9
  000001DA: 83 F8 20           cmp         eax,20h
  000001DD: 75 06              jne         000001E5
  000001DF: C6 46 15 0C        mov         byte ptr [esi+15h],0Ch
  000001E3: EB 14              jmp         000001F9
  000001E5: 83 F8 10           cmp         eax,10h
  000001E8: 75 06              jne         000001F0
  000001EA: C6 46 15 08        mov         byte ptr [esi+15h],8
  000001EE: EB 09              jmp         000001F9
  000001F0: 66 85 C0           test        ax,ax
  000001F3: 75 04              jne         000001F9
  000001F5: C6 46 15 04        mov         byte ptr [esi+15h],4
  000001F9: 8A C1              mov         al,cl
  000001FB: C0 E8 06           shr         al,6
  000001FE: 24 01              and         al,1
  00000200: 88 46 13           mov         byte ptr [esi+13h],al
  00000203: 8A C1              mov         al,cl
  00000205: C0 E8 07           shr         al,7
  00000208: 24 01              and         al,1
  0000020A: 88 46 14           mov         byte ptr [esi+14h],al
  0000020D: 8B C1              mov         eax,ecx
  0000020F: 83 E0 03           and         eax,3
  00000212: 83 F8 03           cmp         eax,3
  00000215: 75 06              jne         0000021D
  00000217: C6 46 12 10        mov         byte ptr [esi+12h],10h
  0000021B: EB 1F              jmp         0000023C
  0000021D: 83 F8 02           cmp         eax,2
  00000220: 75 06              jne         00000228
  00000222: C6 46 12 0C        mov         byte ptr [esi+12h],0Ch
  00000226: EB 14              jmp         0000023C
  00000228: 83 F8 01           cmp         eax,1
  0000022B: 75 06              jne         00000233
  0000022D: C6 46 12 08        mov         byte ptr [esi+12h],8
  00000231: EB 09              jmp         0000023C
  00000233: 66 85 C0           test        ax,ax
  00000236: 75 04              jne         0000023C
  00000238: C6 46 12 04        mov         byte ptr [esi+12h],4
  0000023C: 8A C1              mov         al,cl
  0000023E: C0 E9 03           shr         cl,3
  00000241: C0 E8 02           shr         al,2
  00000244: 80 E1 01           and         cl,1
  00000247: 24 01              and         al,1
  00000249: 88 4E 11           mov         byte ptr [esi+11h],cl
  0000024C: 88 46 10           mov         byte ptr [esi+10h],al
  0000024F: 8A 47 1C           mov         al,byte ptr [edi+1Ch]
  00000252: 24 0F              and         al,0Fh
  00000254: 88 46 16           mov         byte ptr [esi+16h],al
  00000257: 8A 47 1C           mov         al,byte ptr [edi+1Ch]
  0000025A: C0 F8 04           sar         al,4
  0000025D: 24 0F              and         al,0Fh
  0000025F: 88 46 17           mov         byte ptr [esi+17h],al
  00000262: 8A 47 1D           mov         al,byte ptr [edi+1Dh]
  00000265: 24 0F              and         al,0Fh
  00000267: 88 46 18           mov         byte ptr [esi+18h],al
  0000026A: 8A 47 1D           mov         al,byte ptr [edi+1Dh]
  0000026D: C0 F8 04           sar         al,4
  00000270: 24 0F              and         al,0Fh
  00000272: 88 46 19           mov         byte ptr [esi+19h],al
  00000275: 8A 47 1E           mov         al,byte ptr [edi+1Eh]
  00000278: 24 0F              and         al,0Fh
  0000027A: 88 46 1A           mov         byte ptr [esi+1Ah],al
  0000027D: 8A 47 1E           mov         al,byte ptr [edi+1Eh]
  00000280: C0 F8 04           sar         al,4
  00000283: 24 0F              and         al,0Fh
  00000285: 88 46 1B           mov         byte ptr [esi+1Bh],al
  00000288: 8A 47 1F           mov         al,byte ptr [edi+1Fh]
  0000028B: 24 0F              and         al,0Fh
  0000028D: 88 46 1C           mov         byte ptr [esi+1Ch],al
  00000290: 8A 47 1F           mov         al,byte ptr [edi+1Fh]
  00000293: C0 F8 04           sar         al,4
  00000296: 24 0F              and         al,0Fh
  00000298: 88 46 1D           mov         byte ptr [esi+1Dh],al
  0000029B: 8A 47 20           mov         al,byte ptr [edi+20h]
  0000029E: 24 0F              and         al,0Fh
  000002A0: 88 46 1E           mov         byte ptr [esi+1Eh],al
  000002A3: 8A 47 20           mov         al,byte ptr [edi+20h]
  000002A6: C0 F8 04           sar         al,4
  000002A9: 24 0F              and         al,0Fh
  000002AB: 5F                 pop         edi
  000002AC: 88 46 1F           mov         byte ptr [esi+1Fh],al
  000002AF: 33 C0              xor         eax,eax
  000002B1: 5E                 pop         esi
  000002B2: 5D                 pop         ebp
  000002B3: 5B                 pop         ebx
  000002B4: 83 C4 40           add         esp,40h
  000002B7: C2 14 00           ret         14h
  000002BA: 5F                 pop         edi
  000002BB: 5E                 pop         esi
  000002BC: 5D                 pop         ebp
  000002BD: B8 0B 00 00 00     mov         eax,0Bh
  000002C2: 5B                 pop         ebx
  000002C3: 83 C4 40           add         esp,40h
  000002C6: C2 14 00           ret         14h
  000002C9: 5F                 pop         edi
  000002CA: 5E                 pop         esi
  000002CB: 5D                 pop         ebp
  000002CC: B8 06 00 00 00     mov         eax,6
  000002D1: 5B                 pop         ebx
  000002D2: 83 C4 40           add         esp,40h
  000002D5: C2 14 00           ret         14h

?ReadAndParse@TFtEE232H@@UAEKPAX@Z (public: virtual unsigned long __thiscall TFtEE232H::ReadAndParse(void *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 57                 push        edi
  00000004: 8B F9              mov         edi,ecx
  00000006: 8B 07              mov         eax,dword ptr [edi]
  00000008: FF 10              call        dword ptr [eax]
  0000000A: 85 C0              test        eax,eax
  0000000C: 75 0C              jne         0000001A
  0000000E: B8 0B 00 00 00     mov         eax,0Bh
  00000013: 5F                 pop         edi
  00000014: 83 C4 40           add         esp,40h
  00000017: C2 04 00           ret         4
  0000001A: 66 8B 47 22        mov         ax,word ptr [edi+22h]
  0000001E: 8B CF              mov         ecx,edi
  00000020: 66 89 87 22 08 00  mov         word ptr [edi+822h],ax
            00
  00000027: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  0000002C: 0F B7 C0           movzx       eax,ax
  0000002F: 66 85 C0           test        ax,ax
  00000032: 75 0C              jne         00000040
  00000034: B8 0E 00 00 00     mov         eax,0Eh
  00000039: 5F                 pop         edi
  0000003A: 83 C4 40           add         esp,40h
  0000003D: C2 04 00           ret         4
  00000040: B9 FF FF 00 00     mov         ecx,0FFFFh
  00000045: 66 3B C1           cmp         ax,cx
  00000048: 75 0C              jne         00000056
  0000004A: B8 0F 00 00 00     mov         eax,0Fh
  0000004F: 5F                 pop         edi
  00000050: 83 C4 40           add         esp,40h
  00000053: C2 04 00           ret         4
  00000056: 56                 push        esi
  00000057: 8B 74 24 4C        mov         esi,dword ptr [esp+4Ch]
  0000005B: 8B CF              mov         ecx,edi
  0000005D: 66 89 46 0C        mov         word ptr [esi+0Ch],ax
  00000061: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  00000066: 66 89 46 0E        mov         word ptr [esi+0Eh],ax
  0000006A: 8B CF              mov         ecx,edi
  0000006C: 8D 44 24 08        lea         eax,[esp+8]
  00000070: 50                 push        eax
  00000071: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  00000076: 8B 4E 10           mov         ecx,dword ptr [esi+10h]
  00000079: 85 C9              test        ecx,ecx
  0000007B: 74 12              je          0000008F
  0000007D: 8D 54 24 08        lea         edx,[esp+8]
  00000081: 8A 02              mov         al,byte ptr [edx]
  00000083: 8D 52 01           lea         edx,[edx+1]
  00000086: 88 01              mov         byte ptr [ecx],al
  00000088: 8D 49 01           lea         ecx,[ecx+1]
  0000008B: 84 C0              test        al,al
  0000008D: 75 F2              jne         00000081
  0000008F: 8D 44 24 08        lea         eax,[esp+8]
  00000093: 8B CF              mov         ecx,edi
  00000095: 50                 push        eax
  00000096: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  0000009B: 8B 4E 14           mov         ecx,dword ptr [esi+14h]
  0000009E: 85 C9              test        ecx,ecx
  000000A0: 74 12              je          000000B4
  000000A2: 8D 54 24 08        lea         edx,[esp+8]
  000000A6: 8A 02              mov         al,byte ptr [edx]
  000000A8: 8D 52 01           lea         edx,[edx+1]
  000000AB: 88 01              mov         byte ptr [ecx],al
  000000AD: 8D 49 01           lea         ecx,[ecx+1]
  000000B0: 84 C0              test        al,al
  000000B2: 75 F2              jne         000000A6
  000000B4: 8D 44 24 08        lea         eax,[esp+8]
  000000B8: 8B CF              mov         ecx,edi
  000000BA: 50                 push        eax
  000000BB: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  000000C0: 8B 4E 18           mov         ecx,dword ptr [esi+18h]
  000000C3: 85 C9              test        ecx,ecx
  000000C5: 74 17              je          000000DE
  000000C7: 8D 54 24 08        lea         edx,[esp+8]
  000000CB: EB 03              jmp         000000D0
  000000CD: 8D 49 00           lea         ecx,[ecx]
  000000D0: 8A 02              mov         al,byte ptr [edx]
  000000D2: 8D 52 01           lea         edx,[edx+1]
  000000D5: 88 01              mov         byte ptr [ecx],al
  000000D7: 8D 49 01           lea         ecx,[ecx+1]
  000000DA: 84 C0              test        al,al
  000000DC: 75 F2              jne         000000D0
  000000DE: 8D 44 24 08        lea         eax,[esp+8]
  000000E2: 8B CF              mov         ecx,edi
  000000E4: 50                 push        eax
  000000E5: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  000000EA: 8B 4E 1C           mov         ecx,dword ptr [esi+1Ch]
  000000ED: 85 C9              test        ecx,ecx
  000000EF: 74 12              je          00000103
  000000F1: 8D 54 24 08        lea         edx,[esp+8]
  000000F5: 8A 02              mov         al,byte ptr [edx]
  000000F7: 8D 52 01           lea         edx,[edx+1]
  000000FA: 88 01              mov         byte ptr [ecx],al
  000000FC: 8D 49 01           lea         ecx,[ecx+1]
  000000FF: 84 C0              test        al,al
  00000101: 75 F2              jne         000000F5
  00000103: 8B CF              mov         ecx,edi
  00000105: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  0000010A: 8B CF              mov         ecx,edi
  0000010C: 66 89 46 20        mov         word ptr [esi+20h],ax
  00000110: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QAEGXZ
  00000115: 33 C9              xor         ecx,ecx
  00000117: 66 85 C0           test        ax,ax
  0000011A: 0F 94 C1           sete        cl
  0000011D: 66 89 4E 22        mov         word ptr [esi+22h],cx
  00000121: 8B CF              mov         ecx,edi
  00000123: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  00000128: 8A C8              mov         cl,al
  0000012A: C7 46 28 00 00 00  mov         dword ptr [esi+28h],0
            00
  00000131: C0 E8 05           shr         al,5
  00000134: 24 01              and         al,1
  00000136: C0 E9 06           shr         cl,6
  00000139: 0F B6 C0           movzx       eax,al
  0000013C: 80 E1 01           and         cl,1
  0000013F: 66 89 46 26        mov         word ptr [esi+26h],ax
  00000143: C7 46 2C 00 00 00  mov         dword ptr [esi+2Ch],0
            00
  0000014A: C7 46 30 00 00 00  mov         dword ptr [esi+30h],0
            00
  00000151: C7 46 38 00 00 00  mov         dword ptr [esi+38h],0
            00
  00000158: C7 46 3C 00 00 00  mov         dword ptr [esi+3Ch],0
            00
  0000015F: C7 46 40 00 00 00  mov         dword ptr [esi+40h],0
            00
  00000166: 66 C7 46 35 00 00  mov         word ptr [esi+35h],0
  0000016C: C6 46 37 00        mov         byte ptr [esi+37h],0
  00000170: C6 46 34 00        mov         byte ptr [esi+34h],0
  00000174: C7 46 44 00 00 00  mov         dword ptr [esi+44h],0
            00
  0000017B: C7 46 55 00 00 00  mov         dword ptr [esi+55h],0
            00
  00000182: C7 46 48 00 00 00  mov         dword ptr [esi+48h],0
            00
  00000189: C7 46 4C 00 00 00  mov         dword ptr [esi+4Ch],0
            00
  00000190: C7 46 50 00 00 00  mov         dword ptr [esi+50h],0
            00
  00000197: C6 46 54 00        mov         byte ptr [esi+54h],0
  0000019B: C7 46 65 00 00 00  mov         dword ptr [esi+65h],0
            00
  000001A2: C7 46 69 00 00 00  mov         dword ptr [esi+69h],0
            00
  000001A9: 66 C7 46 5A 00 00  mov         word ptr [esi+5Ah],0
  000001AF: C6 46 59 00        mov         byte ptr [esi+59h],0
  000001B3: 66 C7 46 5D 00 00  mov         word ptr [esi+5Dh],0
  000001B9: C6 46 5C 00        mov         byte ptr [esi+5Ch],0
  000001BD: 66 C7 46 60 00 00  mov         word ptr [esi+60h],0
  000001C3: C6 46 5F 00        mov         byte ptr [esi+5Fh],0
  000001C7: 66 C7 46 63 00 00  mov         word ptr [esi+63h],0
  000001CD: C6 46 62 00        mov         byte ptr [esi+62h],0
  000001D1: C7 86 80 00 00 00  mov         dword ptr [esi+80h],0
            00 00 00 00
  000001DB: 66 C7 46 6E 00 00  mov         word ptr [esi+6Eh],0
  000001E1: C7 46 7C 00 00 00  mov         dword ptr [esi+7Ch],0
            00
  000001E8: 66 C7 46 71 00 00  mov         word ptr [esi+71h],0
  000001EE: C6 46 70 00        mov         byte ptr [esi+70h],0
  000001F2: 66 C7 46 74 00 00  mov         word ptr [esi+74h],0
  000001F8: C6 46 73 00        mov         byte ptr [esi+73h],0
  000001FC: 66 C7 46 77 00 00  mov         word ptr [esi+77h],0
  00000202: C6 46 76 00        mov         byte ptr [esi+76h],0
  00000206: 0F B6 C9           movzx       ecx,cl
  00000209: 66 89 4E 24        mov         word ptr [esi+24h],cx
  0000020D: 66 C7 46 7A 00 00  mov         word ptr [esi+7Ah],0
  00000213: C6 46 79 00        mov         byte ptr [esi+79h],0
  00000217: 0F B7 4F 04        movzx       ecx,word ptr [edi+4]
  0000021B: 8A C1              mov         al,cl
  0000021D: 24 01              and         al,1
  0000021F: 88 86 96 00 00 00  mov         byte ptr [esi+96h],al
  00000225: 8A C1              mov         al,cl
  00000227: D0 E8              shr         al,1
  00000229: 24 01              and         al,1
  0000022B: 88 86 97 00 00 00  mov         byte ptr [esi+97h],al
  00000231: 8A C1              mov         al,cl
  00000233: C0 E8 02           shr         al,2
  00000236: 24 01              and         al,1
  00000238: 88 86 98 00 00 00  mov         byte ptr [esi+98h],al
  0000023E: 8A C1              mov         al,cl
  00000240: C0 E8 03           shr         al,3
  00000243: 24 01              and         al,1
  00000245: 88 86 99 00 00 00  mov         byte ptr [esi+99h],al
  0000024B: 8B C1              mov         eax,ecx
  0000024D: C1 E8 08           shr         eax,8
  00000250: 24 01              and         al,1
  00000252: 88 86 9A 00 00 00  mov         byte ptr [esi+9Ah],al
  00000258: 8B C1              mov         eax,ecx
  0000025A: C1 E8 09           shr         eax,9
  0000025D: 24 01              and         al,1
  0000025F: 88 86 9B 00 00 00  mov         byte ptr [esi+9Bh],al
  00000265: 8B C1              mov         eax,ecx
  00000267: C1 E8 0A           shr         eax,0Ah
  0000026A: 24 01              and         al,1
  0000026C: 88 86 9C 00 00 00  mov         byte ptr [esi+9Ch],al
  00000272: 8A C1              mov         al,cl
  00000274: C0 E8 04           shr         al,4
  00000277: 24 01              and         al,1
  00000279: C1 E9 0F           shr         ecx,0Fh
  0000027C: 88 86 9D 00 00 00  mov         byte ptr [esi+9Dh],al
  00000282: 80 E1 01           and         cl,1
  00000285: 88 8E 9E 00 00 00  mov         byte ptr [esi+9Eh],cl
  0000028B: 0F B7 4F 0E        movzx       ecx,word ptr [edi+0Eh]
  0000028F: 8A C1              mov         al,cl
  00000291: C0 E9 03           shr         cl,3
  00000294: C0 E8 02           shr         al,2
  00000297: 80 E1 01           and         cl,1
  0000029A: 24 01              and         al,1
  0000029C: 88 86 84 00 00 00  mov         byte ptr [esi+84h],al
  000002A2: 88 8E 85 00 00 00  mov         byte ptr [esi+85h],cl
  000002A8: 0F B7 4F 10        movzx       ecx,word ptr [edi+10h]
  000002AC: 8A C1              mov         al,cl
  000002AE: 24 03              and         al,3
  000002B0: 3C 03              cmp         al,3
  000002B2: 75 09              jne         000002BD
  000002B4: C6 86 88 00 00 00  mov         byte ptr [esi+88h],10h
            10
  000002BB: EB 21              jmp         000002DE
  000002BD: F6 C1 02           test        cl,2
  000002C0: 74 09              je          000002CB
  000002C2: C6 86 88 00 00 00  mov         byte ptr [esi+88h],0Ch
            0C
  000002C9: EB 13              jmp         000002DE
  000002CB: F6 C1 01           test        cl,1
  000002CE: 0F 95 C0           setne       al
  000002D1: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  000002D8: 88 86 88 00 00 00  mov         byte ptr [esi+88h],al
  000002DE: 8A C1              mov         al,cl
  000002E0: C0 E8 02           shr         al,2
  000002E3: 24 01              and         al,1
  000002E5: 88 86 86 00 00 00  mov         byte ptr [esi+86h],al
  000002EB: 8A C1              mov         al,cl
  000002ED: C0 E8 03           shr         al,3
  000002F0: 24 01              and         al,1
  000002F2: 88 86 87 00 00 00  mov         byte ptr [esi+87h],al
  000002F8: 8A C1              mov         al,cl
  000002FA: 24 30              and         al,30h
  000002FC: 3C 30              cmp         al,30h
  000002FE: 75 09              jne         00000309
  00000300: C6 86 8B 00 00 00  mov         byte ptr [esi+8Bh],10h
            10
  00000307: EB 21              jmp         0000032A
  00000309: F6 C1 20           test        cl,20h
  0000030C: 74 09              je          00000317
  0000030E: C6 86 8B 00 00 00  mov         byte ptr [esi+8Bh],0Ch
            0C
  00000315: EB 13              jmp         0000032A
  00000317: F6 C1 10           test        cl,10h
  0000031A: 0F 95 C0           setne       al
  0000031D: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  00000324: 88 86 8B 00 00 00  mov         byte ptr [esi+8Bh],al
  0000032A: 8A C1              mov         al,cl
  0000032C: C0 E9 07           shr         cl,7
  0000032F: C0 E8 06           shr         al,6
  00000332: 80 E1 01           and         cl,1
  00000335: 24 01              and         al,1
  00000337: 88 86 89 00 00 00  mov         byte ptr [esi+89h],al
  0000033D: 88 8E 8A 00 00 00  mov         byte ptr [esi+8Ah],cl
  00000343: 8A 47 1C           mov         al,byte ptr [edi+1Ch]
  00000346: 24 0F              and         al,0Fh
  00000348: 88 86 8C 00 00 00  mov         byte ptr [esi+8Ch],al
  0000034E: 8A 47 1C           mov         al,byte ptr [edi+1Ch]
  00000351: C0 F8 04           sar         al,4
  00000354: 24 0F              and         al,0Fh
  00000356: 88 86 8D 00 00 00  mov         byte ptr [esi+8Dh],al
  0000035C: 8A 47 1D           mov         al,byte ptr [edi+1Dh]
  0000035F: 24 0F              and         al,0Fh
  00000361: 88 86 8E 00 00 00  mov         byte ptr [esi+8Eh],al
  00000367: 8A 47 1D           mov         al,byte ptr [edi+1Dh]
  0000036A: C0 F8 04           sar         al,4
  0000036D: 24 0F              and         al,0Fh
  0000036F: 88 86 8F 00 00 00  mov         byte ptr [esi+8Fh],al
  00000375: 8A 47 1E           mov         al,byte ptr [edi+1Eh]
  00000378: 24 0F              and         al,0Fh
  0000037A: 88 86 90 00 00 00  mov         byte ptr [esi+90h],al
  00000380: 8A 47 1E           mov         al,byte ptr [edi+1Eh]
  00000383: C0 F8 04           sar         al,4
  00000386: 24 0F              and         al,0Fh
  00000388: 88 86 91 00 00 00  mov         byte ptr [esi+91h],al
  0000038E: 8A 47 1F           mov         al,byte ptr [edi+1Fh]
  00000391: 24 0F              and         al,0Fh
  00000393: 88 86 92 00 00 00  mov         byte ptr [esi+92h],al
  00000399: 8A 47 1F           mov         al,byte ptr [edi+1Fh]
  0000039C: C0 F8 04           sar         al,4
  0000039F: 24 0F              and         al,0Fh
  000003A1: 88 86 93 00 00 00  mov         byte ptr [esi+93h],al
  000003A7: 8A 47 20           mov         al,byte ptr [edi+20h]
  000003AA: 24 0F              and         al,0Fh
  000003AC: 88 86 94 00 00 00  mov         byte ptr [esi+94h],al
  000003B2: 8A 47 20           mov         al,byte ptr [edi+20h]
  000003B5: C0 F8 04           sar         al,4
  000003B8: 24 0F              and         al,0Fh
  000003BA: 88 86 95 00 00 00  mov         byte ptr [esi+95h],al
  000003C0: 33 C0              xor         eax,eax
  000003C2: 5E                 pop         esi
  000003C3: 5F                 pop         edi
  000003C4: 83 C4 40           add         esp,40h
  000003C7: C2 04 00           ret         4

?SetRomType@TFtEE232H@@UAEXXZ (public: virtual void __thiscall TFtEE232H::SetRomType(void)):
  00000000: 51                 push        ecx
  00000001: 53                 push        ebx
  00000002: 56                 push        esi
  00000003: 8B F1              mov         esi,ecx
  00000005: C7 44 24 08 00 00  mov         dword ptr [esp+8],0
            00 00
  0000000D: 57                 push        edi
  0000000E: 8D 4E 04           lea         ecx,[esi+4]
  00000011: E8 00 00 00 00     call        ?Erase@TEeData@@QAEHXZ
  00000016: 68 C0 00 00 00     push        0C0h
  0000001B: 68 C0 00 00 00     push        0C0h
  00000020: 8D 4E 04           lea         ecx,[esi+4]
  00000023: E8 00 00 00 00     call        ?WriteWord@TEeData@@QAEHKG@Z
  00000028: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000002C: 50                 push        eax
  0000002D: 6A 40              push        40h
  0000002F: 8D 4E 04           lea         ecx,[esi+4]
  00000032: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000037: BB C0 00 00 00     mov         ebx,0C0h
  0000003C: 66 39 5C 24 0C     cmp         word ptr [esp+0Ch],bx
  00000041: 75 05              jne         00000048
  00000043: 8D 43 96           lea         eax,[ebx-6Ah]
  00000046: EB 2C              jmp         00000074
  00000048: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000004C: 50                 push        eax
  0000004D: 68 C0 00 00 00     push        0C0h
  00000052: 8D 4E 04           lea         ecx,[esi+4]
  00000055: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  0000005A: 66 39 5C 24 0C     cmp         word ptr [esp+0Ch],bx
  0000005F: 75 07              jne         00000068
  00000061: B8 66 00 00 00     mov         eax,66h
  00000066: EB 0C              jmp         00000074
  00000068: 33 C0              xor         eax,eax
  0000006A: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000074: 5F                 pop         edi
  00000075: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  0000007C: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  00000086: 5E                 pop         esi
  00000087: 5B                 pop         ebx
  00000088: 59                 pop         ecx
  00000089: C3                 ret

??0TFtEE232@@QAE@PAUft_private_vars@@@Z (public: __thiscall TFtEE232::TFtEE232(struct ft_private_vars *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAUft_private_vars@@@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE232@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001E: 5E                 pop         esi
  0000001F: C2 04 00           ret         4

??0TFtEE232@@QAE@PAX@Z (public: __thiscall TFtEE232::TFtEE232(void *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAX@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE232@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001E: 5E                 pop         esi
  0000001F: C2 04 00           ret         4

??0TFtEE232@@QAE@XZ (public: __thiscall TFtEE232::TFtEE232(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@XZ
  00000008: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE232@@6B@
  0000000E: 8B C6              mov         eax,esi
  00000010: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001A: 5E                 pop         esi
  0000001B: C3                 ret

?Init@TFtEE232@@UAEXPAX@Z (public: virtual void __thiscall TFtEE232::Init(void *)):
  00000000: 83 EC 0C           sub         esp,0Ch
  00000003: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000007: 53                 push        ebx
  00000008: 55                 push        ebp
  00000009: 56                 push        esi
  0000000A: 8A 58 0C           mov         bl,byte ptr [eax+0Ch]
  0000000D: 8B F1              mov         esi,ecx
  0000000F: 8B 08              mov         ecx,dword ptr [eax]
  00000011: 8A 78 0D           mov         bh,byte ptr [eax+0Dh]
  00000014: 0F B7 68 12        movzx       ebp,word ptr [eax+12h]
  00000018: 89 4C 24 10        mov         dword ptr [esp+10h],ecx
  0000001C: 8B 48 04           mov         ecx,dword ptr [eax+4]
  0000001F: 89 4C 24 14        mov         dword ptr [esp+14h],ecx
  00000023: 8A 48 0E           mov         cl,byte ptr [eax+0Eh]
  00000026: 88 4C 24 1C        mov         byte ptr [esp+1Ch],cl
  0000002A: 8A 48 0F           mov         cl,byte ptr [eax+0Fh]
  0000002D: 57                 push        edi
  0000002E: 88 4C 24 11        mov         byte ptr [esp+11h],cl
  00000032: 8D 7E 04           lea         edi,[esi+4]
  00000035: 8A 48 10           mov         cl,byte ptr [eax+10h]
  00000038: 68 00 08 00 00     push        800h
  0000003D: 88 4C 24 16        mov         byte ptr [esp+16h],cl
  00000041: 8A 48 11           mov         cl,byte ptr [eax+11h]
  00000044: 6A 00              push        0
  00000046: 57                 push        edi
  00000047: 88 4C 24 1F        mov         byte ptr [esp+1Fh],cl
  0000004B: E8 00 00 00 00     call        _memset
  00000050: 83 C4 0C           add         esp,0Ch
  00000053: C6 07 00           mov         byte ptr [edi],0
  00000056: 84 DB              test        bl,bl
  00000058: C7 46 05 00 03 04  mov         dword ptr [esi+5],1040300h
            01
  0000005F: 66 C7 46 09 60 00  mov         word ptr [esi+9],60h
  00000065: 0F 95 C0           setne       al
  00000068: 66 C7 46 0C A0 2D  mov         word ptr [esi+0Ch],2DA0h
  0000006E: C6 46 0E 00        mov         byte ptr [esi+0Eh],0
  00000072: 8D 04 45 02 00 00  lea         eax,[eax*2+2]
            00
  00000079: 88 46 0B           mov         byte ptr [esi+0Bh],al
  0000007C: 84 FF              test        bh,bh
  0000007E: 74 04              je          00000084
  00000080: C6 46 0E 01        mov         byte ptr [esi+0Eh],1
  00000084: 80 7C 24 20 00     cmp         byte ptr [esp+20h],0
  00000089: 74 04              je          0000008F
  0000008B: 80 4E 0E 02        or          byte ptr [esi+0Eh],2
  0000008F: 80 7C 24 11 00     cmp         byte ptr [esp+11h],0
  00000094: 74 04              je          0000009A
  00000096: 80 4E 0E 04        or          byte ptr [esi+0Eh],4
  0000009A: 80 7C 24 12 00     cmp         byte ptr [esp+12h],0
  0000009F: 74 04              je          000000A5
  000000A1: 80 4E 0E 08        or          byte ptr [esi+0Eh],8
  000000A5: 80 7C 24 13 00     cmp         byte ptr [esp+13h],0
  000000AA: 74 04              je          000000B0
  000000AC: 80 4E 0E 10        or          byte ptr [esi+0Eh],10h
  000000B0: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  000000B4: 8B CF              mov         ecx,edi
  000000B6: C7 46 0F 00 00 00  mov         dword ptr [esi+0Fh],14000000h
            14
  000000BD: 66 89 6E 10        mov         word ptr [esi+10h],bp
  000000C1: 8D 51 01           lea         edx,[ecx+1]
  000000C4: 8A 01              mov         al,byte ptr [ecx]
  000000C6: 41                 inc         ecx
  000000C7: 84 C0              test        al,al
  000000C9: 75 F9              jne         000000C4
  000000CB: 8B 5C 24 18        mov         ebx,dword ptr [esp+18h]
  000000CF: 2B CA              sub         ecx,edx
  000000D1: FE C1              inc         cl
  000000D3: 02 C9              add         cl,cl
  000000D5: 88 4E 13           mov         byte ptr [esi+13h],cl
  000000D8: 80 C1 14           add         cl,14h
  000000DB: 88 4E 14           mov         byte ptr [esi+14h],cl
  000000DE: 8B CB              mov         ecx,ebx
  000000E0: 8D 51 01           lea         edx,[ecx+1]
  000000E3: 8A 01              mov         al,byte ptr [ecx]
  000000E5: 41                 inc         ecx
  000000E6: 84 C0              test        al,al
  000000E8: 75 F9              jne         000000E3
  000000EA: 8A 46 14           mov         al,byte ptr [esi+14h]
  000000ED: 2B CA              sub         ecx,edx
  000000EF: FE C1              inc         cl
  000000F1: C6 46 17 02        mov         byte ptr [esi+17h],2
  000000F5: 02 C9              add         cl,cl
  000000F7: 02 C1              add         al,cl
  000000F9: 88 4E 15           mov         byte ptr [esi+15h],cl
  000000FC: 88 46 16           mov         byte ptr [esi+16h],al
  000000FF: 8B CE              mov         ecx,esi
  00000101: 57                 push        edi
  00000102: 8D 46 18           lea         eax,[esi+18h]
  00000105: 50                 push        eax
  00000106: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  0000010B: 0F BE 46 14        movsx       eax,byte ptr [esi+14h]
  0000010F: 8B CE              mov         ecx,esi
  00000111: 83 C0 04           add         eax,4
  00000114: 53                 push        ebx
  00000115: 03 C6              add         eax,esi
  00000117: 50                 push        eax
  00000118: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  0000011D: 0F BE 46 16        movsx       eax,byte ptr [esi+16h]
  00000121: 8B CE              mov         ecx,esi
  00000123: 83 C0 04           add         eax,4
  00000126: 68 00 00 00 00     push        offset ??_C@_00CNPNBAHC@?$AA@
  0000012B: 03 C6              add         eax,esi
  0000012D: 50                 push        eax
  0000012E: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000133: 8A 4E 12           mov         cl,byte ptr [esi+12h]
  00000136: 8A 56 14           mov         dl,byte ptr [esi+14h]
  00000139: 8A 5E 16           mov         bl,byte ptr [esi+16h]
  0000013C: 0F BE C1           movsx       eax,cl
  0000013F: 80 C9 80           or          cl,80h
  00000142: 89 86 24 08 00 00  mov         dword ptr [esi+824h],eax
  00000148: 0F BE C2           movsx       eax,dl
  0000014B: 80 CA 80           or          dl,80h
  0000014E: 89 86 28 08 00 00  mov         dword ptr [esi+828h],eax
  00000154: 0F BE C3           movsx       eax,bl
  00000157: 80 CB 80           or          bl,80h
  0000015A: 89 86 2C 08 00 00  mov         dword ptr [esi+82Ch],eax
  00000160: 8D 44 24 20        lea         eax,[esp+20h]
  00000164: 88 4E 12           mov         byte ptr [esi+12h],cl
  00000167: 8B CE              mov         ecx,esi
  00000169: 50                 push        eax
  0000016A: 88 56 14           mov         byte ptr [esi+14h],dl
  0000016D: 88 5E 16           mov         byte ptr [esi+16h],bl
  00000170: C7 44 24 24 02 03  mov         dword ptr [esp+24h],302h
            00 00
  00000178: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  0000017D: 6A 00              push        0
  0000017F: 8B CE              mov         ecx,esi
  00000181: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  00000186: 68 03 04 00 00     push        403h
  0000018B: 8B CE              mov         ecx,esi
  0000018D: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QAEXG@Z
  00000192: 68 01 60 00 00     push        6001h
  00000197: 8B CE              mov         ecx,esi
  00000199: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QAEXG@Z
  0000019E: 8B 06              mov         eax,dword ptr [esi]
  000001A0: 8B CE              mov         ecx,esi
  000001A2: FF 50 04           call        dword ptr [eax+4]
  000001A5: 5F                 pop         edi
  000001A6: C7 86 08 08 00 00  mov         dword ptr [esi+808h],0
            00 00 00 00
  000001B0: 5E                 pop         esi
  000001B1: 5D                 pop         ebp
  000001B2: 5B                 pop         ebx
  000001B3: 83 C4 0C           add         esp,0Ch
  000001B6: C2 04 00           ret         4

?MoveStrings@TFtEE232@@UAEXXZ (public: virtual void __thiscall TFtEE232::MoveStrings(void)):
  00000000: C3                 ret

?Program@TFtEE232@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE232::Program(void *,char *,char *,char *,char *)):
  00000000: 81 EC A8 00 00 00  sub         esp,0A8h
  00000006: 83 BC 24 B0 00 00  cmp         dword ptr [esp+0B0h],0
            00 00
  0000000E: 56                 push        esi
  0000000F: 8B F1              mov         esi,ecx
  00000011: C6 44 24 07 80     mov         byte ptr [esp+7],80h
  00000016: 0F 84 87 02 00 00  je          000002A3
  0000001C: 55                 push        ebp
  0000001D: 8B AC 24 BC 00 00  mov         ebp,dword ptr [esp+0BCh]
            00
  00000024: 85 ED              test        ebp,ebp
  00000026: 0F 84 67 02 00 00  je          00000293
  0000002C: 83 BC 24 C0 00 00  cmp         dword ptr [esp+0C0h],0
            00 00
  00000034: 0F 84 59 02 00 00  je          00000293
  0000003A: 57                 push        edi
  0000003B: 8B BC 24 B8 00 00  mov         edi,dword ptr [esp+0B8h]
            00
  00000042: 66 83 7F 04 00     cmp         word ptr [edi+4],0
  00000047: 0F 84 35 02 00 00  je          00000282
  0000004D: 66 83 7F 06 00     cmp         word ptr [edi+6],0
  00000052: 0F 84 2A 02 00 00  je          00000282
  00000058: 53                 push        ebx
  00000059: 68 00 08 00 00     push        800h
  0000005E: 8D 46 04           lea         eax,[esi+4]
  00000061: 6A 00              push        0
  00000063: 50                 push        eax
  00000064: 89 44 24 28        mov         dword ptr [esp+28h],eax
  00000068: E8 00 00 00 00     call        _memset
  0000006D: 8B 06              mov         eax,dword ptr [esi]
  0000006F: 83 C4 0C           add         esp,0Ch
  00000072: 8B CE              mov         ecx,esi
  00000074: FF 50 20           call        dword ptr [eax+20h]
  00000077: 8B 9C 24 CC 00 00  mov         ebx,dword ptr [esp+0CCh]
            00
  0000007E: B8 00 04 00 00     mov         eax,400h
  00000083: 66 89 46 0A        mov         word ptr [esi+0Ah],ax
  00000087: 85 DB              test        ebx,ebx
  00000089: 74 10              je          0000009B
  0000008B: 8B CB              mov         ecx,ebx
  0000008D: 8D 51 01           lea         edx,[ecx+1]
  00000090: 8A 01              mov         al,byte ptr [ecx]
  00000092: 41                 inc         ecx
  00000093: 84 C0              test        al,al
  00000095: 75 F9              jne         00000090
  00000097: 2B CA              sub         ecx,edx
  00000099: 75 32              jne         000000CD
  0000009B: 0F B7 47 06        movzx       eax,word ptr [edi+6]
  0000009F: 25 03 00 00 80     and         eax,80000003h
  000000A4: 79 05              jns         000000AB
  000000A6: 48                 dec         eax
  000000A7: 83 C8 FC           or          eax,0FFFFFFFCh
  000000AA: 40                 inc         eax
  000000AB: 50                 push        eax
  000000AC: 55                 push        ebp
  000000AD: 8D 4C 24 28        lea         ecx,[esp+28h]
  000000B1: E8 00 00 00 00     call        ??0TSerialNumber@@QAE@PADG@Z
  000000B6: 8D 44 24 14        lea         eax,[esp+14h]
  000000BA: 50                 push        eax
  000000BB: 8D 44 24 3C        lea         eax,[esp+3Ch]
  000000BF: 50                 push        eax
  000000C0: 8D 4C 24 28        lea         ecx,[esp+28h]
  000000C4: E8 00 00 00 00     call        ?Get@TSerialNumber@@QAEHPADPAH@Z
  000000C9: 8D 5C 24 38        lea         ebx,[esp+38h]
  000000CD: 0F B7 47 04        movzx       eax,word ptr [edi+4]
  000000D1: 8B CE              mov         ecx,esi
  000000D3: 50                 push        eax
  000000D4: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QAEXG@Z
  000000D9: 0F B7 47 06        movzx       eax,word ptr [edi+6]
  000000DD: 8B CE              mov         ecx,esi
  000000DF: 50                 push        eax
  000000E0: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QAEXG@Z
  000000E5: 80 7F 08 00        cmp         byte ptr [edi+8],0
  000000E9: 74 04              je          000000EF
  000000EB: 80 4E 0E 08        or          byte ptr [esi+0Eh],8
  000000EF: 0F B7 47 0A        movzx       eax,word ptr [edi+0Ah]
  000000F3: 8B CE              mov         ecx,esi
  000000F5: 50                 push        eax
  000000F6: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QAEXH@Z
  000000FB: 80 7F 0C 00        cmp         byte ptr [edi+0Ch],0
  000000FF: B9 C0 00 00 00     mov         ecx,0C0h
  00000104: 0F B6 44 24 13     movzx       eax,byte ptr [esp+13h]
  00000109: 0F 45 C1           cmovne      eax,ecx
  0000010C: 80 7F 0D 00        cmp         byte ptr [edi+0Dh],0
  00000110: 88 44 24 14        mov         byte ptr [esp+14h],al
  00000114: 74 06              je          0000011C
  00000116: 0C 20              or          al,20h
  00000118: 88 44 24 14        mov         byte ptr [esp+14h],al
  0000011C: FF 74 24 14        push        dword ptr [esp+14h]
  00000120: 8B CE              mov         ecx,esi
  00000122: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QAEXE@Z
  00000127: 80 7F 0E 00        cmp         byte ptr [edi+0Eh],0
  0000012B: 74 04              je          00000131
  0000012D: 80 4E 0E 04        or          byte ptr [esi+0Eh],4
  00000131: 8B 94 24 C0 00 00  mov         edx,dword ptr [esp+0C0h]
            00
  00000138: 8B C2              mov         eax,edx
  0000013A: C6 46 12 14        mov         byte ptr [esi+12h],14h
  0000013E: 8D 78 01           lea         edi,[eax+1]
  00000141: 8A 08              mov         cl,byte ptr [eax]
  00000143: 40                 inc         eax
  00000144: 84 C9              test        cl,cl
  00000146: 75 F9              jne         00000141
  00000148: 2B C7              sub         eax,edi
  0000014A: 8B BC 24 C8 00 00  mov         edi,dword ptr [esp+0C8h]
            00
  00000151: FE C0              inc         al
  00000153: 8B CF              mov         ecx,edi
  00000155: 02 C0              add         al,al
  00000157: 88 46 13           mov         byte ptr [esi+13h],al
  0000015A: 04 14              add         al,14h
  0000015C: 88 46 14           mov         byte ptr [esi+14h],al
  0000015F: 8D 69 01           lea         ebp,[ecx+1]
  00000162: 8A 01              mov         al,byte ptr [ecx]
  00000164: 41                 inc         ecx
  00000165: 84 C0              test        al,al
  00000167: 75 F9              jne         00000162
  00000169: 8A 46 14           mov         al,byte ptr [esi+14h]
  0000016C: 2B CD              sub         ecx,ebp
  0000016E: FE C1              inc         cl
  00000170: 02 C9              add         cl,cl
  00000172: 02 C1              add         al,cl
  00000174: 88 4E 15           mov         byte ptr [esi+15h],cl
  00000177: 8B CB              mov         ecx,ebx
  00000179: 88 46 16           mov         byte ptr [esi+16h],al
  0000017C: 8D 69 01           lea         ebp,[ecx+1]
  0000017F: 90                 nop
  00000180: 8A 01              mov         al,byte ptr [ecx]
  00000182: 41                 inc         ecx
  00000183: 84 C0              test        al,al
  00000185: 75 F9              jne         00000180
  00000187: 2B CD              sub         ecx,ebp
  00000189: 8D 46 18           lea         eax,[esi+18h]
  0000018C: FE C1              inc         cl
  0000018E: 02 C9              add         cl,cl
  00000190: 52                 push        edx
  00000191: 88 4E 17           mov         byte ptr [esi+17h],cl
  00000194: 8B CE              mov         ecx,esi
  00000196: 50                 push        eax
  00000197: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  0000019C: 0F B6 46 14        movzx       eax,byte ptr [esi+14h]
  000001A0: 8B CE              mov         ecx,esi
  000001A2: 83 C0 04           add         eax,4
  000001A5: 57                 push        edi
  000001A6: 03 C6              add         eax,esi
  000001A8: 50                 push        eax
  000001A9: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001AE: 0F B6 46 16        movzx       eax,byte ptr [esi+16h]
  000001B2: 8B CE              mov         ecx,esi
  000001B4: 83 C0 04           add         eax,4
  000001B7: 53                 push        ebx
  000001B8: 03 C6              add         eax,esi
  000001BA: 50                 push        eax
  000001BB: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001C0: 0F BE 46 12        movsx       eax,byte ptr [esi+12h]
  000001C4: 8B CE              mov         ecx,esi
  000001C6: 89 86 24 08 00 00  mov         dword ptr [esi+824h],eax
  000001CC: 0F BE 46 14        movsx       eax,byte ptr [esi+14h]
  000001D0: 89 86 28 08 00 00  mov         dword ptr [esi+828h],eax
  000001D6: 0F BE 46 16        movsx       eax,byte ptr [esi+16h]
  000001DA: 89 86 2C 08 00 00  mov         dword ptr [esi+82Ch],eax
  000001E0: 80 4E 12 80        or          byte ptr [esi+12h],80h
  000001E4: 80 4E 14 80        or          byte ptr [esi+14h],80h
  000001E8: 80 4E 16 80        or          byte ptr [esi+16h],80h
  000001EC: 8B 06              mov         eax,dword ptr [esi]
  000001EE: FF 50 24           call        dword ptr [eax+24h]
  000001F1: B8 00 02 00 00     mov         eax,200h
  000001F6: C7 44 24 18 02 03  mov         dword ptr [esp+18h],302h
            00 00
  000001FE: 66 89 46 10        mov         word ptr [esi+10h],ax
  00000202: 8B CE              mov         ecx,esi
  00000204: 8D 44 24 18        lea         eax,[esp+18h]
  00000208: 50                 push        eax
  00000209: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  0000020E: 6A 00              push        0
  00000210: 8B CE              mov         ecx,esi
  00000212: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  00000217: 8B 06              mov         eax,dword ptr [esi]
  00000219: 8B CE              mov         ecx,esi
  0000021B: FF 50 04           call        dword ptr [eax+4]
  0000021E: C7 86 08 08 00 00  mov         dword ptr [esi+808h],0
            00 00 00 00
  00000228: 8B 74 24 1C        mov         esi,dword ptr [esp+1Ch]
  0000022C: 8B CE              mov         ecx,esi
  0000022E: E8 00 00 00 00     call        ?Erase@TEeData@@QAEHXZ
  00000233: 5B                 pop         ebx
  00000234: 85 C0              test        eax,eax
  00000236: 75 11              jne         00000249
  00000238: 5F                 pop         edi
  00000239: 5D                 pop         ebp
  0000023A: B8 0D 00 00 00     mov         eax,0Dh
  0000023F: 5E                 pop         esi
  00000240: 81 C4 A8 00 00 00  add         esp,0A8h
  00000246: C2 14 00           ret         14h
  00000249: 8B CE              mov         ecx,esi
  0000024B: E8 00 00 00 00     call        ?Write@TEeData@@QAEHXZ
  00000250: 85 C0              test        eax,eax
  00000252: 75 11              jne         00000265
  00000254: 5F                 pop         edi
  00000255: 5D                 pop         ebp
  00000256: B8 0C 00 00 00     mov         eax,0Ch
  0000025B: 5E                 pop         esi
  0000025C: 81 C4 A8 00 00 00  add         esp,0A8h
  00000262: C2 14 00           ret         14h
  00000265: 8B CE              mov         ecx,esi
  00000267: E8 00 00 00 00     call        ?Confirm@TEeData@@QAEHXZ
  0000026C: F7 D8              neg         eax
  0000026E: 5F                 pop         edi
  0000026F: 1B C0              sbb         eax,eax
  00000271: 83 E0 F4           and         eax,0FFFFFFF4h
  00000274: 5D                 pop         ebp
  00000275: 83 C0 0C           add         eax,0Ch
  00000278: 5E                 pop         esi
  00000279: 81 C4 A8 00 00 00  add         esp,0A8h
  0000027F: C2 14 00           ret         14h
  00000282: 5F                 pop         edi
  00000283: 5D                 pop         ebp
  00000284: B8 06 00 00 00     mov         eax,6
  00000289: 5E                 pop         esi
  0000028A: 81 C4 A8 00 00 00  add         esp,0A8h
  00000290: C2 14 00           ret         14h
  00000293: 5D                 pop         ebp
  00000294: B8 06 00 00 00     mov         eax,6
  00000299: 5E                 pop         esi
  0000029A: 81 C4 A8 00 00 00  add         esp,0A8h
  000002A0: C2 14 00           ret         14h
  000002A3: B8 06 00 00 00     mov         eax,6
  000002A8: 5E                 pop         esi
  000002A9: 81 C4 A8 00 00 00  add         esp,0A8h
  000002AF: C2 14 00           ret         14h

?ReadAndParse@TFtEE232@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE232::ReadAndParse(void *,char *,char *,char *,char *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 53                 push        ebx
  00000004: 55                 push        ebp
  00000005: 8B E9              mov         ebp,ecx
  00000007: 8B 4C 24 4C        mov         ecx,dword ptr [esp+4Ch]
  0000000B: 56                 push        esi
  0000000C: 57                 push        edi
  0000000D: 85 C9              test        ecx,ecx
  0000000F: 0F 84 76 01 00 00  je          0000018B
  00000015: 83 7C 24 58 00     cmp         dword ptr [esp+58h],0
  0000001A: 0F 84 6B 01 00 00  je          0000018B
  00000020: 8B 7C 24 5C        mov         edi,dword ptr [esp+5Ch]
  00000024: 85 FF              test        edi,edi
  00000026: 0F 84 5F 01 00 00  je          0000018B
  0000002C: 8B 5C 24 60        mov         ebx,dword ptr [esp+60h]
  00000030: 85 DB              test        ebx,ebx
  00000032: 0F 84 53 01 00 00  je          0000018B
  00000038: 8B 74 24 64        mov         esi,dword ptr [esp+64h]
  0000003C: 85 F6              test        esi,esi
  0000003E: 0F 84 47 01 00 00  je          0000018B
  00000044: 8B 45 00           mov         eax,dword ptr [ebp]
  00000047: 8B CD              mov         ecx,ebp
  00000049: FF 10              call        dword ptr [eax]
  0000004B: 85 C0              test        eax,eax
  0000004D: 0F 84 29 01 00 00  je          0000017C
  00000053: 8B CD              mov         ecx,ebp
  00000055: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  0000005A: 0F B7 C8           movzx       ecx,ax
  0000005D: 66 85 C9           test        cx,cx
  00000060: 75 0F              jne         00000071
  00000062: 5F                 pop         edi
  00000063: 5E                 pop         esi
  00000064: 5D                 pop         ebp
  00000065: B8 0E 00 00 00     mov         eax,0Eh
  0000006A: 5B                 pop         ebx
  0000006B: 83 C4 40           add         esp,40h
  0000006E: C2 14 00           ret         14h
  00000071: B8 FF FF 00 00     mov         eax,0FFFFh
  00000076: 66 3B C8           cmp         cx,ax
  00000079: 75 0F              jne         0000008A
  0000007B: 5F                 pop         edi
  0000007C: 5E                 pop         esi
  0000007D: 5D                 pop         ebp
  0000007E: B8 0F 00 00 00     mov         eax,0Fh
  00000083: 5B                 pop         ebx
  00000084: 83 C4 40           add         esp,40h
  00000087: C2 14 00           ret         14h
  0000008A: 8B 44 24 54        mov         eax,dword ptr [esp+54h]
  0000008E: 66 89 48 04        mov         word ptr [eax+4],cx
  00000092: 8B CD              mov         ecx,ebp
  00000094: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  00000099: 8B 4C 24 54        mov         ecx,dword ptr [esp+54h]
  0000009D: 66 89 41 06        mov         word ptr [ecx+6],ax
  000000A1: 0F BE 45 0E        movsx       eax,byte ptr [ebp+0Eh]
  000000A5: C1 E8 03           shr         eax,3
  000000A8: 24 01              and         al,1
  000000AA: 88 41 08           mov         byte ptr [ecx+8],al
  000000AD: 8B CD              mov         ecx,ebp
  000000AF: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  000000B4: 8B 4C 24 54        mov         ecx,dword ptr [esp+54h]
  000000B8: 66 89 41 0A        mov         word ptr [ecx+0Ah],ax
  000000BC: 8B CD              mov         ecx,ebp
  000000BE: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  000000C3: 8B 54 24 54        mov         edx,dword ptr [esp+54h]
  000000C7: 8A C8              mov         cl,al
  000000C9: C0 E8 06           shr         al,6
  000000CC: 24 01              and         al,1
  000000CE: C0 E9 05           shr         cl,5
  000000D1: 80 E1 01           and         cl,1
  000000D4: 88 42 0C           mov         byte ptr [edx+0Ch],al
  000000D7: 88 4A 0D           mov         byte ptr [edx+0Dh],cl
  000000DA: 8B CD              mov         ecx,ebp
  000000DC: 0F BE 45 0E        movsx       eax,byte ptr [ebp+0Eh]
  000000E0: C1 E8 02           shr         eax,2
  000000E3: 24 01              and         al,1
  000000E5: 88 42 0E           mov         byte ptr [edx+0Eh],al
  000000E8: 8D 44 24 10        lea         eax,[esp+10h]
  000000EC: 50                 push        eax
  000000ED: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  000000F2: 8B 54 24 58        mov         edx,dword ptr [esp+58h]
  000000F6: 8D 4C 24 10        lea         ecx,[esp+10h]
  000000FA: 8B C1              mov         eax,ecx
  000000FC: 2B D0              sub         edx,eax
  000000FE: 8B FF              mov         edi,edi
  00000100: 8A 01              mov         al,byte ptr [ecx]
  00000102: 8D 49 01           lea         ecx,[ecx+1]
  00000105: 88 44 0A FF        mov         byte ptr [edx+ecx-1],al
  00000109: 84 C0              test        al,al
  0000010B: 75 F3              jne         00000100
  0000010D: 8D 44 24 10        lea         eax,[esp+10h]
  00000111: 8B CD              mov         ecx,ebp
  00000113: 50                 push        eax
  00000114: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  00000119: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000011D: 8B C1              mov         eax,ecx
  0000011F: 2B F8              sub         edi,eax
  00000121: 8A 01              mov         al,byte ptr [ecx]
  00000123: 8D 49 01           lea         ecx,[ecx+1]
  00000126: 88 44 0F FF        mov         byte ptr [edi+ecx-1],al
  0000012A: 84 C0              test        al,al
  0000012C: 75 F3              jne         00000121
  0000012E: 8D 44 24 10        lea         eax,[esp+10h]
  00000132: 8B CD              mov         ecx,ebp
  00000134: 50                 push        eax
  00000135: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  0000013A: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000013E: 8B C1              mov         eax,ecx
  00000140: 2B D8              sub         ebx,eax
  00000142: 8A 01              mov         al,byte ptr [ecx]
  00000144: 8D 49 01           lea         ecx,[ecx+1]
  00000147: 88 44 0B FF        mov         byte ptr [ebx+ecx-1],al
  0000014B: 84 C0              test        al,al
  0000014D: 75 F3              jne         00000142
  0000014F: 8D 44 24 10        lea         eax,[esp+10h]
  00000153: 8B CD              mov         ecx,ebp
  00000155: 50                 push        eax
  00000156: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  0000015B: 8D 44 24 10        lea         eax,[esp+10h]
  0000015F: 8B C8              mov         ecx,eax
  00000161: 2B F1              sub         esi,ecx
  00000163: 8A 08              mov         cl,byte ptr [eax]
  00000165: 8D 40 01           lea         eax,[eax+1]
  00000168: 88 4C 06 FF        mov         byte ptr [esi+eax-1],cl
  0000016C: 84 C9              test        cl,cl
  0000016E: 75 F3              jne         00000163
  00000170: 5F                 pop         edi
  00000171: 5E                 pop         esi
  00000172: 5D                 pop         ebp
  00000173: 33 C0              xor         eax,eax
  00000175: 5B                 pop         ebx
  00000176: 83 C4 40           add         esp,40h
  00000179: C2 14 00           ret         14h
  0000017C: 5F                 pop         edi
  0000017D: 5E                 pop         esi
  0000017E: 5D                 pop         ebp
  0000017F: B8 0B 00 00 00     mov         eax,0Bh
  00000184: 5B                 pop         ebx
  00000185: 83 C4 40           add         esp,40h
  00000188: C2 14 00           ret         14h
  0000018B: 5F                 pop         edi
  0000018C: 5E                 pop         esi
  0000018D: 5D                 pop         ebp
  0000018E: B8 06 00 00 00     mov         eax,6
  00000193: 5B                 pop         ebx
  00000194: 83 C4 40           add         esp,40h
  00000197: C2 14 00           ret         14h

?ReadAndParse@TFtEE232@@UAEKPAX@Z (public: virtual unsigned long __thiscall TFtEE232::ReadAndParse(void *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 57                 push        edi
  00000004: 8B F9              mov         edi,ecx
  00000006: 8B 07              mov         eax,dword ptr [edi]
  00000008: FF 10              call        dword ptr [eax]
  0000000A: 85 C0              test        eax,eax
  0000000C: 0F 84 95 01 00 00  je          000001A7
  00000012: 8B CF              mov         ecx,edi
  00000014: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  00000019: 0F B7 C0           movzx       eax,ax
  0000001C: 66 85 C0           test        ax,ax
  0000001F: 75 0C              jne         0000002D
  00000021: B8 0E 00 00 00     mov         eax,0Eh
  00000026: 5F                 pop         edi
  00000027: 83 C4 40           add         esp,40h
  0000002A: C2 04 00           ret         4
  0000002D: B9 FF FF 00 00     mov         ecx,0FFFFh
  00000032: 66 3B C1           cmp         ax,cx
  00000035: 75 0C              jne         00000043
  00000037: B8 0F 00 00 00     mov         eax,0Fh
  0000003C: 5F                 pop         edi
  0000003D: 83 C4 40           add         esp,40h
  00000040: C2 04 00           ret         4
  00000043: 56                 push        esi
  00000044: 8B 74 24 4C        mov         esi,dword ptr [esp+4Ch]
  00000048: 8B CF              mov         ecx,edi
  0000004A: 66 89 46 0C        mov         word ptr [esi+0Ch],ax
  0000004E: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  00000053: 66 89 46 0E        mov         word ptr [esi+0Eh],ax
  00000057: 8B CF              mov         ecx,edi
  00000059: 8D 44 24 08        lea         eax,[esp+8]
  0000005D: 50                 push        eax
  0000005E: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  00000063: 8B 4E 10           mov         ecx,dword ptr [esi+10h]
  00000066: 85 C9              test        ecx,ecx
  00000068: 74 14              je          0000007E
  0000006A: 8D 54 24 08        lea         edx,[esp+8]
  0000006E: 8B FF              mov         edi,edi
  00000070: 8A 02              mov         al,byte ptr [edx]
  00000072: 8D 52 01           lea         edx,[edx+1]
  00000075: 88 01              mov         byte ptr [ecx],al
  00000077: 8D 49 01           lea         ecx,[ecx+1]
  0000007A: 84 C0              test        al,al
  0000007C: 75 F2              jne         00000070
  0000007E: 8D 44 24 08        lea         eax,[esp+8]
  00000082: 8B CF              mov         ecx,edi
  00000084: 50                 push        eax
  00000085: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  0000008A: 8B 4E 14           mov         ecx,dword ptr [esi+14h]
  0000008D: 85 C9              test        ecx,ecx
  0000008F: 74 12              je          000000A3
  00000091: 8D 54 24 08        lea         edx,[esp+8]
  00000095: 8A 02              mov         al,byte ptr [edx]
  00000097: 8D 52 01           lea         edx,[edx+1]
  0000009A: 88 01              mov         byte ptr [ecx],al
  0000009C: 8D 49 01           lea         ecx,[ecx+1]
  0000009F: 84 C0              test        al,al
  000000A1: 75 F2              jne         00000095
  000000A3: 8D 44 24 08        lea         eax,[esp+8]
  000000A7: 8B CF              mov         ecx,edi
  000000A9: 50                 push        eax
  000000AA: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  000000AF: 8B 4E 18           mov         ecx,dword ptr [esi+18h]
  000000B2: 85 C9              test        ecx,ecx
  000000B4: 74 18              je          000000CE
  000000B6: 8D 54 24 08        lea         edx,[esp+8]
  000000BA: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  000000C0: 8A 02              mov         al,byte ptr [edx]
  000000C2: 8D 52 01           lea         edx,[edx+1]
  000000C5: 88 01              mov         byte ptr [ecx],al
  000000C7: 8D 49 01           lea         ecx,[ecx+1]
  000000CA: 84 C0              test        al,al
  000000CC: 75 F2              jne         000000C0
  000000CE: 8D 44 24 08        lea         eax,[esp+8]
  000000D2: 8B CF              mov         ecx,edi
  000000D4: 50                 push        eax
  000000D5: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  000000DA: 8B 46 1C           mov         eax,dword ptr [esi+1Ch]
  000000DD: 85 C0              test        eax,eax
  000000DF: 74 12              je          000000F3
  000000E1: 8D 54 24 08        lea         edx,[esp+8]
  000000E5: 8A 0A              mov         cl,byte ptr [edx]
  000000E7: 8D 52 01           lea         edx,[edx+1]
  000000EA: 88 08              mov         byte ptr [eax],cl
  000000EC: 8D 40 01           lea         eax,[eax+1]
  000000EF: 84 C9              test        cl,cl
  000000F1: 75 F2              jne         000000E5
  000000F3: 8B CF              mov         ecx,edi
  000000F5: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  000000FA: 8B CF              mov         ecx,edi
  000000FC: 66 89 46 20        mov         word ptr [esi+20h],ax
  00000100: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QAEGXZ
  00000105: 33 C9              xor         ecx,ecx
  00000107: 66 85 C0           test        ax,ax
  0000010A: 0F 94 C1           sete        cl
  0000010D: 66 89 4E 22        mov         word ptr [esi+22h],cx
  00000111: 8B CF              mov         ecx,edi
  00000113: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  00000118: 8A C8              mov         cl,al
  0000011A: C0 E8 06           shr         al,6
  0000011D: 24 01              and         al,1
  0000011F: C0 E9 05           shr         cl,5
  00000122: 0F B6 C0           movzx       eax,al
  00000125: 80 E1 01           and         cl,1
  00000128: 66 89 46 24        mov         word ptr [esi+24h],ax
  0000012C: 0F B6 C1           movzx       eax,cl
  0000012F: 8B CF              mov         ecx,edi
  00000131: 66 89 46 26        mov         word ptr [esi+26h],ax
  00000135: E8 00 00 00 00     call        ?GetRev4@TFtE2Data@@QAE_NXZ
  0000013A: 8B CF              mov         ecx,edi
  0000013C: 88 46 28           mov         byte ptr [esi+28h],al
  0000013F: E8 00 00 00 00     call        ?GetIsoIn@TFtE2Data@@QAE_NXZ
  00000144: 8B CF              mov         ecx,edi
  00000146: 88 46 29           mov         byte ptr [esi+29h],al
  00000149: E8 00 00 00 00     call        ?GetIsoOut@TFtE2Data@@QAE_NXZ
  0000014E: 8B CF              mov         ecx,edi
  00000150: 88 46 2A           mov         byte ptr [esi+2Ah],al
  00000153: E8 00 00 00 00     call        ?GetPullDownEnable@TFtE2Data@@QAE_NXZ
  00000158: 8B CF              mov         ecx,edi
  0000015A: 88 46 2B           mov         byte ptr [esi+2Bh],al
  0000015D: E8 00 00 00 00     call        ?GetSerialNumberEnable@TFtE2Data@@QAE_NXZ
  00000162: 8B CF              mov         ecx,edi
  00000164: 88 46 2C           mov         byte ptr [esi+2Ch],al
  00000167: E8 00 00 00 00     call        ?GetUSBVersionEnable@TFtE2Data@@QAE_NXZ
  0000016C: 8B CF              mov         ecx,edi
  0000016E: 88 46 2D           mov         byte ptr [esi+2Dh],al
  00000171: E8 00 00 00 00     call        ?GetUSBVersion@TFtE2Data@@QAEGXZ
  00000176: 66 89 46 2E        mov         word ptr [esi+2Eh],ax
  0000017A: 33 C0              xor         eax,eax
  0000017C: C6 46 30 00        mov         byte ptr [esi+30h],0
  00000180: C7 46 38 00 00 00  mov         dword ptr [esi+38h],0
            00
  00000187: C7 46 3C 00 00 00  mov         dword ptr [esi+3Ch],0
            00
  0000018E: C7 46 40 00 00 00  mov         dword ptr [esi+40h],0
            00
  00000195: 66 C7 46 35 00 00  mov         word ptr [esi+35h],0
  0000019B: C6 46 37 00        mov         byte ptr [esi+37h],0
  0000019F: 5E                 pop         esi
  000001A0: 5F                 pop         edi
  000001A1: 83 C4 40           add         esp,40h
  000001A4: C2 04 00           ret         4
  000001A7: B8 0B 00 00 00     mov         eax,0Bh
  000001AC: 5F                 pop         edi
  000001AD: 83 C4 40           add         esp,40h
  000001B0: C2 04 00           ret         4

?SetRomType@TFtEE232@@UAEXXZ (public: virtual void __thiscall TFtEE232::SetRomType(void)):
  00000000: B8 46 00 00 00     mov         eax,46h
  00000005: 66 89 81 22 08 00  mov         word ptr [ecx+00000822h],ax
            00
  0000000C: C3                 ret

??0TFtEE2232H@@QAE@PAUft_private_vars@@@Z (public: __thiscall TFtEE2232H::TFtEE2232H(struct ft_private_vars *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAUft_private_vars@@@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE2232H@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001E: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000028: 5E                 pop         esi
  00000029: C2 04 00           ret         4

??0TFtEE2232H@@QAE@PAX@Z (public: __thiscall TFtEE2232H::TFtEE2232H(void *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAX@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE2232H@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001E: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000028: 5E                 pop         esi
  00000029: C2 04 00           ret         4

??0TFtEE2232H@@QAE@XZ (public: __thiscall TFtEE2232H::TFtEE2232H(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@XZ
  00000008: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE2232H@@6B@
  0000000E: 8B C6              mov         eax,esi
  00000010: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001A: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000024: 5E                 pop         esi
  00000025: C3                 ret

?AddUserArea@TFtEE2232H@@UAEHPAEK@Z (public: virtual int __thiscall TFtEE2232H::AddUserArea(unsigned char *,unsigned long)):
  00000000: 53                 push        ebx
  00000001: 55                 push        ebp
  00000002: 56                 push        esi
  00000003: 8B 74 24 14        mov         esi,dword ptr [esp+14h]
  00000007: B8 80 00 00 00     mov         eax,80h
  0000000C: 3B F0              cmp         esi,eax
  0000000E: 8B EE              mov         ebp,esi
  00000010: 57                 push        edi
  00000011: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  00000015: 0F 47 E8           cmova       ebp,eax
  00000018: 55                 push        ebp
  00000019: 57                 push        edi
  0000001A: 8B D9              mov         ebx,ecx
  0000001C: E8 00 00 00 00     call        ?AddUserArea@TFtE2Data@@UAEHPAEK@Z
  00000021: 89 44 24 18        mov         dword ptr [esp+18h],eax
  00000025: 85 C0              test        eax,eax
  00000027: 74 27              je          00000050
  00000029: 2B F5              sub         esi,ebp
  0000002B: 74 23              je          00000050
  0000002D: 8B CB              mov         ecx,ebx
  0000002F: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  00000034: 66 03 C0           add         ax,ax
  00000037: 83 EF 80           sub         edi,0FFFFFF80h
  0000003A: 0F B7 D0           movzx       edx,ax
  0000003D: 8D 49 00           lea         ecx,[ecx]
  00000040: 8A 07              mov         al,byte ptr [edi]
  00000042: 8D 7F 01           lea         edi,[edi+1]
  00000045: 0F B7 CA           movzx       ecx,dx
  00000048: 42                 inc         edx
  00000049: 88 44 19 04        mov         byte ptr [ecx+ebx+4],al
  0000004D: 4E                 dec         esi
  0000004E: 75 F0              jne         00000040
  00000050: 8B 03              mov         eax,dword ptr [ebx]
  00000052: 8B CB              mov         ecx,ebx
  00000054: FF 50 04           call        dword ptr [eax+4]
  00000057: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  0000005B: 5F                 pop         edi
  0000005C: 5E                 pop         esi
  0000005D: 5D                 pop         ebp
  0000005E: 5B                 pop         ebx
  0000005F: C2 08 00           ret         8

?Erase@TFtEE2232H@@QAEHXZ (public: int __thiscall TFtEE2232H::Erase(void)):
  00000000: 8B 01              mov         eax,dword ptr [ecx]
  00000002: FF 50 20           call        dword ptr [eax+20h]
  00000005: B8 01 00 00 00     mov         eax,1
  0000000A: C3                 ret

?GetUserArea@TFtEE2232H@@UAEXPAEKPAK@Z (public: virtual void __thiscall TFtEE2232H::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  00000000: 53                 push        ebx
  00000001: 55                 push        ebp
  00000002: 56                 push        esi
  00000003: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  00000007: B8 80 00 00 00     mov         eax,80h
  0000000C: 57                 push        edi
  0000000D: 8B 7C 24 18        mov         edi,dword ptr [esp+18h]
  00000011: 8B D9              mov         ebx,ecx
  00000013: 3B F8              cmp         edi,eax
  00000015: 8B EF              mov         ebp,edi
  00000017: 0F 47 E8           cmova       ebp,eax
  0000001A: 8D 44 24 18        lea         eax,[esp+18h]
  0000001E: 50                 push        eax
  0000001F: 55                 push        ebp
  00000020: 56                 push        esi
  00000021: E8 00 00 00 00     call        ?GetUserArea@TFtE2Data@@UAEXPAEKPAK@Z
  00000026: 8B 4C 24 1C        mov         ecx,dword ptr [esp+1Ch]
  0000002A: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  0000002E: 89 01              mov         dword ptr [ecx],eax
  00000030: 3B C5              cmp         eax,ebp
  00000032: 75 33              jne         00000067
  00000034: 2B FD              sub         edi,ebp
  00000036: 74 2F              je          00000067
  00000038: 8B CB              mov         ecx,ebx
  0000003A: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  0000003F: 66 03 C0           add         ax,ax
  00000042: 8B D7              mov         edx,edi
  00000044: 0F B7 C8           movzx       ecx,ax
  00000047: 83 EE 80           sub         esi,0FFFFFF80h
  0000004A: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  00000050: 0F B7 C1           movzx       eax,cx
  00000053: 8D 76 01           lea         esi,[esi+1]
  00000056: 41                 inc         ecx
  00000057: 8A 44 18 04        mov         al,byte ptr [eax+ebx+4]
  0000005B: 88 46 FF           mov         byte ptr [esi-1],al
  0000005E: 4A                 dec         edx
  0000005F: 75 EF              jne         00000050
  00000061: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  00000065: 01 38              add         dword ptr [eax],edi
  00000067: 5F                 pop         edi
  00000068: 5E                 pop         esi
  00000069: 5D                 pop         ebp
  0000006A: 5B                 pop         ebx
  0000006B: C2 0C 00           ret         0Ch

?GetUserAreaOffset@TFtEE2232H@@UAEGXZ (public: virtual unsigned short __thiscall TFtEE2232H::GetUserAreaOffset(void)):
  00000000: 0F B7 81 22 08 00  movzx       eax,word ptr [ecx+822h]
            00
  00000007: 83 F8 56           cmp         eax,56h
  0000000A: 74 09              je          00000015
  0000000C: 83 F8 66           cmp         eax,66h
  0000000F: 0F 85 00 00 00 00  jne         ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  00000015: B8 0D 00 00 00     mov         eax,0Dh
  0000001A: C3                 ret

?GetUserAreaSize@TFtEE2232H@@UAEGXZ (public: virtual unsigned short __thiscall TFtEE2232H::GetUserAreaSize(void)):
  00000000: 0F B7 81 22 08 00  movzx       eax,word ptr [ecx+822h]
            00
  00000007: 83 F8 56           cmp         eax,56h
  0000000A: 74 09              je          00000015
  0000000C: 83 F8 66           cmp         eax,66h
  0000000F: 0F 85 00 00 00 00  jne         ?GetUserAreaSize@TFtE2Data@@UAEGXZ
  00000015: E8 00 00 00 00     call        ?GetUserAreaSize@TFtE2Data@@UAEGXZ
  0000001A: 83 C0 40           add         eax,40h
  0000001D: C3                 ret

?Init@TFtEE2232H@@UAEXPAX@Z (public: virtual void __thiscall TFtEE2232H::Init(void *)):
  00000000: 83 EC 08           sub         esp,8
  00000003: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  00000007: 53                 push        ebx
  00000008: 55                 push        ebp
  00000009: 56                 push        esi
  0000000A: 8B 10              mov         edx,dword ptr [eax]
  0000000C: 8B E9              mov         ebp,ecx
  0000000E: 33 DB              xor         ebx,ebx
  00000010: 89 54 24 0C        mov         dword ptr [esp+0Ch],edx
  00000014: 8B 50 04           mov         edx,dword ptr [eax+4]
  00000017: 33 C9              xor         ecx,ecx
  00000019: 33 F6              xor         esi,esi
  0000001B: 89 54 24 10        mov         dword ptr [esp+10h],edx
  0000001F: 38 48 1A           cmp         byte ptr [eax+1Ah],cl
  00000022: BA 01 00 00 00     mov         edx,1
  00000027: 57                 push        edi
  00000028: 0F 45 DA           cmovne      ebx,edx
  0000002B: 38 48 1B           cmp         byte ptr [eax+1Bh],cl
  0000002E: 74 03              je          00000033
  00000030: 83 CB 02           or          ebx,2
  00000033: 38 48 1C           cmp         byte ptr [eax+1Ch],cl
  00000036: 74 03              je          0000003B
  00000038: 83 CB 04           or          ebx,4
  0000003B: 38 48 1D           cmp         byte ptr [eax+1Dh],cl
  0000003E: 74 03              je          00000043
  00000040: 83 CB 08           or          ebx,8
  00000043: 38 48 1E           cmp         byte ptr [eax+1Eh],cl
  00000046: 74 06              je          0000004E
  00000048: 81 CB 00 01 00 00  or          ebx,100h
  0000004E: 38 48 1F           cmp         byte ptr [eax+1Fh],cl
  00000051: 74 06              je          00000059
  00000053: 81 CB 00 02 00 00  or          ebx,200h
  00000059: 38 48 20           cmp         byte ptr [eax+20h],cl
  0000005C: 74 06              je          00000064
  0000005E: 81 CB 00 04 00 00  or          ebx,400h
  00000064: 38 48 21           cmp         byte ptr [eax+21h],cl
  00000067: 74 06              je          0000006F
  00000069: 81 CB 00 08 00 00  or          ebx,800h
  0000006F: 38 48 22           cmp         byte ptr [eax+22h],cl
  00000072: 74 06              je          0000007A
  00000074: 81 CB 00 80 00 00  or          ebx,8000h
  0000007A: 38 48 0C           cmp         byte ptr [eax+0Ch],cl
  0000007D: BA 04 00 00 00     mov         edx,4
  00000082: 0F 45 CA           cmovne      ecx,edx
  00000085: 80 78 0D 00        cmp         byte ptr [eax+0Dh],0
  00000089: 89 4C 24 1C        mov         dword ptr [esp+1Ch],ecx
  0000008D: 74 07              je          00000096
  0000008F: 83 C9 08           or          ecx,8
  00000092: 89 4C 24 1C        mov         dword ptr [esp+1Ch],ecx
  00000096: 8A 48 10           mov         cl,byte ptr [eax+10h]
  00000099: 3A CA              cmp         cl,dl
  0000009B: 74 23              je          000000C0
  0000009D: 80 F9 08           cmp         cl,8
  000000A0: 75 07              jne         000000A9
  000000A2: BE 01 00 00 00     mov         esi,1
  000000A7: EB 17              jmp         000000C0
  000000A9: 80 F9 0C           cmp         cl,0Ch
  000000AC: 75 07              jne         000000B5
  000000AE: BE 02 00 00 00     mov         esi,2
  000000B3: EB 0B              jmp         000000C0
  000000B5: 80 F9 10           cmp         cl,10h
  000000B8: BA 03 00 00 00     mov         edx,3
  000000BD: 0F 44 F2           cmove       esi,edx
  000000C0: 80 78 0E 00        cmp         byte ptr [eax+0Eh],0
  000000C4: 74 03              je          000000C9
  000000C6: 83 CE 04           or          esi,4
  000000C9: 80 78 0F 00        cmp         byte ptr [eax+0Fh],0
  000000CD: 74 03              je          000000D2
  000000CF: 83 CE 08           or          esi,8
  000000D2: 8A 48 13           mov         cl,byte ptr [eax+13h]
  000000D5: 80 F9 04           cmp         cl,4
  000000D8: 74 1C              je          000000F6
  000000DA: 80 F9 08           cmp         cl,8
  000000DD: 75 05              jne         000000E4
  000000DF: 83 CE 10           or          esi,10h
  000000E2: EB 12              jmp         000000F6
  000000E4: 80 F9 0C           cmp         cl,0Ch
  000000E7: 75 05              jne         000000EE
  000000E9: 83 CE 20           or          esi,20h
  000000EC: EB 08              jmp         000000F6
  000000EE: 80 F9 10           cmp         cl,10h
  000000F1: 75 03              jne         000000F6
  000000F3: 83 CE 30           or          esi,30h
  000000F6: 80 78 11 00        cmp         byte ptr [eax+11h],0
  000000FA: 74 03              je          000000FF
  000000FC: 83 CE 40           or          esi,40h
  000000FF: 80 78 12 00        cmp         byte ptr [eax+12h],0
  00000103: 74 06              je          0000010B
  00000105: 81 CE 80 00 00 00  or          esi,80h
  0000010B: 8A 48 16           mov         cl,byte ptr [eax+16h]
  0000010E: 80 F9 04           cmp         cl,4
  00000111: 74 25              je          00000138
  00000113: 80 F9 08           cmp         cl,8
  00000116: 75 08              jne         00000120
  00000118: 81 CE 00 01 00 00  or          esi,100h
  0000011E: EB 18              jmp         00000138
  00000120: 80 F9 0C           cmp         cl,0Ch
  00000123: 75 08              jne         0000012D
  00000125: 81 CE 00 02 00 00  or          esi,200h
  0000012B: EB 0B              jmp         00000138
  0000012D: 80 F9 10           cmp         cl,10h
  00000130: 75 06              jne         00000138
  00000132: 81 CE 00 03 00 00  or          esi,300h
  00000138: 80 78 14 00        cmp         byte ptr [eax+14h],0
  0000013C: 74 06              je          00000144
  0000013E: 81 CE 00 04 00 00  or          esi,400h
  00000144: 80 78 15 00        cmp         byte ptr [eax+15h],0
  00000148: 74 06              je          00000150
  0000014A: 81 CE 00 08 00 00  or          esi,800h
  00000150: 8A 48 19           mov         cl,byte ptr [eax+19h]
  00000153: 80 F9 04           cmp         cl,4
  00000156: 74 25              je          0000017D
  00000158: 80 F9 08           cmp         cl,8
  0000015B: 75 08              jne         00000165
  0000015D: 81 CE 00 10 00 00  or          esi,1000h
  00000163: EB 18              jmp         0000017D
  00000165: 80 F9 0C           cmp         cl,0Ch
  00000168: 75 08              jne         00000172
  0000016A: 81 CE 00 20 00 00  or          esi,2000h
  00000170: EB 0B              jmp         0000017D
  00000172: 80 F9 10           cmp         cl,10h
  00000175: 75 06              jne         0000017D
  00000177: 81 CE 00 30 00 00  or          esi,3000h
  0000017D: 80 78 17 00        cmp         byte ptr [eax+17h],0
  00000181: 74 06              je          00000189
  00000183: 81 CE 00 40 00 00  or          esi,4000h
  00000189: 80 78 18 00        cmp         byte ptr [eax+18h],0
  0000018D: 74 06              je          00000195
  0000018F: 81 CE 00 80 00 00  or          esi,8000h
  00000195: 68 00 08 00 00     push        800h
  0000019A: 8D 7D 04           lea         edi,[ebp+4]
  0000019D: 6A 00              push        0
  0000019F: 57                 push        edi
  000001A0: E8 00 00 00 00     call        _memset
  000001A5: 8B 44 24 28        mov         eax,dword ptr [esp+28h]
  000001A9: 83 C4 0C           add         esp,0Ch
  000001AC: 66 89 75 10        mov         word ptr [ebp+10h],si
  000001B0: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  000001B4: 8B CE              mov         ecx,esi
  000001B6: 66 89 1F           mov         word ptr [edi],bx
  000001B9: C7 45 06 03 04 10  mov         dword ptr [ebp+6],60100403h
            60
  000001C0: C7 45 0A 00 07 A0  mov         dword ptr [ebp+0Ah],64A00700h
            64
  000001C7: 66 89 45 0E        mov         word ptr [ebp+0Eh],ax
  000001CB: 8D 51 01           lea         edx,[ecx+1]
  000001CE: C6 45 12 1A        mov         byte ptr [ebp+12h],1Ah
  000001D2: 8A 01              mov         al,byte ptr [ecx]
  000001D4: 41                 inc         ecx
  000001D5: 84 C0              test        al,al
  000001D7: 75 F9              jne         000001D2
  000001D9: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  000001DD: 2B CA              sub         ecx,edx
  000001DF: FE C1              inc         cl
  000001E1: 02 C9              add         cl,cl
  000001E3: 88 4D 13           mov         byte ptr [ebp+13h],cl
  000001E6: 80 C1 1A           add         cl,1Ah
  000001E9: 88 4D 14           mov         byte ptr [ebp+14h],cl
  000001EC: 8B CF              mov         ecx,edi
  000001EE: 8D 51 01           lea         edx,[ecx+1]
  000001F1: 8A 01              mov         al,byte ptr [ecx]
  000001F3: 41                 inc         ecx
  000001F4: 84 C0              test        al,al
  000001F6: 75 F9              jne         000001F1
  000001F8: 8A 45 14           mov         al,byte ptr [ebp+14h]
  000001FB: 2B CA              sub         ecx,edx
  000001FD: FE C1              inc         cl
  000001FF: C6 45 17 02        mov         byte ptr [ebp+17h],2
  00000203: 02 C9              add         cl,cl
  00000205: 02 C1              add         al,cl
  00000207: 88 4D 15           mov         byte ptr [ebp+15h],cl
  0000020A: 88 45 16           mov         byte ptr [ebp+16h],al
  0000020D: 0F B7 85 22 08 00  movzx       eax,word ptr [ebp+822h]
            00
  00000214: 66 85 C0           test        ax,ax
  00000217: 75 05              jne         0000021E
  00000219: B8 46 00 00 00     mov         eax,46h
  0000021E: 66 89 45 1C        mov         word ptr [ebp+1Ch],ax
  00000222: 8B CD              mov         ecx,ebp
  00000224: 56                 push        esi
  00000225: 8D 45 1E           lea         eax,[ebp+1Eh]
  00000228: 50                 push        eax
  00000229: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  0000022E: 0F BE 45 14        movsx       eax,byte ptr [ebp+14h]
  00000232: 8B CD              mov         ecx,ebp
  00000234: 83 C0 04           add         eax,4
  00000237: 57                 push        edi
  00000238: 03 C5              add         eax,ebp
  0000023A: 50                 push        eax
  0000023B: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000240: 0F BE 45 16        movsx       eax,byte ptr [ebp+16h]
  00000244: 8B CD              mov         ecx,ebp
  00000246: 83 C0 04           add         eax,4
  00000249: 68 00 00 00 00     push        offset ??_C@_00CNPNBAHC@?$AA@
  0000024E: 03 C5              add         eax,ebp
  00000250: 50                 push        eax
  00000251: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  00000256: 8A 4D 12           mov         cl,byte ptr [ebp+12h]
  00000259: 8A 55 14           mov         dl,byte ptr [ebp+14h]
  0000025C: 8A 5D 16           mov         bl,byte ptr [ebp+16h]
  0000025F: 0F BE C1           movsx       eax,cl
  00000262: 80 C9 80           or          cl,80h
  00000265: 89 85 24 08 00 00  mov         dword ptr [ebp+824h],eax
  0000026B: 0F BE C2           movsx       eax,dl
  0000026E: 80 CA 80           or          dl,80h
  00000271: 89 85 28 08 00 00  mov         dword ptr [ebp+828h],eax
  00000277: 0F BE C3           movsx       eax,bl
  0000027A: 80 CB 80           or          bl,80h
  0000027D: 89 85 2C 08 00 00  mov         dword ptr [ebp+82Ch],eax
  00000283: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000287: 88 4D 12           mov         byte ptr [ebp+12h],cl
  0000028A: 8B CD              mov         ecx,ebp
  0000028C: 50                 push        eax
  0000028D: 88 55 14           mov         byte ptr [ebp+14h],dl
  00000290: 88 5D 16           mov         byte ptr [ebp+16h],bl
  00000293: C7 44 24 20 02 03  mov         dword ptr [esp+20h],302h
            00 00
  0000029B: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  000002A0: 6A 00              push        0
  000002A2: 8B CD              mov         ecx,ebp
  000002A4: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  000002A9: 8B 45 00           mov         eax,dword ptr [ebp]
  000002AC: 8B CD              mov         ecx,ebp
  000002AE: FF 50 04           call        dword ptr [eax+4]
  000002B1: 5F                 pop         edi
  000002B2: 5E                 pop         esi
  000002B3: C7 85 08 08 00 00  mov         dword ptr [ebp+808h],0
            00 00 00 00
  000002BD: 5D                 pop         ebp
  000002BE: 5B                 pop         ebx
  000002BF: 83 C4 08           add         esp,8
  000002C2: C2 04 00           ret         4

?MoveStrings@TFtEE2232H@@UAEXXZ (public: virtual void __thiscall TFtEE2232H::MoveStrings(void)):
  00000000: 55                 push        ebp
  00000001: 8B E9              mov         ebp,ecx
  00000003: 0F B7 85 22 08 00  movzx       eax,word ptr [ebp+00000822h]
            00
  0000000A: 83 F8 56           cmp         eax,56h
  0000000D: 74 05              je          00000014
  0000000F: 83 F8 66           cmp         eax,66h
  00000012: 75 5C              jne         00000070
  00000014: 53                 push        ebx
  00000015: 56                 push        esi
  00000016: 8D 45 1E           lea         eax,[ebp+1Eh]
  00000019: 33 D2              xor         edx,edx
  0000001B: 8D 8D 84 00 00 00  lea         ecx,[ebp+00000084h]
  00000021: 8B F1              mov         esi,ecx
  00000023: 8D 98 80 00 00 00  lea         ebx,[eax+00000080h]
  00000029: 2B F0              sub         esi,eax
  0000002B: 46                 inc         esi
  0000002C: D1 EE              shr         esi,1
  0000002E: 57                 push        edi
  0000002F: 33 FF              xor         edi,edi
  00000031: 3B C1              cmp         eax,ecx
  00000033: 0F 47 F2           cmova       esi,edx
  00000036: 8B D0              mov         edx,eax
  00000038: 85 F6              test        esi,esi
  0000003A: 74 14              je          00000050
  0000003C: 2B D8              sub         ebx,eax
  0000003E: 8B FF              mov         edi,edi
  00000040: 66 8B 0A           mov         cx,word ptr [edx]
  00000043: 8D 52 02           lea         edx,[edx+2]
  00000046: 47                 inc         edi
  00000047: 66 89 4C 13 FE     mov         word ptr [ebx+edx-2],cx
  0000004C: 3B FE              cmp         edi,esi
  0000004E: 72 F0              jb          00000040
  00000050: 33 C9              xor         ecx,ecx
  00000052: 85 F6              test        esi,esi
  00000054: 74 0E              je          00000064
  00000056: 33 D2              xor         edx,edx
  00000058: 8D 40 02           lea         eax,[eax+2]
  0000005B: 41                 inc         ecx
  0000005C: 66 89 50 FE        mov         word ptr [eax-2],dx
  00000060: 3B CE              cmp         ecx,esi
  00000062: 72 F2              jb          00000056
  00000064: 8B 45 00           mov         eax,dword ptr [ebp]
  00000067: 8B CD              mov         ecx,ebp
  00000069: 5F                 pop         edi
  0000006A: 5E                 pop         esi
  0000006B: 5B                 pop         ebx
  0000006C: 5D                 pop         ebp
  0000006D: FF 60 04           jmp         dword ptr [eax+4]
  00000070: 5D                 pop         ebp
  00000071: C3                 ret

?Program@TFtEE2232H@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE2232H::Program(void *,char *,char *,char *,char *)):
  00000000: 81 EC A8 00 00 00  sub         esp,0A8h
  00000006: 53                 push        ebx
  00000007: 55                 push        ebp
  00000008: 56                 push        esi
  00000009: 33 F6              xor         esi,esi
  0000000B: C6 44 24 0F 80     mov         byte ptr [esp+0Fh],80h
  00000010: 33 ED              xor         ebp,ebp
  00000012: 8B D9              mov         ebx,ecx
  00000014: 39 B4 24 BC 00 00  cmp         dword ptr [esp+0BCh],esi
            00
  0000001B: 0F 84 E8 03 00 00  je          00000409
  00000021: 39 B4 24 C0 00 00  cmp         dword ptr [esp+0C0h],esi
            00
  00000028: 0F 84 DB 03 00 00  je          00000409
  0000002E: 39 B4 24 C4 00 00  cmp         dword ptr [esp+0C4h],esi
            00
  00000035: 0F 84 CE 03 00 00  je          00000409
  0000003B: 57                 push        edi
  0000003C: 8B BC 24 BC 00 00  mov         edi,dword ptr [esp+0BCh]
            00
  00000043: 66 39 77 04        cmp         word ptr [edi+4],si
  00000047: 0F 84 AA 03 00 00  je          000003F7
  0000004D: 66 39 77 06        cmp         word ptr [edi+6],si
  00000051: 0F 84 A0 03 00 00  je          000003F7
  00000057: 68 00 08 00 00     push        800h
  0000005C: 8D 43 04           lea         eax,[ebx+4]
  0000005F: 56                 push        esi
  00000060: 50                 push        eax
  00000061: 89 44 24 28        mov         dword ptr [esp+28h],eax
  00000065: E8 00 00 00 00     call        _memset
  0000006A: 8B 03              mov         eax,dword ptr [ebx]
  0000006C: 83 C4 0C           add         esp,0Ch
  0000006F: 8B CB              mov         ecx,ebx
  00000071: FF 50 20           call        dword ptr [eax+20h]
  00000074: B8 00 07 00 00     mov         eax,700h
  00000079: 66 89 43 0A        mov         word ptr [ebx+0Ah],ax
  0000007D: 8B 84 24 CC 00 00  mov         eax,dword ptr [esp+0CCh]
            00
  00000084: 85 C0              test        eax,eax
  00000086: 74 13              je          0000009B
  00000088: 8B C8              mov         ecx,eax
  0000008A: 8D 51 01           lea         edx,[ecx+1]
  0000008D: 8D 49 00           lea         ecx,[ecx]
  00000090: 8A 01              mov         al,byte ptr [ecx]
  00000092: 41                 inc         ecx
  00000093: 84 C0              test        al,al
  00000095: 75 F9              jne         00000090
  00000097: 2B CA              sub         ecx,edx
  00000099: 75 3F              jne         000000DA
  0000009B: 0F B7 47 06        movzx       eax,word ptr [edi+6]
  0000009F: 25 03 00 00 80     and         eax,80000003h
  000000A4: 79 05              jns         000000AB
  000000A6: 48                 dec         eax
  000000A7: 83 C8 FC           or          eax,0FFFFFFFCh
  000000AA: 40                 inc         eax
  000000AB: 50                 push        eax
  000000AC: FF B4 24 C8 00 00  push        dword ptr [esp+0C8h]
            00
  000000B3: 8D 4C 24 28        lea         ecx,[esp+28h]
  000000B7: E8 00 00 00 00     call        ??0TSerialNumber@@QAE@PADG@Z
  000000BC: 8D 44 24 14        lea         eax,[esp+14h]
  000000C0: 50                 push        eax
  000000C1: 8D 44 24 3C        lea         eax,[esp+3Ch]
  000000C5: 50                 push        eax
  000000C6: 8D 4C 24 28        lea         ecx,[esp+28h]
  000000CA: E8 00 00 00 00     call        ?Get@TSerialNumber@@QAEHPADPAH@Z
  000000CF: 8D 44 24 38        lea         eax,[esp+38h]
  000000D3: 89 84 24 CC 00 00  mov         dword ptr [esp+0CCh],eax
            00
  000000DA: 0F B7 47 04        movzx       eax,word ptr [edi+4]
  000000DE: 8B CB              mov         ecx,ebx
  000000E0: 50                 push        eax
  000000E1: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QAEXG@Z
  000000E6: 0F B7 47 06        movzx       eax,word ptr [edi+6]
  000000EA: 8B CB              mov         ecx,ebx
  000000EC: 50                 push        eax
  000000ED: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QAEXG@Z
  000000F2: 80 7F 08 00        cmp         byte ptr [edi+8],0
  000000F6: 74 04              je          000000FC
  000000F8: 80 4B 0E 08        or          byte ptr [ebx+0Eh],8
  000000FC: 0F B7 47 0A        movzx       eax,word ptr [edi+0Ah]
  00000100: 8B CB              mov         ecx,ebx
  00000102: 50                 push        eax
  00000103: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QAEXH@Z
  00000108: 80 7F 0C 00        cmp         byte ptr [edi+0Ch],0
  0000010C: B9 C0 00 00 00     mov         ecx,0C0h
  00000111: 0F B6 44 24 13     movzx       eax,byte ptr [esp+13h]
  00000116: 0F 45 C1           cmovne      eax,ecx
  00000119: 80 7F 0D 00        cmp         byte ptr [edi+0Dh],0
  0000011D: 88 44 24 14        mov         byte ptr [esp+14h],al
  00000121: 74 06              je          00000129
  00000123: 0C 20              or          al,20h
  00000125: 88 44 24 14        mov         byte ptr [esp+14h],al
  00000129: FF 74 24 14        push        dword ptr [esp+14h]
  0000012D: 8B CB              mov         ecx,ebx
  0000012F: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QAEXE@Z
  00000134: 80 7F 0E 00        cmp         byte ptr [edi+0Eh],0
  00000138: 74 04              je          0000013E
  0000013A: 80 4B 0E 04        or          byte ptr [ebx+0Eh],4
  0000013E: 8B 8C 24 C0 00 00  mov         ecx,dword ptr [esp+0C0h]
            00
  00000145: C6 43 12 1A        mov         byte ptr [ebx+12h],1Ah
  00000149: 8D 51 01           lea         edx,[ecx+1]
  0000014C: 8D 64 24 00        lea         esp,[esp]
  00000150: 8A 01              mov         al,byte ptr [ecx]
  00000152: 41                 inc         ecx
  00000153: 84 C0              test        al,al
  00000155: 75 F9              jne         00000150
  00000157: 2B CA              sub         ecx,edx
  00000159: FE C1              inc         cl
  0000015B: 02 C9              add         cl,cl
  0000015D: 88 4B 13           mov         byte ptr [ebx+13h],cl
  00000160: 80 C1 1A           add         cl,1Ah
  00000163: 88 4B 14           mov         byte ptr [ebx+14h],cl
  00000166: 8B 8C 24 C8 00 00  mov         ecx,dword ptr [esp+0C8h]
            00
  0000016D: 8D 51 01           lea         edx,[ecx+1]
  00000170: 8A 01              mov         al,byte ptr [ecx]
  00000172: 41                 inc         ecx
  00000173: 84 C0              test        al,al
  00000175: 75 F9              jne         00000170
  00000177: 8A 43 14           mov         al,byte ptr [ebx+14h]
  0000017A: 2B CA              sub         ecx,edx
  0000017C: FE C1              inc         cl
  0000017E: 02 C9              add         cl,cl
  00000180: 02 C1              add         al,cl
  00000182: 88 4B 15           mov         byte ptr [ebx+15h],cl
  00000185: 8B 8C 24 CC 00 00  mov         ecx,dword ptr [esp+0CCh]
            00
  0000018C: 88 43 16           mov         byte ptr [ebx+16h],al
  0000018F: 8D 51 01           lea         edx,[ecx+1]
  00000192: 8A 01              mov         al,byte ptr [ecx]
  00000194: 41                 inc         ecx
  00000195: 84 C0              test        al,al
  00000197: 75 F9              jne         00000192
  00000199: FF B4 24 C0 00 00  push        dword ptr [esp+0C0h]
            00
  000001A0: 2B CA              sub         ecx,edx
  000001A2: 8D 43 1E           lea         eax,[ebx+1Eh]
  000001A5: FE C1              inc         cl
  000001A7: 02 C9              add         cl,cl
  000001A9: 88 4B 17           mov         byte ptr [ebx+17h],cl
  000001AC: 8B CB              mov         ecx,ebx
  000001AE: 50                 push        eax
  000001AF: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001B4: 0F B6 43 14        movzx       eax,byte ptr [ebx+14h]
  000001B8: 8B CB              mov         ecx,ebx
  000001BA: FF B4 24 C8 00 00  push        dword ptr [esp+0C8h]
            00
  000001C1: 83 C0 04           add         eax,4
  000001C4: 03 C3              add         eax,ebx
  000001C6: 50                 push        eax
  000001C7: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001CC: 0F B6 43 16        movzx       eax,byte ptr [ebx+16h]
  000001D0: 8B CB              mov         ecx,ebx
  000001D2: FF B4 24 CC 00 00  push        dword ptr [esp+0CCh]
            00
  000001D9: 83 C0 04           add         eax,4
  000001DC: 03 C3              add         eax,ebx
  000001DE: 50                 push        eax
  000001DF: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001E4: 0F BE 43 12        movsx       eax,byte ptr [ebx+12h]
  000001E8: 8B CB              mov         ecx,ebx
  000001EA: 89 83 24 08 00 00  mov         dword ptr [ebx+824h],eax
  000001F0: 0F BE 43 14        movsx       eax,byte ptr [ebx+14h]
  000001F4: 89 83 28 08 00 00  mov         dword ptr [ebx+828h],eax
  000001FA: 0F BE 43 16        movsx       eax,byte ptr [ebx+16h]
  000001FE: 89 83 2C 08 00 00  mov         dword ptr [ebx+82Ch],eax
  00000204: 80 4B 12 80        or          byte ptr [ebx+12h],80h
  00000208: 80 4B 14 80        or          byte ptr [ebx+14h],80h
  0000020C: 80 4B 16 80        or          byte ptr [ebx+16h],80h
  00000210: 8B 03              mov         eax,dword ptr [ebx]
  00000212: FF 50 24           call        dword ptr [eax+24h]
  00000215: 80 7F 1C 00        cmp         byte ptr [edi+1Ch],0
  00000219: B8 01 00 00 00     mov         eax,1
  0000021E: 0F 45 E8           cmovne      ebp,eax
  00000221: 80 7F 1D 00        cmp         byte ptr [edi+1Dh],0
  00000225: 74 03              je          0000022A
  00000227: 83 CD 02           or          ebp,2
  0000022A: 80 7F 1E 00        cmp         byte ptr [edi+1Eh],0
  0000022E: 74 03              je          00000233
  00000230: 83 CD 04           or          ebp,4
  00000233: 38 47 23           cmp         byte ptr [edi+23h],al
  00000236: 75 03              jne         0000023B
  00000238: 83 CD 08           or          ebp,8
  0000023B: 80 7F 1F 00        cmp         byte ptr [edi+1Fh],0
  0000023F: 74 06              je          00000247
  00000241: 81 CD 00 01 00 00  or          ebp,100h
  00000247: 80 7F 20 00        cmp         byte ptr [edi+20h],0
  0000024B: 74 06              je          00000253
  0000024D: 81 CD 00 02 00 00  or          ebp,200h
  00000253: 80 7F 21 00        cmp         byte ptr [edi+21h],0
  00000257: 74 06              je          0000025F
  00000259: 81 CD 00 04 00 00  or          ebp,400h
  0000025F: 38 47 24           cmp         byte ptr [edi+24h],al
  00000262: 75 06              jne         0000026A
  00000264: 81 CD 00 08 00 00  or          ebp,800h
  0000026A: 80 7F 22 00        cmp         byte ptr [edi+22h],0
  0000026E: 74 06              je          00000276
  00000270: 81 CD 00 80 00 00  or          ebp,8000h
  00000276: 66 89 6B 04        mov         word ptr [ebx+4],bp
  0000027A: 8A 47 12           mov         al,byte ptr [edi+12h]
  0000027D: 3C 04              cmp         al,4
  0000027F: 74 20              je          000002A1
  00000281: 3C 08              cmp         al,8
  00000283: 75 07              jne         0000028C
  00000285: BE 01 00 00 00     mov         esi,1
  0000028A: EB 15              jmp         000002A1
  0000028C: 3C 0C              cmp         al,0Ch
  0000028E: 75 07              jne         00000297
  00000290: BE 02 00 00 00     mov         esi,2
  00000295: EB 0A              jmp         000002A1
  00000297: 3C 10              cmp         al,10h
  00000299: B9 03 00 00 00     mov         ecx,3
  0000029E: 0F 44 F1           cmove       esi,ecx
  000002A1: 80 7F 10 00        cmp         byte ptr [edi+10h],0
  000002A5: 74 03              je          000002AA
  000002A7: 83 CE 04           or          esi,4
  000002AA: 80 7F 11 00        cmp         byte ptr [edi+11h],0
  000002AE: 74 03              je          000002B3
  000002B0: 83 CE 08           or          esi,8
  000002B3: 8A 47 15           mov         al,byte ptr [edi+15h]
  000002B6: 3C 04              cmp         al,4
  000002B8: 74 19              je          000002D3
  000002BA: 3C 08              cmp         al,8
  000002BC: 75 05              jne         000002C3
  000002BE: 83 CE 10           or          esi,10h
  000002C1: EB 10              jmp         000002D3
  000002C3: 3C 0C              cmp         al,0Ch
  000002C5: 75 05              jne         000002CC
  000002C7: 83 CE 20           or          esi,20h
  000002CA: EB 07              jmp         000002D3
  000002CC: 3C 10              cmp         al,10h
  000002CE: 75 03              jne         000002D3
  000002D0: 83 CE 30           or          esi,30h
  000002D3: 80 7F 13 00        cmp         byte ptr [edi+13h],0
  000002D7: 74 03              je          000002DC
  000002D9: 83 CE 40           or          esi,40h
  000002DC: 80 7F 14 00        cmp         byte ptr [edi+14h],0
  000002E0: 74 06              je          000002E8
  000002E2: 81 CE 80 00 00 00  or          esi,80h
  000002E8: 8A 47 18           mov         al,byte ptr [edi+18h]
  000002EB: 3C 04              cmp         al,4
  000002ED: 74 22              je          00000311
  000002EF: 3C 08              cmp         al,8
  000002F1: 75 08              jne         000002FB
  000002F3: 81 CE 00 01 00 00  or          esi,100h
  000002F9: EB 16              jmp         00000311
  000002FB: 3C 0C              cmp         al,0Ch
  000002FD: 75 08              jne         00000307
  000002FF: 81 CE 00 02 00 00  or          esi,200h
  00000305: EB 0A              jmp         00000311
  00000307: 3C 10              cmp         al,10h
  00000309: 75 06              jne         00000311
  0000030B: 81 CE 00 03 00 00  or          esi,300h
  00000311: 80 7F 16 00        cmp         byte ptr [edi+16h],0
  00000315: 74 06              je          0000031D
  00000317: 81 CE 00 04 00 00  or          esi,400h
  0000031D: 80 7F 17 00        cmp         byte ptr [edi+17h],0
  00000321: 74 06              je          00000329
  00000323: 81 CE 00 08 00 00  or          esi,800h
  00000329: 8A 47 1B           mov         al,byte ptr [edi+1Bh]
  0000032C: 3C 04              cmp         al,4
  0000032E: 74 22              je          00000352
  00000330: 3C 08              cmp         al,8
  00000332: 75 08              jne         0000033C
  00000334: 81 CE 00 10 00 00  or          esi,1000h
  0000033A: EB 16              jmp         00000352
  0000033C: 3C 0C              cmp         al,0Ch
  0000033E: 75 08              jne         00000348
  00000340: 81 CE 00 20 00 00  or          esi,2000h
  00000346: EB 0A              jmp         00000352
  00000348: 3C 10              cmp         al,10h
  0000034A: 75 06              jne         00000352
  0000034C: 81 CE 00 30 00 00  or          esi,3000h
  00000352: 80 7F 19 00        cmp         byte ptr [edi+19h],0
  00000356: 74 06              je          0000035E
  00000358: 81 CE 00 40 00 00  or          esi,4000h
  0000035E: 80 7F 1A 00        cmp         byte ptr [edi+1Ah],0
  00000362: 74 06              je          0000036A
  00000364: 81 CE 00 80 00 00  or          esi,8000h
  0000036A: 66 89 73 10        mov         word ptr [ebx+10h],si
  0000036E: 0F B7 83 22 08 00  movzx       eax,word ptr [ebx+822h]
            00
  00000375: 66 85 C0           test        ax,ax
  00000378: 75 05              jne         0000037F
  0000037A: B8 46 00 00 00     mov         eax,46h
  0000037F: 66 89 43 1C        mov         word ptr [ebx+1Ch],ax
  00000383: 8B CB              mov         ecx,ebx
  00000385: 8D 44 24 18        lea         eax,[esp+18h]
  00000389: C7 44 24 18 02 03  mov         dword ptr [esp+18h],302h
            00 00
  00000391: 50                 push        eax
  00000392: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  00000397: 6A 00              push        0
  00000399: 8B CB              mov         ecx,ebx
  0000039B: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  000003A0: 8B 03              mov         eax,dword ptr [ebx]
  000003A2: 8B CB              mov         ecx,ebx
  000003A4: FF 50 04           call        dword ptr [eax+4]
  000003A7: 8B 03              mov         eax,dword ptr [ebx]
  000003A9: 8B CB              mov         ecx,ebx
  000003AB: C7 83 08 08 00 00  mov         dword ptr [ebx+808h],0
            00 00 00 00
  000003B5: FF 50 20           call        dword ptr [eax+20h]
  000003B8: 8B 5C 24 1C        mov         ebx,dword ptr [esp+1Ch]
  000003BC: 8B CB              mov         ecx,ebx
  000003BE: E8 00 00 00 00     call        ?Write@TEeData@@QAEHXZ
  000003C3: 85 C0              test        eax,eax
  000003C5: 75 12              jne         000003D9
  000003C7: 5F                 pop         edi
  000003C8: 5E                 pop         esi
  000003C9: 5D                 pop         ebp
  000003CA: B8 0C 00 00 00     mov         eax,0Ch
  000003CF: 5B                 pop         ebx
  000003D0: 81 C4 A8 00 00 00  add         esp,0A8h
  000003D6: C2 14 00           ret         14h
  000003D9: 8B CB              mov         ecx,ebx
  000003DB: E8 00 00 00 00     call        ?Confirm@TEeData@@QAEHXZ
  000003E0: F7 D8              neg         eax
  000003E2: 5F                 pop         edi
  000003E3: 1B C0              sbb         eax,eax
  000003E5: 5E                 pop         esi
  000003E6: 83 E0 F4           and         eax,0FFFFFFF4h
  000003E9: 5D                 pop         ebp
  000003EA: 83 C0 0C           add         eax,0Ch
  000003ED: 5B                 pop         ebx
  000003EE: 81 C4 A8 00 00 00  add         esp,0A8h
  000003F4: C2 14 00           ret         14h
  000003F7: 5F                 pop         edi
  000003F8: 5E                 pop         esi
  000003F9: 5D                 pop         ebp
  000003FA: B8 06 00 00 00     mov         eax,6
  000003FF: 5B                 pop         ebx
  00000400: 81 C4 A8 00 00 00  add         esp,0A8h
  00000406: C2 14 00           ret         14h
  00000409: 5E                 pop         esi
  0000040A: 5D                 pop         ebp
  0000040B: B8 06 00 00 00     mov         eax,6
  00000410: 5B                 pop         ebx
  00000411: 81 C4 A8 00 00 00  add         esp,0A8h
  00000417: C2 14 00           ret         14h

?Read@TFtEE2232H@@UAEHXZ (public: virtual int __thiscall TFtEE2232H::Read(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ?Read@TFtE2Data@@UAEHXZ
  00000008: 85 C0              test        eax,eax
  0000000A: 75 02              jne         0000000E
  0000000C: 5E                 pop         esi
  0000000D: C3                 ret
  0000000E: 0F B7 46 1C        movzx       eax,word ptr [esi+1Ch]
  00000012: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  00000019: 83 F8 56           cmp         eax,56h
  0000001C: 74 16              je          00000034
  0000001E: 83 F8 66           cmp         eax,66h
  00000021: 74 11              je          00000034
  00000023: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],40h
            40 00 00 00
  0000002D: B8 01 00 00 00     mov         eax,1
  00000032: 5E                 pop         esi
  00000033: C3                 ret
  00000034: 83 AE 24 08 00 00  sub         dword ptr [esi+824h],0FFFFFF80h
            80
  0000003B: B8 01 00 00 00     mov         eax,1
  00000040: 83 AE 28 08 00 00  sub         dword ptr [esi+828h],0FFFFFF80h
            80
  00000047: 83 AE 2C 08 00 00  sub         dword ptr [esi+82Ch],0FFFFFF80h
            80
  0000004E: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  00000058: 5E                 pop         esi
  00000059: C3                 ret

?ReadAndParse@TFtEE2232H@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE2232H::ReadAndParse(void *,char *,char *,char *,char *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 53                 push        ebx
  00000004: 55                 push        ebp
  00000005: 56                 push        esi
  00000006: 8B 74 24 50        mov         esi,dword ptr [esp+50h]
  0000000A: 57                 push        edi
  0000000B: 8B F9              mov         edi,ecx
  0000000D: 85 F6              test        esi,esi
  0000000F: 0F 84 D2 02 00 00  je          000002E7
  00000015: 83 7C 24 58 00     cmp         dword ptr [esp+58h],0
  0000001A: 0F 84 C7 02 00 00  je          000002E7
  00000020: 8B 5C 24 5C        mov         ebx,dword ptr [esp+5Ch]
  00000024: 85 DB              test        ebx,ebx
  00000026: 0F 84 BB 02 00 00  je          000002E7
  0000002C: 8B 6C 24 60        mov         ebp,dword ptr [esp+60h]
  00000030: 85 ED              test        ebp,ebp
  00000032: 0F 84 AF 02 00 00  je          000002E7
  00000038: 83 7C 24 64 00     cmp         dword ptr [esp+64h],0
  0000003D: 0F 84 A4 02 00 00  je          000002E7
  00000043: 8B 07              mov         eax,dword ptr [edi]
  00000045: FF 10              call        dword ptr [eax]
  00000047: 85 C0              test        eax,eax
  00000049: 0F 84 89 02 00 00  je          000002D8
  0000004F: 8B CF              mov         ecx,edi
  00000051: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  00000056: 0F B7 C0           movzx       eax,ax
  00000059: 66 85 C0           test        ax,ax
  0000005C: 75 0F              jne         0000006D
  0000005E: 5F                 pop         edi
  0000005F: 5E                 pop         esi
  00000060: 5D                 pop         ebp
  00000061: B8 0E 00 00 00     mov         eax,0Eh
  00000066: 5B                 pop         ebx
  00000067: 83 C4 40           add         esp,40h
  0000006A: C2 14 00           ret         14h
  0000006D: B9 FF FF 00 00     mov         ecx,0FFFFh
  00000072: 66 3B C1           cmp         ax,cx
  00000075: 75 0F              jne         00000086
  00000077: 5F                 pop         edi
  00000078: 5E                 pop         esi
  00000079: 5D                 pop         ebp
  0000007A: B8 0F 00 00 00     mov         eax,0Fh
  0000007F: 5B                 pop         ebx
  00000080: 83 C4 40           add         esp,40h
  00000083: C2 14 00           ret         14h
  00000086: 8B CF              mov         ecx,edi
  00000088: 66 89 46 04        mov         word ptr [esi+4],ax
  0000008C: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  00000091: 66 89 46 06        mov         word ptr [esi+6],ax
  00000095: 8B CF              mov         ecx,edi
  00000097: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  0000009B: C1 E8 03           shr         eax,3
  0000009E: 24 01              and         al,1
  000000A0: 88 46 08           mov         byte ptr [esi+8],al
  000000A3: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  000000A8: 8B CF              mov         ecx,edi
  000000AA: 66 89 46 0A        mov         word ptr [esi+0Ah],ax
  000000AE: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  000000B3: 8A C8              mov         cl,al
  000000B5: C0 E8 06           shr         al,6
  000000B8: 24 01              and         al,1
  000000BA: C0 E9 05           shr         cl,5
  000000BD: 88 46 0C           mov         byte ptr [esi+0Ch],al
  000000C0: 80 E1 01           and         cl,1
  000000C3: 88 4E 0D           mov         byte ptr [esi+0Dh],cl
  000000C6: 8B CF              mov         ecx,edi
  000000C8: 0F BE 47 0E        movsx       eax,byte ptr [edi+0Eh]
  000000CC: C1 E8 02           shr         eax,2
  000000CF: 24 01              and         al,1
  000000D1: 88 46 0E           mov         byte ptr [esi+0Eh],al
  000000D4: 8D 44 24 10        lea         eax,[esp+10h]
  000000D8: 50                 push        eax
  000000D9: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  000000DE: 8B 54 24 58        mov         edx,dword ptr [esp+58h]
  000000E2: 8D 4C 24 10        lea         ecx,[esp+10h]
  000000E6: 8B C1              mov         eax,ecx
  000000E8: 2B D0              sub         edx,eax
  000000EA: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  000000F0: 8A 01              mov         al,byte ptr [ecx]
  000000F2: 8D 49 01           lea         ecx,[ecx+1]
  000000F5: 88 44 11 FF        mov         byte ptr [ecx+edx-1],al
  000000F9: 84 C0              test        al,al
  000000FB: 75 F3              jne         000000F0
  000000FD: 8D 44 24 10        lea         eax,[esp+10h]
  00000101: 8B CF              mov         ecx,edi
  00000103: 50                 push        eax
  00000104: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  00000109: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000010D: 8B C1              mov         eax,ecx
  0000010F: 2B D8              sub         ebx,eax
  00000111: 8A 01              mov         al,byte ptr [ecx]
  00000113: 8D 49 01           lea         ecx,[ecx+1]
  00000116: 88 44 19 FF        mov         byte ptr [ecx+ebx-1],al
  0000011A: 84 C0              test        al,al
  0000011C: 75 F3              jne         00000111
  0000011E: 8D 44 24 10        lea         eax,[esp+10h]
  00000122: 8B CF              mov         ecx,edi
  00000124: 50                 push        eax
  00000125: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  0000012A: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000012E: 8B C1              mov         eax,ecx
  00000130: 2B E8              sub         ebp,eax
  00000132: 8A 01              mov         al,byte ptr [ecx]
  00000134: 8D 49 01           lea         ecx,[ecx+1]
  00000137: 88 44 29 FF        mov         byte ptr [ecx+ebp-1],al
  0000013B: 84 C0              test        al,al
  0000013D: 75 F3              jne         00000132
  0000013F: 8D 44 24 10        lea         eax,[esp+10h]
  00000143: 8B CF              mov         ecx,edi
  00000145: 50                 push        eax
  00000146: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  0000014B: 8B 54 24 64        mov         edx,dword ptr [esp+64h]
  0000014F: 8D 4C 24 10        lea         ecx,[esp+10h]
  00000153: 8B C1              mov         eax,ecx
  00000155: 2B D0              sub         edx,eax
  00000157: 8A 01              mov         al,byte ptr [ecx]
  00000159: 8D 49 01           lea         ecx,[ecx+1]
  0000015C: 88 44 11 FF        mov         byte ptr [ecx+edx-1],al
  00000160: 84 C0              test        al,al
  00000162: 75 F3              jne         00000157
  00000164: 0F B7 4F 04        movzx       ecx,word ptr [edi+4]
  00000168: 8A C1              mov         al,cl
  0000016A: 24 01              and         al,1
  0000016C: 88 46 1C           mov         byte ptr [esi+1Ch],al
  0000016F: 8A C1              mov         al,cl
  00000171: D0 E8              shr         al,1
  00000173: 24 01              and         al,1
  00000175: 88 46 1D           mov         byte ptr [esi+1Dh],al
  00000178: 8A C1              mov         al,cl
  0000017A: C0 E8 02           shr         al,2
  0000017D: 24 01              and         al,1
  0000017F: 88 46 1E           mov         byte ptr [esi+1Eh],al
  00000182: 8A C1              mov         al,cl
  00000184: C0 E8 03           shr         al,3
  00000187: 24 01              and         al,1
  00000189: 88 46 23           mov         byte ptr [esi+23h],al
  0000018C: 8B C1              mov         eax,ecx
  0000018E: C1 E8 08           shr         eax,8
  00000191: 24 01              and         al,1
  00000193: 88 46 1F           mov         byte ptr [esi+1Fh],al
  00000196: 8B C1              mov         eax,ecx
  00000198: C1 E8 09           shr         eax,9
  0000019B: 24 01              and         al,1
  0000019D: 88 46 20           mov         byte ptr [esi+20h],al
  000001A0: 8B C1              mov         eax,ecx
  000001A2: C1 E8 0A           shr         eax,0Ah
  000001A5: 24 01              and         al,1
  000001A7: 88 46 21           mov         byte ptr [esi+21h],al
  000001AA: 8B C1              mov         eax,ecx
  000001AC: C1 E8 0B           shr         eax,0Bh
  000001AF: C1 E9 0F           shr         ecx,0Fh
  000001B2: 24 01              and         al,1
  000001B4: 80 E1 01           and         cl,1
  000001B7: 88 46 24           mov         byte ptr [esi+24h],al
  000001BA: 88 4E 22           mov         byte ptr [esi+22h],cl
  000001BD: 0F B7 4F 10        movzx       ecx,word ptr [edi+10h]
  000001C1: 8A C1              mov         al,cl
  000001C3: 24 03              and         al,3
  000001C5: 3C 03              cmp         al,3
  000001C7: 75 06              jne         000001CF
  000001C9: C6 46 12 10        mov         byte ptr [esi+12h],10h
  000001CD: EB 1B              jmp         000001EA
  000001CF: F6 C1 02           test        cl,2
  000001D2: 74 06              je          000001DA
  000001D4: C6 46 12 0C        mov         byte ptr [esi+12h],0Ch
  000001D8: EB 10              jmp         000001EA
  000001DA: F6 C1 01           test        cl,1
  000001DD: 0F 95 C0           setne       al
  000001E0: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  000001E7: 88 46 12           mov         byte ptr [esi+12h],al
  000001EA: 8A C1              mov         al,cl
  000001EC: C0 E8 02           shr         al,2
  000001EF: 24 01              and         al,1
  000001F1: 88 46 10           mov         byte ptr [esi+10h],al
  000001F4: 8A C1              mov         al,cl
  000001F6: C0 E8 03           shr         al,3
  000001F9: 24 01              and         al,1
  000001FB: 88 46 11           mov         byte ptr [esi+11h],al
  000001FE: 8A C1              mov         al,cl
  00000200: 24 30              and         al,30h
  00000202: 3C 30              cmp         al,30h
  00000204: 75 06              jne         0000020C
  00000206: C6 46 15 10        mov         byte ptr [esi+15h],10h
  0000020A: EB 1B              jmp         00000227
  0000020C: F6 C1 20           test        cl,20h
  0000020F: 74 06              je          00000217
  00000211: C6 46 15 0C        mov         byte ptr [esi+15h],0Ch
  00000215: EB 10              jmp         00000227
  00000217: F6 C1 10           test        cl,10h
  0000021A: 0F 95 C0           setne       al
  0000021D: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  00000224: 88 46 15           mov         byte ptr [esi+15h],al
  00000227: 8A C1              mov         al,cl
  00000229: C0 E8 06           shr         al,6
  0000022C: 24 01              and         al,1
  0000022E: 88 46 13           mov         byte ptr [esi+13h],al
  00000231: 8A C1              mov         al,cl
  00000233: C0 E8 07           shr         al,7
  00000236: 24 01              and         al,1
  00000238: 88 46 14           mov         byte ptr [esi+14h],al
  0000023B: 8B C1              mov         eax,ecx
  0000023D: 25 00 03 00 00     and         eax,300h
  00000242: 3D 00 03 00 00     cmp         eax,300h
  00000247: 75 06              jne         0000024F
  00000249: C6 46 18 10        mov         byte ptr [esi+18h],10h
  0000024D: EB 21              jmp         00000270
  0000024F: F7 C1 00 02 00 00  test        ecx,200h
  00000255: 74 06              je          0000025D
  00000257: C6 46 18 0C        mov         byte ptr [esi+18h],0Ch
  0000025B: EB 13              jmp         00000270
  0000025D: F7 C1 00 01 00 00  test        ecx,100h
  00000263: 0F 95 C0           setne       al
  00000266: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  0000026D: 88 46 18           mov         byte ptr [esi+18h],al
  00000270: 8B C1              mov         eax,ecx
  00000272: C1 E8 0A           shr         eax,0Ah
  00000275: 24 01              and         al,1
  00000277: 88 46 16           mov         byte ptr [esi+16h],al
  0000027A: 8B C1              mov         eax,ecx
  0000027C: C1 E8 0B           shr         eax,0Bh
  0000027F: 24 01              and         al,1
  00000281: 88 46 17           mov         byte ptr [esi+17h],al
  00000284: 8B C1              mov         eax,ecx
  00000286: 25 00 30 00 00     and         eax,3000h
  0000028B: 3D 00 30 00 00     cmp         eax,3000h
  00000290: 75 06              jne         00000298
  00000292: C6 46 1B 10        mov         byte ptr [esi+1Bh],10h
  00000296: EB 21              jmp         000002B9
  00000298: F7 C1 00 20 00 00  test        ecx,2000h
  0000029E: 74 06              je          000002A6
  000002A0: C6 46 1B 0C        mov         byte ptr [esi+1Bh],0Ch
  000002A4: EB 13              jmp         000002B9
  000002A6: F7 C1 00 10 00 00  test        ecx,1000h
  000002AC: 0F 95 C0           setne       al
  000002AF: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  000002B6: 88 46 1B           mov         byte ptr [esi+1Bh],al
  000002B9: 8B C1              mov         eax,ecx
  000002BB: C1 E9 0F           shr         ecx,0Fh
  000002BE: C1 E8 0E           shr         eax,0Eh
  000002C1: 80 E1 01           and         cl,1
  000002C4: 24 01              and         al,1
  000002C6: 88 4E 1A           mov         byte ptr [esi+1Ah],cl
  000002C9: 5F                 pop         edi
  000002CA: 88 46 19           mov         byte ptr [esi+19h],al
  000002CD: 33 C0              xor         eax,eax
  000002CF: 5E                 pop         esi
  000002D0: 5D                 pop         ebp
  000002D1: 5B                 pop         ebx
  000002D2: 83 C4 40           add         esp,40h
  000002D5: C2 14 00           ret         14h
  000002D8: 5F                 pop         edi
  000002D9: 5E                 pop         esi
  000002DA: 5D                 pop         ebp
  000002DB: B8 0B 00 00 00     mov         eax,0Bh
  000002E0: 5B                 pop         ebx
  000002E1: 83 C4 40           add         esp,40h
  000002E4: C2 14 00           ret         14h
  000002E7: 5F                 pop         edi
  000002E8: 5E                 pop         esi
  000002E9: 5D                 pop         ebp
  000002EA: B8 06 00 00 00     mov         eax,6
  000002EF: 5B                 pop         ebx
  000002F0: 83 C4 40           add         esp,40h
  000002F3: C2 14 00           ret         14h

?ReadAndParse@TFtEE2232H@@UAEKPAX@Z (public: virtual unsigned long __thiscall TFtEE2232H::ReadAndParse(void *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 57                 push        edi
  00000004: 8B F9              mov         edi,ecx
  00000006: 8B 07              mov         eax,dword ptr [edi]
  00000008: FF 10              call        dword ptr [eax]
  0000000A: 85 C0              test        eax,eax
  0000000C: 75 0C              jne         0000001A
  0000000E: B8 0B 00 00 00     mov         eax,0Bh
  00000013: 5F                 pop         edi
  00000014: 83 C4 40           add         esp,40h
  00000017: C2 04 00           ret         4
  0000001A: 8B CF              mov         ecx,edi
  0000001C: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  00000021: 0F B7 C0           movzx       eax,ax
  00000024: 66 85 C0           test        ax,ax
  00000027: 75 0C              jne         00000035
  00000029: B8 0E 00 00 00     mov         eax,0Eh
  0000002E: 5F                 pop         edi
  0000002F: 83 C4 40           add         esp,40h
  00000032: C2 04 00           ret         4
  00000035: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000003A: 66 3B C1           cmp         ax,cx
  0000003D: 75 0C              jne         0000004B
  0000003F: B8 0F 00 00 00     mov         eax,0Fh
  00000044: 5F                 pop         edi
  00000045: 83 C4 40           add         esp,40h
  00000048: C2 04 00           ret         4
  0000004B: 56                 push        esi
  0000004C: 8B 74 24 4C        mov         esi,dword ptr [esp+4Ch]
  00000050: 8B CF              mov         ecx,edi
  00000052: 66 89 46 0C        mov         word ptr [esi+0Ch],ax
  00000056: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  0000005B: 66 89 46 0E        mov         word ptr [esi+0Eh],ax
  0000005F: 8B CF              mov         ecx,edi
  00000061: 8D 44 24 08        lea         eax,[esp+8]
  00000065: 50                 push        eax
  00000066: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  0000006B: 8B 4E 10           mov         ecx,dword ptr [esi+10h]
  0000006E: 85 C9              test        ecx,ecx
  00000070: 74 12              je          00000084
  00000072: 8D 54 24 08        lea         edx,[esp+8]
  00000076: 8A 02              mov         al,byte ptr [edx]
  00000078: 8D 52 01           lea         edx,[edx+1]
  0000007B: 88 01              mov         byte ptr [ecx],al
  0000007D: 8D 49 01           lea         ecx,[ecx+1]
  00000080: 84 C0              test        al,al
  00000082: 75 F2              jne         00000076
  00000084: 8D 44 24 08        lea         eax,[esp+8]
  00000088: 8B CF              mov         ecx,edi
  0000008A: 50                 push        eax
  0000008B: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  00000090: 8B 4E 14           mov         ecx,dword ptr [esi+14h]
  00000093: 85 C9              test        ecx,ecx
  00000095: 74 17              je          000000AE
  00000097: 8D 54 24 08        lea         edx,[esp+8]
  0000009B: EB 03              jmp         000000A0
  0000009D: 8D 49 00           lea         ecx,[ecx]
  000000A0: 8A 02              mov         al,byte ptr [edx]
  000000A2: 8D 52 01           lea         edx,[edx+1]
  000000A5: 88 01              mov         byte ptr [ecx],al
  000000A7: 8D 49 01           lea         ecx,[ecx+1]
  000000AA: 84 C0              test        al,al
  000000AC: 75 F2              jne         000000A0
  000000AE: 8D 44 24 08        lea         eax,[esp+8]
  000000B2: 8B CF              mov         ecx,edi
  000000B4: 50                 push        eax
  000000B5: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  000000BA: 8B 4E 18           mov         ecx,dword ptr [esi+18h]
  000000BD: 85 C9              test        ecx,ecx
  000000BF: 74 12              je          000000D3
  000000C1: 8D 54 24 08        lea         edx,[esp+8]
  000000C5: 8A 02              mov         al,byte ptr [edx]
  000000C7: 8D 52 01           lea         edx,[edx+1]
  000000CA: 88 01              mov         byte ptr [ecx],al
  000000CC: 8D 49 01           lea         ecx,[ecx+1]
  000000CF: 84 C0              test        al,al
  000000D1: 75 F2              jne         000000C5
  000000D3: 8D 44 24 08        lea         eax,[esp+8]
  000000D7: 8B CF              mov         ecx,edi
  000000D9: 50                 push        eax
  000000DA: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  000000DF: 8B 4E 1C           mov         ecx,dword ptr [esi+1Ch]
  000000E2: 85 C9              test        ecx,ecx
  000000E4: 74 18              je          000000FE
  000000E6: 8D 54 24 08        lea         edx,[esp+8]
  000000EA: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  000000F0: 8A 02              mov         al,byte ptr [edx]
  000000F2: 8D 52 01           lea         edx,[edx+1]
  000000F5: 88 01              mov         byte ptr [ecx],al
  000000F7: 8D 49 01           lea         ecx,[ecx+1]
  000000FA: 84 C0              test        al,al
  000000FC: 75 F2              jne         000000F0
  000000FE: 8B CF              mov         ecx,edi
  00000100: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  00000105: 8B CF              mov         ecx,edi
  00000107: 66 89 46 20        mov         word ptr [esi+20h],ax
  0000010B: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QAEGXZ
  00000110: 33 C9              xor         ecx,ecx
  00000112: 66 85 C0           test        ax,ax
  00000115: 0F 94 C1           sete        cl
  00000118: 66 89 4E 22        mov         word ptr [esi+22h],cx
  0000011C: 8B CF              mov         ecx,edi
  0000011E: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  00000123: 8A C8              mov         cl,al
  00000125: C7 46 28 00 00 00  mov         dword ptr [esi+28h],0
            00
  0000012C: C0 E8 05           shr         al,5
  0000012F: 24 01              and         al,1
  00000131: C0 E9 06           shr         cl,6
  00000134: 0F B6 C0           movzx       eax,al
  00000137: 80 E1 01           and         cl,1
  0000013A: 66 89 46 26        mov         word ptr [esi+26h],ax
  0000013E: 0F B6 C9           movzx       ecx,cl
  00000141: 66 89 4E 24        mov         word ptr [esi+24h],cx
  00000145: C7 46 2C 00 00 00  mov         dword ptr [esi+2Ch],0
            00
  0000014C: C7 46 30 00 00 00  mov         dword ptr [esi+30h],0
            00
  00000153: C7 46 38 00 00 00  mov         dword ptr [esi+38h],0
            00
  0000015A: C7 46 3C 00 00 00  mov         dword ptr [esi+3Ch],0
            00
  00000161: C7 46 40 00 00 00  mov         dword ptr [esi+40h],0
            00
  00000168: 66 C7 46 35 00 00  mov         word ptr [esi+35h],0
  0000016E: C6 46 37 00        mov         byte ptr [esi+37h],0
  00000172: C6 46 34 00        mov         byte ptr [esi+34h],0
  00000176: C7 46 44 00 00 00  mov         dword ptr [esi+44h],0
            00
  0000017D: 66 C7 46 55 00 00  mov         word ptr [esi+55h],0
  00000183: C7 46 48 00 00 00  mov         dword ptr [esi+48h],0
            00
  0000018A: C7 46 4C 00 00 00  mov         dword ptr [esi+4Ch],0
            00
  00000191: C7 46 50 00 00 00  mov         dword ptr [esi+50h],0
            00
  00000198: C6 46 54 00        mov         byte ptr [esi+54h],0
  0000019C: 0F B7 4F 04        movzx       ecx,word ptr [edi+4]
  000001A0: 8A C1              mov         al,cl
  000001A2: 24 01              and         al,1
  000001A4: 88 46 65           mov         byte ptr [esi+65h],al
  000001A7: 8A C1              mov         al,cl
  000001A9: D0 E8              shr         al,1
  000001AB: 24 01              and         al,1
  000001AD: 88 46 66           mov         byte ptr [esi+66h],al
  000001B0: 8A C1              mov         al,cl
  000001B2: C0 E8 02           shr         al,2
  000001B5: 24 01              and         al,1
  000001B7: 88 46 67           mov         byte ptr [esi+67h],al
  000001BA: 8A C1              mov         al,cl
  000001BC: C0 E8 03           shr         al,3
  000001BF: 24 01              and         al,1
  000001C1: 88 46 68           mov         byte ptr [esi+68h],al
  000001C4: 8B C1              mov         eax,ecx
  000001C6: C1 E8 08           shr         eax,8
  000001C9: 24 01              and         al,1
  000001CB: 88 46 69           mov         byte ptr [esi+69h],al
  000001CE: 8B C1              mov         eax,ecx
  000001D0: C1 E8 09           shr         eax,9
  000001D3: 24 01              and         al,1
  000001D5: 88 46 6A           mov         byte ptr [esi+6Ah],al
  000001D8: 8B C1              mov         eax,ecx
  000001DA: C1 E8 0A           shr         eax,0Ah
  000001DD: 24 01              and         al,1
  000001DF: 88 46 6B           mov         byte ptr [esi+6Bh],al
  000001E2: 8B C1              mov         eax,ecx
  000001E4: C1 E8 0B           shr         eax,0Bh
  000001E7: C1 E9 0F           shr         ecx,0Fh
  000001EA: 24 01              and         al,1
  000001EC: 80 E1 01           and         cl,1
  000001EF: 88 46 6C           mov         byte ptr [esi+6Ch],al
  000001F2: 88 4E 6D           mov         byte ptr [esi+6Dh],cl
  000001F5: 0F B7 4F 0E        movzx       ecx,word ptr [edi+0Eh]
  000001F9: 8A C1              mov         al,cl
  000001FB: C0 E9 03           shr         cl,3
  000001FE: C0 E8 02           shr         al,2
  00000201: 80 E1 01           and         cl,1
  00000204: 24 01              and         al,1
  00000206: 88 4E 58           mov         byte ptr [esi+58h],cl
  00000209: 88 46 57           mov         byte ptr [esi+57h],al
  0000020C: 0F B7 4F 10        movzx       ecx,word ptr [edi+10h]
  00000210: 8A C1              mov         al,cl
  00000212: 24 03              and         al,3
  00000214: 3C 03              cmp         al,3
  00000216: 75 06              jne         0000021E
  00000218: C6 46 5B 10        mov         byte ptr [esi+5Bh],10h
  0000021C: EB 1B              jmp         00000239
  0000021E: F6 C1 02           test        cl,2
  00000221: 74 06              je          00000229
  00000223: C6 46 5B 0C        mov         byte ptr [esi+5Bh],0Ch
  00000227: EB 10              jmp         00000239
  00000229: F6 C1 01           test        cl,1
  0000022C: 0F 95 C0           setne       al
  0000022F: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  00000236: 88 46 5B           mov         byte ptr [esi+5Bh],al
  00000239: 8A C1              mov         al,cl
  0000023B: C0 E8 02           shr         al,2
  0000023E: 24 01              and         al,1
  00000240: 88 46 59           mov         byte ptr [esi+59h],al
  00000243: 8A C1              mov         al,cl
  00000245: C0 E8 03           shr         al,3
  00000248: 24 01              and         al,1
  0000024A: 88 46 5A           mov         byte ptr [esi+5Ah],al
  0000024D: 8A C1              mov         al,cl
  0000024F: 24 30              and         al,30h
  00000251: 3C 30              cmp         al,30h
  00000253: 75 06              jne         0000025B
  00000255: C6 46 5E 10        mov         byte ptr [esi+5Eh],10h
  00000259: EB 1B              jmp         00000276
  0000025B: F6 C1 20           test        cl,20h
  0000025E: 74 06              je          00000266
  00000260: C6 46 5E 0C        mov         byte ptr [esi+5Eh],0Ch
  00000264: EB 10              jmp         00000276
  00000266: F6 C1 10           test        cl,10h
  00000269: 0F 95 C0           setne       al
  0000026C: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  00000273: 88 46 5E           mov         byte ptr [esi+5Eh],al
  00000276: 8A C1              mov         al,cl
  00000278: C0 E8 06           shr         al,6
  0000027B: 24 01              and         al,1
  0000027D: 88 46 5C           mov         byte ptr [esi+5Ch],al
  00000280: 8A C1              mov         al,cl
  00000282: C0 E8 07           shr         al,7
  00000285: 24 01              and         al,1
  00000287: 88 46 5D           mov         byte ptr [esi+5Dh],al
  0000028A: 8B C1              mov         eax,ecx
  0000028C: 25 00 03 00 00     and         eax,300h
  00000291: 3D 00 03 00 00     cmp         eax,300h
  00000296: 75 06              jne         0000029E
  00000298: C6 46 61 10        mov         byte ptr [esi+61h],10h
  0000029C: EB 21              jmp         000002BF
  0000029E: F7 C1 00 02 00 00  test        ecx,200h
  000002A4: 74 06              je          000002AC
  000002A6: C6 46 61 0C        mov         byte ptr [esi+61h],0Ch
  000002AA: EB 13              jmp         000002BF
  000002AC: F7 C1 00 01 00 00  test        ecx,100h
  000002B2: 0F 95 C0           setne       al
  000002B5: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  000002BC: 88 46 61           mov         byte ptr [esi+61h],al
  000002BF: 8B C1              mov         eax,ecx
  000002C1: C1 E8 0A           shr         eax,0Ah
  000002C4: 24 01              and         al,1
  000002C6: 88 46 5F           mov         byte ptr [esi+5Fh],al
  000002C9: 8B C1              mov         eax,ecx
  000002CB: C1 E8 0B           shr         eax,0Bh
  000002CE: 24 01              and         al,1
  000002D0: 88 46 60           mov         byte ptr [esi+60h],al
  000002D3: 8B C1              mov         eax,ecx
  000002D5: 25 00 30 00 00     and         eax,3000h
  000002DA: 3D 00 30 00 00     cmp         eax,3000h
  000002DF: 75 06              jne         000002E7
  000002E1: C6 46 64 10        mov         byte ptr [esi+64h],10h
  000002E5: EB 21              jmp         00000308
  000002E7: F7 C1 00 20 00 00  test        ecx,2000h
  000002ED: 74 06              je          000002F5
  000002EF: C6 46 64 0C        mov         byte ptr [esi+64h],0Ch
  000002F3: EB 13              jmp         00000308
  000002F5: F7 C1 00 10 00 00  test        ecx,1000h
  000002FB: 0F 95 C0           setne       al
  000002FE: 8D 04 85 04 00 00  lea         eax,[eax*4+4]
            00
  00000305: 88 46 64           mov         byte ptr [esi+64h],al
  00000308: 8B C1              mov         eax,ecx
  0000030A: C1 E9 0F           shr         ecx,0Fh
  0000030D: C1 E8 0E           shr         eax,0Eh
  00000310: 80 E1 01           and         cl,1
  00000313: 24 01              and         al,1
  00000315: 88 4E 63           mov         byte ptr [esi+63h],cl
  00000318: 88 46 62           mov         byte ptr [esi+62h],al
  0000031B: 33 C0              xor         eax,eax
  0000031D: 5E                 pop         esi
  0000031E: 5F                 pop         edi
  0000031F: 83 C4 40           add         esp,40h
  00000322: C2 04 00           ret         4

?SetRomType@TFtEE2232H@@UAEXXZ (public: virtual void __thiscall TFtEE2232H::SetRomType(void)):
  00000000: 51                 push        ecx
  00000001: 53                 push        ebx
  00000002: 56                 push        esi
  00000003: 8B F1              mov         esi,ecx
  00000005: C7 44 24 08 00 00  mov         dword ptr [esp+8],0
            00 00
  0000000D: 57                 push        edi
  0000000E: 8D 4E 04           lea         ecx,[esi+4]
  00000011: E8 00 00 00 00     call        ?Erase@TEeData@@QAEHXZ
  00000016: 68 C0 00 00 00     push        0C0h
  0000001B: 68 C0 00 00 00     push        0C0h
  00000020: 8D 4E 04           lea         ecx,[esi+4]
  00000023: E8 00 00 00 00     call        ?WriteWord@TEeData@@QAEHKG@Z
  00000028: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000002C: 50                 push        eax
  0000002D: 6A 00              push        0
  0000002F: 8D 4E 04           lea         ecx,[esi+4]
  00000032: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000037: BB C0 00 00 00     mov         ebx,0C0h
  0000003C: 66 39 5C 24 0C     cmp         word ptr [esp+0Ch],bx
  00000041: 75 05              jne         00000048
  00000043: 8D 43 86           lea         eax,[ebx-7Ah]
  00000046: EB 67              jmp         000000AF
  00000048: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000004C: 50                 push        eax
  0000004D: 6A 40              push        40h
  0000004F: 8D 4E 04           lea         ecx,[esi+4]
  00000052: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000057: 66 39 5C 24 0C     cmp         word ptr [esp+0Ch],bx
  0000005C: 75 1B              jne         00000079
  0000005E: B8 56 00 00 00     mov         eax,56h
  00000063: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  0000006D: 5F                 pop         edi
  0000006E: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  00000075: 5E                 pop         esi
  00000076: 5B                 pop         ebx
  00000077: 59                 pop         ecx
  00000078: C3                 ret
  00000079: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000007D: 50                 push        eax
  0000007E: 68 C0 00 00 00     push        0C0h
  00000083: 8D 4E 04           lea         ecx,[esi+4]
  00000086: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  0000008B: 66 39 5C 24 0C     cmp         word ptr [esp+0Ch],bx
  00000090: 75 1B              jne         000000AD
  00000092: B8 66 00 00 00     mov         eax,66h
  00000097: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  000000A1: 5F                 pop         edi
  000000A2: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  000000A9: 5E                 pop         esi
  000000AA: 5B                 pop         ebx
  000000AB: 59                 pop         ecx
  000000AC: C3                 ret
  000000AD: 33 C0              xor         eax,eax
  000000AF: 5F                 pop         edi
  000000B0: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],40h
            40 00 00 00
  000000BA: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  000000C4: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  000000CB: 5E                 pop         esi
  000000CC: 5B                 pop         ebx
  000000CD: 59                 pop         ecx
  000000CE: C3                 ret

??0TFtEE2232@@QAE@PAUft_private_vars@@@Z (public: __thiscall TFtEE2232::TFtEE2232(struct ft_private_vars *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAUft_private_vars@@@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE2232@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001E: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000028: 5E                 pop         esi
  00000029: C2 04 00           ret         4

??0TFtEE2232@@QAE@PAX@Z (public: __thiscall TFtEE2232::TFtEE2232(void *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@PAX@Z
  0000000C: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE2232@@6B@
  00000012: 8B C6              mov         eax,esi
  00000014: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001E: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000028: 5E                 pop         esi
  00000029: C2 04 00           ret         4

??0TFtEE2232@@QAE@XZ (public: __thiscall TFtEE2232::TFtEE2232(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ??0TFtE2Data@@QAE@XZ
  00000008: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtEE2232@@6B@
  0000000E: 8B C6              mov         eax,esi
  00000010: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  0000001A: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],80h
            80 00 00 00
  00000024: 5E                 pop         esi
  00000025: C3                 ret

?AddUserArea@TFtEE2232@@UAEHPAEK@Z (public: virtual int __thiscall TFtEE2232::AddUserArea(unsigned char *,unsigned long)):
  00000000: 53                 push        ebx
  00000001: 55                 push        ebp
  00000002: 56                 push        esi
  00000003: 8B 74 24 14        mov         esi,dword ptr [esp+14h]
  00000007: B8 80 00 00 00     mov         eax,80h
  0000000C: 3B F0              cmp         esi,eax
  0000000E: 8B EE              mov         ebp,esi
  00000010: 57                 push        edi
  00000011: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  00000015: 0F 47 E8           cmova       ebp,eax
  00000018: 55                 push        ebp
  00000019: 57                 push        edi
  0000001A: 8B D9              mov         ebx,ecx
  0000001C: E8 00 00 00 00     call        ?AddUserArea@TFtE2Data@@UAEHPAEK@Z
  00000021: 89 44 24 18        mov         dword ptr [esp+18h],eax
  00000025: 85 C0              test        eax,eax
  00000027: 74 27              je          00000050
  00000029: 2B F5              sub         esi,ebp
  0000002B: 74 23              je          00000050
  0000002D: 8B CB              mov         ecx,ebx
  0000002F: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  00000034: 66 03 C0           add         ax,ax
  00000037: 83 EF 80           sub         edi,0FFFFFF80h
  0000003A: 0F B7 D0           movzx       edx,ax
  0000003D: 8D 49 00           lea         ecx,[ecx]
  00000040: 8A 07              mov         al,byte ptr [edi]
  00000042: 8D 7F 01           lea         edi,[edi+1]
  00000045: 0F B7 CA           movzx       ecx,dx
  00000048: 42                 inc         edx
  00000049: 88 44 19 04        mov         byte ptr [ecx+ebx+4],al
  0000004D: 4E                 dec         esi
  0000004E: 75 F0              jne         00000040
  00000050: 8B 03              mov         eax,dword ptr [ebx]
  00000052: 8B CB              mov         ecx,ebx
  00000054: FF 50 04           call        dword ptr [eax+4]
  00000057: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  0000005B: 5F                 pop         edi
  0000005C: 5E                 pop         esi
  0000005D: 5D                 pop         ebp
  0000005E: 5B                 pop         ebx
  0000005F: C2 08 00           ret         8

?Erase@TFtEE2232@@QAEHXZ (public: int __thiscall TFtEE2232::Erase(void)):
  00000000: 8B 01              mov         eax,dword ptr [ecx]
  00000002: FF 50 20           call        dword ptr [eax+20h]
  00000005: B8 01 00 00 00     mov         eax,1
  0000000A: C3                 ret

?GetUserArea@TFtEE2232@@UAEXPAEKPAK@Z (public: virtual void __thiscall TFtEE2232::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  00000000: 53                 push        ebx
  00000001: 55                 push        ebp
  00000002: 56                 push        esi
  00000003: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  00000007: B8 80 00 00 00     mov         eax,80h
  0000000C: 57                 push        edi
  0000000D: 8B 7C 24 18        mov         edi,dword ptr [esp+18h]
  00000011: 8B D9              mov         ebx,ecx
  00000013: 3B F8              cmp         edi,eax
  00000015: 8B EF              mov         ebp,edi
  00000017: 0F 47 E8           cmova       ebp,eax
  0000001A: 8D 44 24 18        lea         eax,[esp+18h]
  0000001E: 50                 push        eax
  0000001F: 55                 push        ebp
  00000020: 56                 push        esi
  00000021: E8 00 00 00 00     call        ?GetUserArea@TFtE2Data@@UAEXPAEKPAK@Z
  00000026: 8B 4C 24 1C        mov         ecx,dword ptr [esp+1Ch]
  0000002A: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  0000002E: 89 01              mov         dword ptr [ecx],eax
  00000030: 3B C5              cmp         eax,ebp
  00000032: 75 33              jne         00000067
  00000034: 2B FD              sub         edi,ebp
  00000036: 74 2F              je          00000067
  00000038: 8B CB              mov         ecx,ebx
  0000003A: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  0000003F: 66 03 C0           add         ax,ax
  00000042: 8B D7              mov         edx,edi
  00000044: 0F B7 C8           movzx       ecx,ax
  00000047: 83 EE 80           sub         esi,0FFFFFF80h
  0000004A: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  00000050: 0F B7 C1           movzx       eax,cx
  00000053: 8D 76 01           lea         esi,[esi+1]
  00000056: 41                 inc         ecx
  00000057: 8A 44 18 04        mov         al,byte ptr [eax+ebx+4]
  0000005B: 88 46 FF           mov         byte ptr [esi-1],al
  0000005E: 4A                 dec         edx
  0000005F: 75 EF              jne         00000050
  00000061: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  00000065: 01 38              add         dword ptr [eax],edi
  00000067: 5F                 pop         edi
  00000068: 5E                 pop         esi
  00000069: 5D                 pop         ebp
  0000006A: 5B                 pop         ebx
  0000006B: C2 0C 00           ret         0Ch

?GetUserAreaOffset@TFtEE2232@@UAEGXZ (public: virtual unsigned short __thiscall TFtEE2232::GetUserAreaOffset(void)):
  00000000: 0F B7 81 22 08 00  movzx       eax,word ptr [ecx+822h]
            00
  00000007: 83 F8 56           cmp         eax,56h
  0000000A: 74 09              je          00000015
  0000000C: 83 F8 66           cmp         eax,66h
  0000000F: 0F 85 00 00 00 00  jne         ?GetUserAreaOffset@TFtE2Data@@UAEGXZ
  00000015: B8 0B 00 00 00     mov         eax,0Bh
  0000001A: C3                 ret

?GetUserAreaSize@TFtEE2232@@UAEGXZ (public: virtual unsigned short __thiscall TFtEE2232::GetUserAreaSize(void)):
  00000000: 0F B7 81 22 08 00  movzx       eax,word ptr [ecx+822h]
            00
  00000007: 83 F8 56           cmp         eax,56h
  0000000A: 74 09              je          00000015
  0000000C: 83 F8 66           cmp         eax,66h
  0000000F: 0F 85 00 00 00 00  jne         ?GetUserAreaSize@TFtE2Data@@UAEGXZ
  00000015: E8 00 00 00 00     call        ?GetUserAreaSize@TFtE2Data@@UAEGXZ
  0000001A: 83 C0 40           add         eax,40h
  0000001D: C3                 ret

?Init@TFtEE2232@@UAEXPAX@Z (public: virtual void __thiscall TFtEE2232::Init(void *)):
  00000000: 83 EC 08           sub         esp,8
  00000003: 53                 push        ebx
  00000004: 8B 5C 24 10        mov         ebx,dword ptr [esp+10h]
  00000008: 33 C0              xor         eax,eax
  0000000A: 55                 push        ebp
  0000000B: 8B E9              mov         ebp,ecx
  0000000D: 56                 push        esi
  0000000E: 8B 0B              mov         ecx,dword ptr [ebx]
  00000010: 33 F6              xor         esi,esi
  00000012: 38 43 1E           cmp         byte ptr [ebx+1Eh],al
  00000015: 89 4C 24 0C        mov         dword ptr [esp+0Ch],ecx
  00000019: 8B 4B 04           mov         ecx,dword ptr [ebx+4]
  0000001C: 89 4C 24 10        mov         dword ptr [esp+10h],ecx
  00000020: B9 10 00 00 00     mov         ecx,10h
  00000025: 0F 45 F1           cmovne      esi,ecx
  00000028: 57                 push        edi
  00000029: 38 43 1F           cmp         byte ptr [ebx+1Fh],al
  0000002C: 74 06              je          00000034
  0000002E: 81 CE 00 10 00 00  or          esi,1000h
  00000034: 38 43 20           cmp         byte ptr [ebx+20h],al
  00000037: 74 03              je          0000003C
  00000039: 83 CE 01           or          esi,1
  0000003C: 38 43 21           cmp         byte ptr [ebx+21h],al
  0000003F: 74 03              je          00000044
  00000041: 83 CE 02           or          esi,2
  00000044: 38 43 22           cmp         byte ptr [ebx+22h],al
  00000047: 74 03              je          0000004C
  00000049: 83 CE 04           or          esi,4
  0000004C: 38 43 23           cmp         byte ptr [ebx+23h],al
  0000004F: 74 03              je          00000054
  00000051: 83 CE 08           or          esi,8
  00000054: 38 43 24           cmp         byte ptr [ebx+24h],al
  00000057: 74 06              je          0000005F
  00000059: 81 CE 00 01 00 00  or          esi,100h
  0000005F: 38 43 25           cmp         byte ptr [ebx+25h],al
  00000062: 74 06              je          0000006A
  00000064: 81 CE 00 02 00 00  or          esi,200h
  0000006A: 38 43 26           cmp         byte ptr [ebx+26h],al
  0000006D: 74 06              je          00000075
  0000006F: 81 CE 00 04 00 00  or          esi,400h
  00000075: 38 43 27           cmp         byte ptr [ebx+27h],al
  00000078: 74 06              je          00000080
  0000007A: 81 CE 00 08 00 00  or          esi,800h
  00000080: 38 43 19           cmp         byte ptr [ebx+19h],al
  00000083: B9 04 00 00 00     mov         ecx,4
  00000088: 0F 45 C1           cmovne      eax,ecx
  0000008B: 80 7B 1A 00        cmp         byte ptr [ebx+1Ah],0
  0000008F: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  00000093: 74 07              je          0000009C
  00000095: 83 C8 08           or          eax,8
  00000098: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  0000009C: 80 7B 1B 00        cmp         byte ptr [ebx+1Bh],0
  000000A0: 74 07              je          000000A9
  000000A2: 83 C8 10           or          eax,10h
  000000A5: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  000000A9: 80 7B 15 00        cmp         byte ptr [ebx+15h],0
  000000AD: 74 07              je          000000B6
  000000AF: 83 C8 01           or          eax,1
  000000B2: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  000000B6: 80 7B 17 00        cmp         byte ptr [ebx+17h],0
  000000BA: 74 07              je          000000C3
  000000BC: 83 C8 02           or          eax,2
  000000BF: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  000000C3: 80 7B 16 00        cmp         byte ptr [ebx+16h],0
  000000C7: 74 07              je          000000D0
  000000C9: 83 C8 20           or          eax,20h
  000000CC: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  000000D0: 80 7B 18 00        cmp         byte ptr [ebx+18h],0
  000000D4: 74 07              je          000000DD
  000000D6: 83 C8 40           or          eax,40h
  000000D9: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  000000DD: 68 00 08 00 00     push        800h
  000000E2: 8D 7D 04           lea         edi,[ebp+4]
  000000E5: 6A 00              push        0
  000000E7: 57                 push        edi
  000000E8: E8 00 00 00 00     call        _memset
  000000ED: 8B 44 24 28        mov         eax,dword ptr [esp+28h]
  000000F1: 83 C4 0C           add         esp,0Ch
  000000F4: 66 89 37           mov         word ptr [edi],si
  000000F7: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  000000FB: 8B CE              mov         ecx,esi
  000000FD: C7 45 06 03 04 10  mov         dword ptr [ebp+6],60100403h
            60
  00000104: C7 45 0A 00 05 A0  mov         dword ptr [ebp+0Ah],2DA00500h
            2D
  0000010B: 66 89 45 0E        mov         word ptr [ebp+0Eh],ax
  0000010F: 66 8B 43 1C        mov         ax,word ptr [ebx+1Ch]
  00000113: 8D 51 01           lea         edx,[ecx+1]
  00000116: 66 89 45 10        mov         word ptr [ebp+10h],ax
  0000011A: C6 45 12 16        mov         byte ptr [ebp+12h],16h
  0000011E: 8B FF              mov         edi,edi
  00000120: 8A 01              mov         al,byte ptr [ecx]
  00000122: 41                 inc         ecx
  00000123: 84 C0              test        al,al
  00000125: 75 F9              jne         00000120
  00000127: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  0000012B: 2B CA              sub         ecx,edx
  0000012D: FE C1              inc         cl
  0000012F: 02 C9              add         cl,cl
  00000131: 88 4D 13           mov         byte ptr [ebp+13h],cl
  00000134: 80 C1 16           add         cl,16h
  00000137: 88 4D 14           mov         byte ptr [ebp+14h],cl
  0000013A: 8B CF              mov         ecx,edi
  0000013C: 8D 51 01           lea         edx,[ecx+1]
  0000013F: 90                 nop
  00000140: 8A 01              mov         al,byte ptr [ecx]
  00000142: 41                 inc         ecx
  00000143: 84 C0              test        al,al
  00000145: 75 F9              jne         00000140
  00000147: 8A 45 14           mov         al,byte ptr [ebp+14h]
  0000014A: 2B CA              sub         ecx,edx
  0000014C: FE C1              inc         cl
  0000014E: C6 45 17 02        mov         byte ptr [ebp+17h],2
  00000152: 02 C9              add         cl,cl
  00000154: 02 C1              add         al,cl
  00000156: 88 4D 15           mov         byte ptr [ebp+15h],cl
  00000159: 88 45 16           mov         byte ptr [ebp+16h],al
  0000015C: 0F B7 85 22 08 00  movzx       eax,word ptr [ebp+822h]
            00
  00000163: 66 85 C0           test        ax,ax
  00000166: 75 05              jne         0000016D
  00000168: B8 46 00 00 00     mov         eax,46h
  0000016D: 66 89 45 18        mov         word ptr [ebp+18h],ax
  00000171: 8B CD              mov         ecx,ebp
  00000173: 56                 push        esi
  00000174: 8D 45 1A           lea         eax,[ebp+1Ah]
  00000177: 50                 push        eax
  00000178: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  0000017D: 0F BE 45 14        movsx       eax,byte ptr [ebp+14h]
  00000181: 8B CD              mov         ecx,ebp
  00000183: 83 C0 04           add         eax,4
  00000186: 57                 push        edi
  00000187: 03 C5              add         eax,ebp
  00000189: 50                 push        eax
  0000018A: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  0000018F: 0F BE 45 16        movsx       eax,byte ptr [ebp+16h]
  00000193: 8B CD              mov         ecx,ebp
  00000195: 83 C0 04           add         eax,4
  00000198: 68 00 00 00 00     push        offset ??_C@_00CNPNBAHC@?$AA@
  0000019D: 03 C5              add         eax,ebp
  0000019F: 50                 push        eax
  000001A0: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001A5: 8A 4D 12           mov         cl,byte ptr [ebp+12h]
  000001A8: 8A 55 14           mov         dl,byte ptr [ebp+14h]
  000001AB: 8A 5D 16           mov         bl,byte ptr [ebp+16h]
  000001AE: 0F BE C1           movsx       eax,cl
  000001B1: 80 C9 80           or          cl,80h
  000001B4: 89 85 24 08 00 00  mov         dword ptr [ebp+824h],eax
  000001BA: 0F BE C2           movsx       eax,dl
  000001BD: 80 CA 80           or          dl,80h
  000001C0: 89 85 28 08 00 00  mov         dword ptr [ebp+828h],eax
  000001C6: 0F BE C3           movsx       eax,bl
  000001C9: 80 CB 80           or          bl,80h
  000001CC: 89 85 2C 08 00 00  mov         dword ptr [ebp+82Ch],eax
  000001D2: 8D 44 24 1C        lea         eax,[esp+1Ch]
  000001D6: 88 4D 12           mov         byte ptr [ebp+12h],cl
  000001D9: 8B CD              mov         ecx,ebp
  000001DB: 50                 push        eax
  000001DC: 88 55 14           mov         byte ptr [ebp+14h],dl
  000001DF: 88 5D 16           mov         byte ptr [ebp+16h],bl
  000001E2: C7 44 24 20 02 03  mov         dword ptr [esp+20h],302h
            00 00
  000001EA: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  000001EF: 6A 00              push        0
  000001F1: 8B CD              mov         ecx,ebp
  000001F3: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  000001F8: 8B 45 00           mov         eax,dword ptr [ebp]
  000001FB: 8B CD              mov         ecx,ebp
  000001FD: FF 50 04           call        dword ptr [eax+4]
  00000200: 5F                 pop         edi
  00000201: 5E                 pop         esi
  00000202: C7 85 08 08 00 00  mov         dword ptr [ebp+808h],0
            00 00 00 00
  0000020C: 5D                 pop         ebp
  0000020D: 5B                 pop         ebx
  0000020E: 83 C4 08           add         esp,8
  00000211: C2 04 00           ret         4

?MoveStrings@TFtEE2232@@UAEXXZ (public: virtual void __thiscall TFtEE2232::MoveStrings(void)):
  00000000: 55                 push        ebp
  00000001: 8B E9              mov         ebp,ecx
  00000003: 0F B7 85 22 08 00  movzx       eax,word ptr [ebp+00000822h]
            00
  0000000A: 83 F8 56           cmp         eax,56h
  0000000D: 74 05              je          00000014
  0000000F: 83 F8 66           cmp         eax,66h
  00000012: 75 5C              jne         00000070
  00000014: 53                 push        ebx
  00000015: 56                 push        esi
  00000016: 8D 45 1A           lea         eax,[ebp+1Ah]
  00000019: 33 D2              xor         edx,edx
  0000001B: 8D 8D 84 00 00 00  lea         ecx,[ebp+00000084h]
  00000021: 8B F1              mov         esi,ecx
  00000023: 8D 98 80 00 00 00  lea         ebx,[eax+00000080h]
  00000029: 2B F0              sub         esi,eax
  0000002B: 46                 inc         esi
  0000002C: D1 EE              shr         esi,1
  0000002E: 57                 push        edi
  0000002F: 33 FF              xor         edi,edi
  00000031: 3B C1              cmp         eax,ecx
  00000033: 0F 47 F2           cmova       esi,edx
  00000036: 8B D0              mov         edx,eax
  00000038: 85 F6              test        esi,esi
  0000003A: 74 14              je          00000050
  0000003C: 2B D8              sub         ebx,eax
  0000003E: 8B FF              mov         edi,edi
  00000040: 66 8B 0A           mov         cx,word ptr [edx]
  00000043: 8D 52 02           lea         edx,[edx+2]
  00000046: 47                 inc         edi
  00000047: 66 89 4C 13 FE     mov         word ptr [ebx+edx-2],cx
  0000004C: 3B FE              cmp         edi,esi
  0000004E: 72 F0              jb          00000040
  00000050: 33 C9              xor         ecx,ecx
  00000052: 85 F6              test        esi,esi
  00000054: 74 0E              je          00000064
  00000056: 33 D2              xor         edx,edx
  00000058: 8D 40 02           lea         eax,[eax+2]
  0000005B: 41                 inc         ecx
  0000005C: 66 89 50 FE        mov         word ptr [eax-2],dx
  00000060: 3B CE              cmp         ecx,esi
  00000062: 72 F2              jb          00000056
  00000064: 8B 45 00           mov         eax,dword ptr [ebp]
  00000067: 8B CD              mov         ecx,ebp
  00000069: 5F                 pop         edi
  0000006A: 5E                 pop         esi
  0000006B: 5B                 pop         ebx
  0000006C: 5D                 pop         ebp
  0000006D: FF 60 04           jmp         dword ptr [eax+4]
  00000070: 5D                 pop         ebp
  00000071: C3                 ret

?Program@TFtEE2232@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE2232::Program(void *,char *,char *,char *,char *)):
  00000000: 81 EC A4 00 00 00  sub         esp,0A4h
  00000006: 56                 push        esi
  00000007: 57                 push        edi
  00000008: 33 FF              xor         edi,edi
  0000000A: C6 44 24 0B 80     mov         byte ptr [esp+0Bh],80h
  0000000F: 8B F1              mov         esi,ecx
  00000011: 39 BC 24 B4 00 00  cmp         dword ptr [esp+0B4h],edi
            00
  00000018: 0F 84 02 03 00 00  je          00000320
  0000001E: 55                 push        ebp
  0000001F: 8B AC 24 BC 00 00  mov         ebp,dword ptr [esp+0BCh]
            00
  00000026: 85 ED              test        ebp,ebp
  00000028: 0F 84 E1 02 00 00  je          0000030F
  0000002E: 39 BC 24 C0 00 00  cmp         dword ptr [esp+0C0h],edi
            00
  00000035: 0F 84 D4 02 00 00  je          0000030F
  0000003B: 53                 push        ebx
  0000003C: 8B 9C 24 B8 00 00  mov         ebx,dword ptr [esp+0B8h]
            00
  00000043: 66 39 7B 04        cmp         word ptr [ebx+4],di
  00000047: 0F 84 B0 02 00 00  je          000002FD
  0000004D: 66 39 7B 06        cmp         word ptr [ebx+6],di
  00000051: 0F 84 A6 02 00 00  je          000002FD
  00000057: 68 00 08 00 00     push        800h
  0000005C: 8D 46 04           lea         eax,[esi+4]
  0000005F: 57                 push        edi
  00000060: 50                 push        eax
  00000061: E8 00 00 00 00     call        _memset
  00000066: 8B 06              mov         eax,dword ptr [esi]
  00000068: 83 C4 0C           add         esp,0Ch
  0000006B: 8B CE              mov         ecx,esi
  0000006D: FF 50 20           call        dword ptr [eax+20h]
  00000070: 8B 8C 24 C8 00 00  mov         ecx,dword ptr [esp+0C8h]
            00
  00000077: B8 00 05 00 00     mov         eax,500h
  0000007C: 66 89 46 0A        mov         word ptr [esi+0Ah],ax
  00000080: 85 C9              test        ecx,ecx
  00000082: 74 17              je          0000009B
  00000084: 8D 51 01           lea         edx,[ecx+1]
  00000087: 8A 01              mov         al,byte ptr [ecx]
  00000089: 41                 inc         ecx
  0000008A: 84 C0              test        al,al
  0000008C: 75 F9              jne         00000087
  0000008E: 2B CA              sub         ecx,edx
  00000090: 74 09              je          0000009B
  00000092: 8B AC 24 C8 00 00  mov         ebp,dword ptr [esp+0C8h]
            00
  00000099: EB 32              jmp         000000CD
  0000009B: 0F B7 43 06        movzx       eax,word ptr [ebx+6]
  0000009F: 25 03 00 00 80     and         eax,80000003h
  000000A4: 79 05              jns         000000AB
  000000A6: 48                 dec         eax
  000000A7: 83 C8 FC           or          eax,0FFFFFFFCh
  000000AA: 40                 inc         eax
  000000AB: 50                 push        eax
  000000AC: 55                 push        ebp
  000000AD: 8D 4C 24 24        lea         ecx,[esp+24h]
  000000B1: E8 00 00 00 00     call        ??0TSerialNumber@@QAE@PADG@Z
  000000B6: 8D 44 24 14        lea         eax,[esp+14h]
  000000BA: 50                 push        eax
  000000BB: 8D 44 24 38        lea         eax,[esp+38h]
  000000BF: 50                 push        eax
  000000C0: 8D 4C 24 24        lea         ecx,[esp+24h]
  000000C4: E8 00 00 00 00     call        ?Get@TSerialNumber@@QAEHPADPAH@Z
  000000C9: 8D 6C 24 34        lea         ebp,[esp+34h]
  000000CD: 0F B7 43 04        movzx       eax,word ptr [ebx+4]
  000000D1: 8B CE              mov         ecx,esi
  000000D3: 50                 push        eax
  000000D4: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QAEXG@Z
  000000D9: 0F B7 43 06        movzx       eax,word ptr [ebx+6]
  000000DD: 8B CE              mov         ecx,esi
  000000DF: 50                 push        eax
  000000E0: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QAEXG@Z
  000000E5: 80 7B 08 00        cmp         byte ptr [ebx+8],0
  000000E9: 74 04              je          000000EF
  000000EB: 80 4E 0E 08        or          byte ptr [esi+0Eh],8
  000000EF: 0F B7 43 0A        movzx       eax,word ptr [ebx+0Ah]
  000000F3: 8B CE              mov         ecx,esi
  000000F5: 50                 push        eax
  000000F6: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QAEXH@Z
  000000FB: 80 7B 0C 00        cmp         byte ptr [ebx+0Ch],0
  000000FF: B9 C0 00 00 00     mov         ecx,0C0h
  00000104: 0F B6 44 24 13     movzx       eax,byte ptr [esp+13h]
  00000109: 0F 45 C1           cmovne      eax,ecx
  0000010C: 80 7B 0D 00        cmp         byte ptr [ebx+0Dh],0
  00000110: 88 44 24 14        mov         byte ptr [esp+14h],al
  00000114: 74 06              je          0000011C
  00000116: 0C 20              or          al,20h
  00000118: 88 44 24 14        mov         byte ptr [esp+14h],al
  0000011C: FF 74 24 14        push        dword ptr [esp+14h]
  00000120: 8B CE              mov         ecx,esi
  00000122: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QAEXE@Z
  00000127: 80 7B 0E 00        cmp         byte ptr [ebx+0Eh],0
  0000012B: 74 04              je          00000131
  0000012D: 80 4E 0E 04        or          byte ptr [esi+0Eh],4
  00000131: 8B 8C 24 BC 00 00  mov         ecx,dword ptr [esp+0BCh]
            00
  00000138: C6 46 12 16        mov         byte ptr [esi+12h],16h
  0000013C: 8D 51 01           lea         edx,[ecx+1]
  0000013F: 90                 nop
  00000140: 8A 01              mov         al,byte ptr [ecx]
  00000142: 41                 inc         ecx
  00000143: 84 C0              test        al,al
  00000145: 75 F9              jne         00000140
  00000147: 2B CA              sub         ecx,edx
  00000149: FE C1              inc         cl
  0000014B: 02 C9              add         cl,cl
  0000014D: 88 4E 13           mov         byte ptr [esi+13h],cl
  00000150: 80 C1 16           add         cl,16h
  00000153: 88 4E 14           mov         byte ptr [esi+14h],cl
  00000156: 8B 8C 24 C4 00 00  mov         ecx,dword ptr [esp+0C4h]
            00
  0000015D: 8D 51 01           lea         edx,[ecx+1]
  00000160: 8A 01              mov         al,byte ptr [ecx]
  00000162: 41                 inc         ecx
  00000163: 84 C0              test        al,al
  00000165: 75 F9              jne         00000160
  00000167: 8A 46 14           mov         al,byte ptr [esi+14h]
  0000016A: 2B CA              sub         ecx,edx
  0000016C: FE C1              inc         cl
  0000016E: 02 C9              add         cl,cl
  00000170: 02 C1              add         al,cl
  00000172: 88 4E 15           mov         byte ptr [esi+15h],cl
  00000175: 8B CD              mov         ecx,ebp
  00000177: 88 46 16           mov         byte ptr [esi+16h],al
  0000017A: 8D 51 01           lea         edx,[ecx+1]
  0000017D: 8D 49 00           lea         ecx,[ecx]
  00000180: 8A 01              mov         al,byte ptr [ecx]
  00000182: 41                 inc         ecx
  00000183: 84 C0              test        al,al
  00000185: 75 F9              jne         00000180
  00000187: FF B4 24 BC 00 00  push        dword ptr [esp+0BCh]
            00
  0000018E: 2B CA              sub         ecx,edx
  00000190: 8D 46 1A           lea         eax,[esi+1Ah]
  00000193: FE C1              inc         cl
  00000195: 02 C9              add         cl,cl
  00000197: 88 4E 17           mov         byte ptr [esi+17h],cl
  0000019A: 8B CE              mov         ecx,esi
  0000019C: 50                 push        eax
  0000019D: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001A2: 0F B6 46 14        movzx       eax,byte ptr [esi+14h]
  000001A6: 8B CE              mov         ecx,esi
  000001A8: FF B4 24 C4 00 00  push        dword ptr [esp+0C4h]
            00
  000001AF: 83 C0 04           add         eax,4
  000001B2: 03 C6              add         eax,esi
  000001B4: 50                 push        eax
  000001B5: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001BA: 0F B6 46 16        movzx       eax,byte ptr [esi+16h]
  000001BE: 8B CE              mov         ecx,esi
  000001C0: 83 C0 04           add         eax,4
  000001C3: 55                 push        ebp
  000001C4: 03 C6              add         eax,esi
  000001C6: 50                 push        eax
  000001C7: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z
  000001CC: 0F BE 46 12        movsx       eax,byte ptr [esi+12h]
  000001D0: 8B CE              mov         ecx,esi
  000001D2: 89 86 24 08 00 00  mov         dword ptr [esi+824h],eax
  000001D8: 0F BE 46 14        movsx       eax,byte ptr [esi+14h]
  000001DC: 89 86 28 08 00 00  mov         dword ptr [esi+828h],eax
  000001E2: 0F BE 46 16        movsx       eax,byte ptr [esi+16h]
  000001E6: 89 86 2C 08 00 00  mov         dword ptr [esi+82Ch],eax
  000001EC: 80 4E 12 80        or          byte ptr [esi+12h],80h
  000001F0: 80 4E 14 80        or          byte ptr [esi+14h],80h
  000001F4: 80 4E 16 80        or          byte ptr [esi+16h],80h
  000001F8: 8B 06              mov         eax,dword ptr [esi]
  000001FA: FF 50 24           call        dword ptr [eax+24h]
  000001FD: 80 7B 10 00        cmp         byte ptr [ebx+10h],0
  00000201: B8 10 00 00 00     mov         eax,10h
  00000206: 0F 45 F8           cmovne      edi,eax
  00000209: 80 7B 11 00        cmp         byte ptr [ebx+11h],0
  0000020D: 74 06              je          00000215
  0000020F: 81 CF 00 10 00 00  or          edi,1000h
  00000215: 80 7B 12 00        cmp         byte ptr [ebx+12h],0
  00000219: 74 03              je          0000021E
  0000021B: 83 CF 01           or          edi,1
  0000021E: 80 7B 13 00        cmp         byte ptr [ebx+13h],0
  00000222: 74 03              je          00000227
  00000224: 83 CF 02           or          edi,2
  00000227: 80 7B 14 00        cmp         byte ptr [ebx+14h],0
  0000022B: 74 03              je          00000230
  0000022D: 83 CF 04           or          edi,4
  00000230: 80 7B 15 00        cmp         byte ptr [ebx+15h],0
  00000234: 74 06              je          0000023C
  00000236: 81 CF 00 01 00 00  or          edi,100h
  0000023C: 80 7B 16 00        cmp         byte ptr [ebx+16h],0
  00000240: 74 06              je          00000248
  00000242: 81 CF 00 02 00 00  or          edi,200h
  00000248: 80 7B 17 00        cmp         byte ptr [ebx+17h],0
  0000024C: 74 06              je          00000254
  0000024E: 81 CF 00 04 00 00  or          edi,400h
  00000254: 80 7B 18 01        cmp         byte ptr [ebx+18h],1
  00000258: 75 03              jne         0000025D
  0000025A: 83 CF 08           or          edi,8
  0000025D: 80 7B 19 01        cmp         byte ptr [ebx+19h],1
  00000261: 75 06              jne         00000269
  00000263: 81 CF 00 08 00 00  or          edi,800h
  00000269: B8 00 02 00 00     mov         eax,200h
  0000026E: 66 89 7E 04        mov         word ptr [esi+4],di
  00000272: 66 89 46 10        mov         word ptr [esi+10h],ax
  00000276: 0F B7 86 22 08 00  movzx       eax,word ptr [esi+822h]
            00
  0000027D: 66 85 C0           test        ax,ax
  00000280: 75 05              jne         00000287
  00000282: B8 46 00 00 00     mov         eax,46h
  00000287: 66 89 46 18        mov         word ptr [esi+18h],ax
  0000028B: 8B CE              mov         ecx,esi
  0000028D: 8D 44 24 18        lea         eax,[esp+18h]
  00000291: C7 44 24 18 02 03  mov         dword ptr [esp+18h],302h
            00 00
  00000299: 50                 push        eax
  0000029A: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  0000029F: 6A 00              push        0
  000002A1: 8B CE              mov         ecx,esi
  000002A3: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  000002A8: 8B 06              mov         eax,dword ptr [esi]
  000002AA: 8B CE              mov         ecx,esi
  000002AC: FF 50 04           call        dword ptr [eax+4]
  000002AF: 8B 06              mov         eax,dword ptr [esi]
  000002B1: 8B CE              mov         ecx,esi
  000002B3: C7 86 08 08 00 00  mov         dword ptr [esi+808h],0
            00 00 00 00
  000002BD: FF 50 20           call        dword ptr [eax+20h]
  000002C0: 8D 4E 04           lea         ecx,[esi+4]
  000002C3: E8 00 00 00 00     call        ?Write@TEeData@@QAEHXZ
  000002C8: 85 C0              test        eax,eax
  000002CA: 75 12              jne         000002DE
  000002CC: 5B                 pop         ebx
  000002CD: 5D                 pop         ebp
  000002CE: 5F                 pop         edi
  000002CF: B8 0C 00 00 00     mov         eax,0Ch
  000002D4: 5E                 pop         esi
  000002D5: 81 C4 A4 00 00 00  add         esp,0A4h
  000002DB: C2 14 00           ret         14h
  000002DE: 8D 4E 04           lea         ecx,[esi+4]
  000002E1: E8 00 00 00 00     call        ?Confirm@TEeData@@QAEHXZ
  000002E6: F7 D8              neg         eax
  000002E8: 5B                 pop         ebx
  000002E9: 1B C0              sbb         eax,eax
  000002EB: 5D                 pop         ebp
  000002EC: 83 E0 F4           and         eax,0FFFFFFF4h
  000002EF: 5F                 pop         edi
  000002F0: 83 C0 0C           add         eax,0Ch
  000002F3: 5E                 pop         esi
  000002F4: 81 C4 A4 00 00 00  add         esp,0A4h
  000002FA: C2 14 00           ret         14h
  000002FD: 5B                 pop         ebx
  000002FE: 5D                 pop         ebp
  000002FF: 5F                 pop         edi
  00000300: B8 06 00 00 00     mov         eax,6
  00000305: 5E                 pop         esi
  00000306: 81 C4 A4 00 00 00  add         esp,0A4h
  0000030C: C2 14 00           ret         14h
  0000030F: 5D                 pop         ebp
  00000310: 5F                 pop         edi
  00000311: B8 06 00 00 00     mov         eax,6
  00000316: 5E                 pop         esi
  00000317: 81 C4 A4 00 00 00  add         esp,0A4h
  0000031D: C2 14 00           ret         14h
  00000320: 5F                 pop         edi
  00000321: B8 06 00 00 00     mov         eax,6
  00000326: 5E                 pop         esi
  00000327: 81 C4 A4 00 00 00  add         esp,0A4h
  0000032D: C2 14 00           ret         14h

?Read@TFtEE2232@@UAEHXZ (public: virtual int __thiscall TFtEE2232::Read(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: E8 00 00 00 00     call        ?Read@TFtE2Data@@UAEHXZ
  00000008: 85 C0              test        eax,eax
  0000000A: 75 02              jne         0000000E
  0000000C: 5E                 pop         esi
  0000000D: C3                 ret
  0000000E: 0F B7 46 18        movzx       eax,word ptr [esi+18h]
  00000012: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  00000019: 83 F8 56           cmp         eax,56h
  0000001C: 74 16              je          00000034
  0000001E: 83 F8 66           cmp         eax,66h
  00000021: 74 11              je          00000034
  00000023: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],40h
            40 00 00 00
  0000002D: B8 01 00 00 00     mov         eax,1
  00000032: 5E                 pop         esi
  00000033: C3                 ret
  00000034: 83 AE 24 08 00 00  sub         dword ptr [esi+824h],0FFFFFF80h
            80
  0000003B: B8 01 00 00 00     mov         eax,1
  00000040: 83 AE 28 08 00 00  sub         dword ptr [esi+828h],0FFFFFF80h
            80
  00000047: 83 AE 2C 08 00 00  sub         dword ptr [esi+82Ch],0FFFFFF80h
            80
  0000004E: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  00000058: 5E                 pop         esi
  00000059: C3                 ret

?ReadAndParse@TFtEE2232@@QAEKPAXPAD111@Z (public: unsigned long __thiscall TFtEE2232::ReadAndParse(void *,char *,char *,char *,char *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 53                 push        ebx
  00000004: 55                 push        ebp
  00000005: 56                 push        esi
  00000006: 8B 74 24 50        mov         esi,dword ptr [esp+50h]
  0000000A: 8B D9              mov         ebx,ecx
  0000000C: 57                 push        edi
  0000000D: 85 F6              test        esi,esi
  0000000F: 0F 84 CD 01 00 00  je          000001E2
  00000015: 83 7C 24 58 00     cmp         dword ptr [esp+58h],0
  0000001A: 0F 84 C2 01 00 00  je          000001E2
  00000020: 8B 7C 24 5C        mov         edi,dword ptr [esp+5Ch]
  00000024: 85 FF              test        edi,edi
  00000026: 0F 84 B6 01 00 00  je          000001E2
  0000002C: 8B 6C 24 60        mov         ebp,dword ptr [esp+60h]
  00000030: 85 ED              test        ebp,ebp
  00000032: 0F 84 AA 01 00 00  je          000001E2
  00000038: 83 7C 24 64 00     cmp         dword ptr [esp+64h],0
  0000003D: 0F 84 9F 01 00 00  je          000001E2
  00000043: 8B 03              mov         eax,dword ptr [ebx]
  00000045: FF 10              call        dword ptr [eax]
  00000047: 85 C0              test        eax,eax
  00000049: 0F 84 84 01 00 00  je          000001D3
  0000004F: 8B CB              mov         ecx,ebx
  00000051: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  00000056: 0F B7 C0           movzx       eax,ax
  00000059: 66 85 C0           test        ax,ax
  0000005C: 75 0F              jne         0000006D
  0000005E: 5F                 pop         edi
  0000005F: 5E                 pop         esi
  00000060: 5D                 pop         ebp
  00000061: B8 0E 00 00 00     mov         eax,0Eh
  00000066: 5B                 pop         ebx
  00000067: 83 C4 40           add         esp,40h
  0000006A: C2 14 00           ret         14h
  0000006D: B9 FF FF 00 00     mov         ecx,0FFFFh
  00000072: 66 3B C1           cmp         ax,cx
  00000075: 75 0F              jne         00000086
  00000077: 5F                 pop         edi
  00000078: 5E                 pop         esi
  00000079: 5D                 pop         ebp
  0000007A: B8 0F 00 00 00     mov         eax,0Fh
  0000007F: 5B                 pop         ebx
  00000080: 83 C4 40           add         esp,40h
  00000083: C2 14 00           ret         14h
  00000086: 8B CB              mov         ecx,ebx
  00000088: 66 89 46 04        mov         word ptr [esi+4],ax
  0000008C: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  00000091: 66 89 46 06        mov         word ptr [esi+6],ax
  00000095: 8B CB              mov         ecx,ebx
  00000097: 0F BE 43 0E        movsx       eax,byte ptr [ebx+0Eh]
  0000009B: C1 E8 03           shr         eax,3
  0000009E: 24 01              and         al,1
  000000A0: 88 46 08           mov         byte ptr [esi+8],al
  000000A3: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  000000A8: 8B CB              mov         ecx,ebx
  000000AA: 66 89 46 0A        mov         word ptr [esi+0Ah],ax
  000000AE: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  000000B3: 8A C8              mov         cl,al
  000000B5: C0 E8 06           shr         al,6
  000000B8: 24 01              and         al,1
  000000BA: C0 E9 05           shr         cl,5
  000000BD: 88 46 0C           mov         byte ptr [esi+0Ch],al
  000000C0: 80 E1 01           and         cl,1
  000000C3: 88 4E 0D           mov         byte ptr [esi+0Dh],cl
  000000C6: 8B CB              mov         ecx,ebx
  000000C8: 0F BE 43 0E        movsx       eax,byte ptr [ebx+0Eh]
  000000CC: C1 E8 02           shr         eax,2
  000000CF: 24 01              and         al,1
  000000D1: 88 46 0E           mov         byte ptr [esi+0Eh],al
  000000D4: 8D 44 24 10        lea         eax,[esp+10h]
  000000D8: 50                 push        eax
  000000D9: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  000000DE: 8B 54 24 58        mov         edx,dword ptr [esp+58h]
  000000E2: 8D 4C 24 10        lea         ecx,[esp+10h]
  000000E6: 8B C1              mov         eax,ecx
  000000E8: 2B D0              sub         edx,eax
  000000EA: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  000000F0: 8A 01              mov         al,byte ptr [ecx]
  000000F2: 8D 49 01           lea         ecx,[ecx+1]
  000000F5: 88 44 0A FF        mov         byte ptr [edx+ecx-1],al
  000000F9: 84 C0              test        al,al
  000000FB: 75 F3              jne         000000F0
  000000FD: 8D 44 24 10        lea         eax,[esp+10h]
  00000101: 8B CB              mov         ecx,ebx
  00000103: 50                 push        eax
  00000104: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  00000109: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000010D: 8B C1              mov         eax,ecx
  0000010F: 2B F8              sub         edi,eax
  00000111: 8A 01              mov         al,byte ptr [ecx]
  00000113: 8D 49 01           lea         ecx,[ecx+1]
  00000116: 88 44 0F FF        mov         byte ptr [edi+ecx-1],al
  0000011A: 84 C0              test        al,al
  0000011C: 75 F3              jne         00000111
  0000011E: 8D 44 24 10        lea         eax,[esp+10h]
  00000122: 8B CB              mov         ecx,ebx
  00000124: 50                 push        eax
  00000125: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  0000012A: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000012E: 8B C1              mov         eax,ecx
  00000130: 2B E8              sub         ebp,eax
  00000132: 8A 01              mov         al,byte ptr [ecx]
  00000134: 8D 49 01           lea         ecx,[ecx+1]
  00000137: 88 44 29 FF        mov         byte ptr [ecx+ebp-1],al
  0000013B: 84 C0              test        al,al
  0000013D: 75 F3              jne         00000132
  0000013F: 8D 44 24 10        lea         eax,[esp+10h]
  00000143: 8B CB              mov         ecx,ebx
  00000145: 50                 push        eax
  00000146: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  0000014B: 8B 54 24 64        mov         edx,dword ptr [esp+64h]
  0000014F: 8D 4C 24 10        lea         ecx,[esp+10h]
  00000153: 8B C1              mov         eax,ecx
  00000155: 2B D0              sub         edx,eax
  00000157: 8A 01              mov         al,byte ptr [ecx]
  00000159: 8D 49 01           lea         ecx,[ecx+1]
  0000015C: 88 44 0A FF        mov         byte ptr [edx+ecx-1],al
  00000160: 84 C0              test        al,al
  00000162: 75 F3              jne         00000157
  00000164: 0F B7 4B 04        movzx       ecx,word ptr [ebx+4]
  00000168: 8A C1              mov         al,cl
  0000016A: C0 E8 04           shr         al,4
  0000016D: 24 01              and         al,1
  0000016F: 88 46 10           mov         byte ptr [esi+10h],al
  00000172: 8B C1              mov         eax,ecx
  00000174: C1 E8 0C           shr         eax,0Ch
  00000177: 24 01              and         al,1
  00000179: 88 46 11           mov         byte ptr [esi+11h],al
  0000017C: 8A C1              mov         al,cl
  0000017E: 24 01              and         al,1
  00000180: 88 46 12           mov         byte ptr [esi+12h],al
  00000183: 8A C1              mov         al,cl
  00000185: D0 E8              shr         al,1
  00000187: 24 01              and         al,1
  00000189: 88 46 13           mov         byte ptr [esi+13h],al
  0000018C: 8A C1              mov         al,cl
  0000018E: C0 E8 02           shr         al,2
  00000191: 24 01              and         al,1
  00000193: 88 46 14           mov         byte ptr [esi+14h],al
  00000196: 8B C1              mov         eax,ecx
  00000198: C1 E8 08           shr         eax,8
  0000019B: 24 01              and         al,1
  0000019D: 88 46 15           mov         byte ptr [esi+15h],al
  000001A0: 8B C1              mov         eax,ecx
  000001A2: C1 E8 09           shr         eax,9
  000001A5: 24 01              and         al,1
  000001A7: 88 46 16           mov         byte ptr [esi+16h],al
  000001AA: 8B C1              mov         eax,ecx
  000001AC: C1 E8 0A           shr         eax,0Ah
  000001AF: 24 01              and         al,1
  000001B1: 88 46 17           mov         byte ptr [esi+17h],al
  000001B4: 8A C1              mov         al,cl
  000001B6: C0 E8 03           shr         al,3
  000001B9: C1 E9 0B           shr         ecx,0Bh
  000001BC: 24 01              and         al,1
  000001BE: 80 E1 01           and         cl,1
  000001C1: 88 46 18           mov         byte ptr [esi+18h],al
  000001C4: 5F                 pop         edi
  000001C5: 88 4E 19           mov         byte ptr [esi+19h],cl
  000001C8: 33 C0              xor         eax,eax
  000001CA: 5E                 pop         esi
  000001CB: 5D                 pop         ebp
  000001CC: 5B                 pop         ebx
  000001CD: 83 C4 40           add         esp,40h
  000001D0: C2 14 00           ret         14h
  000001D3: 5F                 pop         edi
  000001D4: 5E                 pop         esi
  000001D5: 5D                 pop         ebp
  000001D6: B8 0B 00 00 00     mov         eax,0Bh
  000001DB: 5B                 pop         ebx
  000001DC: 83 C4 40           add         esp,40h
  000001DF: C2 14 00           ret         14h
  000001E2: 5F                 pop         edi
  000001E3: 5E                 pop         esi
  000001E4: 5D                 pop         ebp
  000001E5: B8 06 00 00 00     mov         eax,6
  000001EA: 5B                 pop         ebx
  000001EB: 83 C4 40           add         esp,40h
  000001EE: C2 14 00           ret         14h

?ReadAndParse@TFtEE2232@@UAEKPAX@Z (public: virtual unsigned long __thiscall TFtEE2232::ReadAndParse(void *)):
  00000000: 83 EC 40           sub         esp,40h
  00000003: 57                 push        edi
  00000004: 8B F9              mov         edi,ecx
  00000006: 8B 07              mov         eax,dword ptr [edi]
  00000008: FF 10              call        dword ptr [eax]
  0000000A: 85 C0              test        eax,eax
  0000000C: 75 0C              jne         0000001A
  0000000E: B8 0B 00 00 00     mov         eax,0Bh
  00000013: 5F                 pop         edi
  00000014: 83 C4 40           add         esp,40h
  00000017: C2 04 00           ret         4
  0000001A: 8B CF              mov         ecx,edi
  0000001C: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QAEGXZ
  00000021: 0F B7 C0           movzx       eax,ax
  00000024: 66 85 C0           test        ax,ax
  00000027: 75 0C              jne         00000035
  00000029: B8 0E 00 00 00     mov         eax,0Eh
  0000002E: 5F                 pop         edi
  0000002F: 83 C4 40           add         esp,40h
  00000032: C2 04 00           ret         4
  00000035: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000003A: 66 3B C1           cmp         ax,cx
  0000003D: 75 0C              jne         0000004B
  0000003F: B8 0F 00 00 00     mov         eax,0Fh
  00000044: 5F                 pop         edi
  00000045: 83 C4 40           add         esp,40h
  00000048: C2 04 00           ret         4
  0000004B: 56                 push        esi
  0000004C: 8B 74 24 4C        mov         esi,dword ptr [esp+4Ch]
  00000050: 8B CF              mov         ecx,edi
  00000052: 66 89 46 0C        mov         word ptr [esi+0Ch],ax
  00000056: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QAEGXZ
  0000005B: 66 89 46 0E        mov         word ptr [esi+0Eh],ax
  0000005F: 8B CF              mov         ecx,edi
  00000061: 8D 44 24 08        lea         eax,[esp+8]
  00000065: 50                 push        eax
  00000066: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QAEXPAD@Z
  0000006B: 8B 4E 10           mov         ecx,dword ptr [esi+10h]
  0000006E: 85 C9              test        ecx,ecx
  00000070: 74 12              je          00000084
  00000072: 8D 54 24 08        lea         edx,[esp+8]
  00000076: 8A 02              mov         al,byte ptr [edx]
  00000078: 8D 52 01           lea         edx,[edx+1]
  0000007B: 88 01              mov         byte ptr [ecx],al
  0000007D: 8D 49 01           lea         ecx,[ecx+1]
  00000080: 84 C0              test        al,al
  00000082: 75 F2              jne         00000076
  00000084: 8D 44 24 08        lea         eax,[esp+8]
  00000088: 8B CF              mov         ecx,edi
  0000008A: 50                 push        eax
  0000008B: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z
  00000090: 8B 4E 14           mov         ecx,dword ptr [esi+14h]
  00000093: 85 C9              test        ecx,ecx
  00000095: 74 17              je          000000AE
  00000097: 8D 54 24 08        lea         edx,[esp+8]
  0000009B: EB 03              jmp         000000A0
  0000009D: 8D 49 00           lea         ecx,[ecx]
  000000A0: 8A 02              mov         al,byte ptr [edx]
  000000A2: 8D 52 01           lea         edx,[edx+1]
  000000A5: 88 01              mov         byte ptr [ecx],al
  000000A7: 8D 49 01           lea         ecx,[ecx+1]
  000000AA: 84 C0              test        al,al
  000000AC: 75 F2              jne         000000A0
  000000AE: 8D 44 24 08        lea         eax,[esp+8]
  000000B2: 8B CF              mov         ecx,edi
  000000B4: 50                 push        eax
  000000B5: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QAEXPAD@Z
  000000BA: 8B 4E 18           mov         ecx,dword ptr [esi+18h]
  000000BD: 85 C9              test        ecx,ecx
  000000BF: 74 12              je          000000D3
  000000C1: 8D 54 24 08        lea         edx,[esp+8]
  000000C5: 8A 02              mov         al,byte ptr [edx]
  000000C7: 8D 52 01           lea         edx,[edx+1]
  000000CA: 88 01              mov         byte ptr [ecx],al
  000000CC: 8D 49 01           lea         ecx,[ecx+1]
  000000CF: 84 C0              test        al,al
  000000D1: 75 F2              jne         000000C5
  000000D3: 8D 44 24 08        lea         eax,[esp+8]
  000000D7: 8B CF              mov         ecx,edi
  000000D9: 50                 push        eax
  000000DA: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  000000DF: 8B 46 1C           mov         eax,dword ptr [esi+1Ch]
  000000E2: 85 C0              test        eax,eax
  000000E4: 74 18              je          000000FE
  000000E6: 8D 54 24 08        lea         edx,[esp+8]
  000000EA: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  000000F0: 8A 0A              mov         cl,byte ptr [edx]
  000000F2: 8D 52 01           lea         edx,[edx+1]
  000000F5: 88 08              mov         byte ptr [eax],cl
  000000F7: 8D 40 01           lea         eax,[eax+1]
  000000FA: 84 C9              test        cl,cl
  000000FC: 75 F2              jne         000000F0
  000000FE: 8B CF              mov         ecx,edi
  00000100: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QAEHXZ
  00000105: 8B CF              mov         ecx,edi
  00000107: 66 89 46 20        mov         word ptr [esi+20h],ax
  0000010B: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QAEGXZ
  00000110: 33 C9              xor         ecx,ecx
  00000112: 66 85 C0           test        ax,ax
  00000115: 0F 94 C1           sete        cl
  00000118: 66 89 4E 22        mov         word ptr [esi+22h],cx
  0000011C: 8B CF              mov         ecx,edi
  0000011E: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QAEEXZ
  00000123: 8A C8              mov         cl,al
  00000125: C7 46 28 00 00 00  mov         dword ptr [esi+28h],0
            00
  0000012C: C0 E8 05           shr         al,5
  0000012F: 24 01              and         al,1
  00000131: C0 E9 06           shr         cl,6
  00000134: 0F B6 C0           movzx       eax,al
  00000137: 80 E1 01           and         cl,1
  0000013A: 66 89 46 26        mov         word ptr [esi+26h],ax
  0000013E: 0F B6 C9           movzx       ecx,cl
  00000141: 66 89 4E 24        mov         word ptr [esi+24h],cx
  00000145: C7 46 2C 00 00 00  mov         dword ptr [esi+2Ch],0
            00
  0000014C: C6 46 30 01        mov         byte ptr [esi+30h],1
  00000150: 0F B7 4F 04        movzx       ecx,word ptr [edi+4]
  00000154: 8A C1              mov         al,cl
  00000156: C0 E8 04           shr         al,4
  00000159: 24 01              and         al,1
  0000015B: 88 46 3A           mov         byte ptr [esi+3Ah],al
  0000015E: 8B C1              mov         eax,ecx
  00000160: C1 E8 0C           shr         eax,0Ch
  00000163: 24 01              and         al,1
  00000165: 88 46 3B           mov         byte ptr [esi+3Bh],al
  00000168: 8A C1              mov         al,cl
  0000016A: 24 01              and         al,1
  0000016C: 88 46 3C           mov         byte ptr [esi+3Ch],al
  0000016F: 8A C1              mov         al,cl
  00000171: D0 E8              shr         al,1
  00000173: 24 01              and         al,1
  00000175: 88 46 3D           mov         byte ptr [esi+3Dh],al
  00000178: 8A C1              mov         al,cl
  0000017A: C0 E8 02           shr         al,2
  0000017D: 24 01              and         al,1
  0000017F: 88 46 3E           mov         byte ptr [esi+3Eh],al
  00000182: 8A C1              mov         al,cl
  00000184: C0 E8 03           shr         al,3
  00000187: 24 01              and         al,1
  00000189: 88 46 3F           mov         byte ptr [esi+3Fh],al
  0000018C: 8B C1              mov         eax,ecx
  0000018E: C1 E8 08           shr         eax,8
  00000191: 24 01              and         al,1
  00000193: 88 46 40           mov         byte ptr [esi+40h],al
  00000196: 8B C1              mov         eax,ecx
  00000198: C1 E8 09           shr         eax,9
  0000019B: 24 01              and         al,1
  0000019D: 88 46 41           mov         byte ptr [esi+41h],al
  000001A0: 8B C1              mov         eax,ecx
  000001A2: C1 E8 0A           shr         eax,0Ah
  000001A5: 24 01              and         al,1
  000001A7: C1 E9 0B           shr         ecx,0Bh
  000001AA: 88 46 42           mov         byte ptr [esi+42h],al
  000001AD: 80 E1 01           and         cl,1
  000001B0: 88 4E 43           mov         byte ptr [esi+43h],cl
  000001B3: 0F B7 4F 0E        movzx       ecx,word ptr [edi+0Eh]
  000001B7: 8A C1              mov         al,cl
  000001B9: C0 E8 02           shr         al,2
  000001BC: 24 01              and         al,1
  000001BE: 88 46 35           mov         byte ptr [esi+35h],al
  000001C1: 8A C1              mov         al,cl
  000001C3: C0 E8 03           shr         al,3
  000001C6: 24 01              and         al,1
  000001C8: 88 46 36           mov         byte ptr [esi+36h],al
  000001CB: 8A C1              mov         al,cl
  000001CD: C0 E8 04           shr         al,4
  000001D0: 24 01              and         al,1
  000001D2: 88 46 37           mov         byte ptr [esi+37h],al
  000001D5: 8A C1              mov         al,cl
  000001D7: 24 01              and         al,1
  000001D9: 88 46 31           mov         byte ptr [esi+31h],al
  000001DC: 8A C1              mov         al,cl
  000001DE: D0 E8              shr         al,1
  000001E0: 24 01              and         al,1
  000001E2: 88 46 33           mov         byte ptr [esi+33h],al
  000001E5: 8A C1              mov         al,cl
  000001E7: C0 E8 05           shr         al,5
  000001EA: C0 E9 06           shr         cl,6
  000001ED: 24 01              and         al,1
  000001EF: 80 E1 01           and         cl,1
  000001F2: 88 46 32           mov         byte ptr [esi+32h],al
  000001F5: 88 4E 34           mov         byte ptr [esi+34h],cl
  000001F8: 66 8B 47 10        mov         ax,word ptr [edi+10h]
  000001FC: 66 89 46 38        mov         word ptr [esi+38h],ax
  00000200: 33 C0              xor         eax,eax
  00000202: 5E                 pop         esi
  00000203: 5F                 pop         edi
  00000204: 83 C4 40           add         esp,40h
  00000207: C2 04 00           ret         4

?SetRomType@TFtEE2232@@UAEXXZ (public: virtual void __thiscall TFtEE2232::SetRomType(void)):
  00000000: 51                 push        ecx
  00000001: 53                 push        ebx
  00000002: 56                 push        esi
  00000003: 8B F1              mov         esi,ecx
  00000005: C7 44 24 08 00 00  mov         dword ptr [esp+8],0
            00 00
  0000000D: 57                 push        edi
  0000000E: 8D 4E 04           lea         ecx,[esi+4]
  00000011: E8 00 00 00 00     call        ?Erase@TEeData@@QAEHXZ
  00000016: 68 C0 00 00 00     push        0C0h
  0000001B: 68 C0 00 00 00     push        0C0h
  00000020: 8D 4E 04           lea         ecx,[esi+4]
  00000023: E8 00 00 00 00     call        ?WriteWord@TEeData@@QAEHKG@Z
  00000028: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000002C: 50                 push        eax
  0000002D: 6A 00              push        0
  0000002F: 8D 4E 04           lea         ecx,[esi+4]
  00000032: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000037: BB C0 00 00 00     mov         ebx,0C0h
  0000003C: 66 39 5C 24 0C     cmp         word ptr [esp+0Ch],bx
  00000041: 75 05              jne         00000048
  00000043: 8D 43 86           lea         eax,[ebx-7Ah]
  00000046: EB 67              jmp         000000AF
  00000048: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000004C: 50                 push        eax
  0000004D: 6A 40              push        40h
  0000004F: 8D 4E 04           lea         ecx,[esi+4]
  00000052: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000057: 66 39 5C 24 0C     cmp         word ptr [esp+0Ch],bx
  0000005C: 75 1B              jne         00000079
  0000005E: B8 56 00 00 00     mov         eax,56h
  00000063: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  0000006D: 5F                 pop         edi
  0000006E: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  00000075: 5E                 pop         esi
  00000076: 5B                 pop         ebx
  00000077: 59                 pop         ecx
  00000078: C3                 ret
  00000079: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000007D: 50                 push        eax
  0000007E: 68 C0 00 00 00     push        0C0h
  00000083: 8D 4E 04           lea         ecx,[esi+4]
  00000086: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  0000008B: 66 39 5C 24 0C     cmp         word ptr [esp+0Ch],bx
  00000090: 75 1B              jne         000000AD
  00000092: B8 66 00 00 00     mov         eax,66h
  00000097: C7 86 30 08 00 00  mov         dword ptr [esi+830h],0FEh
            FE 00 00 00
  000000A1: 5F                 pop         edi
  000000A2: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  000000A9: 5E                 pop         esi
  000000AA: 5B                 pop         ebx
  000000AB: 59                 pop         ecx
  000000AC: C3                 ret
  000000AD: 33 C0              xor         eax,eax
  000000AF: 5F                 pop         edi
  000000B0: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],40h
            40 00 00 00
  000000BA: C7 86 30 08 00 00  mov         dword ptr [esi+830h],7Eh
            7E 00 00 00
  000000C4: 66 89 86 22 08 00  mov         word ptr [esi+822h],ax
            00
  000000CB: 5E                 pop         esi
  000000CC: 5B                 pop         ebx
  000000CD: 59                 pop         ecx
  000000CE: C3                 ret

??0TFtE2Data@@QAE@PAUft_private_vars@@@Z (public: __thiscall TFtE2Data::TFtE2Data(struct ft_private_vars *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: 8D 4E 04           lea         ecx,[esi+4]
  0000000A: E8 00 00 00 00     call        ??0TEeData@@QAE@PAUft_private_vars@@@Z
  0000000F: 33 C0              xor         eax,eax
  00000011: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtE2Data@@6B@
  00000017: 89 86 20 08 00 00  mov         dword ptr [esi+820h],eax
  0000001D: 8B C6              mov         eax,esi
  0000001F: 5E                 pop         esi
  00000020: C2 04 00           ret         4

??0TFtE2Data@@QAE@PAX@Z (public: __thiscall TFtE2Data::TFtE2Data(void *)):
  00000000: 56                 push        esi
  00000001: FF 74 24 08        push        dword ptr [esp+8]
  00000005: 8B F1              mov         esi,ecx
  00000007: 8D 4E 04           lea         ecx,[esi+4]
  0000000A: E8 00 00 00 00     call        ??0TEeData@@QAE@PAX@Z
  0000000F: 33 C0              xor         eax,eax
  00000011: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtE2Data@@6B@
  00000017: 89 86 20 08 00 00  mov         dword ptr [esi+820h],eax
  0000001D: 8B C6              mov         eax,esi
  0000001F: 5E                 pop         esi
  00000020: C2 04 00           ret         4

??0TFtE2Data@@QAE@XZ (public: __thiscall TFtE2Data::TFtE2Data(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: 8D 4E 04           lea         ecx,[esi+4]
  00000006: E8 00 00 00 00     call        ??0TEeData@@QAE@XZ
  0000000B: 33 C0              xor         eax,eax
  0000000D: C7 06 00 00 00 00  mov         dword ptr [esi],offset ??_7TFtE2Data@@6B@
  00000013: 89 86 20 08 00 00  mov         dword ptr [esi+820h],eax
  00000019: 8B C6              mov         eax,esi
  0000001B: 5E                 pop         esi
  0000001C: C3                 ret

?AddBmAttributes@TFtE2Data@@QAEXE@Z (public: void __thiscall TFtE2Data::AddBmAttributes(unsigned char)):
  00000000: 8A 44 24 04        mov         al,byte ptr [esp+4]
  00000004: 88 41 0C           mov         byte ptr [ecx+0Ch],al
  00000007: 8B 01              mov         eax,dword ptr [ecx]
  00000009: FF 50 04           call        dword ptr [eax+4]
  0000000C: C2 04 00           ret         4

?AddMaxPower@TFtE2Data@@QAEXH@Z (public: void __thiscall TFtE2Data::AddMaxPower(int)):
  00000000: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  00000004: BA F4 01 00 00     mov         edx,1F4h
  00000009: 3B C2              cmp         eax,edx
  0000000B: 0F 4F C2           cmovg       eax,edx
  0000000E: 99                 cdq
  0000000F: 2B C2              sub         eax,edx
  00000011: D1 F8              sar         eax,1
  00000013: 88 41 0D           mov         byte ptr [ecx+0Dh],al
  00000016: 8B 01              mov         eax,dword ptr [ecx]
  00000018: FF 50 04           call        dword ptr [eax+4]
  0000001B: C2 04 00           ret         4

?AddOemProductId@TFtE2Data@@QAEXG@Z (public: void __thiscall TFtE2Data::AddOemProductId(unsigned short)):
  00000000: 66 8B 44 24 04     mov         ax,word ptr [esp+4]
  00000005: 66 89 41 08        mov         word ptr [ecx+8],ax
  00000009: 8B 01              mov         eax,dword ptr [ecx]
  0000000B: FF 50 04           call        dword ptr [eax+4]
  0000000E: C2 04 00           ret         4

?AddOemVendorId@TFtE2Data@@QAEXG@Z (public: void __thiscall TFtE2Data::AddOemVendorId(unsigned short)):
  00000000: 66 8B 44 24 04     mov         ax,word ptr [esp+4]
  00000005: 66 89 41 06        mov         word ptr [ecx+6],ax
  00000009: 8B 01              mov         eax,dword ptr [ecx]
  0000000B: FF 50 04           call        dword ptr [eax+4]
  0000000E: C2 04 00           ret         4

?AddOptions@TFtE2Data@@QAEXG@Z (public: void __thiscall TFtE2Data::AddOptions(unsigned short)):
  00000000: 56                 push        esi
  00000001: 8B B1 2C 08 00 00  mov         esi,dword ptr [ecx+0000082Ch]
  00000007: 0F BE 44 0E 04     movsx       eax,byte ptr [esi+ecx+4]
  0000000C: 03 F0              add         esi,eax
  0000000E: 66 8B 44 24 08     mov         ax,word ptr [esp+8]
  00000013: 0F BE 54 0E 04     movsx       edx,byte ptr [esi+ecx+4]
  00000018: 03 D6              add         edx,esi
  0000001A: 66 89 44 0A 04     mov         word ptr [edx+ecx+4],ax
  0000001F: 8B 01              mov         eax,dword ptr [ecx]
  00000021: FF 50 04           call        dword ptr [eax+4]
  00000024: 5E                 pop         esi
  00000025: C2 04 00           ret         4

?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z (public: int __thiscall TFtE2Data::AddPortNamePrefixDescriptor(unsigned char *)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000007: 57                 push        edi
  00000008: 8B 96 2C 08 00 00  mov         edx,dword ptr [esi+82Ch]
  0000000E: 0F B6 39           movzx       edi,byte ptr [ecx]
  00000011: 0F BE 44 32 04     movsx       eax,byte ptr [edx+esi+4]
  00000016: 03 D0              add         edx,eax
  00000018: 8D 04 17           lea         eax,[edi+edx]
  0000001B: 83 F8 7C           cmp         eax,7Ch
  0000001E: 76 07              jbe         00000027
  00000020: 5F                 pop         edi
  00000021: 33 C0              xor         eax,eax
  00000023: 5E                 pop         esi
  00000024: C2 04 00           ret         4
  00000027: 57                 push        edi
  00000028: 8D 46 04           lea         eax,[esi+4]
  0000002B: 51                 push        ecx
  0000002C: 03 C2              add         eax,edx
  0000002E: 50                 push        eax
  0000002F: E8 00 00 00 00     call        _memcpy
  00000034: 8B 06              mov         eax,dword ptr [esi]
  00000036: 83 C4 0C           add         esp,0Ch
  00000039: 8B CE              mov         ecx,esi
  0000003B: FF 50 04           call        dword ptr [eax+4]
  0000003E: 5F                 pop         edi
  0000003F: B8 01 00 00 00     mov         eax,1
  00000044: 5E                 pop         esi
  00000045: C2 04 00           ret         4

?AddSerialStringDescriptor@TFtE2Data@@QAEXPAE@Z (public: void __thiscall TFtE2Data::AddSerialStringDescriptor(unsigned char *)):
  00000000: 8B 54 24 04        mov         edx,dword ptr [esp+4]
  00000004: 56                 push        esi
  00000005: 57                 push        edi
  00000006: 8B F9              mov         edi,ecx
  00000008: 0F B6 02           movzx       eax,byte ptr [edx]
  0000000B: 50                 push        eax
  0000000C: 52                 push        edx
  0000000D: 8D 77 04           lea         esi,[edi+4]
  00000010: 03 B7 2C 08 00 00  add         esi,dword ptr [edi+82Ch]
  00000016: 56                 push        esi
  00000017: E8 00 00 00 00     call        _memcpy
  0000001C: 8A 06              mov         al,byte ptr [esi]
  0000001E: 83 C4 0C           add         esp,0Ch
  00000021: 88 47 17           mov         byte ptr [edi+17h],al
  00000024: 8B CF              mov         ecx,edi
  00000026: 8B 07              mov         eax,dword ptr [edi]
  00000028: FF 50 04           call        dword ptr [eax+4]
  0000002B: 5F                 pop         edi
  0000002C: 5E                 pop         esi
  0000002D: C2 04 00           ret         4

?AddUserArea@TFtE2Data@@UAEHPAEK@Z (public: virtual int __thiscall TFtE2Data::AddUserArea(unsigned char *,unsigned long)):
  00000000: 53                 push        ebx
  00000001: 8B D9              mov         ebx,ecx
  00000003: 8B 03              mov         eax,dword ptr [ebx]
  00000005: FF 50 0C           call        dword ptr [eax+0Ch]
  00000008: 66 03 C0           add         ax,ax
  0000000B: 0F B7 C0           movzx       eax,ax
  0000000E: 66 85 C0           test        ax,ax
  00000011: 75 06              jne         00000019
  00000013: 33 C0              xor         eax,eax
  00000015: 5B                 pop         ebx
  00000016: C2 08 00           ret         8
  00000019: 56                 push        esi
  0000001A: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  0000001E: 3B F0              cmp         esi,eax
  00000020: 76 07              jbe         00000029
  00000022: 5E                 pop         esi
  00000023: 33 C0              xor         eax,eax
  00000025: 5B                 pop         ebx
  00000026: C2 08 00           ret         8
  00000029: 8B 03              mov         eax,dword ptr [ebx]
  0000002B: 8B CB              mov         ecx,ebx
  0000002D: 57                 push        edi
  0000002E: FF 50 08           call        dword ptr [eax+8]
  00000031: 66 03 C0           add         ax,ax
  00000034: 0F B7 F8           movzx       edi,ax
  00000037: 85 F6              test        esi,esi
  00000039: 74 15              je          00000050
  0000003B: 8B 54 24 10        mov         edx,dword ptr [esp+10h]
  0000003F: 90                 nop
  00000040: 8A 02              mov         al,byte ptr [edx]
  00000042: 8D 52 01           lea         edx,[edx+1]
  00000045: 0F B7 CF           movzx       ecx,di
  00000048: 47                 inc         edi
  00000049: 88 44 19 04        mov         byte ptr [ecx+ebx+4],al
  0000004D: 4E                 dec         esi
  0000004E: 75 F0              jne         00000040
  00000050: 8B 03              mov         eax,dword ptr [ebx]
  00000052: 8B CB              mov         ecx,ebx
  00000054: FF 50 04           call        dword ptr [eax+4]
  00000057: 5F                 pop         edi
  00000058: 5E                 pop         esi
  00000059: B8 01 00 00 00     mov         eax,1
  0000005E: 5B                 pop         ebx
  0000005F: C2 08 00           ret         8

?CheckSerialised@TFtE2Data@@QAEHKG@Z (public: int __thiscall TFtE2Data::CheckSerialised(unsigned long,unsigned short)):
  00000000: 51                 push        ecx
  00000001: 8D 04 24           lea         eax,[esp]
  00000004: 83 C1 04           add         ecx,4
  00000007: 50                 push        eax
  00000008: FF 74 24 0C        push        dword ptr [esp+0Ch]
  0000000C: E8 00 00 00 00     call        ?ReadWord@TEeData@@QAEHKPAG@Z
  00000011: 85 C0              test        eax,eax
  00000013: 74 14              je          00000029
  00000015: 66 8B 04 24        mov         ax,word ptr [esp]
  00000019: 66 3B 44 24 0C     cmp         ax,word ptr [esp+0Ch]
  0000001E: 75 09              jne         00000029
  00000020: B8 01 00 00 00     mov         eax,1
  00000025: 59                 pop         ecx
  00000026: C2 08 00           ret         8
  00000029: 33 C0              xor         eax,eax
  0000002B: 59                 pop         ecx
  0000002C: C2 08 00           ret         8

?DescStrCopyToStr@TFtE2Data@@QAEXPAD0@Z (public: void __thiscall TFtE2Data::DescStrCopyToStr(char *,char *)):
  00000000: 56                 push        esi
  00000001: 8B 74 24 0C        mov         esi,dword ptr [esp+0Ch]
  00000005: 8A 06              mov         al,byte ptr [esi]
  00000007: 84 C0              test        al,al
  00000009: 75 0B              jne         00000016
  0000000B: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  0000000F: 5E                 pop         esi
  00000010: C6 00 00           mov         byte ptr [eax],0
  00000013: C2 08 00           ret         8
  00000016: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  0000001A: 83 C6 02           add         esi,2
  0000001D: 0F BE C0           movsx       eax,al
  00000020: 99                 cdq
  00000021: 2B C2              sub         eax,edx
  00000023: 8B D0              mov         edx,eax
  00000025: D1 FA              sar         edx,1
  00000027: 4A                 dec         edx
  00000028: 74 11              je          0000003B
  0000002A: 8D 9B 00 00 00 00  lea         ebx,[ebx+00000000h]
  00000030: 8A 06              mov         al,byte ptr [esi]
  00000032: 8D 76 02           lea         esi,[esi+2]
  00000035: 88 01              mov         byte ptr [ecx],al
  00000037: 41                 inc         ecx
  00000038: 4A                 dec         edx
  00000039: 75 F5              jne         00000030
  0000003B: C6 01 00           mov         byte ptr [ecx],0
  0000003E: 5E                 pop         esi
  0000003F: C2 08 00           ret         8

?EraseSerialStringDescriptor@TFtE2Data@@QAEXXZ (public: void __thiscall TFtE2Data::EraseSerialStringDescriptor(void)):
  00000000: 8B 81 2C 08 00 00  mov         eax,dword ptr [ecx+82Ch]
  00000006: 83 C1 04           add         ecx,4
  00000009: 03 C8              add         ecx,eax
  0000000B: 0F BE 01           movsx       eax,byte ptr [ecx]
  0000000E: 50                 push        eax
  0000000F: 6A 00              push        0
  00000011: 51                 push        ecx
  00000012: E8 00 00 00 00     call        _memset
  00000017: 83 C4 0C           add         esp,0Ch
  0000001A: C3                 ret

?GetBmAttributes@TFtE2Data@@QAEEXZ (public: unsigned char __thiscall TFtE2Data::GetBmAttributes(void)):
  00000000: 8A 41 0C           mov         al,byte ptr [ecx+0Ch]
  00000003: C3                 ret

?GetChecksum@TFtE2Data@@QAEGXZ (public: unsigned short __thiscall TFtE2Data::GetChecksum(void)):
  00000000: 66 8B 81 20 08 00  mov         ax,word ptr [ecx+00000820h]
            00
  00000007: C3                 ret

?GetIsoIn@TFtE2Data@@QAE_NXZ (public: bool __thiscall TFtE2Data::GetIsoIn(void)):
  00000000: 80 79 0B 04        cmp         byte ptr [ecx+0Bh],4
  00000004: 74 03              je          00000009
  00000006: 32 C0              xor         al,al
  00000008: C3                 ret
  00000009: 8A 41 0E           mov         al,byte ptr [ecx+0Eh]
  0000000C: 24 01              and         al,1
  0000000E: C3                 ret

?GetIsoOut@TFtE2Data@@QAE_NXZ (public: bool __thiscall TFtE2Data::GetIsoOut(void)):
  00000000: 80 79 0B 04        cmp         byte ptr [ecx+0Bh],4
  00000004: 74 03              je          00000009
  00000006: 32 C0              xor         al,al
  00000008: C3                 ret
  00000009: 0F BE 41 0E        movsx       eax,byte ptr [ecx+0Eh]
  0000000D: D1 E8              shr         eax,1
  0000000F: 24 01              and         al,1
  00000011: C3                 ret

?GetManufacturerIDString@TFtE2Data@@QAEXPAD@Z (public: void __thiscall TFtE2Data::GetManufacturerIDString(char *)):
  00000000: 83 B9 08 08 00 00  cmp         dword ptr [ecx+808h],0
            00
  00000007: 74 0A              je          00000013
  00000009: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  0000000D: C6 00 00           mov         byte ptr [eax],0
  00000010: C2 04 00           ret         4
  00000013: 8B 81 2C 08 00 00  mov         eax,dword ptr [ecx+82Ch]
  00000019: 56                 push        esi
  0000001A: 8B 74 24 08        mov         esi,dword ptr [esp+8]
  0000001E: 83 C0 04           add         eax,4
  00000021: 03 C1              add         eax,ecx
  00000023: 50                 push        eax
  00000024: 56                 push        esi
  00000025: E8 00 00 00 00     call        ?DescStrCopyToStr@TFtE2Data@@QAEXPAD0@Z
  0000002A: C6 46 02 00        mov         byte ptr [esi+2],0
  0000002E: 5E                 pop         esi
  0000002F: C2 04 00           ret         4

?GetManufacturerString@TFtE2Data@@QAEXPAD@Z (public: void __thiscall TFtE2Data::GetManufacturerString(char *)):
  00000000: 83 B9 08 08 00 00  cmp         dword ptr [ecx+808h],0
            00
  00000007: 74 0A              je          00000013
  00000009: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  0000000D: C6 00 00           mov         byte ptr [eax],0
  00000010: C2 04 00           ret         4
  00000013: 8B 81 24 08 00 00  mov         eax,dword ptr [ecx+824h]
  00000019: 83 C0 04           add         eax,4
  0000001C: 03 C1              add         eax,ecx
  0000001E: 50                 push        eax
  0000001F: FF 74 24 08        push        dword ptr [esp+8]
  00000023: E8 00 00 00 00     call        ?DescStrCopyToStr@TFtE2Data@@QAEXPAD0@Z
  00000028: C2 04 00           ret         4

?GetMaxPower@TFtE2Data@@QAEHXZ (public: int __thiscall TFtE2Data::GetMaxPower(void)):
  00000000: 0F B6 41 0D        movzx       eax,byte ptr [ecx+0Dh]
  00000004: 03 C0              add         eax,eax
  00000006: C3                 ret

?GetOptions@TFtE2Data@@QAEGXZ (public: unsigned short __thiscall TFtE2Data::GetOptions(void)):
  00000000: 8B 91 2C 08 00 00  mov         edx,dword ptr [ecx+0000082Ch]
  00000006: 0F BE 44 0A 04     movsx       eax,byte ptr [edx+ecx+4]
  0000000B: 03 D0              add         edx,eax
  0000000D: 0F BE 44 0A 04     movsx       eax,byte ptr [edx+ecx+4]
  00000012: 03 C2              add         eax,edx
  00000014: 66 8B 44 08 04     mov         ax,word ptr [eax+ecx+4]
  00000019: C3                 ret

?GetProductId@TFtE2Data@@QAEGXZ (public: unsigned short __thiscall TFtE2Data::GetProductId(void)):
  00000000: 66 8B 41 08        mov         ax,word ptr [ecx+8]
  00000004: C3                 ret

?GetProductString@TFtE2Data@@QAEXPAD@Z (public: void __thiscall TFtE2Data::GetProductString(char *)):
  00000000: 83 B9 08 08 00 00  cmp         dword ptr [ecx+808h],0
            00
  00000007: 74 0A              je          00000013
  00000009: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  0000000D: C6 00 00           mov         byte ptr [eax],0
  00000010: C2 04 00           ret         4
  00000013: 8B 81 28 08 00 00  mov         eax,dword ptr [ecx+828h]
  00000019: 83 C0 04           add         eax,4
  0000001C: 03 C1              add         eax,ecx
  0000001E: 50                 push        eax
  0000001F: FF 74 24 08        push        dword ptr [esp+8]
  00000023: E8 00 00 00 00     call        ?DescStrCopyToStr@TFtE2Data@@QAEXPAD0@Z
  00000028: C2 04 00           ret         4

?GetPullDownEnable@TFtE2Data@@QAE_NXZ (public: bool __thiscall TFtE2Data::GetPullDownEnable(void)):
  00000000: 0F BE 41 0E        movsx       eax,byte ptr [ecx+0Eh]
  00000004: C1 E8 02           shr         eax,2
  00000007: 24 01              and         al,1
  00000009: C3                 ret

?GetRev4@TFtE2Data@@QAE_NXZ (public: bool __thiscall TFtE2Data::GetRev4(void)):
  00000000: 80 79 0B 04        cmp         byte ptr [ecx+0Bh],4
  00000004: 0F 94 C0           sete        al
  00000007: C3                 ret

?GetSerialNumberEnable@TFtE2Data@@QAE_NXZ (public: bool __thiscall TFtE2Data::GetSerialNumberEnable(void)):
  00000000: 80 79 0B 04        cmp         byte ptr [ecx+0Bh],4
  00000004: 74 03              je          00000009
  00000006: 32 C0              xor         al,al
  00000008: C3                 ret
  00000009: 0F BE 41 0E        movsx       eax,byte ptr [ecx+0Eh]
  0000000D: C1 E8 03           shr         eax,3
  00000010: 24 01              and         al,1
  00000012: C3                 ret

?GetSerialString@TFtE2Data@@QAEXPAD@Z (public: void __thiscall TFtE2Data::GetSerialString(char *)):
  00000000: 83 B9 08 08 00 00  cmp         dword ptr [ecx+808h],0
            00
  00000007: 74 0A              je          00000013
  00000009: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  0000000D: C6 00 00           mov         byte ptr [eax],0
  00000010: C2 04 00           ret         4
  00000013: 8B 81 2C 08 00 00  mov         eax,dword ptr [ecx+82Ch]
  00000019: 83 C0 04           add         eax,4
  0000001C: 03 C1              add         eax,ecx
  0000001E: 50                 push        eax
  0000001F: FF 74 24 08        push        dword ptr [esp+8]
  00000023: E8 00 00 00 00     call        ?DescStrCopyToStr@TFtE2Data@@QAEXPAD0@Z
  00000028: C2 04 00           ret         4

?GetSerialStringOffset@TFtE2Data@@QAEIXZ (public: unsigned int __thiscall TFtE2Data::GetSerialStringOffset(void)):
  00000000: 8B 81 2C 08 00 00  mov         eax,dword ptr [ecx+0000082Ch]
  00000006: C3                 ret

?GetUSBVersion@TFtE2Data@@QAEGXZ (public: unsigned short __thiscall TFtE2Data::GetUSBVersion(void)):
  00000000: 80 79 0B 04        cmp         byte ptr [ecx+0Bh],4
  00000004: 74 06              je          0000000C
  00000006: B8 10 01 00 00     mov         eax,110h
  0000000B: C3                 ret
  0000000C: 66 8B 41 10        mov         ax,word ptr [ecx+10h]
  00000010: C3                 ret

?GetUSBVersionEnable@TFtE2Data@@QAE_NXZ (public: bool __thiscall TFtE2Data::GetUSBVersionEnable(void)):
  00000000: 80 79 0B 04        cmp         byte ptr [ecx+0Bh],4
  00000004: 74 03              je          00000009
  00000006: 32 C0              xor         al,al
  00000008: C3                 ret
  00000009: 0F BE 41 0E        movsx       eax,byte ptr [ecx+0Eh]
  0000000D: C1 E8 04           shr         eax,4
  00000010: 24 01              and         al,1
  00000012: C3                 ret

?GetUserArea@TFtE2Data@@UAEXPAEKPAK@Z (public: virtual void __thiscall TFtE2Data::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  00000000: 57                 push        edi
  00000001: 8B F9              mov         edi,ecx
  00000003: 8B 07              mov         eax,dword ptr [edi]
  00000005: FF 50 0C           call        dword ptr [eax+0Ch]
  00000008: 66 03 C0           add         ax,ax
  0000000B: 0F B7 C0           movzx       eax,ax
  0000000E: 66 85 C0           test        ax,ax
  00000011: 75 0E              jne         00000021
  00000013: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000017: 5F                 pop         edi
  00000018: C7 00 00 00 00 00  mov         dword ptr [eax],0
  0000001E: C2 0C 00           ret         0Ch
  00000021: 56                 push        esi
  00000022: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  00000026: 8B CF              mov         ecx,edi
  00000028: 3B F0              cmp         esi,eax
  0000002A: 0F 47 F0           cmova       esi,eax
  0000002D: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000031: 89 30              mov         dword ptr [eax],esi
  00000033: 8B 07              mov         eax,dword ptr [edi]
  00000035: FF 50 08           call        dword ptr [eax+8]
  00000038: 66 03 C0           add         ax,ax
  0000003B: 0F B7 D0           movzx       edx,ax
  0000003E: 85 F6              test        esi,esi
  00000040: 74 15              je          00000057
  00000042: 8B 4C 24 0C        mov         ecx,dword ptr [esp+0Ch]
  00000046: 0F B7 C2           movzx       eax,dx
  00000049: 8D 49 01           lea         ecx,[ecx+1]
  0000004C: 42                 inc         edx
  0000004D: 8A 44 38 04        mov         al,byte ptr [eax+edi+4]
  00000051: 88 41 FF           mov         byte ptr [ecx-1],al
  00000054: 4E                 dec         esi
  00000055: 75 EF              jne         00000046
  00000057: 5E                 pop         esi
  00000058: 5F                 pop         edi
  00000059: C2 0C 00           ret         0Ch

?GetUserAreaOffset@TFtE2Data@@UAEGXZ (public: virtual unsigned short __thiscall TFtE2Data::GetUserAreaOffset(void)):
  00000000: 8B 91 2C 08 00 00  mov         edx,dword ptr [ecx+0000082Ch]
  00000006: 0F BE 44 0A 04     movsx       eax,byte ptr [edx+ecx+4]
  0000000B: 03 D0              add         edx,eax
  0000000D: 0F BE 44 0A 04     movsx       eax,byte ptr [edx+ecx+4]
  00000012: 83 C0 02           add         eax,2
  00000015: 03 C2              add         eax,edx
  00000017: 3B 81 30 08 00 00  cmp         eax,dword ptr [ecx+00000830h]
  0000001D: 73 03              jae         00000022
  0000001F: D1 E8              shr         eax,1
  00000021: C3                 ret
  00000022: 33 C0              xor         eax,eax
  00000024: C3                 ret

?GetUserAreaSize@TFtE2Data@@UAEGXZ (public: virtual unsigned short __thiscall TFtE2Data::GetUserAreaSize(void)):
  00000000: 8B 91 2C 08 00 00  mov         edx,dword ptr [ecx+0000082Ch]
  00000006: 0F BE 44 0A 04     movsx       eax,byte ptr [edx+ecx+4]
  0000000B: 03 D0              add         edx,eax
  0000000D: 0F BE 44 0A 04     movsx       eax,byte ptr [edx+ecx+4]
  00000012: 83 C2 02           add         edx,2
  00000015: 03 D0              add         edx,eax
  00000017: 8B 81 30 08 00 00  mov         eax,dword ptr [ecx+00000830h]
  0000001D: 3B D0              cmp         edx,eax
  0000001F: 73 0C              jae         0000002D
  00000021: D1 EA              shr         edx,1
  00000023: 66 85 D2           test        dx,dx
  00000026: 74 05              je          0000002D
  00000028: D1 E8              shr         eax,1
  0000002A: 2B C2              sub         eax,edx
  0000002C: C3                 ret
  0000002D: 33 C0              xor         eax,eax
  0000002F: C3                 ret

?GetVendorId@TFtE2Data@@QAEGXZ (public: unsigned short __thiscall TFtE2Data::GetVendorId(void)):
  00000000: 66 8B 41 06        mov         ax,word ptr [ecx+6]
  00000004: C3                 ret

?IsValid@TFtE2Data@@QAEHXZ (public: int __thiscall TFtE2Data::IsValid(void)):
  00000000: B8 01 00 00 00     mov         eax,1
  00000005: C3                 ret

?Read@TFtE2Data@@UAEHXZ (public: virtual int __thiscall TFtE2Data::Read(void)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: 8D 4E 04           lea         ecx,[esi+4]
  00000006: E8 00 00 00 00     call        ?Read@TEeData@@QAEHXZ
  0000000B: 0F BE 56 12        movsx       edx,byte ptr [esi+12h]
  0000000F: 0F BE 4E 16        movsx       ecx,byte ptr [esi+16h]
  00000013: 83 E2 7F           and         edx,7Fh
  00000016: 89 96 24 08 00 00  mov         dword ptr [esi+824h],edx
  0000001C: 83 E1 7F           and         ecx,7Fh
  0000001F: 0F BE 56 14        movsx       edx,byte ptr [esi+14h]
  00000023: 83 E2 7F           and         edx,7Fh
  00000026: 89 8E 2C 08 00 00  mov         dword ptr [esi+82Ch],ecx
  0000002C: 89 96 28 08 00 00  mov         dword ptr [esi+828h],edx
  00000032: 5E                 pop         esi
  00000033: C3                 ret

?SetChecksum@TFtE2Data@@UAEXXZ (public: virtual void __thiscall TFtE2Data::SetChecksum(void)):
  00000000: 53                 push        ebx
  00000001: 55                 push        ebp
  00000002: 56                 push        esi
  00000003: 8B F1              mov         esi,ecx
  00000005: B8 AA AA 00 00     mov         eax,0AAAAh
  0000000A: 57                 push        edi
  0000000B: 33 FF              xor         edi,edi
  0000000D: 8D 6E 04           lea         ebp,[esi+4]
  00000010: 66 89 86 20 08 00  mov         word ptr [esi+00000820h],ax
            00
  00000017: 03 AE 30 08 00 00  add         ebp,dword ptr [esi+00000830h]
  0000001D: 8D 56 04           lea         edx,[esi+4]
  00000020: 8B DD              mov         ebx,ebp
  00000022: 33 C0              xor         eax,eax
  00000024: 2B DA              sub         ebx,edx
  00000026: 43                 inc         ebx
  00000027: D1 EB              shr         ebx,1
  00000029: 3B D5              cmp         edx,ebp
  0000002B: 0F 47 D8           cmova       ebx,eax
  0000002E: 85 DB              test        ebx,ebx
  00000030: 74 3D              je          0000006F
  00000032: 0F B7 86 20 08 00  movzx       eax,word ptr [esi+00000820h]
            00
  00000039: 8D A4 24 00 00 00  lea         esp,[esp+00000000h]
            00
  00000040: 66 8B 0A           mov         cx,word ptr [edx]
  00000043: 8D 52 02           lea         edx,[edx+2]
  00000046: 66 33 C8           xor         cx,ax
  00000049: 47                 inc         edi
  0000004A: 66 8B C1           mov         ax,cx
  0000004D: 03 C9              add         ecx,ecx
  0000004F: 66 C1 E8 0F        shr         ax,0Fh
  00000053: 0F B7 C0           movzx       eax,ax
  00000056: 0B C8              or          ecx,eax
  00000058: 0F B7 C1           movzx       eax,cx
  0000005B: 66 89 86 20 08 00  mov         word ptr [esi+00000820h],ax
            00
  00000062: 3B FB              cmp         edi,ebx
  00000064: 72 DA              jb          00000040
  00000066: 5F                 pop         edi
  00000067: 5E                 pop         esi
  00000068: 66 89 45 00        mov         word ptr [ebp],ax
  0000006C: 5D                 pop         ebp
  0000006D: 5B                 pop         ebx
  0000006E: C3                 ret
  0000006F: 66 8B 86 20 08 00  mov         ax,word ptr [esi+00000820h]
            00
  00000076: 5F                 pop         edi
  00000077: 5E                 pop         esi
  00000078: 66 89 45 00        mov         word ptr [ebp],ax
  0000007C: 5D                 pop         ebp
  0000007D: 5B                 pop         ebx
  0000007E: C3                 ret

?StrCopyToDescStr@TFtE2Data@@QAEXPAD0@Z (public: void __thiscall TFtE2Data::StrCopyToDescStr(char *,char *)):
  00000000: 56                 push        esi
  00000001: 8B 74 24 0C        mov         esi,dword ptr [esp+0Ch]
  00000005: 8B C6              mov         eax,esi
  00000007: 8D 50 01           lea         edx,[eax+1]
  0000000A: 8D 9B 00 00 00 00  lea         ebx,[ebx+00000000h]
  00000010: 8A 08              mov         cl,byte ptr [eax]
  00000012: 40                 inc         eax
  00000013: 84 C9              test        cl,cl
  00000015: 75 F9              jne         00000010
  00000017: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  0000001B: 2B C2              sub         eax,edx
  0000001D: 8D 50 01           lea         edx,[eax+1]
  00000020: C6 41 01 03        mov         byte ptr [ecx+1],3
  00000024: 02 D2              add         dl,dl
  00000026: 88 11              mov         byte ptr [ecx],dl
  00000028: 8D 51 02           lea         edx,[ecx+2]
  0000002B: 85 C0              test        eax,eax
  0000002D: 74 12              je          00000041
  0000002F: 90                 nop
  00000030: 66 0F BE 0E        movsx       cx,byte ptr [esi]
  00000034: 8D 52 02           lea         edx,[edx+2]
  00000037: 8D 76 01           lea         esi,[esi+1]
  0000003A: 66 89 4A FE        mov         word ptr [edx-2],cx
  0000003E: 48                 dec         eax
  0000003F: 75 EF              jne         00000030
  00000041: 5E                 pop         esi
  00000042: C2 08 00           ret         8

?AddDevice@@YAPAUft_private_vars@@XZ (struct ft_private_vars * __cdecl AddDevice(void)):
  00000000: 56                 push        esi
  00000001: 68 90 00 00 00     push        90h
  00000006: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  0000000C: 8B F0              mov         esi,eax
  0000000E: 83 C4 04           add         esp,4
  00000011: 85 F6              test        esi,esi
  00000013: 75 02              jne         00000017
  00000015: 5E                 pop         esi
  00000016: C3                 ret
  00000017: 68 90 00 00 00     push        90h
  0000001C: 6A 00              push        0
  0000001E: 56                 push        esi
  0000001F: E8 00 00 00 00     call        _memset
  00000024: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000029: 83 C4 0C           add         esp,0Ch
  0000002C: 85 C0              test        eax,eax
  0000002E: 74 02              je          00000032
  00000030: 89 06              mov         dword ptr [esi],eax
  00000032: 89 35 00 00 00 00  mov         dword ptr [?pgDeviceList@@3PAUft_private_vars@@A],esi
  00000038: 8B C6              mov         eax,esi
  0000003A: 5E                 pop         esi
  0000003B: C3                 ret

?CreateDeviceInfoList@@YAKPAK@Z (unsigned long __cdecl CreateDeviceInfoList(unsigned long *)):
  00000000: 83 EC 4C           sub         esp,4Ch
  00000003: 53                 push        ebx
  00000004: 56                 push        esi
  00000005: 8B 74 24 58        mov         esi,dword ptr [esp+58h]
  00000009: 33 DB              xor         ebx,ebx
  0000000B: 89 5C 24 08        mov         dword ptr [esp+8],ebx
  0000000F: 85 F6              test        esi,esi
  00000011: 75 09              jne         0000001C
  00000013: 5E                 pop         esi
  00000014: 8D 43 06           lea         eax,[ebx+6]
  00000017: 5B                 pop         ebx
  00000018: 83 C4 4C           add         esp,4Ch
  0000001B: C3                 ret
  0000001C: A1 00 00 00 00     mov         eax,dword ptr [?pgAttachedList@@3PAU_ft_device_list_info_node@@A]
  00000021: 85 C0              test        eax,eax
  00000023: 74 10              je          00000035
  00000025: 50                 push        eax
  00000026: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  0000002C: 83 C4 04           add         esp,4
  0000002F: 89 1D 00 00 00 00  mov         dword ptr [?pgAttachedList@@3PAU_ft_device_list_info_node@@A],ebx
  00000035: 55                 push        ebp
  00000036: 6A 12              push        12h
  00000038: 6A 00              push        0
  0000003A: 6A 00              push        0
  0000003C: 89 1D 00 00 00 00  mov         dword ptr [?dwNumberOfAttachedDevices@@3KA],ebx
  00000042: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  00000047: 89 1E              mov         dword ptr [esi],ebx
  00000049: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetClassDevsA@16]
  0000004F: 8B E8              mov         ebp,eax
  00000051: 89 6C 24 14        mov         dword ptr [esp+14h],ebp
  00000055: 85 ED              test        ebp,ebp
  00000057: 75 0A              jne         00000063
  00000059: 8D 45 02           lea         eax,[ebp+2]
  0000005C: 5D                 pop         ebp
  0000005D: 5E                 pop         esi
  0000005E: 5B                 pop         ebx
  0000005F: 83 C4 4C           add         esp,4Ch
  00000062: C3                 ret
  00000063: 83 FD FF           cmp         ebp,0FFFFFFFFh
  00000066: 75 0C              jne         00000074
  00000068: 5D                 pop         ebp
  00000069: 5E                 pop         esi
  0000006A: B8 12 00 00 00     mov         eax,12h
  0000006F: 5B                 pop         ebx
  00000070: 83 C4 4C           add         esp,4Ch
  00000073: C3                 ret
  00000074: 8B 35 00 00 00 00  mov         esi,dword ptr [__imp__SetupDiEnumDeviceInterfaces@20]
  0000007A: 8D 44 24 20        lea         eax,[esp+20h]
  0000007E: 50                 push        eax
  0000007F: 6A 00              push        0
  00000081: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  00000086: 6A 00              push        0
  00000088: 55                 push        ebp
  00000089: C7 44 24 34 1C 00  mov         dword ptr [esp+34h],1Ch
            00 00
  00000091: FF D6              call        esi
  00000093: 85 C0              test        eax,eax
  00000095: 74 15              je          000000AC
  00000097: 8D 44 24 20        lea         eax,[esp+20h]
  0000009B: 43                 inc         ebx
  0000009C: 50                 push        eax
  0000009D: 53                 push        ebx
  0000009E: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  000000A3: 6A 00              push        0
  000000A5: 55                 push        ebp
  000000A6: FF D6              call        esi
  000000A8: 85 C0              test        eax,eax
  000000AA: 75 EB              jne         00000097
  000000AC: 6B C3 64           imul        eax,ebx,64h
  000000AF: 89 1D 00 00 00 00  mov         dword ptr [?dwNumberOfAttachedDevices@@3KA],ebx
  000000B5: 50                 push        eax
  000000B6: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  000000BC: 8B F0              mov         esi,eax
  000000BE: 83 C4 04           add         esp,4
  000000C1: 89 35 00 00 00 00  mov         dword ptr [?pgAttachedList@@3PAU_ft_device_list_info_node@@A],esi
  000000C7: 85 F6              test        esi,esi
  000000C9: 75 11              jne         000000DC
  000000CB: 55                 push        ebp
  000000CC: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  000000D2: 5D                 pop         ebp
  000000D3: 8D 46 05           lea         eax,[esi+5]
  000000D6: 5E                 pop         esi
  000000D7: 5B                 pop         ebx
  000000D8: 83 C4 4C           add         esp,4Ch
  000000DB: C3                 ret
  000000DC: 33 ED              xor         ebp,ebp
  000000DE: 85 DB              test        ebx,ebx
  000000E0: 0F 84 94 01 00 00  je          0000027A
  000000E6: 57                 push        edi
  000000E7: 8D 7E 10           lea         edi,[esi+10h]
  000000EA: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  000000F0: 8D 44 24 14        lea         eax,[esp+14h]
  000000F4: 50                 push        eax
  000000F5: 55                 push        ebp
  000000F6: E8 00 00 00 00     call        _FT_Open@8
  000000FB: 85 C0              test        eax,eax
  000000FD: 0F 85 90 00 00 00  jne         00000193
  00000103: 8B 4C 24 14        mov         ecx,dword ptr [esp+14h]
  00000107: 89 06              mov         dword ptr [esi],eax
  00000109: 66 83 B9 8C 00 00  cmp         word ptr [ecx+8Ch],40h
            00 40
  00000111: 76 06              jbe         00000119
  00000113: C7 06 02 00 00 00  mov         dword ptr [esi],2
  00000119: 8B 41 24           mov         eax,dword ptr [ecx+24h]
  0000011C: 89 47 F4           mov         dword ptr [edi-0Ch],eax
  0000011F: 8B 41 28           mov         eax,dword ptr [ecx+28h]
  00000122: 89 47 F8           mov         dword ptr [edi-8],eax
  00000125: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000129: F3 0F 6F 41 30     movdqu      xmm0,xmmword ptr [ecx+30h]
  0000012E: 6A 00              push        0
  00000130: 50                 push        eax
  00000131: F3 0F 7F 07        movdqu      xmmword ptr [edi],xmm0
  00000135: 6A 04              push        4
  00000137: F3 0F 6F 41 40     movdqu      xmm0,xmmword ptr [ecx+40h]
  0000013C: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000140: 50                 push        eax
  00000141: F3 0F 7F 47 10     movdqu      xmmword ptr [edi+10h],xmm0
  00000146: 6A 04              push        4
  00000148: F3 0F 6F 41 50     movdqu      xmm0,xmmword ptr [ecx+50h]
  0000014D: 50                 push        eax
  0000014E: 68 A4 00 22 00     push        2200A4h
  00000153: F3 0F 7F 47 20     movdqu      xmmword ptr [edi+20h],xmm0
  00000158: 51                 push        ecx
  00000159: F3 0F 6F 41 60     movdqu      xmm0,xmmword ptr [ecx+60h]
  0000015E: F3 0F 7F 47 30     movdqu      xmmword ptr [edi+30h],xmm0
  00000163: F3 0F 6F 41 70     movdqu      xmm0,xmmword ptr [ecx+70h]
  00000168: F3 0F 7F 47 40     movdqu      xmmword ptr [edi+40h],xmm0
  0000016D: C7 47 50 00 00 00  mov         dword ptr [edi+50h],0
            00
  00000174: E8 00 00 00 00     call        _FT_IoCtl@32
  00000179: FF 74 24 14        push        dword ptr [esp+14h]
  0000017D: 33 C9              xor         ecx,ecx
  0000017F: 85 C0              test        eax,eax
  00000181: 0F 44 4C 24 14     cmove       ecx,dword ptr [esp+14h]
  00000186: 89 4F FC           mov         dword ptr [edi-4],ecx
  00000189: E8 00 00 00 00     call        _FT_Close@4
  0000018E: E9 D3 00 00 00     jmp         00000266
  00000193: 6A 64              push        64h
  00000195: 6A 00              push        0
  00000197: 56                 push        esi
  00000198: E8 00 00 00 00     call        _memset
  0000019D: 83 C4 0C           add         esp,0Ch
  000001A0: C7 44 24 40 1C 00  mov         dword ptr [esp+40h],1Ch
            00 00
  000001A8: 8D 44 24 40        lea         eax,[esp+40h]
  000001AC: 50                 push        eax
  000001AD: 55                 push        ebp
  000001AE: FF 74 24 20        push        dword ptr [esp+20h]
  000001B2: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiEnumDeviceInfo@12]
  000001B8: 85 C0              test        eax,eax
  000001BA: 0F 84 B7 00 00 00  je          00000277
  000001C0: FF 74 24 54        push        dword ptr [esp+54h]
  000001C4: E8 00 00 00 00     call        ?FindDevice@@YAPAUft_private_vars@@K@Z
  000001C9: 83 C4 04           add         esp,4
  000001CC: 89 44 24 20        mov         dword ptr [esp+20h],eax
  000001D0: C7 06 01 00 00 00  mov         dword ptr [esi],1
  000001D6: 85 C0              test        eax,eax
  000001D8: 0F 84 81 00 00 00  je          0000025F
  000001DE: 8B 48 24           mov         ecx,dword ptr [eax+24h]
  000001E1: 89 4F F4           mov         dword ptr [edi-0Ch],ecx
  000001E4: 8B 48 28           mov         ecx,dword ptr [eax+28h]
  000001E7: 89 4F F8           mov         dword ptr [edi-8],ecx
  000001EA: 8D 4C 24 1C        lea         ecx,[esp+1Ch]
  000001EE: F3 0F 6F 40 30     movdqu      xmm0,xmmword ptr [eax+30h]
  000001F3: 6A 00              push        0
  000001F5: 51                 push        ecx
  000001F6: F3 0F 7F 07        movdqu      xmmword ptr [edi],xmm0
  000001FA: 6A 04              push        4
  000001FC: F3 0F 6F 40 40     movdqu      xmm0,xmmword ptr [eax+40h]
  00000201: 8D 4C 24 1C        lea         ecx,[esp+1Ch]
  00000205: 51                 push        ecx
  00000206: F3 0F 7F 47 10     movdqu      xmmword ptr [edi+10h],xmm0
  0000020B: 6A 04              push        4
  0000020D: F3 0F 6F 40 50     movdqu      xmm0,xmmword ptr [eax+50h]
  00000212: 51                 push        ecx
  00000213: 68 A4 00 22 00     push        2200A4h
  00000218: F3 0F 7F 47 20     movdqu      xmmword ptr [edi+20h],xmm0
  0000021D: F3 0F 6F 40 60     movdqu      xmm0,xmmword ptr [eax+60h]
  00000222: F3 0F 7F 47 30     movdqu      xmmword ptr [edi+30h],xmm0
  00000227: F3 0F 6F 40 70     movdqu      xmm0,xmmword ptr [eax+70h]
  0000022C: F3 0F 7F 47 40     movdqu      xmmword ptr [edi+40h],xmm0
  00000231: 8B 80 80 00 00 00  mov         eax,dword ptr [eax+80h]
  00000237: 50                 push        eax
  00000238: 89 47 50           mov         dword ptr [edi+50h],eax
  0000023B: E8 00 00 00 00     call        _FT_IoCtl@32
  00000240: 33 C9              xor         ecx,ecx
  00000242: 85 C0              test        eax,eax
  00000244: 8B 44 24 20        mov         eax,dword ptr [esp+20h]
  00000248: 0F 44 4C 24 10     cmove       ecx,dword ptr [esp+10h]
  0000024D: 89 4F FC           mov         dword ptr [edi-4],ecx
  00000250: 66 83 B8 8C 00 00  cmp         word ptr [eax+8Ch],40h
            00 40
  00000258: 76 0C              jbe         00000266
  0000025A: 83 0E 02           or          dword ptr [esi],2
  0000025D: EB 07              jmp         00000266
  0000025F: C7 47 F4 03 00 00  mov         dword ptr [edi-0Ch],3
            00
  00000266: 45                 inc         ebp
  00000267: 83 C6 64           add         esi,64h
  0000026A: 83 C7 64           add         edi,64h
  0000026D: 3B EB              cmp         ebp,ebx
  0000026F: 0F 82 7B FE FF FF  jb          000000F0
  00000275: EB 02              jmp         00000279
  00000277: 33 DB              xor         ebx,ebx
  00000279: 5F                 pop         edi
  0000027A: FF 74 24 14        push        dword ptr [esp+14h]
  0000027E: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  00000284: 8B 44 24 5C        mov         eax,dword ptr [esp+5Ch]
  00000288: 5D                 pop         ebp
  00000289: 5E                 pop         esi
  0000028A: 89 18              mov         dword ptr [eax],ebx
  0000028C: 33 C0              xor         eax,eax
  0000028E: 5B                 pop         ebx
  0000028F: 83 C4 4C           add         esp,4Ch
  00000292: C3                 ret

?FT_GetPacketSize@@YAKPAXPAG@Z (unsigned long __cdecl FT_GetPacketSize(void *,unsigned short *)):
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0C              je          00000020
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C3                 ret
  00000020: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000023: 8D 54 24 04        lea         edx,[esp+4]
  00000027: 6A 00              push        0
  00000029: 52                 push        edx
  0000002A: 6A 02              push        2
  0000002C: FF 74 24 14        push        dword ptr [esp+14h]
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 C4 01 00 00  push        dword ptr [eax+1C4h]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C3                 ret

?FT_W32_OpenFile@@YAPAXKKKPAU_SECURITY_ATTRIBUTES@@KKPAX@Z (void * __cdecl FT_W32_OpenFile(unsigned long,unsigned long,unsigned long,struct _SECURITY_ATTRIBUTES *,unsigned long,unsigned long,void *)):
  00000000: 81 EC A8 00 00 00  sub         esp,0A8h
  00000006: 55                 push        ebp
  00000007: C7 44 24 08 00 00  mov         dword ptr [esp+8],0
            00 00
  0000000F: 33 ED              xor         ebp,ebp
  00000011: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  00000016: 85 C0              test        eax,eax
  00000018: 75 08              jne         00000022
  0000001A: 5D                 pop         ebp
  0000001B: 81 C4 A8 00 00 00  add         esp,0A8h
  00000021: C3                 ret
  00000022: 53                 push        ebx
  00000023: 6A FF              push        0FFFFFFFFh
  00000025: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  0000002B: FF 15 00 00 00 00  call        dword ptr [__imp__WaitForSingleObject@8]
  00000031: 6A 12              push        12h
  00000033: 6A 00              push        0
  00000035: 6A 00              push        0
  00000037: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  0000003C: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetClassDevsA@16]
  00000042: 8B D8              mov         ebx,eax
  00000044: 85 DB              test        ebx,ebx
  00000046: 75 17              jne         0000005F
  00000048: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  0000004E: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  00000054: 5B                 pop         ebx
  00000055: 33 C0              xor         eax,eax
  00000057: 5D                 pop         ebp
  00000058: 81 C4 A8 00 00 00  add         esp,0A8h
  0000005E: C3                 ret
  0000005F: 56                 push        esi
  00000060: 57                 push        edi
  00000061: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000065: C7 44 24 1C 1C 00  mov         dword ptr [esp+1Ch],1Ch
            00 00
  0000006D: 50                 push        eax
  0000006E: FF B4 24 C0 00 00  push        dword ptr [esp+0C0h]
            00
  00000075: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  0000007A: 6A 00              push        0
  0000007C: 53                 push        ebx
  0000007D: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiEnumDeviceInterfaces@20]
  00000083: 85 C0              test        eax,eax
  00000085: 74 48              je          000000CF
  00000087: 8B 3D 00 00 00 00  mov         edi,dword ptr [__imp__SetupDiGetDeviceInterfaceDetailA@24]
  0000008D: 8D 44 24 14        lea         eax,[esp+14h]
  00000091: 6A 00              push        0
  00000093: 50                 push        eax
  00000094: 6A 00              push        0
  00000096: 6A 00              push        0
  00000098: 8D 44 24 2C        lea         eax,[esp+2Ch]
  0000009C: 50                 push        eax
  0000009D: 53                 push        ebx
  0000009E: FF D7              call        edi
  000000A0: 8B 74 24 14        mov         esi,dword ptr [esp+14h]
  000000A4: 56                 push        esi
  000000A5: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  000000AB: 83 C4 04           add         esp,4
  000000AE: 8B E8              mov         ebp,eax
  000000B0: 8D 44 24 14        lea         eax,[esp+14h]
  000000B4: 6A 00              push        0
  000000B6: 50                 push        eax
  000000B7: 56                 push        esi
  000000B8: 55                 push        ebp
  000000B9: 8D 44 24 2C        lea         eax,[esp+2Ch]
  000000BD: C7 45 00 05 00 00  mov         dword ptr [ebp],5
            00
  000000C4: 50                 push        eax
  000000C5: 53                 push        ebx
  000000C6: FF D7              call        edi
  000000C8: 85 C0              test        eax,eax
  000000CA: 75 3B              jne         00000107
  000000CC: 55                 push        ebp
  000000CD: EB 0F              jmp         000000DE
  000000CF: FF 15 00 00 00 00  call        dword ptr [__imp__GetLastError@0]
  000000D5: 3D 03 01 00 00     cmp         eax,103h
  000000DA: 74 2B              je          00000107
  000000DC: 6A 00              push        0
  000000DE: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  000000E4: 83 C4 04           add         esp,4
  000000E7: 53                 push        ebx
  000000E8: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  000000EE: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  000000F4: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  000000FA: 5F                 pop         edi
  000000FB: 5E                 pop         esi
  000000FC: 5B                 pop         ebx
  000000FD: 33 C0              xor         eax,eax
  000000FF: 5D                 pop         ebp
  00000100: 81 C4 A8 00 00 00  add         esp,0A8h
  00000106: C3                 ret
  00000107: 8D 84 24 9C 00 00  lea         eax,[esp+9Ch]
            00
  0000010E: C7 84 24 9C 00 00  mov         dword ptr [esp+9Ch],1Ch
            00 1C 00 00 00
  00000119: 50                 push        eax
  0000011A: FF B4 24 C0 00 00  push        dword ptr [esp+0C0h]
            00
  00000121: 53                 push        ebx
  00000122: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiEnumDeviceInfo@12]
  00000128: 8B F8              mov         edi,eax
  0000012A: F7 DF              neg         edi
  0000012C: 53                 push        ebx
  0000012D: 1B FF              sbb         edi,edi
  0000012F: 23 BC 24 B4 00 00  and         edi,dword ptr [esp+0B4h]
            00
  00000136: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  0000013C: 85 ED              test        ebp,ebp
  0000013E: 74 6D              je          000001AD
  00000140: 83 3D 00 00 00 00  cmp         dword ptr [?gServer2016@@3HA],0
            00
  00000147: 8B 9C 24 D0 00 00  mov         ebx,dword ptr [esp+0D0h]
            00
  0000014E: 74 06              je          00000156
  00000150: 81 CB 00 00 80 00  or          ebx,800000h
  00000156: FF B4 24 D4 00 00  push        dword ptr [esp+0D4h]
            00
  0000015D: 8D 45 04           lea         eax,[ebp+4]
  00000160: 53                 push        ebx
  00000161: FF B4 24 D4 00 00  push        dword ptr [esp+0D4h]
            00
  00000168: FF B4 24 D4 00 00  push        dword ptr [esp+0D4h]
            00
  0000016F: FF B4 24 D4 00 00  push        dword ptr [esp+0D4h]
            00
  00000176: FF B4 24 D4 00 00  push        dword ptr [esp+0D4h]
            00
  0000017D: 50                 push        eax
  0000017E: FF 15 00 00 00 00  call        dword ptr [__imp__CreateFileA@28]
  00000184: 89 44 24 10        mov         dword ptr [esp+10h],eax
  00000188: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000018B: 74 16              je          000001A3
  0000018D: E8 00 00 00 00     call        ?AddDevice@@YAPAUft_private_vars@@XZ
  00000192: 8B F0              mov         esi,eax
  00000194: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000198: 85 F6              test        esi,esi
  0000019A: 75 2A              jne         000001C6
  0000019C: 50                 push        eax
  0000019D: FF 15 00 00 00 00  call        dword ptr [__imp__CloseHandle@4]
  000001A3: 55                 push        ebp
  000001A4: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  000001AA: 83 C4 04           add         esp,4
  000001AD: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  000001B3: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  000001B9: 5F                 pop         edi
  000001BA: 5E                 pop         esi
  000001BB: 5B                 pop         ebx
  000001BC: 33 C0              xor         eax,eax
  000001BE: 5D                 pop         ebp
  000001BF: 81 C4 A8 00 00 00  add         esp,0A8h
  000001C5: C3                 ret
  000001C6: 89 46 08           mov         dword ptr [esi+8],eax
  000001C9: 8D 44 24 58        lea         eax,[esp+58h]
  000001CD: 6A 00              push        0
  000001CF: 50                 push        eax
  000001D0: 8D 44 24 50        lea         eax,[esp+50h]
  000001D4: 89 5E 0C           mov         dword ptr [esi+0Ch],ebx
  000001D7: 50                 push        eax
  000001D8: 8D 44 24 4C        lea         eax,[esp+4Ch]
  000001DC: 89 BE 84 00 00 00  mov         dword ptr [esi+84h],edi
  000001E2: 50                 push        eax
  000001E3: 8D 44 24 20        lea         eax,[esp+20h]
  000001E7: 89 6E 14           mov         dword ptr [esi+14h],ebp
  000001EA: 50                 push        eax
  000001EB: 56                 push        esi
  000001EC: C7 46 1C 00 00 00  mov         dword ptr [esi+1Ch],offset ?Set1Ioctls@@3PAKA
            00
  000001F3: E8 00 00 00 00     call        _FT_GetDeviceInfo@24
  000001F8: 85 C0              test        eax,eax
  000001FA: 74 23              je          0000021F
  000001FC: 6A 00              push        0
  000001FE: 8D 44 24 5C        lea         eax,[esp+5Ch]
  00000202: C7 46 1C 00 00 00  mov         dword ptr [esi+1Ch],offset ?Set2Ioctls@@3PAKA
            00
  00000209: 50                 push        eax
  0000020A: 8D 44 24 50        lea         eax,[esp+50h]
  0000020E: 50                 push        eax
  0000020F: 8D 44 24 4C        lea         eax,[esp+4Ch]
  00000213: 50                 push        eax
  00000214: 8D 44 24 20        lea         eax,[esp+20h]
  00000218: 50                 push        eax
  00000219: 56                 push        esi
  0000021A: E8 00 00 00 00     call        _FT_GetDeviceInfo@24
  0000021F: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000223: F3 0F 6F 44 24 48  movdqu      xmm0,xmmword ptr [esp+48h]
  00000229: 89 46 18           mov         dword ptr [esi+18h],eax
  0000022C: 89 46 24           mov         dword ptr [esi+24h],eax
  0000022F: 8B 44 24 40        mov         eax,dword ptr [esp+40h]
  00000233: 89 46 28           mov         dword ptr [esi+28h],eax
  00000236: 8D 44 24 18        lea         eax,[esp+18h]
  0000023A: F3 0F 7F 46 30     movdqu      xmmword ptr [esi+30h],xmm0
  0000023F: 50                 push        eax
  00000240: F3 0F 6F 44 24 5C  movdqu      xmm0,xmmword ptr [esp+5Ch]
  00000246: 56                 push        esi
  00000247: F3 0F 7F 46 40     movdqu      xmmword ptr [esi+40h],xmm0
  0000024C: F3 0F 6F 44 24 70  movdqu      xmm0,xmmword ptr [esp+70h]
  00000252: F3 0F 7F 46 50     movdqu      xmmword ptr [esi+50h],xmm0
  00000257: F3 0F 6F 84 24 80  movdqu      xmm0,xmmword ptr [esp+80h]
            00 00 00
  00000260: F3 0F 7F 46 60     movdqu      xmmword ptr [esi+60h],xmm0
  00000265: F3 0F 6F 84 24 90  movdqu      xmm0,xmmword ptr [esp+90h]
            00 00 00
  0000026E: F3 0F 7F 46 70     movdqu      xmmword ptr [esi+70h],xmm0
  00000273: 89 B6 80 00 00 00  mov         dword ptr [esi+80h],esi
  00000279: E8 00 00 00 00     call        ?FT_GetPacketSize@@YAKPAXPAG@Z
  0000027E: 83 C4 08           add         esp,8
  00000281: 85 C0              test        eax,eax
  00000283: 75 0C              jne         00000291
  00000285: 66 8B 44 24 18     mov         ax,word ptr [esp+18h]
  0000028A: 66 89 86 8C 00 00  mov         word ptr [esi+8Ch],ax
            00
  00000291: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  00000297: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  0000029D: 5F                 pop         edi
  0000029E: 8B C6              mov         eax,esi
  000002A0: 5E                 pop         esi
  000002A1: 5B                 pop         ebx
  000002A2: 5D                 pop         ebp
  000002A3: 81 C4 A8 00 00 00  add         esp,0A8h
  000002A9: C3                 ret

?FindDevice@@YAPAUft_private_vars@@K@Z (struct ft_private_vars * __cdecl FindDevice(unsigned long)):
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 15              je          0000001E
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 39 88 84 00 00 00  cmp         dword ptr [eax+84h],ecx
  00000016: 74 06              je          0000001E
  00000018: 8B 00              mov         eax,dword ptr [eax]
  0000001A: 85 C0              test        eax,eax
  0000001C: 75 F2              jne         00000010
  0000001E: C3                 ret

?IsDeviceValid@@YAEPAUft_private_vars@@@Z (unsigned char __cdecl IsDeviceValid(struct ft_private_vars *)):
  00000000: 8B 0D 00 00 00 00  mov         ecx,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000006: 32 C0              xor         al,al
  00000008: 85 C9              test        ecx,ecx
  0000000A: 74 11              je          0000001D
  0000000C: 8B 54 24 04        mov         edx,dword ptr [esp+4]
  00000010: 3B CA              cmp         ecx,edx
  00000012: 74 07              je          0000001B
  00000014: 8B 09              mov         ecx,dword ptr [ecx]
  00000016: 85 C9              test        ecx,ecx
  00000018: 75 F6              jne         00000010
  0000001A: C3                 ret
  0000001B: B0 01              mov         al,1
  0000001D: C3                 ret

?ListClass@@YAKXZ (unsigned long __cdecl ListClass(void)):
  00000000: 81 EC 48 01 00 00  sub         esp,148h
  00000006: 53                 push        ebx
  00000007: 33 C9              xor         ecx,ecx
  00000009: BA 10 00 00 00     mov         edx,10h
  0000000E: 56                 push        esi
  0000000F: 8B C2              mov         eax,edx
  00000011: 83 CE FF           or          esi,0FFFFFFFFh
  00000014: F7 E2              mul         eax,edx
  00000016: 57                 push        edi
  00000017: BF 12 00 00 00     mov         edi,12h
  0000001C: 0F 90 C1           seto        cl
  0000001F: F7 D9              neg         ecx
  00000021: 0B C8              or          ecx,eax
  00000023: 51                 push        ecx
  00000024: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000029: 8B D8              mov         ebx,eax
  0000002B: 83 C4 04           add         esp,4
  0000002E: 89 5C 24 10        mov         dword ptr [esp+10h],ebx
  00000032: 85 DB              test        ebx,ebx
  00000034: 0F 84 AE 01 00 00  je          000001E8
  0000003A: 55                 push        ebp
  0000003B: 8B 2D 00 00 00 00  mov         ebp,dword ptr [__imp__SetupDiClassGuidsFromNameExA@24]
  00000041: 8D 44 24 10        lea         eax,[esp+10h]
  00000045: 6A 00              push        0
  00000047: 6A 00              push        0
  00000049: 50                 push        eax
  0000004A: 6A 10              push        10h
  0000004C: 53                 push        ebx
  0000004D: 68 00 00 00 00     push        offset ??_C@_03IONNGCBN@USB?$AA@
  00000052: FF D5              call        ebp
  00000054: 85 C0              test        eax,eax
  00000056: 75 5A              jne         000000B2
  00000058: FF 15 00 00 00 00  call        dword ptr [__imp__GetLastError@0]
  0000005E: 83 F8 7A           cmp         eax,7Ah
  00000061: 0F 85 5C 01 00 00  jne         $final$54
  00000067: 53                 push        ebx
  00000068: E8 00 00 00 00     call        ??3@YAXPAX@Z
  0000006D: 8B 5C 24 14        mov         ebx,dword ptr [esp+14h]
  00000071: 33 C9              xor         ecx,ecx
  00000073: 8B C3              mov         eax,ebx
  00000075: BA 10 00 00 00     mov         edx,10h
  0000007A: F7 E2              mul         eax,edx
  0000007C: 0F 90 C1           seto        cl
  0000007F: F7 D9              neg         ecx
  00000081: 0B C8              or          ecx,eax
  00000083: 51                 push        ecx
  00000084: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000089: 83 C4 08           add         esp,8
  0000008C: 89 44 24 14        mov         dword ptr [esp+14h],eax
  00000090: 85 C0              test        eax,eax
  00000092: 0F 84 43 01 00 00  je          000001DB
  00000098: 6A 00              push        0
  0000009A: 6A 00              push        0
  0000009C: 8D 4C 24 18        lea         ecx,[esp+18h]
  000000A0: 51                 push        ecx
  000000A1: 53                 push        ebx
  000000A2: 50                 push        eax
  000000A3: 68 00 00 00 00     push        offset ??_C@_03IONNGCBN@USB?$AA@
  000000A8: FF D5              call        ebp
  000000AA: 8B 5C 24 14        mov         ebx,dword ptr [esp+14h]
  000000AE: 85 C0              test        eax,eax
  000000B0: 74 A6              je          00000058
  000000B2: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  000000B6: 85 C0              test        eax,eax
  000000B8: 0F 84 05 01 00 00  je          $final$54
  000000BE: 8B EB              mov         ebp,ebx
  000000C0: C7 44 24 18 00 00  mov         dword ptr [esp+18h],0
            00 00
  000000C8: 8B 1D 00 00 00 00  mov         ebx,dword ptr [__imp__SetupDiEnumDeviceInfo@12]
  000000CE: 8B FF              mov         edi,edi
  000000D0: 33 FF              xor         edi,edi
  000000D2: 57                 push        edi
  000000D3: 57                 push        edi
  000000D4: 57                 push        edi
  000000D5: 6A 02              push        2
  000000D7: 57                 push        edi
  000000D8: 57                 push        edi
  000000D9: 55                 push        ebp
  000000DA: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetClassDevsExA@28]
  000000E0: 8B F0              mov         esi,eax
  000000E2: 83 FE FF           cmp         esi,0FFFFFFFFh
  000000E5: 74 27              je          0000010E
  000000E7: 8D 44 24 1C        lea         eax,[esp+1Ch]
  000000EB: C7 44 24 1C 1C 00  mov         dword ptr [esp+1Ch],1Ch
            00 00
  000000F3: 50                 push        eax
  000000F4: 57                 push        edi
  000000F5: 56                 push        esi
  000000F6: FF D3              call        ebx
  000000F8: 85 C0              test        eax,eax
  000000FA: 74 12              je          0000010E
  000000FC: 8D 64 24 00        lea         esp,[esp]
  00000100: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000104: 47                 inc         edi
  00000105: 50                 push        eax
  00000106: 57                 push        edi
  00000107: 56                 push        esi
  00000108: FF D3              call        ebx
  0000010A: 85 C0              test        eax,eax
  0000010C: 75 F2              jne         00000100
  0000010E: 6A 00              push        0
  00000110: 6A 00              push        0
  00000112: 6A 00              push        0
  00000114: 6A 20              push        20h
  00000116: 8D 44 24 48        lea         eax,[esp+48h]
  0000011A: 50                 push        eax
  0000011B: 55                 push        ebp
  0000011C: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiClassNameFromGuidExA@24]
  00000122: 85 C0              test        eax,eax
  00000124: 75 12              jne         00000138
  00000126: 6A 20              push        20h
  00000128: 68 00 00 00 00     push        offset ??_C@_01OGPIMHDM@?$DP?$AA@
  0000012D: 8D 44 24 40        lea         eax,[esp+40h]
  00000131: 50                 push        eax
  00000132: FF 15 00 00 00 00  call        dword ptr [__imp__lstrcpynA@12]
  00000138: 6A 00              push        0
  0000013A: 6A 00              push        0
  0000013C: 6A 00              push        0
  0000013E: 68 00 01 00 00     push        100h
  00000143: 8D 44 24 68        lea         eax,[esp+68h]
  00000147: 50                 push        eax
  00000148: 55                 push        ebp
  00000149: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetClassDescriptionExA@24]
  0000014F: 85 C0              test        eax,eax
  00000151: 75 15              jne         00000168
  00000153: 68 00 01 00 00     push        100h
  00000158: 8D 44 24 3C        lea         eax,[esp+3Ch]
  0000015C: 50                 push        eax
  0000015D: 8D 44 24 60        lea         eax,[esp+60h]
  00000161: 50                 push        eax
  00000162: FF 15 00 00 00 00  call        dword ptr [__imp__lstrcpynA@12]
  00000168: 85 FF              test        edi,edi
  0000016A: 74 30              je          0000019C
  0000016C: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000170: 33 FF              xor         edi,edi
  00000172: 50                 push        eax
  00000173: 57                 push        edi
  00000174: 56                 push        esi
  00000175: FF D3              call        ebx
  00000177: 85 C0              test        eax,eax
  00000179: 74 21              je          0000019C
  0000017B: EB 03              jmp         00000180
  0000017D: 8D 49 00           lea         ecx,[ecx]
  00000180: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000184: 50                 push        eax
  00000185: 56                 push        esi
  00000186: E8 00 00 00 00     call        ?Rescan@@YAHPAXPAU_SP_DEVINFO_DATA@@@Z
  0000018B: 83 C4 08           add         esp,8
  0000018E: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000192: 47                 inc         edi
  00000193: 50                 push        eax
  00000194: 57                 push        edi
  00000195: 56                 push        esi
  00000196: FF D3              call        ebx
  00000198: 85 C0              test        eax,eax
  0000019A: 75 E4              jne         00000180
  0000019C: 83 FE FF           cmp         esi,0FFFFFFFFh
  0000019F: 74 0A              je          000001AB
  000001A1: 56                 push        esi
  000001A2: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  000001A8: 83 CE FF           or          esi,0FFFFFFFFh
  000001AB: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  000001AF: 83 C5 10           add         ebp,10h
  000001B2: 40                 inc         eax
  000001B3: 89 44 24 18        mov         dword ptr [esp+18h],eax
  000001B7: 3B 44 24 10        cmp         eax,dword ptr [esp+10h]
  000001BB: 0F 82 0F FF FF FF  jb          000000D0
  000001C1: 33 FF              xor         edi,edi
$final$54:
  000001C3: FF 74 24 14        push        dword ptr [esp+14h]
  000001C7: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000001CC: 83 C4 04           add         esp,4
  000001CF: 83 FE FF           cmp         esi,0FFFFFFFFh
  000001D2: 74 07              je          000001DB
  000001D4: 56                 push        esi
  000001D5: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  000001DB: 5D                 pop         ebp
  000001DC: 8B C7              mov         eax,edi
  000001DE: 5F                 pop         edi
  000001DF: 5E                 pop         esi
  000001E0: 5B                 pop         ebx
  000001E1: 81 C4 48 01 00 00  add         esp,148h
  000001E7: C3                 ret
  000001E8: 8B C7              mov         eax,edi
  000001EA: 5F                 pop         edi
  000001EB: 5E                 pop         esi
  000001EC: 5B                 pop         ebx
  000001ED: 81 C4 48 01 00 00  add         esp,148h
  000001F3: C3                 ret

?RemoveDevice@@YAKPAUft_private_vars@@@Z (unsigned long __cdecl RemoveDevice(struct ft_private_vars *)):
  00000000: 8B 0D 00 00 00 00  mov         ecx,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000006: 8B D1              mov         edx,ecx
  00000008: 85 C9              test        ecx,ecx
  0000000A: 74 3F              je          0000004B
  0000000C: 56                 push        esi
  0000000D: 8B 74 24 08        mov         esi,dword ptr [esp+8]
  00000011: 3B CE              cmp         ecx,esi
  00000013: 74 0D              je          00000022
  00000015: 8B D1              mov         edx,ecx
  00000017: 8B 09              mov         ecx,dword ptr [ecx]
  00000019: 85 C9              test        ecx,ecx
  0000001B: 75 F4              jne         00000011
  0000001D: 8D 41 02           lea         eax,[ecx+2]
  00000020: 5E                 pop         esi
  00000021: C3                 ret
  00000022: 8B 01              mov         eax,dword ptr [ecx]
  00000024: 3B D1              cmp         edx,ecx
  00000026: 74 10              je          00000038
  00000028: 51                 push        ecx
  00000029: 89 02              mov         dword ptr [edx],eax
  0000002B: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  00000031: 83 C4 04           add         esp,4
  00000034: 33 C0              xor         eax,eax
  00000036: 5E                 pop         esi
  00000037: C3                 ret
  00000038: 51                 push        ecx
  00000039: A3 00 00 00 00     mov         dword ptr [?pgDeviceList@@3PAUft_private_vars@@A],eax
  0000003E: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  00000044: 83 C4 04           add         esp,4
  00000047: 33 C0              xor         eax,eax
  00000049: 5E                 pop         esi
  0000004A: C3                 ret
  0000004B: B8 02 00 00 00     mov         eax,2
  00000050: C3                 ret

?Rescan@@YAHPAXPAU_SP_DEVINFO_DATA@@@Z (int __cdecl Rescan(void *,struct _SP_DEVINFO_DATA *)):
  00000000: 81 EC FC 01 00 00  sub         esp,1FCh
  00000006: 56                 push        esi
  00000007: 8D 84 24 E0 00 00  lea         eax,[esp+0E0h]
            00
  0000000E: C7 84 24 E0 00 00  mov         dword ptr [esp+0E0h],11Fh
            00 1F 01 00 00
  00000019: 50                 push        eax
  0000001A: FF B4 24 08 02 00  push        dword ptr [esp+208h]
            00
  00000021: BE 01 00 00 00     mov         esi,1
  00000026: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetDeviceInfoListDetailA@8]
  0000002C: 85 C0              test        eax,eax
  0000002E: 74 27              je          00000057
  00000030: FF B4 24 F4 00 00  push        dword ptr [esp+0F4h]
            00
  00000037: 8D 44 24 1C        lea         eax,[esp+1Ch]
  0000003B: 6A 00              push        0
  0000003D: 68 C8 00 00 00     push        0C8h
  00000042: 50                 push        eax
  00000043: 8B 84 24 18 02 00  mov         eax,dword ptr [esp+218h]
            00
  0000004A: FF 70 14           push        dword ptr [eax+14h]
  0000004D: FF 15 00 00 00 00  call        dword ptr [__imp__CM_Get_Device_ID_ExA@20]
  00000053: 85 C0              test        eax,eax
  00000055: 74 12              je          00000069
  00000057: 68 00 00 00 00     push        offset ??_C@_01OGPIMHDM@?$DP?$AA@
  0000005C: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000060: 50                 push        eax
  00000061: FF 15 00 00 00 00  call        dword ptr [__imp__lstrcpyA@8]
  00000067: 33 F6              xor         esi,esi
  00000069: 6A 0D              push        0Dh
  0000006B: 8D 44 24 1C        lea         eax,[esp+1Ch]
  0000006F: 50                 push        eax
  00000070: 8D 44 24 10        lea         eax,[esp+10h]
  00000074: 50                 push        eax
  00000075: FF 15 00 00 00 00  call        dword ptr [__imp__lstrcpynA@12]
  0000007B: 68 00 00 00 00     push        offset ??_C@_0N@EHFJGMNP@USB?2ROOT_HUB?$AA@
  00000080: 8D 44 24 0C        lea         eax,[esp+0Ch]
  00000084: 50                 push        eax
  00000085: FF 15 00 00 00 00  call        dword ptr [__imp__lstrcmpiA@8]
  0000008B: 85 C0              test        eax,eax
  0000008D: 75 22              jne         000000B1
  0000008F: 50                 push        eax
  00000090: 50                 push        eax
  00000091: 8D 44 24 20        lea         eax,[esp+20h]
  00000095: 50                 push        eax
  00000096: 8D 44 24 10        lea         eax,[esp+10h]
  0000009A: 50                 push        eax
  0000009B: FF 15 00 00 00 00  call        dword ptr [__imp__CM_Locate_DevNode_ExA@16]
  000000A1: 85 C0              test        eax,eax
  000000A3: 75 0C              jne         000000B1
  000000A5: 50                 push        eax
  000000A6: 50                 push        eax
  000000A7: FF 74 24 0C        push        dword ptr [esp+0Ch]
  000000AB: FF 15 00 00 00 00  call        dword ptr [__imp__CM_Reenumerate_DevNode_Ex@12]
  000000B1: 8B C6              mov         eax,esi
  000000B3: 5E                 pop         esi
  000000B4: 81 C4 FC 01 00 00  add         esp,1FCh
  000000BA: C3                 ret

?ResetAttachedList@@YAKXZ (unsigned long __cdecl ResetAttachedList(void)):
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgAttachedList@@3PAU_ft_device_list_info_node@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 14              je          0000001D
  00000009: 50                 push        eax
  0000000A: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  00000010: 83 C4 04           add         esp,4
  00000013: C7 05 00 00 00 00  mov         dword ptr [?pgAttachedList@@3PAU_ft_device_list_info_node@@A],0
            00 00 00 00
  0000001D: 33 C0              xor         eax,eax
  0000001F: A3 00 00 00 00     mov         dword ptr [?dwNumberOfAttachedDevices@@3KA],eax
  00000024: C3                 ret

?finaliseGlobals@@YAXXZ (void __cdecl finaliseGlobals(void)):
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?ghFtDevListLock@@3PAXA]
  00000005: 85 C0              test        eax,eax
  00000007: 74 07              je          00000010
  00000009: 50                 push        eax
  0000000A: FF 15 00 00 00 00  call        dword ptr [__imp__CloseHandle@4]
  00000010: A1 00 00 00 00     mov         eax,dword ptr [?ghFtOpenLock@@3PAXA]
  00000015: 85 C0              test        eax,eax
  00000017: 74 07              je          00000020
  00000019: 50                 push        eax
  0000001A: FF 15 00 00 00 00  call        dword ptr [__imp__CloseHandle@4]
  00000020: 68 00 00 00 00     push        offset ?gCS@@3U_RTL_CRITICAL_SECTION@@A
  00000025: FF 15 00 00 00 00  call        dword ptr [__imp__DeleteCriticalSection@4]
  0000002B: C7 05 00 00 00 00  mov         dword ptr [?gInitialised@@3HA],0
            00 00 00 00
  00000035: C3                 ret

?initialiseGlobals@@YAHXZ (int __cdecl initialiseGlobals(void)):
  00000000: 81 EC 9C 00 00 00  sub         esp,9Ch
  00000006: 83 3D 00 00 00 00  cmp         dword ptr [?gInitialised@@3HA],0
            00
  0000000D: 74 0C              je          0000001B
  0000000F: B8 01 00 00 00     mov         eax,1
  00000014: 81 C4 9C 00 00 00  add         esp,9Ch
  0000001A: C3                 ret
  0000001B: 56                 push        esi
  0000001C: 68 00 00 00 00     push        offset ?gCS@@3U_RTL_CRITICAL_SECTION@@A
  00000021: FF 15 00 00 00 00  call        dword ptr [__imp__InitializeCriticalSection@4]
  00000027: 8B 35 00 00 00 00  mov         esi,dword ptr [__imp__CreateMutexA@12]
  0000002D: 6A 00              push        0
  0000002F: 6A 00              push        0
  00000031: 6A 00              push        0
  00000033: FF D6              call        esi
  00000035: 8B C8              mov         ecx,eax
  00000037: 89 0D 00 00 00 00  mov         dword ptr [?ghFtOpenLock@@3PAXA],ecx
  0000003D: 85 C9              test        ecx,ecx
  0000003F: 74 7A              je          000000BB
  00000041: 6A 00              push        0
  00000043: 6A 00              push        0
  00000045: 6A 00              push        0
  00000047: FF D6              call        esi
  00000049: 8B D0              mov         edx,eax
  0000004B: 89 15 00 00 00 00  mov         dword ptr [?ghFtDevListLock@@3PAXA],edx
  00000051: 85 D2              test        edx,edx
  00000053: 74 5E              je          000000B3
  00000055: 68 9C 00 00 00     push        9Ch
  0000005A: 8D 44 24 08        lea         eax,[esp+8]
  0000005E: 6A 00              push        0
  00000060: 50                 push        eax
  00000061: E8 00 00 00 00     call        _memset
  00000066: 83 C4 0C           add         esp,0Ch
  00000069: C7 44 24 04 9C 00  mov         dword ptr [esp+4],9Ch
            00 00
  00000071: 8D 44 24 04        lea         eax,[esp+4]
  00000075: 50                 push        eax
  00000076: FF 15 00 00 00 00  call        dword ptr [__imp__GetVersionExA@4]
  0000007C: 83 7C 24 08 0A     cmp         dword ptr [esp+8],0Ah
  00000081: 75 14              jne         00000097
  00000083: 80 BC 24 9E 00 00  cmp         byte ptr [esp+9Eh],1
            00 01
  0000008B: C7 05 00 00 00 00  mov         dword ptr [?gServer2016@@3HA],1
            01 00 00 00
  00000095: 75 0A              jne         000000A1
  00000097: C7 05 00 00 00 00  mov         dword ptr [?gServer2016@@3HA],0
            00 00 00 00
  000000A1: B8 01 00 00 00     mov         eax,1
  000000A6: A3 00 00 00 00     mov         dword ptr [?gInitialised@@3HA],eax
  000000AB: 5E                 pop         esi
  000000AC: 81 C4 9C 00 00 00  add         esp,9Ch
  000000B2: C3                 ret
  000000B3: 8B 0D 00 00 00 00  mov         ecx,dword ptr [?ghFtOpenLock@@3PAXA]
  000000B9: EB 06              jmp         $exit$19
  000000BB: 8B 15 00 00 00 00  mov         edx,dword ptr [?ghFtDevListLock@@3PAXA]
$exit$19:
  000000C1: A1 00 00 00 00     mov         eax,dword ptr [?gInitialised@@3HA]
  000000C6: 85 C0              test        eax,eax
  000000C8: 75 2C              jne         000000F6
  000000CA: 8B 35 00 00 00 00  mov         esi,dword ptr [__imp__CloseHandle@4]
  000000D0: 85 D2              test        edx,edx
  000000D2: 74 09              je          000000DD
  000000D4: 52                 push        edx
  000000D5: FF D6              call        esi
  000000D7: 8B 0D 00 00 00 00  mov         ecx,dword ptr [?ghFtOpenLock@@3PAXA]
  000000DD: 85 C9              test        ecx,ecx
  000000DF: 74 03              je          000000E4
  000000E1: 51                 push        ecx
  000000E2: FF D6              call        esi
  000000E4: 68 00 00 00 00     push        offset ?gCS@@3U_RTL_CRITICAL_SECTION@@A
  000000E9: FF 15 00 00 00 00  call        dword ptr [__imp__DeleteCriticalSection@4]
  000000EF: 33 C0              xor         eax,eax
  000000F1: A3 00 00 00 00     mov         dword ptr [?gInitialised@@3HA],eax
  000000F6: 5E                 pop         esi
  000000F7: 81 C4 9C 00 00 00  add         esp,9Ch
  000000FD: C3                 ret

?short_to_ascii_hex@@YAXPADG@Z (void __cdecl short_to_ascii_hex(char *,unsigned short)):
  00000000: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  00000004: 8D 50 03           lea         edx,[eax+3]
  00000007: 66 8B 44 24 08     mov         ax,word ptr [esp+8]
  0000000C: 66 85 C0           test        ax,ax
  0000000F: 74 22              je          00000033
  00000011: 0F B7 C8           movzx       ecx,ax
  00000014: 81 E1 0F 00 00 80  and         ecx,8000000Fh
  0000001A: 79 05              jns         00000021
  0000001C: 49                 dec         ecx
  0000001D: 83 C9 F0           or          ecx,0FFFFFFF0h
  00000020: 41                 inc         ecx
  00000021: 8A 89 00 00 00 00  mov         cl,byte ptr ??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@[ecx]
  00000027: 88 0A              mov         byte ptr [edx],cl
  00000029: 4A                 dec         edx
  0000002A: 66 C1 E8 04        shr         ax,4
  0000002E: 66 85 C0           test        ax,ax
  00000031: 75 DE              jne         00000011
  00000033: C3                 ret

_FT_Close@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 56                 push        esi
  00000006: 85 C0              test        eax,eax
  00000008: 74 10              je          0000001A
  0000000A: 8B 74 24 08        mov         esi,dword ptr [esp+8]
  0000000E: 8B FF              mov         edi,edi
  00000010: 3B C6              cmp         eax,esi
  00000012: 74 0F              je          00000023
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: 5E                 pop         esi
  00000020: C2 04 00           ret         4
  00000023: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  00000028: 85 C0              test        eax,eax
  0000002A: 75 09              jne         00000035
  0000002C: B8 05 00 00 00     mov         eax,5
  00000031: 5E                 pop         esi
  00000032: C2 04 00           ret         4
  00000035: 6A FF              push        0FFFFFFFFh
  00000037: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__WaitForSingleObject@8]
  00000043: FF 76 08           push        dword ptr [esi+8]
  00000046: FF 15 00 00 00 00  call        dword ptr [__imp__CloseHandle@4]
  0000004C: 8B 46 14           mov         eax,dword ptr [esi+14h]
  0000004F: 85 C0              test        eax,eax
  00000051: 74 11              je          00000064
  00000053: 50                 push        eax
  00000054: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  0000005A: 83 C4 04           add         esp,4
  0000005D: C7 46 14 00 00 00  mov         dword ptr [esi+14h],0
            00
  00000064: 56                 push        esi
  00000065: E8 00 00 00 00     call        ?RemoveDevice@@YAKPAUft_private_vars@@@Z
  0000006A: 83 C4 04           add         esp,4
  0000006D: 8B F0              mov         esi,eax
  0000006F: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  00000075: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  0000007B: 8B C6              mov         eax,esi
  0000007D: 5E                 pop         esi
  0000007E: C2 04 00           ret         4

_FT_ClrDtr@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 28 01 00 00  push        dword ptr [eax+128h]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C2 04 00           ret         4

_FT_ClrRts@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 34 01 00 00  push        dword ptr [eax+134h]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C2 04 00           ret         4

_FT_ComPortCancelIdle@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 E0 01 00 00  push        dword ptr [eax+1E0h]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C2 04 00           ret         4

_FT_ComPortIdle@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 DC 01 00 00  push        dword ptr [eax+1DCh]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C2 04 00           ret         4

_FT_CreateDeviceInfoList@4:
  00000000: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  00000005: 85 C0              test        eax,eax
  00000007: 75 08              jne         00000011
  00000009: B8 05 00 00 00     mov         eax,5
  0000000E: C2 04 00           ret         4
  00000011: 56                 push        esi
  00000012: 6A FF              push        0FFFFFFFFh
  00000014: FF 35 00 00 00 00  push        dword ptr [?ghFtDevListLock@@3PAXA]
  0000001A: FF 15 00 00 00 00  call        dword ptr [__imp__WaitForSingleObject@8]
  00000020: FF 74 24 08        push        dword ptr [esp+8]
  00000024: E8 00 00 00 00     call        ?CreateDeviceInfoList@@YAKPAK@Z
  00000029: 83 C4 04           add         esp,4
  0000002C: 8B F0              mov         esi,eax
  0000002E: FF 35 00 00 00 00  push        dword ptr [?ghFtDevListLock@@3PAXA]
  00000034: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  0000003A: 8B C6              mov         eax,esi
  0000003C: 5E                 pop         esi
  0000003D: C2 04 00           ret         4

_FT_CyclePort@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF 70 40           push        dword ptr [eax+40h]
  00000037: FF 71 08           push        dword ptr [ecx+8]
  0000003A: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000040: F7 D8              neg         eax
  00000042: 1B C0              sbb         eax,eax
  00000044: 83 E0 FC           and         eax,0FFFFFFFCh
  00000047: 83 C0 04           add         eax,4
  0000004A: C2 04 00           ret         4

_FT_EEPROM_Program@28:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 56                 push        esi
  00000006: 85 C0              test        eax,eax
  00000008: 74 10              je          0000001A
  0000000A: 8B 74 24 08        mov         esi,dword ptr [esp+8]
  0000000E: 8B FF              mov         edi,edi
  00000010: 3B C6              cmp         eax,esi
  00000012: 74 0F              je          00000023
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: 5E                 pop         esi
  00000020: C2 1C 00           ret         1Ch
  00000023: 57                 push        edi
  00000024: 8B 7C 24 10        mov         edi,dword ptr [esp+10h]
  00000028: 85 FF              test        edi,edi
  0000002A: 74 07              je          00000033
  0000002C: 8B 07              mov         eax,dword ptr [edi]
  0000002E: 3B 46 18           cmp         eax,dword ptr [esi+18h]
  00000031: 74 0A              je          0000003D
  00000033: 5F                 pop         edi
  00000034: B8 06 00 00 00     mov         eax,6
  00000039: 5E                 pop         esi
  0000003A: C2 1C 00           ret         1Ch
  0000003D: 53                 push        ebx
  0000003E: 83 F8 09           cmp         eax,9
  00000041: 0F 87 87 02 00 00  ja          $LN1
  00000047: FF 24 85 00 00 00  jmp         dword ptr $LN80[eax*4]
            00
$LN36:
  0000004E: 83 7C 24 18 10     cmp         dword ptr [esp+18h],10h
  00000053: 0F 85 75 02 00 00  jne         $LN1
  00000059: 68 34 08 00 00     push        834h
  0000005E: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000063: 83 C4 04           add         esp,4
  00000066: 85 C0              test        eax,eax
  00000068: 74 39              je          000000A3
  0000006A: 56                 push        esi
  0000006B: 8B C8              mov         ecx,eax
  0000006D: E8 00 00 00 00     call        ??0TFtEE232@@QAE@PAUft_private_vars@@@Z
  00000072: 8B D8              mov         ebx,eax
  00000074: 85 DB              test        ebx,ebx
  00000076: 74 2B              je          000000A3
  00000078: FF 74 24 28        push        dword ptr [esp+28h]
  0000007C: 8B CB              mov         ecx,ebx
  0000007E: FF 74 24 28        push        dword ptr [esp+28h]
  00000082: FF 74 24 28        push        dword ptr [esp+28h]
  00000086: FF 74 24 28        push        dword ptr [esp+28h]
  0000008A: 57                 push        edi
  0000008B: E8 00 00 00 00     call        ?Program@TFtEE232@@QAEKPAXPAD111@Z
  00000090: 53                 push        ebx
  00000091: 8B F0              mov         esi,eax
  00000093: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000098: 83 C4 04           add         esp,4
  0000009B: 8B C6              mov         eax,esi
  0000009D: 5B                 pop         ebx
  0000009E: 5F                 pop         edi
  0000009F: 5E                 pop         esi
  000000A0: C2 1C 00           ret         1Ch
  000000A3: 5B                 pop         ebx
  000000A4: BE 05 00 00 00     mov         esi,5
  000000A9: 5F                 pop         edi
  000000AA: 8B C6              mov         eax,esi
  000000AC: 5E                 pop         esi
  000000AD: C2 1C 00           ret         1Ch
$LN31:
  000000B0: 83 7C 24 18 1C     cmp         dword ptr [esp+18h],1Ch
  000000B5: 0F 85 13 02 00 00  jne         $LN1
  000000BB: 68 34 08 00 00     push        834h
  000000C0: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000C5: 83 C4 04           add         esp,4
  000000C8: 85 C0              test        eax,eax
  000000CA: 74 D7              je          000000A3
  000000CC: 56                 push        esi
  000000CD: 8B C8              mov         ecx,eax
  000000CF: E8 00 00 00 00     call        ??0TFtEE2232@@QAE@PAUft_private_vars@@@Z
  000000D4: 8B D8              mov         ebx,eax
  000000D6: 85 DB              test        ebx,ebx
  000000D8: 74 C9              je          000000A3
  000000DA: FF 74 24 28        push        dword ptr [esp+28h]
  000000DE: 8B CB              mov         ecx,ebx
  000000E0: FF 74 24 28        push        dword ptr [esp+28h]
  000000E4: FF 74 24 28        push        dword ptr [esp+28h]
  000000E8: FF 74 24 28        push        dword ptr [esp+28h]
  000000EC: 57                 push        edi
  000000ED: E8 00 00 00 00     call        ?Program@TFtEE2232@@QAEKPAXPAD111@Z
  000000F2: 53                 push        ebx
  000000F3: 8B F0              mov         esi,eax
  000000F5: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000000FA: 83 C4 04           add         esp,4
  000000FD: 8B C6              mov         eax,esi
  000000FF: 5B                 pop         ebx
  00000100: 5F                 pop         edi
  00000101: 5E                 pop         esi
  00000102: C2 1C 00           ret         1Ch
$LN26:
  00000105: 83 7C 24 18 20     cmp         dword ptr [esp+18h],20h
  0000010A: 0F 85 BE 01 00 00  jne         $LN1
  00000110: 68 38 08 00 00     push        838h
  00000115: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000011A: 83 C4 04           add         esp,4
  0000011D: 85 C0              test        eax,eax
  0000011F: 74 82              je          000000A3
  00000121: 56                 push        esi
  00000122: 8B C8              mov         ecx,eax
  00000124: E8 00 00 00 00     call        ??0TFtEE232R@@QAE@PAUft_private_vars@@@Z
  00000129: 8B D8              mov         ebx,eax
  0000012B: 85 DB              test        ebx,ebx
  0000012D: 0F 84 70 FF FF FF  je          000000A3
  00000133: FF 74 24 28        push        dword ptr [esp+28h]
  00000137: 8B CB              mov         ecx,ebx
  00000139: FF 74 24 28        push        dword ptr [esp+28h]
  0000013D: FF 74 24 28        push        dword ptr [esp+28h]
  00000141: FF 74 24 28        push        dword ptr [esp+28h]
  00000145: 57                 push        edi
  00000146: E8 00 00 00 00     call        ?Program@TFtEE232R@@QAEKPAXPAD111@Z
  0000014B: 53                 push        ebx
  0000014C: 8B F0              mov         esi,eax
  0000014E: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000153: 83 C4 04           add         esp,4
  00000156: 8B C6              mov         eax,esi
  00000158: 5B                 pop         ebx
  00000159: 5F                 pop         edi
  0000015A: 5E                 pop         esi
  0000015B: C2 1C 00           ret         1Ch
$LN21:
  0000015E: 83 7C 24 18 28     cmp         dword ptr [esp+18h],28h
  00000163: 0F 85 65 01 00 00  jne         $LN1
  00000169: 68 34 08 00 00     push        834h
  0000016E: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000173: 83 C4 04           add         esp,4
  00000176: 85 C0              test        eax,eax
  00000178: 0F 84 25 FF FF FF  je          000000A3
  0000017E: 56                 push        esi
  0000017F: 8B C8              mov         ecx,eax
  00000181: E8 00 00 00 00     call        ??0TFtEE2232H@@QAE@PAUft_private_vars@@@Z
  00000186: 8B D8              mov         ebx,eax
  00000188: 85 DB              test        ebx,ebx
  0000018A: 0F 84 13 FF FF FF  je          000000A3
  00000190: FF 74 24 28        push        dword ptr [esp+28h]
  00000194: 8B CB              mov         ecx,ebx
  00000196: FF 74 24 28        push        dword ptr [esp+28h]
  0000019A: FF 74 24 28        push        dword ptr [esp+28h]
  0000019E: FF 74 24 28        push        dword ptr [esp+28h]
  000001A2: 57                 push        edi
  000001A3: E8 00 00 00 00     call        ?Program@TFtEE2232H@@QAEKPAXPAD111@Z
  000001A8: 53                 push        ebx
  000001A9: 8B F0              mov         esi,eax
  000001AB: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000001B0: 83 C4 04           add         esp,4
  000001B3: 8B C6              mov         eax,esi
  000001B5: 5B                 pop         ebx
  000001B6: 5F                 pop         edi
  000001B7: 5E                 pop         esi
  000001B8: C2 1C 00           ret         1Ch
$LN16:
  000001BB: 83 7C 24 18 24     cmp         dword ptr [esp+18h],24h
  000001C0: 0F 85 08 01 00 00  jne         $LN1
  000001C6: 68 34 08 00 00     push        834h
  000001CB: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000001D0: 83 C4 04           add         esp,4
  000001D3: 85 C0              test        eax,eax
  000001D5: 0F 84 C8 FE FF FF  je          000000A3
  000001DB: 56                 push        esi
  000001DC: 8B C8              mov         ecx,eax
  000001DE: E8 00 00 00 00     call        ??0TFtEE4232H@@QAE@PAUft_private_vars@@@Z
  000001E3: 8B D8              mov         ebx,eax
  000001E5: 85 DB              test        ebx,ebx
  000001E7: 0F 84 B6 FE FF FF  je          000000A3
  000001ED: FF 74 24 28        push        dword ptr [esp+28h]
  000001F1: 8B CB              mov         ecx,ebx
  000001F3: FF 74 24 28        push        dword ptr [esp+28h]
  000001F7: FF 74 24 28        push        dword ptr [esp+28h]
  000001FB: FF 74 24 28        push        dword ptr [esp+28h]
  000001FF: 57                 push        edi
  00000200: E8 00 00 00 00     call        ?Program@TFtEE4232H@@QAEKPAXPAD111@Z
  00000205: 53                 push        ebx
  00000206: 8B F0              mov         esi,eax
  00000208: E8 00 00 00 00     call        ??3@YAXPAX@Z
  0000020D: 83 C4 04           add         esp,4
  00000210: 8B C6              mov         eax,esi
  00000212: 5B                 pop         ebx
  00000213: 5F                 pop         edi
  00000214: 5E                 pop         esi
  00000215: C2 1C 00           ret         1Ch
$LN11:
  00000218: 83 7C 24 18 2C     cmp         dword ptr [esp+18h],2Ch
  0000021D: 0F 85 AB 00 00 00  jne         $LN1
  00000223: 68 34 08 00 00     push        834h
  00000228: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000022D: 83 C4 04           add         esp,4
  00000230: 85 C0              test        eax,eax
  00000232: 0F 84 6B FE FF FF  je          000000A3
  00000238: 56                 push        esi
  00000239: 8B C8              mov         ecx,eax
  0000023B: E8 00 00 00 00     call        ??0TFtEE232H@@QAE@PAUft_private_vars@@@Z
  00000240: 8B D8              mov         ebx,eax
  00000242: 85 DB              test        ebx,ebx
  00000244: 0F 84 59 FE FF FF  je          000000A3
  0000024A: FF 74 24 28        push        dword ptr [esp+28h]
  0000024E: 8B CB              mov         ecx,ebx
  00000250: FF 74 24 28        push        dword ptr [esp+28h]
  00000254: FF 74 24 28        push        dword ptr [esp+28h]
  00000258: FF 74 24 28        push        dword ptr [esp+28h]
  0000025C: 57                 push        edi
  0000025D: E8 00 00 00 00     call        ?Program@TFtEE232H@@QAEKPAXPAD111@Z
  00000262: 53                 push        ebx
  00000263: 8B F0              mov         esi,eax
  00000265: E8 00 00 00 00     call        ??3@YAXPAX@Z
  0000026A: 83 C4 04           add         esp,4
  0000026D: 8B C6              mov         eax,esi
  0000026F: 5B                 pop         ebx
  00000270: 5F                 pop         edi
  00000271: 5E                 pop         esi
  00000272: C2 1C 00           ret         1Ch
$LN6:
  00000275: 83 7C 24 18 38     cmp         dword ptr [esp+18h],38h
  0000027A: 75 52              jne         $LN1
  0000027C: 68 34 08 00 00     push        834h
  00000281: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000286: 83 C4 04           add         esp,4
  00000289: 85 C0              test        eax,eax
  0000028B: 0F 84 12 FE FF FF  je          000000A3
  00000291: 56                 push        esi
  00000292: 8B C8              mov         ecx,eax
  00000294: E8 00 00 00 00     call        ??0TFtEEFTX@@QAE@PAUft_private_vars@@@Z
  00000299: 8B D8              mov         ebx,eax
  0000029B: 85 DB              test        ebx,ebx
  0000029D: 0F 84 00 FE FF FF  je          000000A3
  000002A3: FF 74 24 28        push        dword ptr [esp+28h]
  000002A7: 8B CB              mov         ecx,ebx
  000002A9: FF 74 24 28        push        dword ptr [esp+28h]
  000002AD: FF 74 24 28        push        dword ptr [esp+28h]
  000002B1: FF 74 24 28        push        dword ptr [esp+28h]
  000002B5: 57                 push        edi
  000002B6: E8 00 00 00 00     call        ?Program@TFtEEFTX@@QAEKPAXPAD111@Z
  000002BB: 53                 push        ebx
  000002BC: 8B F0              mov         esi,eax
  000002BE: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000002C3: 83 C4 04           add         esp,4
  000002C6: 8B C6              mov         eax,esi
  000002C8: 5B                 pop         ebx
  000002C9: 5F                 pop         edi
  000002CA: 5E                 pop         esi
  000002CB: C2 1C 00           ret         1Ch
$LN1:
  000002CE: 5B                 pop         ebx
  000002CF: BE 06 00 00 00     mov         esi,6
  000002D4: 5F                 pop         edi
  000002D5: 8B C6              mov         eax,esi
  000002D7: 5E                 pop         esi
  000002D8: C2 1C 00           ret         1Ch
  000002DB: 90                 nop
$LN80:
  000002DC: 00 00              add         byte ptr [eax],al
  000002DE: 00 00              add         byte ptr [eax],al
  000002E0: 00 00              add         byte ptr [eax],al
  000002E2: 00 00              add         byte ptr [eax],al
  000002E4: 00 00              add         byte ptr [eax],al
  000002E6: 00 00              add         byte ptr [eax],al
  000002E8: 00 00              add         byte ptr [eax],al
  000002EA: 00 00              add         byte ptr [eax],al
  000002EC: 00 00              add         byte ptr [eax],al
  000002EE: 00 00              add         byte ptr [eax],al
  000002F0: 00 00              add         byte ptr [eax],al
  000002F2: 00 00              add         byte ptr [eax],al
  000002F4: 00 00              add         byte ptr [eax],al
  000002F6: 00 00              add         byte ptr [eax],al
  000002F8: 00 00              add         byte ptr [eax],al
  000002FA: 00 00              add         byte ptr [eax],al
  000002FC: 00 00              add         byte ptr [eax],al
  000002FE: 00 00              add         byte ptr [eax],al
  00000300: 00 00              add         byte ptr [eax],al
  00000302: 00 00              add         byte ptr [eax],al

_FT_EEPROM_Read@28:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 56                 push        esi
  00000006: 85 C0              test        eax,eax
  00000008: 74 10              je          0000001A
  0000000A: 8B 74 24 08        mov         esi,dword ptr [esp+8]
  0000000E: 8B FF              mov         edi,edi
  00000010: 3B C6              cmp         eax,esi
  00000012: 74 0F              je          00000023
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: 5E                 pop         esi
  00000020: C2 1C 00           ret         1Ch
  00000023: 57                 push        edi
  00000024: 8B 7C 24 10        mov         edi,dword ptr [esp+10h]
  00000028: 85 FF              test        edi,edi
  0000002A: 74 07              je          00000033
  0000002C: 8B 07              mov         eax,dword ptr [edi]
  0000002E: 3B 46 18           cmp         eax,dword ptr [esi+18h]
  00000031: 74 0A              je          0000003D
  00000033: 5F                 pop         edi
  00000034: B8 06 00 00 00     mov         eax,6
  00000039: 5E                 pop         esi
  0000003A: C2 1C 00           ret         1Ch
  0000003D: 53                 push        ebx
  0000003E: 83 F8 09           cmp         eax,9
  00000041: 0F 87 87 02 00 00  ja          $LN1
  00000047: FF 24 85 00 00 00  jmp         dword ptr $LN80[eax*4]
            00
$LN36:
  0000004E: 83 7C 24 18 10     cmp         dword ptr [esp+18h],10h
  00000053: 0F 85 75 02 00 00  jne         $LN1
  00000059: 68 34 08 00 00     push        834h
  0000005E: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000063: 83 C4 04           add         esp,4
  00000066: 85 C0              test        eax,eax
  00000068: 74 39              je          000000A3
  0000006A: 56                 push        esi
  0000006B: 8B C8              mov         ecx,eax
  0000006D: E8 00 00 00 00     call        ??0TFtEE232@@QAE@PAUft_private_vars@@@Z
  00000072: 8B D8              mov         ebx,eax
  00000074: 85 DB              test        ebx,ebx
  00000076: 74 2B              je          000000A3
  00000078: FF 74 24 28        push        dword ptr [esp+28h]
  0000007C: 8B CB              mov         ecx,ebx
  0000007E: FF 74 24 28        push        dword ptr [esp+28h]
  00000082: FF 74 24 28        push        dword ptr [esp+28h]
  00000086: FF 74 24 28        push        dword ptr [esp+28h]
  0000008A: 57                 push        edi
  0000008B: E8 00 00 00 00     call        ?ReadAndParse@TFtEE232@@QAEKPAXPAD111@Z
  00000090: 53                 push        ebx
  00000091: 8B F0              mov         esi,eax
  00000093: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000098: 83 C4 04           add         esp,4
  0000009B: 8B C6              mov         eax,esi
  0000009D: 5B                 pop         ebx
  0000009E: 5F                 pop         edi
  0000009F: 5E                 pop         esi
  000000A0: C2 1C 00           ret         1Ch
  000000A3: 5B                 pop         ebx
  000000A4: BE 05 00 00 00     mov         esi,5
  000000A9: 5F                 pop         edi
  000000AA: 8B C6              mov         eax,esi
  000000AC: 5E                 pop         esi
  000000AD: C2 1C 00           ret         1Ch
$LN31:
  000000B0: 83 7C 24 18 1C     cmp         dword ptr [esp+18h],1Ch
  000000B5: 0F 85 13 02 00 00  jne         $LN1
  000000BB: 68 34 08 00 00     push        834h
  000000C0: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000C5: 83 C4 04           add         esp,4
  000000C8: 85 C0              test        eax,eax
  000000CA: 74 D7              je          000000A3
  000000CC: 56                 push        esi
  000000CD: 8B C8              mov         ecx,eax
  000000CF: E8 00 00 00 00     call        ??0TFtEE2232@@QAE@PAUft_private_vars@@@Z
  000000D4: 8B D8              mov         ebx,eax
  000000D6: 85 DB              test        ebx,ebx
  000000D8: 74 C9              je          000000A3
  000000DA: FF 74 24 28        push        dword ptr [esp+28h]
  000000DE: 8B CB              mov         ecx,ebx
  000000E0: FF 74 24 28        push        dword ptr [esp+28h]
  000000E4: FF 74 24 28        push        dword ptr [esp+28h]
  000000E8: FF 74 24 28        push        dword ptr [esp+28h]
  000000EC: 57                 push        edi
  000000ED: E8 00 00 00 00     call        ?ReadAndParse@TFtEE2232@@QAEKPAXPAD111@Z
  000000F2: 53                 push        ebx
  000000F3: 8B F0              mov         esi,eax
  000000F5: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000000FA: 83 C4 04           add         esp,4
  000000FD: 8B C6              mov         eax,esi
  000000FF: 5B                 pop         ebx
  00000100: 5F                 pop         edi
  00000101: 5E                 pop         esi
  00000102: C2 1C 00           ret         1Ch
$LN26:
  00000105: 83 7C 24 18 20     cmp         dword ptr [esp+18h],20h
  0000010A: 0F 85 BE 01 00 00  jne         $LN1
  00000110: 68 38 08 00 00     push        838h
  00000115: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000011A: 83 C4 04           add         esp,4
  0000011D: 85 C0              test        eax,eax
  0000011F: 74 82              je          000000A3
  00000121: 56                 push        esi
  00000122: 8B C8              mov         ecx,eax
  00000124: E8 00 00 00 00     call        ??0TFtEE232R@@QAE@PAUft_private_vars@@@Z
  00000129: 8B D8              mov         ebx,eax
  0000012B: 85 DB              test        ebx,ebx
  0000012D: 0F 84 70 FF FF FF  je          000000A3
  00000133: FF 74 24 28        push        dword ptr [esp+28h]
  00000137: 8B CB              mov         ecx,ebx
  00000139: FF 74 24 28        push        dword ptr [esp+28h]
  0000013D: FF 74 24 28        push        dword ptr [esp+28h]
  00000141: FF 74 24 28        push        dword ptr [esp+28h]
  00000145: 57                 push        edi
  00000146: E8 00 00 00 00     call        ?ReadAndParse@TFtEE232R@@QAEKPAXPAD111@Z
  0000014B: 53                 push        ebx
  0000014C: 8B F0              mov         esi,eax
  0000014E: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000153: 83 C4 04           add         esp,4
  00000156: 8B C6              mov         eax,esi
  00000158: 5B                 pop         ebx
  00000159: 5F                 pop         edi
  0000015A: 5E                 pop         esi
  0000015B: C2 1C 00           ret         1Ch
$LN21:
  0000015E: 83 7C 24 18 28     cmp         dword ptr [esp+18h],28h
  00000163: 0F 85 65 01 00 00  jne         $LN1
  00000169: 68 34 08 00 00     push        834h
  0000016E: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000173: 83 C4 04           add         esp,4
  00000176: 85 C0              test        eax,eax
  00000178: 0F 84 25 FF FF FF  je          000000A3
  0000017E: 56                 push        esi
  0000017F: 8B C8              mov         ecx,eax
  00000181: E8 00 00 00 00     call        ??0TFtEE2232H@@QAE@PAUft_private_vars@@@Z
  00000186: 8B D8              mov         ebx,eax
  00000188: 85 DB              test        ebx,ebx
  0000018A: 0F 84 13 FF FF FF  je          000000A3
  00000190: FF 74 24 28        push        dword ptr [esp+28h]
  00000194: 8B CB              mov         ecx,ebx
  00000196: FF 74 24 28        push        dword ptr [esp+28h]
  0000019A: FF 74 24 28        push        dword ptr [esp+28h]
  0000019E: FF 74 24 28        push        dword ptr [esp+28h]
  000001A2: 57                 push        edi
  000001A3: E8 00 00 00 00     call        ?ReadAndParse@TFtEE2232H@@QAEKPAXPAD111@Z
  000001A8: 53                 push        ebx
  000001A9: 8B F0              mov         esi,eax
  000001AB: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000001B0: 83 C4 04           add         esp,4
  000001B3: 8B C6              mov         eax,esi
  000001B5: 5B                 pop         ebx
  000001B6: 5F                 pop         edi
  000001B7: 5E                 pop         esi
  000001B8: C2 1C 00           ret         1Ch
$LN16:
  000001BB: 83 7C 24 18 24     cmp         dword ptr [esp+18h],24h
  000001C0: 0F 85 08 01 00 00  jne         $LN1
  000001C6: 68 34 08 00 00     push        834h
  000001CB: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000001D0: 83 C4 04           add         esp,4
  000001D3: 85 C0              test        eax,eax
  000001D5: 0F 84 C8 FE FF FF  je          000000A3
  000001DB: 56                 push        esi
  000001DC: 8B C8              mov         ecx,eax
  000001DE: E8 00 00 00 00     call        ??0TFtEE4232H@@QAE@PAUft_private_vars@@@Z
  000001E3: 8B D8              mov         ebx,eax
  000001E5: 85 DB              test        ebx,ebx
  000001E7: 0F 84 B6 FE FF FF  je          000000A3
  000001ED: FF 74 24 28        push        dword ptr [esp+28h]
  000001F1: 8B CB              mov         ecx,ebx
  000001F3: FF 74 24 28        push        dword ptr [esp+28h]
  000001F7: FF 74 24 28        push        dword ptr [esp+28h]
  000001FB: FF 74 24 28        push        dword ptr [esp+28h]
  000001FF: 57                 push        edi
  00000200: E8 00 00 00 00     call        ?ReadAndParse@TFtEE4232H@@QAEKPAXPAD111@Z
  00000205: 53                 push        ebx
  00000206: 8B F0              mov         esi,eax
  00000208: E8 00 00 00 00     call        ??3@YAXPAX@Z
  0000020D: 83 C4 04           add         esp,4
  00000210: 8B C6              mov         eax,esi
  00000212: 5B                 pop         ebx
  00000213: 5F                 pop         edi
  00000214: 5E                 pop         esi
  00000215: C2 1C 00           ret         1Ch
$LN11:
  00000218: 83 7C 24 18 2C     cmp         dword ptr [esp+18h],2Ch
  0000021D: 0F 85 AB 00 00 00  jne         $LN1
  00000223: 68 34 08 00 00     push        834h
  00000228: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000022D: 83 C4 04           add         esp,4
  00000230: 85 C0              test        eax,eax
  00000232: 0F 84 6B FE FF FF  je          000000A3
  00000238: 56                 push        esi
  00000239: 8B C8              mov         ecx,eax
  0000023B: E8 00 00 00 00     call        ??0TFtEE232H@@QAE@PAUft_private_vars@@@Z
  00000240: 8B D8              mov         ebx,eax
  00000242: 85 DB              test        ebx,ebx
  00000244: 0F 84 59 FE FF FF  je          000000A3
  0000024A: FF 74 24 28        push        dword ptr [esp+28h]
  0000024E: 8B CB              mov         ecx,ebx
  00000250: FF 74 24 28        push        dword ptr [esp+28h]
  00000254: FF 74 24 28        push        dword ptr [esp+28h]
  00000258: FF 74 24 28        push        dword ptr [esp+28h]
  0000025C: 57                 push        edi
  0000025D: E8 00 00 00 00     call        ?ReadAndParse@TFtEE232H@@QAEKPAXPAD111@Z
  00000262: 53                 push        ebx
  00000263: 8B F0              mov         esi,eax
  00000265: E8 00 00 00 00     call        ??3@YAXPAX@Z
  0000026A: 83 C4 04           add         esp,4
  0000026D: 8B C6              mov         eax,esi
  0000026F: 5B                 pop         ebx
  00000270: 5F                 pop         edi
  00000271: 5E                 pop         esi
  00000272: C2 1C 00           ret         1Ch
$LN6:
  00000275: 83 7C 24 18 38     cmp         dword ptr [esp+18h],38h
  0000027A: 75 52              jne         $LN1
  0000027C: 68 34 08 00 00     push        834h
  00000281: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000286: 83 C4 04           add         esp,4
  00000289: 85 C0              test        eax,eax
  0000028B: 0F 84 12 FE FF FF  je          000000A3
  00000291: 56                 push        esi
  00000292: 8B C8              mov         ecx,eax
  00000294: E8 00 00 00 00     call        ??0TFtEEFTX@@QAE@PAUft_private_vars@@@Z
  00000299: 8B D8              mov         ebx,eax
  0000029B: 85 DB              test        ebx,ebx
  0000029D: 0F 84 00 FE FF FF  je          000000A3
  000002A3: FF 74 24 28        push        dword ptr [esp+28h]
  000002A7: 8B CB              mov         ecx,ebx
  000002A9: FF 74 24 28        push        dword ptr [esp+28h]
  000002AD: FF 74 24 28        push        dword ptr [esp+28h]
  000002B1: FF 74 24 28        push        dword ptr [esp+28h]
  000002B5: 57                 push        edi
  000002B6: E8 00 00 00 00     call        ?ReadAndParse@TFtEEFTX@@QAEKPAXPAD111@Z
  000002BB: 53                 push        ebx
  000002BC: 8B F0              mov         esi,eax
  000002BE: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000002C3: 83 C4 04           add         esp,4
  000002C6: 8B C6              mov         eax,esi
  000002C8: 5B                 pop         ebx
  000002C9: 5F                 pop         edi
  000002CA: 5E                 pop         esi
  000002CB: C2 1C 00           ret         1Ch
$LN1:
  000002CE: 5B                 pop         ebx
  000002CF: BE 06 00 00 00     mov         esi,6
  000002D4: 5F                 pop         edi
  000002D5: 8B C6              mov         eax,esi
  000002D7: 5E                 pop         esi
  000002D8: C2 1C 00           ret         1Ch
  000002DB: 90                 nop
$LN80:
  000002DC: 00 00              add         byte ptr [eax],al
  000002DE: 00 00              add         byte ptr [eax],al
  000002E0: 00 00              add         byte ptr [eax],al
  000002E2: 00 00              add         byte ptr [eax],al
  000002E4: 00 00              add         byte ptr [eax],al
  000002E6: 00 00              add         byte ptr [eax],al
  000002E8: 00 00              add         byte ptr [eax],al
  000002EA: 00 00              add         byte ptr [eax],al
  000002EC: 00 00              add         byte ptr [eax],al
  000002EE: 00 00              add         byte ptr [eax],al
  000002F0: 00 00              add         byte ptr [eax],al
  000002F2: 00 00              add         byte ptr [eax],al
  000002F4: 00 00              add         byte ptr [eax],al
  000002F6: 00 00              add         byte ptr [eax],al
  000002F8: 00 00              add         byte ptr [eax],al
  000002FA: 00 00              add         byte ptr [eax],al
  000002FC: 00 00              add         byte ptr [eax],al
  000002FE: 00 00              add         byte ptr [eax],al
  00000300: 00 00              add         byte ptr [eax],al
  00000302: 00 00              add         byte ptr [eax],al

_FT_EE_Program@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 81 EC B4 01 00 00  sub         esp,1B4h
  0000000B: 53                 push        ebx
  0000000C: 55                 push        ebp
  0000000D: 33 ED              xor         ebp,ebp
  0000000F: 56                 push        esi
  00000010: 8B B4 24 C8 01 00  mov         esi,dword ptr [esp+1C8h]
            00
  00000017: 85 C0              test        eax,eax
  00000019: 74 11              je          0000002C
  0000001B: 8B 9C 24 C4 01 00  mov         ebx,dword ptr [esp+1C4h]
            00
  00000022: 3B C3              cmp         eax,ebx
  00000024: 74 17              je          0000003D
  00000026: 8B 00              mov         eax,dword ptr [eax]
  00000028: 85 C0              test        eax,eax
  0000002A: 75 F6              jne         00000022
  0000002C: 5E                 pop         esi
  0000002D: 5D                 pop         ebp
  0000002E: B8 01 00 00 00     mov         eax,1
  00000033: 5B                 pop         ebx
  00000034: 81 C4 B4 01 00 00  add         esp,1B4h
  0000003A: C2 08 00           ret         8
  0000003D: 8B 43 18           mov         eax,dword ptr [ebx+18h]
  00000040: 57                 push        edi
  00000041: 83 F8 04           cmp         eax,4
  00000044: 0F 85 28 01 00 00  jne         00000172
  0000004A: 68 34 08 00 00     push        834h
  0000004F: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000054: 83 C4 04           add         esp,4
  00000057: 85 C0              test        eax,eax
  00000059: 74 0C              je          00000067
  0000005B: 53                 push        ebx
  0000005C: 8B C8              mov         ecx,eax
  0000005E: E8 00 00 00 00     call        ??0TFtEE2232@@QAE@PAUft_private_vars@@@Z
  00000063: 8B D8              mov         ebx,eax
  00000065: EB 02              jmp         00000069
  00000067: 33 DB              xor         ebx,ebx
  00000069: 85 DB              test        ebx,ebx
  0000006B: 0F 84 B1 06 00 00  je          00000722
  00000071: 6A 28              push        28h
  00000073: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  00000079: 8B F8              mov         edi,eax
  0000007B: 83 C4 04           add         esp,4
  0000007E: 85 FF              test        edi,edi
  00000080: 0F 84 93 06 00 00  je          00000719
  00000086: 39 2E              cmp         dword ptr [esi],ebp
  00000088: 75 06              jne         00000090
  0000008A: 83 7E 04 FF        cmp         dword ptr [esi+4],0FFFFFFFFh
  0000008E: 74 3E              je          000000CE
  00000090: 68 A0 00 00 00     push        0A0h
  00000095: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  0000009B: 8B E8              mov         ebp,eax
  0000009D: 83 C4 04           add         esp,4
  000000A0: 85 ED              test        ebp,ebp
  000000A2: 0F 84 71 06 00 00  je          00000719
  000000A8: 6A 38              push        38h
  000000AA: 8D 45 0C           lea         eax,[ebp+0Ch]
  000000AD: C7 45 00 00 00 00  mov         dword ptr [ebp],0
            00
  000000B4: 56                 push        esi
  000000B5: 50                 push        eax
  000000B6: C7 45 04 FF FF FF  mov         dword ptr [ebp+4],0FFFFFFFFh
            FF
  000000BD: C7 45 08 01 00 00  mov         dword ptr [ebp+8],1
            00
  000000C4: E8 00 00 00 00     call        _memcpy
  000000C9: 83 C4 0C           add         esp,0Ch
  000000CC: 8B F5              mov         esi,ebp
  000000CE: 8B 46 10           mov         eax,dword ptr [esi+10h]
  000000D1: 8B CB              mov         ecx,ebx
  000000D3: 89 07              mov         dword ptr [edi],eax
  000000D5: 8B 46 18           mov         eax,dword ptr [esi+18h]
  000000D8: 89 47 04           mov         dword ptr [edi+4],eax
  000000DB: C7 47 08 00 00 00  mov         dword ptr [edi+8],offset ??_C@_00CNPNBAHC@?$AA@
            00
  000000E2: 0F B6 46 30        movzx       eax,byte ptr [esi+30h]
  000000E6: 88 47 14           mov         byte ptr [edi+14h],al
  000000E9: 0F B6 46 31        movzx       eax,byte ptr [esi+31h]
  000000ED: 88 47 15           mov         byte ptr [edi+15h],al
  000000F0: 0F B6 46 32        movzx       eax,byte ptr [esi+32h]
  000000F4: 88 47 16           mov         byte ptr [edi+16h],al
  000000F7: 0F B6 46 33        movzx       eax,byte ptr [esi+33h]
  000000FB: 88 47 17           mov         byte ptr [edi+17h],al
  000000FE: 0F B6 46 34        movzx       eax,byte ptr [esi+34h]
  00000102: 88 47 18           mov         byte ptr [edi+18h],al
  00000105: 0F B6 46 35        movzx       eax,byte ptr [esi+35h]
  00000109: 88 47 19           mov         byte ptr [edi+19h],al
  0000010C: 0F B6 46 36        movzx       eax,byte ptr [esi+36h]
  00000110: 88 47 1A           mov         byte ptr [edi+1Ah],al
  00000113: 0F B6 46 37        movzx       eax,byte ptr [esi+37h]
  00000117: 88 47 1B           mov         byte ptr [edi+1Bh],al
  0000011A: 66 8B 46 38        mov         ax,word ptr [esi+38h]
  0000011E: 66 89 47 1C        mov         word ptr [edi+1Ch],ax
  00000122: 0F B6 46 3A        movzx       eax,byte ptr [esi+3Ah]
  00000126: 88 47 1E           mov         byte ptr [edi+1Eh],al
  00000129: 0F B6 46 3B        movzx       eax,byte ptr [esi+3Bh]
  0000012D: 88 47 1F           mov         byte ptr [edi+1Fh],al
  00000130: 0F B6 46 3C        movzx       eax,byte ptr [esi+3Ch]
  00000134: 88 47 20           mov         byte ptr [edi+20h],al
  00000137: 0F B6 46 3D        movzx       eax,byte ptr [esi+3Dh]
  0000013B: 88 47 21           mov         byte ptr [edi+21h],al
  0000013E: 0F B6 46 3E        movzx       eax,byte ptr [esi+3Eh]
  00000142: 88 47 22           mov         byte ptr [edi+22h],al
  00000145: 0F B6 46 3F        movzx       eax,byte ptr [esi+3Fh]
  00000149: 88 47 23           mov         byte ptr [edi+23h],al
  0000014C: 0F B6 46 40        movzx       eax,byte ptr [esi+40h]
  00000150: 88 47 24           mov         byte ptr [edi+24h],al
  00000153: 0F B6 46 41        movzx       eax,byte ptr [esi+41h]
  00000157: 88 47 25           mov         byte ptr [edi+25h],al
  0000015A: 0F B6 46 42        movzx       eax,byte ptr [esi+42h]
  0000015E: 88 47 26           mov         byte ptr [edi+26h],al
  00000161: 0F B6 46 43        movzx       eax,byte ptr [esi+43h]
  00000165: 88 47 27           mov         byte ptr [edi+27h],al
  00000168: 8B 03              mov         eax,dword ptr [ebx]
  0000016A: FF 50 20           call        dword ptr [eax+20h]
  0000016D: E9 2C 06 00 00     jmp         0000079E
  00000172: 83 F8 05           cmp         eax,5
  00000175: 0F 85 02 01 00 00  jne         0000027D
  0000017B: 68 38 08 00 00     push        838h
  00000180: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000185: 83 C4 04           add         esp,4
  00000188: 85 C0              test        eax,eax
  0000018A: 74 0C              je          00000198
  0000018C: 53                 push        ebx
  0000018D: 8B C8              mov         ecx,eax
  0000018F: E8 00 00 00 00     call        ??0TFtEE232R@@QAE@PAUft_private_vars@@@Z
  00000194: 8B D8              mov         ebx,eax
  00000196: EB 02              jmp         0000019A
  00000198: 33 DB              xor         ebx,ebx
  0000019A: 85 DB              test        ebx,ebx
  0000019C: 0F 84 80 05 00 00  je          00000722
  000001A2: 6A 20              push        20h
  000001A4: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  000001AA: 8B F8              mov         edi,eax
  000001AC: 83 C4 04           add         esp,4
  000001AF: 85 FF              test        edi,edi
  000001B1: 0F 84 62 05 00 00  je          00000719
  000001B7: 39 2E              cmp         dword ptr [esi],ebp
  000001B9: 0F 85 A3 00 00 00  jne         00000262
  000001BF: 83 7E 04 FF        cmp         dword ptr [esi+4],0FFFFFFFFh
  000001C3: 0F 85 99 00 00 00  jne         00000262
  000001C9: 8B 46 10           mov         eax,dword ptr [esi+10h]
  000001CC: 89 07              mov         dword ptr [edi],eax
  000001CE: 8B 46 18           mov         eax,dword ptr [esi+18h]
  000001D1: 89 47 04           mov         dword ptr [edi+4],eax
  000001D4: C7 47 08 00 00 00  mov         dword ptr [edi+8],offset ??_C@_00CNPNBAHC@?$AA@
            00
  000001DB: 0F B6 46 47        movzx       eax,byte ptr [esi+47h]
  000001DF: 88 47 0F           mov         byte ptr [edi+0Fh],al
  000001E2: 0F B6 46 48        movzx       eax,byte ptr [esi+48h]
  000001E6: 88 47 10           mov         byte ptr [edi+10h],al
  000001E9: 0F B6 46 44        movzx       eax,byte ptr [esi+44h]
  000001ED: 88 47 0C           mov         byte ptr [edi+0Ch],al
  000001F0: 0F B6 46 45        movzx       eax,byte ptr [esi+45h]
  000001F4: 88 47 0D           mov         byte ptr [edi+0Dh],al
  000001F7: C6 47 0E 40        mov         byte ptr [edi+0Eh],40h
  000001FB: 0F B6 46 49        movzx       eax,byte ptr [esi+49h]
  000001FF: 88 47 11           mov         byte ptr [edi+11h],al
  00000202: 0F B6 46 4A        movzx       eax,byte ptr [esi+4Ah]
  00000206: 88 47 12           mov         byte ptr [edi+12h],al
  00000209: 0F B6 46 4B        movzx       eax,byte ptr [esi+4Bh]
  0000020D: 88 47 13           mov         byte ptr [edi+13h],al
  00000210: 0F B6 46 4C        movzx       eax,byte ptr [esi+4Ch]
  00000214: 88 47 14           mov         byte ptr [edi+14h],al
  00000217: 0F B6 46 4D        movzx       eax,byte ptr [esi+4Dh]
  0000021B: 88 47 15           mov         byte ptr [edi+15h],al
  0000021E: 0F B6 46 4E        movzx       eax,byte ptr [esi+4Eh]
  00000222: 88 47 16           mov         byte ptr [edi+16h],al
  00000225: 0F B6 46 4F        movzx       eax,byte ptr [esi+4Fh]
  00000229: 88 47 17           mov         byte ptr [edi+17h],al
  0000022C: 0F B6 46 50        movzx       eax,byte ptr [esi+50h]
  00000230: 88 47 18           mov         byte ptr [edi+18h],al
  00000233: 0F B6 46 51        movzx       eax,byte ptr [esi+51h]
  00000237: 88 47 19           mov         byte ptr [edi+19h],al
  0000023A: 0F B6 46 52        movzx       eax,byte ptr [esi+52h]
  0000023E: 88 47 1A           mov         byte ptr [edi+1Ah],al
  00000241: 0F B6 46 53        movzx       eax,byte ptr [esi+53h]
  00000245: 88 47 1B           mov         byte ptr [edi+1Bh],al
  00000248: 0F B6 46 54        movzx       eax,byte ptr [esi+54h]
  0000024C: 88 47 1C           mov         byte ptr [edi+1Ch],al
  0000024F: 0F B6 46 55        movzx       eax,byte ptr [esi+55h]
  00000253: 88 47 1D           mov         byte ptr [edi+1Dh],al
  00000256: 0F B6 46 56        movzx       eax,byte ptr [esi+56h]
  0000025A: 88 47 1E           mov         byte ptr [edi+1Eh],al
  0000025D: E9 3C 05 00 00     jmp         0000079E
  00000262: 53                 push        ebx
  00000263: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000268: 83 C4 04           add         esp,4
  0000026B: 5F                 pop         edi
  0000026C: 5E                 pop         esi
  0000026D: 5D                 pop         ebp
  0000026E: B8 06 00 00 00     mov         eax,6
  00000273: 5B                 pop         ebx
  00000274: 81 C4 B4 01 00 00  add         esp,1B4h
  0000027A: C2 08 00           ret         8
  0000027D: 68 34 08 00 00     push        834h
  00000282: 83 F8 06           cmp         eax,6
  00000285: 0F 85 3E 01 00 00  jne         000003C9
  0000028B: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000290: 83 C4 04           add         esp,4
  00000293: 85 C0              test        eax,eax
  00000295: 74 0C              je          000002A3
  00000297: 53                 push        ebx
  00000298: 8B C8              mov         ecx,eax
  0000029A: E8 00 00 00 00     call        ??0TFtEE2232H@@QAE@PAUft_private_vars@@@Z
  0000029F: 8B D8              mov         ebx,eax
  000002A1: EB 02              jmp         000002A5
  000002A3: 33 DB              xor         ebx,ebx
  000002A5: 85 DB              test        ebx,ebx
  000002A7: 0F 84 75 04 00 00  je          00000722
  000002AD: 6A 24              push        24h
  000002AF: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  000002B5: 8B F8              mov         edi,eax
  000002B7: 83 C4 04           add         esp,4
  000002BA: 85 FF              test        edi,edi
  000002BC: 0F 84 57 04 00 00  je          00000719
  000002C2: 39 2E              cmp         dword ptr [esi],ebp
  000002C4: 75 06              jne         000002CC
  000002C6: 83 7E 04 FF        cmp         dword ptr [esi+4],0FFFFFFFFh
  000002CA: 74 3E              je          0000030A
  000002CC: 68 A0 00 00 00     push        0A0h
  000002D1: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  000002D7: 8B E8              mov         ebp,eax
  000002D9: 83 C4 04           add         esp,4
  000002DC: 85 ED              test        ebp,ebp
  000002DE: 0F 84 35 04 00 00  je          00000719
  000002E4: 6A 62              push        62h
  000002E6: 8D 45 0C           lea         eax,[ebp+0Ch]
  000002E9: C7 45 00 00 00 00  mov         dword ptr [ebp],0
            00
  000002F0: 56                 push        esi
  000002F1: 50                 push        eax
  000002F2: C7 45 04 FF FF FF  mov         dword ptr [ebp+4],0FFFFFFFFh
            FF
  000002F9: C7 45 08 03 00 00  mov         dword ptr [ebp+8],3
            00
  00000300: E8 00 00 00 00     call        _memcpy
  00000305: 83 C4 0C           add         esp,0Ch
  00000308: 8B F5              mov         esi,ebp
  0000030A: 8B 46 10           mov         eax,dword ptr [esi+10h]
  0000030D: 8B CB              mov         ecx,ebx
  0000030F: 89 07              mov         dword ptr [edi],eax
  00000311: 8B 46 18           mov         eax,dword ptr [esi+18h]
  00000314: 89 47 04           mov         dword ptr [edi+4],eax
  00000317: C7 47 08 00 00 00  mov         dword ptr [edi+8],offset ??_C@_00CNPNBAHC@?$AA@
            00
  0000031E: 0F B6 46 57        movzx       eax,byte ptr [esi+57h]
  00000322: 88 47 0C           mov         byte ptr [edi+0Ch],al
  00000325: 0F B6 46 58        movzx       eax,byte ptr [esi+58h]
  00000329: 88 47 0D           mov         byte ptr [edi+0Dh],al
  0000032C: 0F B6 46 59        movzx       eax,byte ptr [esi+59h]
  00000330: 88 47 0E           mov         byte ptr [edi+0Eh],al
  00000333: 0F B6 46 5A        movzx       eax,byte ptr [esi+5Ah]
  00000337: 88 47 0F           mov         byte ptr [edi+0Fh],al
  0000033A: 0F B6 46 5B        movzx       eax,byte ptr [esi+5Bh]
  0000033E: 88 47 10           mov         byte ptr [edi+10h],al
  00000341: 0F B6 46 5C        movzx       eax,byte ptr [esi+5Ch]
  00000345: 88 47 11           mov         byte ptr [edi+11h],al
  00000348: 0F B6 46 5D        movzx       eax,byte ptr [esi+5Dh]
  0000034C: 88 47 12           mov         byte ptr [edi+12h],al
  0000034F: 0F B6 46 5E        movzx       eax,byte ptr [esi+5Eh]
  00000353: 88 47 13           mov         byte ptr [edi+13h],al
  00000356: 0F B6 46 5F        movzx       eax,byte ptr [esi+5Fh]
  0000035A: 88 47 14           mov         byte ptr [edi+14h],al
  0000035D: 0F B6 46 60        movzx       eax,byte ptr [esi+60h]
  00000361: 88 47 15           mov         byte ptr [edi+15h],al
  00000364: 0F B6 46 61        movzx       eax,byte ptr [esi+61h]
  00000368: 88 47 16           mov         byte ptr [edi+16h],al
  0000036B: 0F B6 46 62        movzx       eax,byte ptr [esi+62h]
  0000036F: 88 47 17           mov         byte ptr [edi+17h],al
  00000372: 0F B6 46 63        movzx       eax,byte ptr [esi+63h]
  00000376: 88 47 18           mov         byte ptr [edi+18h],al
  00000379: 0F B6 46 64        movzx       eax,byte ptr [esi+64h]
  0000037D: 88 47 19           mov         byte ptr [edi+19h],al
  00000380: 0F B6 46 65        movzx       eax,byte ptr [esi+65h]
  00000384: 88 47 1A           mov         byte ptr [edi+1Ah],al
  00000387: 0F B6 46 66        movzx       eax,byte ptr [esi+66h]
  0000038B: 88 47 1B           mov         byte ptr [edi+1Bh],al
  0000038E: 0F B6 46 67        movzx       eax,byte ptr [esi+67h]
  00000392: 88 47 1C           mov         byte ptr [edi+1Ch],al
  00000395: 0F B6 46 68        movzx       eax,byte ptr [esi+68h]
  00000399: 88 47 1D           mov         byte ptr [edi+1Dh],al
  0000039C: 0F B6 46 69        movzx       eax,byte ptr [esi+69h]
  000003A0: 88 47 1E           mov         byte ptr [edi+1Eh],al
  000003A3: 0F B6 46 6A        movzx       eax,byte ptr [esi+6Ah]
  000003A7: 88 47 1F           mov         byte ptr [edi+1Fh],al
  000003AA: 0F B6 46 6B        movzx       eax,byte ptr [esi+6Bh]
  000003AE: 88 47 20           mov         byte ptr [edi+20h],al
  000003B1: 0F B6 46 6C        movzx       eax,byte ptr [esi+6Ch]
  000003B5: 88 47 21           mov         byte ptr [edi+21h],al
  000003B8: 0F B6 46 6D        movzx       eax,byte ptr [esi+6Dh]
  000003BC: 88 47 22           mov         byte ptr [edi+22h],al
  000003BF: 8B 03              mov         eax,dword ptr [ebx]
  000003C1: FF 50 20           call        dword ptr [eax+20h]
  000003C4: E9 D5 03 00 00     jmp         0000079E
  000003C9: 83 F8 07           cmp         eax,7
  000003CC: 0F 85 43 01 00 00  jne         00000515
  000003D2: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000003D7: 83 C4 04           add         esp,4
  000003DA: 85 C0              test        eax,eax
  000003DC: 74 0C              je          000003EA
  000003DE: 53                 push        ebx
  000003DF: 8B C8              mov         ecx,eax
  000003E1: E8 00 00 00 00     call        ??0TFtEE4232H@@QAE@PAUft_private_vars@@@Z
  000003E6: 8B D8              mov         ebx,eax
  000003E8: EB 02              jmp         000003EC
  000003EA: 33 DB              xor         ebx,ebx
  000003EC: 85 DB              test        ebx,ebx
  000003EE: 0F 84 2E 03 00 00  je          00000722
  000003F4: 6A 24              push        24h
  000003F6: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  000003FC: 8B F8              mov         edi,eax
  000003FE: 83 C4 04           add         esp,4
  00000401: 85 FF              test        edi,edi
  00000403: 0F 84 10 03 00 00  je          00000719
  00000409: 39 2E              cmp         dword ptr [esi],ebp
  0000040B: 75 06              jne         00000413
  0000040D: 83 7E 04 FF        cmp         dword ptr [esi+4],0FFFFFFFFh
  00000411: 74 3E              je          00000451
  00000413: 68 A0 00 00 00     push        0A0h
  00000418: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  0000041E: 8B E8              mov         ebp,eax
  00000420: 83 C4 04           add         esp,4
  00000423: 85 ED              test        ebp,ebp
  00000425: 0F 84 EE 02 00 00  je          00000719
  0000042B: 6A 78              push        78h
  0000042D: 8D 45 0C           lea         eax,[ebp+0Ch]
  00000430: C7 45 00 00 00 00  mov         dword ptr [ebp],0
            00
  00000437: 56                 push        esi
  00000438: 50                 push        eax
  00000439: C7 45 04 FF FF FF  mov         dword ptr [ebp+4],0FFFFFFFFh
            FF
  00000440: C7 45 08 04 00 00  mov         dword ptr [ebp+8],4
            00
  00000447: E8 00 00 00 00     call        _memcpy
  0000044C: 83 C4 0C           add         esp,0Ch
  0000044F: 8B F5              mov         esi,ebp
  00000451: 8B 46 10           mov         eax,dword ptr [esi+10h]
  00000454: 8B CB              mov         ecx,ebx
  00000456: 89 07              mov         dword ptr [edi],eax
  00000458: 8B 46 18           mov         eax,dword ptr [esi+18h]
  0000045B: 89 47 04           mov         dword ptr [edi+4],eax
  0000045E: C7 47 08 00 00 00  mov         dword ptr [edi+8],offset ??_C@_00CNPNBAHC@?$AA@
            00
  00000465: 0F B6 46 6E        movzx       eax,byte ptr [esi+6Eh]
  00000469: 88 47 0C           mov         byte ptr [edi+0Ch],al
  0000046C: 0F B6 46 6F        movzx       eax,byte ptr [esi+6Fh]
  00000470: 88 47 0D           mov         byte ptr [edi+0Dh],al
  00000473: 0F B6 46 70        movzx       eax,byte ptr [esi+70h]
  00000477: 88 47 0E           mov         byte ptr [edi+0Eh],al
  0000047A: 0F B6 46 71        movzx       eax,byte ptr [esi+71h]
  0000047E: 88 47 0F           mov         byte ptr [edi+0Fh],al
  00000481: 0F B6 46 72        movzx       eax,byte ptr [esi+72h]
  00000485: 88 47 10           mov         byte ptr [edi+10h],al
  00000488: 0F B6 46 73        movzx       eax,byte ptr [esi+73h]
  0000048C: 88 47 11           mov         byte ptr [edi+11h],al
  0000048F: 0F B6 46 74        movzx       eax,byte ptr [esi+74h]
  00000493: 88 47 12           mov         byte ptr [edi+12h],al
  00000496: 0F B6 46 75        movzx       eax,byte ptr [esi+75h]
  0000049A: 88 47 13           mov         byte ptr [edi+13h],al
  0000049D: 0F B6 46 76        movzx       eax,byte ptr [esi+76h]
  000004A1: 88 47 14           mov         byte ptr [edi+14h],al
  000004A4: 0F B6 46 77        movzx       eax,byte ptr [esi+77h]
  000004A8: 88 47 15           mov         byte ptr [edi+15h],al
  000004AB: 0F B6 46 78        movzx       eax,byte ptr [esi+78h]
  000004AF: 88 47 16           mov         byte ptr [edi+16h],al
  000004B2: 0F B6 46 79        movzx       eax,byte ptr [esi+79h]
  000004B6: 88 47 17           mov         byte ptr [edi+17h],al
  000004B9: 0F B6 46 7A        movzx       eax,byte ptr [esi+7Ah]
  000004BD: 88 47 18           mov         byte ptr [edi+18h],al
  000004C0: 0F B6 46 7B        movzx       eax,byte ptr [esi+7Bh]
  000004C4: 88 47 19           mov         byte ptr [edi+19h],al
  000004C7: 0F B6 46 7C        movzx       eax,byte ptr [esi+7Ch]
  000004CB: 88 47 1A           mov         byte ptr [edi+1Ah],al
  000004CE: 0F B6 46 7D        movzx       eax,byte ptr [esi+7Dh]
  000004D2: 88 47 1B           mov         byte ptr [edi+1Bh],al
  000004D5: 0F B6 46 7E        movzx       eax,byte ptr [esi+7Eh]
  000004D9: 88 47 1C           mov         byte ptr [edi+1Ch],al
  000004DC: 0F B6 46 7F        movzx       eax,byte ptr [esi+7Fh]
  000004E0: 88 47 1D           mov         byte ptr [edi+1Dh],al
  000004E3: 0F B6 86 80 00 00  movzx       eax,byte ptr [esi+80h]
            00
  000004EA: 88 47 1E           mov         byte ptr [edi+1Eh],al
  000004ED: 0F B6 86 81 00 00  movzx       eax,byte ptr [esi+81h]
            00
  000004F4: 88 47 1F           mov         byte ptr [edi+1Fh],al
  000004F7: 0F B6 86 82 00 00  movzx       eax,byte ptr [esi+82h]
            00
  000004FE: 88 47 20           mov         byte ptr [edi+20h],al
  00000501: 0F B6 86 83 00 00  movzx       eax,byte ptr [esi+83h]
            00
  00000508: 88 47 21           mov         byte ptr [edi+21h],al
  0000050B: 8B 03              mov         eax,dword ptr [ebx]
  0000050D: FF 50 20           call        dword ptr [eax+20h]
  00000510: E9 89 02 00 00     jmp         0000079E
  00000515: 83 F8 08           cmp         eax,8
  00000518: 0F 85 AE 01 00 00  jne         000006CC
  0000051E: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000523: 83 C4 04           add         esp,4
  00000526: 85 C0              test        eax,eax
  00000528: 74 0C              je          00000536
  0000052A: 53                 push        ebx
  0000052B: 8B C8              mov         ecx,eax
  0000052D: E8 00 00 00 00     call        ??0TFtEE232H@@QAE@PAUft_private_vars@@@Z
  00000532: 8B D8              mov         ebx,eax
  00000534: EB 02              jmp         00000538
  00000536: 33 DB              xor         ebx,ebx
  00000538: 85 DB              test        ebx,ebx
  0000053A: 0F 84 E2 01 00 00  je          00000722
  00000540: 6A 28              push        28h
  00000542: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  00000548: 8B F8              mov         edi,eax
  0000054A: 83 C4 04           add         esp,4
  0000054D: 85 FF              test        edi,edi
  0000054F: 0F 84 C4 01 00 00  je          00000719
  00000555: 39 2E              cmp         dword ptr [esi],ebp
  00000557: 75 06              jne         0000055F
  00000559: 83 7E 04 FF        cmp         dword ptr [esi+4],0FFFFFFFFh
  0000055D: 74 41              je          000005A0
  0000055F: 68 A0 00 00 00     push        0A0h
  00000564: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  0000056A: 8B E8              mov         ebp,eax
  0000056C: 83 C4 04           add         esp,4
  0000056F: 85 ED              test        ebp,ebp
  00000571: 0F 84 A2 01 00 00  je          00000719
  00000577: 68 93 00 00 00     push        93h
  0000057C: 8D 45 0C           lea         eax,[ebp+0Ch]
  0000057F: C7 45 00 00 00 00  mov         dword ptr [ebp],0
            00
  00000586: 56                 push        esi
  00000587: 50                 push        eax
  00000588: C7 45 04 FF FF FF  mov         dword ptr [ebp+4],0FFFFFFFFh
            FF
  0000058F: C7 45 08 05 00 00  mov         dword ptr [ebp+8],5
            00
  00000596: E8 00 00 00 00     call        _memcpy
  0000059B: 83 C4 0C           add         esp,0Ch
  0000059E: 8B F5              mov         esi,ebp
  000005A0: 8B 46 10           mov         eax,dword ptr [esi+10h]
  000005A3: 8B CB              mov         ecx,ebx
  000005A5: 89 07              mov         dword ptr [edi],eax
  000005A7: 8B 46 18           mov         eax,dword ptr [esi+18h]
  000005AA: 89 47 04           mov         dword ptr [edi+4],eax
  000005AD: C7 47 08 00 00 00  mov         dword ptr [edi+8],offset ??_C@_00CNPNBAHC@?$AA@
            00
  000005B4: 0F B6 86 84 00 00  movzx       eax,byte ptr [esi+84h]
            00
  000005BB: 88 47 0C           mov         byte ptr [edi+0Ch],al
  000005BE: 0F B6 86 85 00 00  movzx       eax,byte ptr [esi+85h]
            00
  000005C5: 88 47 0D           mov         byte ptr [edi+0Dh],al
  000005C8: 0F B6 86 86 00 00  movzx       eax,byte ptr [esi+86h]
            00
  000005CF: 88 47 0E           mov         byte ptr [edi+0Eh],al
  000005D2: 0F B6 86 87 00 00  movzx       eax,byte ptr [esi+87h]
            00
  000005D9: 88 47 0F           mov         byte ptr [edi+0Fh],al
  000005DC: 0F B6 86 88 00 00  movzx       eax,byte ptr [esi+88h]
            00
  000005E3: 88 47 10           mov         byte ptr [edi+10h],al
  000005E6: 0F B6 86 89 00 00  movzx       eax,byte ptr [esi+89h]
            00
  000005ED: 88 47 11           mov         byte ptr [edi+11h],al
  000005F0: 0F B6 86 8A 00 00  movzx       eax,byte ptr [esi+8Ah]
            00
  000005F7: 88 47 12           mov         byte ptr [edi+12h],al
  000005FA: 0F B6 86 8B 00 00  movzx       eax,byte ptr [esi+8Bh]
            00
  00000601: 88 47 13           mov         byte ptr [edi+13h],al
  00000604: 0F B6 86 8C 00 00  movzx       eax,byte ptr [esi+8Ch]
            00
  0000060B: 88 47 14           mov         byte ptr [edi+14h],al
  0000060E: 0F B6 86 8D 00 00  movzx       eax,byte ptr [esi+8Dh]
            00
  00000615: 88 47 15           mov         byte ptr [edi+15h],al
  00000618: 0F B6 86 8E 00 00  movzx       eax,byte ptr [esi+8Eh]
            00
  0000061F: 88 47 16           mov         byte ptr [edi+16h],al
  00000622: 0F B6 86 8F 00 00  movzx       eax,byte ptr [esi+8Fh]
            00
  00000629: 88 47 17           mov         byte ptr [edi+17h],al
  0000062C: 0F B6 86 90 00 00  movzx       eax,byte ptr [esi+90h]
            00
  00000633: 88 47 18           mov         byte ptr [edi+18h],al
  00000636: 0F B6 86 91 00 00  movzx       eax,byte ptr [esi+91h]
            00
  0000063D: 88 47 19           mov         byte ptr [edi+19h],al
  00000640: 0F B6 86 92 00 00  movzx       eax,byte ptr [esi+92h]
            00
  00000647: 88 47 1A           mov         byte ptr [edi+1Ah],al
  0000064A: 0F B6 86 93 00 00  movzx       eax,byte ptr [esi+93h]
            00
  00000651: 88 47 1B           mov         byte ptr [edi+1Bh],al
  00000654: 0F B6 86 94 00 00  movzx       eax,byte ptr [esi+94h]
            00
  0000065B: 88 47 1C           mov         byte ptr [edi+1Ch],al
  0000065E: 0F B6 86 95 00 00  movzx       eax,byte ptr [esi+95h]
            00
  00000665: 88 47 1D           mov         byte ptr [edi+1Dh],al
  00000668: 0F B6 86 96 00 00  movzx       eax,byte ptr [esi+96h]
            00
  0000066F: 88 47 1E           mov         byte ptr [edi+1Eh],al
  00000672: 0F B6 86 97 00 00  movzx       eax,byte ptr [esi+97h]
            00
  00000679: 88 47 1F           mov         byte ptr [edi+1Fh],al
  0000067C: 0F B6 86 98 00 00  movzx       eax,byte ptr [esi+98h]
            00
  00000683: 88 47 20           mov         byte ptr [edi+20h],al
  00000686: 0F B6 86 99 00 00  movzx       eax,byte ptr [esi+99h]
            00
  0000068D: 88 47 21           mov         byte ptr [edi+21h],al
  00000690: 0F B6 86 9A 00 00  movzx       eax,byte ptr [esi+9Ah]
            00
  00000697: 88 47 22           mov         byte ptr [edi+22h],al
  0000069A: 0F B6 86 9B 00 00  movzx       eax,byte ptr [esi+9Bh]
            00
  000006A1: 88 47 23           mov         byte ptr [edi+23h],al
  000006A4: 0F B6 86 9C 00 00  movzx       eax,byte ptr [esi+9Ch]
            00
  000006AB: 88 47 24           mov         byte ptr [edi+24h],al
  000006AE: 0F B6 86 9D 00 00  movzx       eax,byte ptr [esi+9Dh]
            00
  000006B5: 88 47 25           mov         byte ptr [edi+25h],al
  000006B8: 0F B6 86 9E 00 00  movzx       eax,byte ptr [esi+9Eh]
            00
  000006BF: 88 47 26           mov         byte ptr [edi+26h],al
  000006C2: 8B 03              mov         eax,dword ptr [ebx]
  000006C4: FF 50 20           call        dword ptr [eax+20h]
  000006C7: E9 D2 00 00 00     jmp         0000079E
  000006CC: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000006D1: 83 C4 04           add         esp,4
  000006D4: 85 C0              test        eax,eax
  000006D6: 74 0C              je          000006E4
  000006D8: 53                 push        ebx
  000006D9: 8B C8              mov         ecx,eax
  000006DB: E8 00 00 00 00     call        ??0TFtEE232@@QAE@PAUft_private_vars@@@Z
  000006E0: 8B D8              mov         ebx,eax
  000006E2: EB 02              jmp         000006E6
  000006E4: 33 DB              xor         ebx,ebx
  000006E6: 85 DB              test        ebx,ebx
  000006E8: 74 38              je          00000722
  000006EA: 6A 14              push        14h
  000006EC: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  000006F2: 8B F8              mov         edi,eax
  000006F4: 83 C4 04           add         esp,4
  000006F7: 85 FF              test        edi,edi
  000006F9: 74 1E              je          00000719
  000006FB: 39 2E              cmp         dword ptr [esi],ebp
  000006FD: 75 06              jne         00000705
  000006FF: 83 7E 04 FF        cmp         dword ptr [esi+4],0FFFFFFFFh
  00000703: 74 55              je          0000075A
  00000705: 68 A0 00 00 00     push        0A0h
  0000070A: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  00000710: 8B E8              mov         ebp,eax
  00000712: 83 C4 04           add         esp,4
  00000715: 85 ED              test        ebp,ebp
  00000717: 75 1B              jne         00000734
  00000719: 53                 push        ebx
  0000071A: E8 00 00 00 00     call        ??3@YAXPAX@Z
  0000071F: 83 C4 04           add         esp,4
  00000722: 5F                 pop         edi
  00000723: 5E                 pop         esi
  00000724: 5D                 pop         ebp
  00000725: B8 05 00 00 00     mov         eax,5
  0000072A: 5B                 pop         ebx
  0000072B: 81 C4 B4 01 00 00  add         esp,1B4h
  00000731: C2 08 00           ret         8
  00000734: 6A 24              push        24h
  00000736: 8D 45 0C           lea         eax,[ebp+0Ch]
  00000739: C7 45 00 00 00 00  mov         dword ptr [ebp],0
            00
  00000740: 56                 push        esi
  00000741: 50                 push        eax
  00000742: C7 45 04 FF FF FF  mov         dword ptr [ebp+4],0FFFFFFFFh
            FF
  00000749: C7 45 08 00 00 00  mov         dword ptr [ebp+8],0
            00
  00000750: E8 00 00 00 00     call        _memcpy
  00000755: 83 C4 0C           add         esp,0Ch
  00000758: 8B F5              mov         esi,ebp
  0000075A: 8B 46 10           mov         eax,dword ptr [esi+10h]
  0000075D: 89 07              mov         dword ptr [edi],eax
  0000075F: 8B 46 18           mov         eax,dword ptr [esi+18h]
  00000762: 89 47 04           mov         dword ptr [edi+4],eax
  00000765: C7 47 08 00 00 00  mov         dword ptr [edi+8],offset ??_C@_00CNPNBAHC@?$AA@
            00
  0000076C: 0F B6 46 28        movzx       eax,byte ptr [esi+28h]
  00000770: 88 47 0C           mov         byte ptr [edi+0Ch],al
  00000773: 0F B6 46 29        movzx       eax,byte ptr [esi+29h]
  00000777: 88 47 0D           mov         byte ptr [edi+0Dh],al
  0000077A: 0F B6 46 2A        movzx       eax,byte ptr [esi+2Ah]
  0000077E: 88 47 0E           mov         byte ptr [edi+0Eh],al
  00000781: 0F B6 46 2B        movzx       eax,byte ptr [esi+2Bh]
  00000785: 88 47 0F           mov         byte ptr [edi+0Fh],al
  00000788: 0F B6 46 2C        movzx       eax,byte ptr [esi+2Ch]
  0000078C: 88 47 10           mov         byte ptr [edi+10h],al
  0000078F: 0F B6 46 2D        movzx       eax,byte ptr [esi+2Dh]
  00000793: 88 47 11           mov         byte ptr [edi+11h],al
  00000796: 66 8B 46 2E        mov         ax,word ptr [esi+2Eh]
  0000079A: 66 89 47 12        mov         word ptr [edi+12h],ax
  0000079E: 8B 03              mov         eax,dword ptr [ebx]
  000007A0: 8B CB              mov         ecx,ebx
  000007A2: 57                 push        edi
  000007A3: FF 50 18           call        dword ptr [eax+18h]
  000007A6: 57                 push        edi
  000007A7: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  000007AD: 0F B7 46 0E        movzx       eax,word ptr [esi+0Eh]
  000007B1: 83 C4 04           add         esp,4
  000007B4: 25 03 00 00 80     and         eax,80000003h
  000007B9: 79 05              jns         000007C0
  000007BB: 48                 dec         eax
  000007BC: 83 C8 FC           or          eax,0FFFFFFFCh
  000007BF: 40                 inc         eax
  000007C0: 50                 push        eax
  000007C1: FF 76 14           push        dword ptr [esi+14h]
  000007C4: 8D 4C 24 34        lea         ecx,[esp+34h]
  000007C8: E8 00 00 00 00     call        ??0TSerialNumber@@QAE@PADG@Z
  000007CD: 8D 44 24 14        lea         eax,[esp+14h]
  000007D1: 50                 push        eax
  000007D2: 8D 44 24 48        lea         eax,[esp+48h]
  000007D6: 50                 push        eax
  000007D7: 8D 4C 24 34        lea         ecx,[esp+34h]
  000007DB: E8 00 00 00 00     call        ?Get@TSerialNumber@@QAEHPADPAH@Z
  000007E0: 8B 56 1C           mov         edx,dword ptr [esi+1Ch]
  000007E3: 85 D2              test        edx,edx
  000007E5: 74 3D              je          00000824
  000007E7: 8B CA              mov         ecx,edx
  000007E9: 8D 79 01           lea         edi,[ecx+1]
  000007EC: 8D 64 24 00        lea         esp,[esp]
  000007F0: 8A 01              mov         al,byte ptr [ecx]
  000007F2: 41                 inc         ecx
  000007F3: 84 C0              test        al,al
  000007F5: 75 F9              jne         000007F0
  000007F7: 2B CF              sub         ecx,edi
  000007F9: 74 29              je          00000824
  000007FB: 8D 4C 24 44        lea         ecx,[esp+44h]
  000007FF: 90                 nop
  00000800: 8A 02              mov         al,byte ptr [edx]
  00000802: 8D 52 01           lea         edx,[edx+1]
  00000805: 88 01              mov         byte ptr [ecx],al
  00000807: 8D 49 01           lea         ecx,[ecx+1]
  0000080A: 84 C0              test        al,al
  0000080C: 75 F2              jne         00000800
  0000080E: 8D 4C 24 44        lea         ecx,[esp+44h]
  00000812: 8D 51 01           lea         edx,[ecx+1]
  00000815: 8A 01              mov         al,byte ptr [ecx]
  00000817: 41                 inc         ecx
  00000818: 84 C0              test        al,al
  0000081A: 75 F9              jne         00000815
  0000081C: 2B CA              sub         ecx,edx
  0000081E: 89 4C 24 14        mov         dword ptr [esp+14h],ecx
  00000822: EB 04              jmp         00000828
  00000824: 8B 4C 24 14        mov         ecx,dword ptr [esp+14h]
  00000828: 33 D2              xor         edx,edx
  0000082A: 85 C9              test        ecx,ecx
  0000082C: 7E 15              jle         00000843
  0000082E: 8B FF              mov         edi,edi
  00000830: 66 0F BE 44 14 44  movsx       ax,byte ptr [esp+edx+44h]
  00000836: 66 89 84 54 C6 00  mov         word ptr [esp+edx*2+0C6h],ax
            00 00
  0000083E: 42                 inc         edx
  0000083F: 3B D1              cmp         edx,ecx
  00000841: 7C ED              jl          00000830
  00000843: 8D 04 4D 02 03 00  lea         eax,[ecx*2+302h]
            00
  0000084A: 8B CB              mov         ecx,ebx
  0000084C: 66 89 84 24 C4 00  mov         word ptr [esp+0C4h],ax
            00 00
  00000854: 8D 84 24 C4 00 00  lea         eax,[esp+0C4h]
            00
  0000085B: 50                 push        eax
  0000085C: E8 00 00 00 00     call        ?AddSerialStringDescriptor@TFtE2Data@@QAEXPAE@Z
  00000861: B8 02 03 00 00     mov         eax,302h
  00000866: C7 44 24 14 00 00  mov         dword ptr [esp+14h],0
            00 00
  0000086E: 66 89 84 24 C4 00  mov         word ptr [esp+0C4h],ax
            00 00
  00000876: 8B CB              mov         ecx,ebx
  00000878: 8D 84 24 C4 00 00  lea         eax,[esp+0C4h]
            00
  0000087F: 50                 push        eax
  00000880: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QAEHPAE@Z
  00000885: 85 C0              test        eax,eax
  00000887: 75 12              jne         0000089B
  00000889: 5F                 pop         edi
  0000088A: 5E                 pop         esi
  0000088B: 5D                 pop         ebp
  0000088C: B8 12 00 00 00     mov         eax,12h
  00000891: 5B                 pop         ebx
  00000892: 81 C4 B4 01 00 00  add         esp,1B4h
  00000898: C2 08 00           ret         8
  0000089B: 33 C0              xor         eax,eax
  0000089D: 8B CB              mov         ecx,ebx
  0000089F: 66 39 46 22        cmp         word ptr [esi+22h],ax
  000008A3: 0F 94 C0           sete        al
  000008A6: 0F B7 C0           movzx       eax,ax
  000008A9: 50                 push        eax
  000008AA: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QAEXG@Z
  000008AF: 0F B7 46 0C        movzx       eax,word ptr [esi+0Ch]
  000008B3: 66 85 C0           test        ax,ax
  000008B6: 0F 84 AF F9 FF FF  je          0000026B
  000008BC: 66 83 7E 0E 00     cmp         word ptr [esi+0Eh],0
  000008C1: 0F 84 A4 F9 FF FF  je          0000026B
  000008C7: 50                 push        eax
  000008C8: 8B CB              mov         ecx,ebx
  000008CA: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QAEXG@Z
  000008CF: 0F B7 46 0E        movzx       eax,word ptr [esi+0Eh]
  000008D3: 8B CB              mov         ecx,ebx
  000008D5: 50                 push        eax
  000008D6: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QAEXG@Z
  000008DB: 66 83 7E 24 00     cmp         word ptr [esi+24h],0
  000008E0: B0 80              mov         al,80h
  000008E2: 0F B6 C0           movzx       eax,al
  000008E5: B9 C0 00 00 00     mov         ecx,0C0h
  000008EA: 0F 45 C1           cmovne      eax,ecx
  000008ED: 66 83 7E 26 00     cmp         word ptr [esi+26h],0
  000008F2: 88 44 24 10        mov         byte ptr [esp+10h],al
  000008F6: 74 06              je          000008FE
  000008F8: 0C 20              or          al,20h
  000008FA: 88 44 24 10        mov         byte ptr [esp+10h],al
  000008FE: FF 74 24 10        push        dword ptr [esp+10h]
  00000902: 8B CB              mov         ecx,ebx
  00000904: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QAEXE@Z
  00000909: 0F B7 46 20        movzx       eax,word ptr [esi+20h]
  0000090D: B9 F4 01 00 00     mov         ecx,1F4h
  00000912: 66 3B C1           cmp         ax,cx
  00000915: 72 02              jb          00000919
  00000917: 8B C1              mov         eax,ecx
  00000919: 50                 push        eax
  0000091A: 8B CB              mov         ecx,ebx
  0000091C: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QAEXH@Z
  00000921: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000925: 8B CB              mov         ecx,ebx
  00000927: 50                 push        eax
  00000928: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QAEXPAD@Z
  0000092D: 8D 54 24 1C        lea         edx,[esp+1Ch]
  00000931: 8B F2              mov         esi,edx
  00000933: 8A 02              mov         al,byte ptr [edx]
  00000935: 42                 inc         edx
  00000936: 84 C0              test        al,al
  00000938: 75 F9              jne         00000933
  0000093A: 8D 7C 24 44        lea         edi,[esp+44h]
  0000093E: 2B D6              sub         edx,esi
  00000940: 4F                 dec         edi
  00000941: 8A 47 01           mov         al,byte ptr [edi+1]
  00000944: 47                 inc         edi
  00000945: 84 C0              test        al,al
  00000947: 75 F8              jne         00000941
  00000949: 8B CA              mov         ecx,edx
  0000094B: C1 E9 02           shr         ecx,2
  0000094E: F3 A5              rep movs    dword ptr es:[edi],dword ptr [esi]
  00000950: 8B CA              mov         ecx,edx
  00000952: 83 E1 03           and         ecx,3
  00000955: F3 A4              rep movs    byte ptr es:[edi],byte ptr [esi]
  00000957: 8B 03              mov         eax,dword ptr [ebx]
  00000959: 8B CB              mov         ecx,ebx
  0000095B: FF 50 24           call        dword ptr [eax+24h]
  0000095E: 85 ED              test        ebp,ebp
  00000960: 74 0A              je          0000096C
  00000962: 55                 push        ebp
  00000963: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  00000969: 83 C4 04           add         esp,4
  0000096C: 8B B4 24 C8 01 00  mov         esi,dword ptr [esp+1C8h]
            00
  00000973: 83 7E 18 05        cmp         dword ptr [esi+18h],5
  00000977: 75 13              jne         0000098C
  00000979: 8D 44 24 18        lea         eax,[esp+18h]
  0000097D: 50                 push        eax
  0000097E: 56                 push        esi
  0000097F: E8 00 00 00 00     call        _FT_GetLatencyTimer@8
  00000984: 6A 77              push        77h
  00000986: 56                 push        esi
  00000987: E8 00 00 00 00     call        _FT_SetLatencyTimer@8
  0000098C: 8D 4B 04           lea         ecx,[ebx+4]
  0000098F: E8 00 00 00 00     call        ?Erase@TEeData@@QAEHXZ
  00000994: 85 C0              test        eax,eax
  00000996: 75 1B              jne         000009B3
  00000998: 53                 push        ebx
  00000999: E8 00 00 00 00     call        ??3@YAXPAX@Z
  0000099E: 83 C4 04           add         esp,4
  000009A1: B8 0D 00 00 00     mov         eax,0Dh
  000009A6: 5F                 pop         edi
  000009A7: 5E                 pop         esi
  000009A8: 5D                 pop         ebp
  000009A9: 5B                 pop         ebx
  000009AA: 81 C4 B4 01 00 00  add         esp,1B4h
  000009B0: C2 08 00           ret         8
  000009B3: 8D 4B 04           lea         ecx,[ebx+4]
  000009B6: E8 00 00 00 00     call        ?Write@TEeData@@QAEHXZ
  000009BB: 85 C0              test        eax,eax
  000009BD: 74 0C              je          000009CB
  000009BF: 8D 4B 04           lea         ecx,[ebx+4]
  000009C2: E8 00 00 00 00     call        ?Confirm@TEeData@@QAEHXZ
  000009C7: 85 C0              test        eax,eax
  000009C9: 75 1B              jne         000009E6
  000009CB: 53                 push        ebx
  000009CC: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000009D1: 83 C4 04           add         esp,4
  000009D4: B8 0C 00 00 00     mov         eax,0Ch
  000009D9: 5F                 pop         edi
  000009DA: 5E                 pop         esi
  000009DB: 5D                 pop         ebp
  000009DC: 5B                 pop         ebx
  000009DD: 81 C4 B4 01 00 00  add         esp,1B4h
  000009E3: C2 08 00           ret         8
  000009E6: 83 7E 18 05        cmp         dword ptr [esi+18h],5
  000009EA: 75 0A              jne         000009F6
  000009EC: FF 74 24 18        push        dword ptr [esp+18h]
  000009F0: 56                 push        esi
  000009F1: E8 00 00 00 00     call        _FT_SetLatencyTimer@8
  000009F6: 53                 push        ebx
  000009F7: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000009FC: 83 C4 04           add         esp,4
  000009FF: 33 C0              xor         eax,eax
  00000A01: 5F                 pop         edi
  00000A02: 5E                 pop         esi
  00000A03: 5D                 pop         ebp
  00000A04: 5B                 pop         ebx
  00000A05: 81 C4 B4 01 00 00  add         esp,1B4h
  00000A0B: C2 08 00           ret         8

_FT_EE_ProgramEx@24:
  00000000: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000004: 85 C9              test        ecx,ecx
  00000006: 75 08              jne         00000010
  00000008: B8 10 00 00 00     mov         eax,10h
  0000000D: C2 18 00           ret         18h
  00000010: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  00000014: 89 41 10           mov         dword ptr [ecx+10h],eax
  00000017: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  0000001B: 89 41 14           mov         dword ptr [ecx+14h],eax
  0000001E: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000022: 51                 push        ecx
  00000023: FF 74 24 08        push        dword ptr [esp+8]
  00000027: 89 41 18           mov         dword ptr [ecx+18h],eax
  0000002A: 8B 44 24 20        mov         eax,dword ptr [esp+20h]
  0000002E: 89 41 1C           mov         dword ptr [ecx+1Ch],eax
  00000031: E8 00 00 00 00     call        _FT_EE_Program@8
  00000036: C2 18 00           ret         18h

_FT_EE_Read@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 56                 push        esi
  00000006: 57                 push        edi
  00000007: 33 FF              xor         edi,edi
  00000009: 85 C0              test        eax,eax
  0000000B: 74 0E              je          0000001B
  0000000D: 8B 74 24 0C        mov         esi,dword ptr [esp+0Ch]
  00000011: 3B C6              cmp         eax,esi
  00000013: 74 10              je          00000025
  00000015: 8B 00              mov         eax,dword ptr [eax]
  00000017: 85 C0              test        eax,eax
  00000019: 75 F6              jne         00000011
  0000001B: 5F                 pop         edi
  0000001C: B8 01 00 00 00     mov         eax,1
  00000021: 5E                 pop         esi
  00000022: C2 08 00           ret         8
  00000025: 55                 push        ebp
  00000026: 8B 6C 24 14        mov         ebp,dword ptr [esp+14h]
  0000002A: 39 7D 00           cmp         dword ptr [ebp],edi
  0000002D: 75 06              jne         00000035
  0000002F: 83 7D 04 FF        cmp         dword ptr [ebp+4],0FFFFFFFFh
  00000033: 74 42              je          00000077
  00000035: 68 A0 00 00 00     push        0A0h
  0000003A: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  00000040: 8B F8              mov         edi,eax
  00000042: 83 C4 04           add         esp,4
  00000045: 85 FF              test        edi,edi
  00000047: 75 09              jne         00000052
  00000049: 5D                 pop         ebp
  0000004A: 8D 47 05           lea         eax,[edi+5]
  0000004D: 5F                 pop         edi
  0000004E: 5E                 pop         esi
  0000004F: C2 08 00           ret         8
  00000052: C7 07 00 00 00 00  mov         dword ptr [edi],0
  00000058: C7 47 04 FF FF FF  mov         dword ptr [edi+4],0FFFFFFFFh
            FF
  0000005F: 8B 45 04           mov         eax,dword ptr [ebp+4]
  00000062: 89 47 10           mov         dword ptr [edi+10h],eax
  00000065: 8B 45 08           mov         eax,dword ptr [ebp+8]
  00000068: 89 47 14           mov         dword ptr [edi+14h],eax
  0000006B: 8B 45 0C           mov         eax,dword ptr [ebp+0Ch]
  0000006E: 89 47 18           mov         dword ptr [edi+18h],eax
  00000071: 8B 45 10           mov         eax,dword ptr [ebp+10h]
  00000074: 89 47 1C           mov         dword ptr [edi+1Ch],eax
  00000077: 8B 46 18           mov         eax,dword ptr [esi+18h]
  0000007A: 53                 push        ebx
  0000007B: 83 F8 04           cmp         eax,4
  0000007E: 75 5C              jne         000000DC
  00000080: 68 34 08 00 00     push        834h
  00000085: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000008A: 83 C4 04           add         esp,4
  0000008D: 85 C0              test        eax,eax
  0000008F: 74 0C              je          0000009D
  00000091: 56                 push        esi
  00000092: 8B C8              mov         ecx,eax
  00000094: E8 00 00 00 00     call        ??0TFtEE2232@@QAE@PAUft_private_vars@@@Z
  00000099: 8B F0              mov         esi,eax
  0000009B: EB 02              jmp         0000009F
  0000009D: 33 F6              xor         esi,esi
  0000009F: 85 F6              test        esi,esi
  000000A1: 75 08              jne         000000AB
  000000A3: 8D 5E 05           lea         ebx,[esi+5]
  000000A6: E9 D6 01 00 00     jmp         00000281
  000000AB: 8B CE              mov         ecx,esi
  000000AD: 85 FF              test        edi,edi
  000000AF: 75 0D              jne         000000BE
  000000B1: 8B 06              mov         eax,dword ptr [esi]
  000000B3: 55                 push        ebp
  000000B4: FF 50 1C           call        dword ptr [eax+1Ch]
  000000B7: 8B D8              mov         ebx,eax
  000000B9: E9 D1 01 00 00     jmp         0000028F
  000000BE: C7 47 08 01 00 00  mov         dword ptr [edi+8],1
            00
  000000C5: 8B 06              mov         eax,dword ptr [esi]
  000000C7: 57                 push        edi
  000000C8: FF 50 1C           call        dword ptr [eax+1Ch]
  000000CB: 8B D8              mov         ebx,eax
  000000CD: 85 DB              test        ebx,ebx
  000000CF: 0F 85 AC 01 00 00  jne         00000281
  000000D5: 6A 38              push        38h
  000000D7: E9 98 01 00 00     jmp         00000274
  000000DC: 83 F8 05           cmp         eax,5
  000000DF: 75 3C              jne         0000011D
  000000E1: 68 38 08 00 00     push        838h
  000000E6: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000EB: 83 C4 04           add         esp,4
  000000EE: 85 C0              test        eax,eax
  000000F0: 74 0C              je          000000FE
  000000F2: 56                 push        esi
  000000F3: 8B C8              mov         ecx,eax
  000000F5: E8 00 00 00 00     call        ??0TFtEE232R@@QAE@PAUft_private_vars@@@Z
  000000FA: 8B F0              mov         esi,eax
  000000FC: EB 02              jmp         00000100
  000000FE: 33 F6              xor         esi,esi
  00000100: 85 F6              test        esi,esi
  00000102: 75 0A              jne         0000010E
  00000104: 5B                 pop         ebx
  00000105: 5D                 pop         ebp
  00000106: 5F                 pop         edi
  00000107: 8D 46 05           lea         eax,[esi+5]
  0000010A: 5E                 pop         esi
  0000010B: C2 08 00           ret         8
  0000010E: 8B 06              mov         eax,dword ptr [esi]
  00000110: 8B CE              mov         ecx,esi
  00000112: 55                 push        ebp
  00000113: FF 50 1C           call        dword ptr [eax+1Ch]
  00000116: 8B D8              mov         ebx,eax
  00000118: E9 64 01 00 00     jmp         00000281
  0000011D: 68 34 08 00 00     push        834h
  00000122: 83 F8 06           cmp         eax,6
  00000125: 75 57              jne         0000017E
  00000127: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000012C: 83 C4 04           add         esp,4
  0000012F: 85 C0              test        eax,eax
  00000131: 74 0C              je          0000013F
  00000133: 56                 push        esi
  00000134: 8B C8              mov         ecx,eax
  00000136: E8 00 00 00 00     call        ??0TFtEE2232H@@QAE@PAUft_private_vars@@@Z
  0000013B: 8B F0              mov         esi,eax
  0000013D: EB 02              jmp         00000141
  0000013F: 33 F6              xor         esi,esi
  00000141: 85 F6              test        esi,esi
  00000143: 75 08              jne         0000014D
  00000145: 8D 5E 05           lea         ebx,[esi+5]
  00000148: E9 34 01 00 00     jmp         00000281
  0000014D: 8B CE              mov         ecx,esi
  0000014F: 85 FF              test        edi,edi
  00000151: 75 0D              jne         00000160
  00000153: 8B 06              mov         eax,dword ptr [esi]
  00000155: 55                 push        ebp
  00000156: FF 50 1C           call        dword ptr [eax+1Ch]
  00000159: 8B D8              mov         ebx,eax
  0000015B: E9 2F 01 00 00     jmp         0000028F
  00000160: C7 47 08 03 00 00  mov         dword ptr [edi+8],3
            00
  00000167: 8B 06              mov         eax,dword ptr [esi]
  00000169: 57                 push        edi
  0000016A: FF 50 1C           call        dword ptr [eax+1Ch]
  0000016D: 8B D8              mov         ebx,eax
  0000016F: 85 DB              test        ebx,ebx
  00000171: 0F 85 0A 01 00 00  jne         00000281
  00000177: 6A 62              push        62h
  00000179: E9 F6 00 00 00     jmp         00000274
  0000017E: 83 F8 07           cmp         eax,7
  00000181: 75 57              jne         000001DA
  00000183: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000188: 83 C4 04           add         esp,4
  0000018B: 85 C0              test        eax,eax
  0000018D: 74 0C              je          0000019B
  0000018F: 56                 push        esi
  00000190: 8B C8              mov         ecx,eax
  00000192: E8 00 00 00 00     call        ??0TFtEE4232H@@QAE@PAUft_private_vars@@@Z
  00000197: 8B F0              mov         esi,eax
  00000199: EB 02              jmp         0000019D
  0000019B: 33 F6              xor         esi,esi
  0000019D: 85 F6              test        esi,esi
  0000019F: 75 08              jne         000001A9
  000001A1: 8D 5E 05           lea         ebx,[esi+5]
  000001A4: E9 D8 00 00 00     jmp         00000281
  000001A9: 8B CE              mov         ecx,esi
  000001AB: 85 FF              test        edi,edi
  000001AD: 75 0D              jne         000001BC
  000001AF: 8B 06              mov         eax,dword ptr [esi]
  000001B1: 55                 push        ebp
  000001B2: FF 50 1C           call        dword ptr [eax+1Ch]
  000001B5: 8B D8              mov         ebx,eax
  000001B7: E9 D3 00 00 00     jmp         0000028F
  000001BC: C7 47 08 04 00 00  mov         dword ptr [edi+8],4
            00
  000001C3: 8B 06              mov         eax,dword ptr [esi]
  000001C5: 57                 push        edi
  000001C6: FF 50 1C           call        dword ptr [eax+1Ch]
  000001C9: 8B D8              mov         ebx,eax
  000001CB: 85 DB              test        ebx,ebx
  000001CD: 0F 85 AE 00 00 00  jne         00000281
  000001D3: 6A 78              push        78h
  000001D5: E9 9A 00 00 00     jmp         00000274
  000001DA: 83 F8 08           cmp         eax,8
  000001DD: 75 4D              jne         0000022C
  000001DF: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000001E4: 83 C4 04           add         esp,4
  000001E7: 85 C0              test        eax,eax
  000001E9: 74 0C              je          000001F7
  000001EB: 56                 push        esi
  000001EC: 8B C8              mov         ecx,eax
  000001EE: E8 00 00 00 00     call        ??0TFtEE232H@@QAE@PAUft_private_vars@@@Z
  000001F3: 8B F0              mov         esi,eax
  000001F5: EB 02              jmp         000001F9
  000001F7: 33 F6              xor         esi,esi
  000001F9: 85 F6              test        esi,esi
  000001FB: 75 05              jne         00000202
  000001FD: 8D 5E 05           lea         ebx,[esi+5]
  00000200: EB 7F              jmp         00000281
  00000202: 8B CE              mov         ecx,esi
  00000204: 85 FF              test        edi,edi
  00000206: 75 0A              jne         00000212
  00000208: 8B 06              mov         eax,dword ptr [esi]
  0000020A: 55                 push        ebp
  0000020B: FF 50 1C           call        dword ptr [eax+1Ch]
  0000020E: 8B D8              mov         ebx,eax
  00000210: EB 7D              jmp         0000028F
  00000212: C7 47 08 05 00 00  mov         dword ptr [edi+8],5
            00
  00000219: 8B 06              mov         eax,dword ptr [esi]
  0000021B: 57                 push        edi
  0000021C: FF 50 1C           call        dword ptr [eax+1Ch]
  0000021F: 8B D8              mov         ebx,eax
  00000221: 85 DB              test        ebx,ebx
  00000223: 75 5C              jne         00000281
  00000225: 68 93 00 00 00     push        93h
  0000022A: EB 48              jmp         00000274
  0000022C: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000231: 83 C4 04           add         esp,4
  00000234: 85 C0              test        eax,eax
  00000236: 74 0C              je          00000244
  00000238: 56                 push        esi
  00000239: 8B C8              mov         ecx,eax
  0000023B: E8 00 00 00 00     call        ??0TFtEE232@@QAE@PAUft_private_vars@@@Z
  00000240: 8B F0              mov         esi,eax
  00000242: EB 02              jmp         00000246
  00000244: 33 F6              xor         esi,esi
  00000246: 85 F6              test        esi,esi
  00000248: 75 05              jne         0000024F
  0000024A: 8D 5E 05           lea         ebx,[esi+5]
  0000024D: EB 32              jmp         00000281
  0000024F: 8B CE              mov         ecx,esi
  00000251: 85 FF              test        edi,edi
  00000253: 75 0A              jne         0000025F
  00000255: 8B 06              mov         eax,dword ptr [esi]
  00000257: 55                 push        ebp
  00000258: FF 50 1C           call        dword ptr [eax+1Ch]
  0000025B: 8B D8              mov         ebx,eax
  0000025D: EB 30              jmp         0000028F
  0000025F: C7 47 08 00 00 00  mov         dword ptr [edi+8],0
            00
  00000266: 8B 06              mov         eax,dword ptr [esi]
  00000268: 57                 push        edi
  00000269: FF 50 1C           call        dword ptr [eax+1Ch]
  0000026C: 8B D8              mov         ebx,eax
  0000026E: 85 DB              test        ebx,ebx
  00000270: 75 0F              jne         00000281
  00000272: 6A 24              push        24h
  00000274: 8D 47 0C           lea         eax,[edi+0Ch]
  00000277: 50                 push        eax
  00000278: 55                 push        ebp
  00000279: E8 00 00 00 00     call        _memcpy
  0000027E: 83 C4 0C           add         esp,0Ch
  00000281: 85 FF              test        edi,edi
  00000283: 74 0A              je          0000028F
  00000285: 57                 push        edi
  00000286: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  0000028C: 83 C4 04           add         esp,4
  0000028F: 85 F6              test        esi,esi
  00000291: 74 09              je          0000029C
  00000293: 56                 push        esi
  00000294: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000299: 83 C4 04           add         esp,4
  0000029C: 8B C3              mov         eax,ebx
  0000029E: 5B                 pop         ebx
  0000029F: 5D                 pop         ebp
  000002A0: 5F                 pop         edi
  000002A1: 5E                 pop         esi
  000002A2: C2 08 00           ret         8

_FT_EE_ReadConfig@12:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 0C 00           ret         0Ch
  00000022: 8B 41 18           mov         eax,dword ptr [ecx+18h]
  00000025: 83 F8 08           cmp         eax,8
  00000028: 74 0D              je          00000037
  0000002A: 83 F8 09           cmp         eax,9
  0000002D: 74 08              je          00000037
  0000002F: B8 11 00 00 00     mov         eax,11h
  00000034: C2 0C 00           ret         0Ch
  00000037: 6A 00              push        0
  00000039: 8D 44 24 08        lea         eax,[esp+8]
  0000003D: 50                 push        eax
  0000003E: 6A 01              push        1
  00000040: FF 74 24 18        push        dword ptr [esp+18h]
  00000044: 8D 44 24 18        lea         eax,[esp+18h]
  00000048: 6A 01              push        1
  0000004A: 50                 push        eax
  0000004B: 68 CC 01 22 00     push        2201CCh
  00000050: 51                 push        ecx
  00000051: E8 00 00 00 00     call        _FT_IoCtl@32
  00000056: C2 0C 00           ret         0Ch

_FT_EE_ReadECC@12:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 0C 00           ret         0Ch
  00000022: 8B 41 18           mov         eax,dword ptr [ecx+18h]
  00000025: 83 F8 08           cmp         eax,8
  00000028: 74 0D              je          00000037
  0000002A: 83 F8 09           cmp         eax,9
  0000002D: 74 08              je          00000037
  0000002F: B8 11 00 00 00     mov         eax,11h
  00000034: C2 0C 00           ret         0Ch
  00000037: 6A 00              push        0
  00000039: 8D 44 24 08        lea         eax,[esp+8]
  0000003D: 50                 push        eax
  0000003E: 6A 02              push        2
  00000040: FF 74 24 18        push        dword ptr [esp+18h]
  00000044: 8D 44 24 18        lea         eax,[esp+18h]
  00000048: 6A 01              push        1
  0000004A: 50                 push        eax
  0000004B: 68 D4 01 22 00     push        2201D4h
  00000050: 51                 push        ecx
  00000051: E8 00 00 00 00     call        _FT_IoCtl@32
  00000056: C2 0C 00           ret         0Ch

_FT_EE_ReadEx@24:
  00000000: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000004: 85 C9              test        ecx,ecx
  00000006: 75 08              jne         00000010
  00000008: B8 10 00 00 00     mov         eax,10h
  0000000D: C2 18 00           ret         18h
  00000010: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  00000014: 89 41 10           mov         dword ptr [ecx+10h],eax
  00000017: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  0000001B: 89 41 14           mov         dword ptr [ecx+14h],eax
  0000001E: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000022: 51                 push        ecx
  00000023: FF 74 24 08        push        dword ptr [esp+8]
  00000027: 89 41 18           mov         dword ptr [ecx+18h],eax
  0000002A: 8B 44 24 20        mov         eax,dword ptr [esp+20h]
  0000002E: 89 41 1C           mov         dword ptr [ecx+1Ch],eax
  00000031: E8 00 00 00 00     call        _FT_EE_Read@8
  00000036: C2 18 00           ret         18h

_FT_EE_UARead@16:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 56                 push        esi
  00000006: 57                 push        edi
  00000007: 33 FF              xor         edi,edi
  00000009: 85 C0              test        eax,eax
  0000000B: 74 0E              je          0000001B
  0000000D: 8B 74 24 0C        mov         esi,dword ptr [esp+0Ch]
  00000011: 3B C6              cmp         eax,esi
  00000013: 74 10              je          00000025
  00000015: 8B 00              mov         eax,dword ptr [eax]
  00000017: 85 C0              test        eax,eax
  00000019: 75 F6              jne         00000011
  0000001B: 5F                 pop         edi
  0000001C: B8 01 00 00 00     mov         eax,1
  00000021: 5E                 pop         esi
  00000022: C2 10 00           ret         10h
  00000025: 39 7C 24 10        cmp         dword ptr [esp+10h],edi
  00000029: 75 0A              jne         00000035
  0000002B: 5F                 pop         edi
  0000002C: B8 06 00 00 00     mov         eax,6
  00000031: 5E                 pop         esi
  00000032: C2 10 00           ret         10h
  00000035: 39 7C 24 14        cmp         dword ptr [esp+14h],edi
  00000039: 75 07              jne         00000042
  0000003B: 5F                 pop         edi
  0000003C: 33 C0              xor         eax,eax
  0000003E: 5E                 pop         esi
  0000003F: C2 10 00           ret         10h
  00000042: 8B 46 18           mov         eax,dword ptr [esi+18h]
  00000045: 68 34 08 00 00     push        834h
  0000004A: 83 F8 04           cmp         eax,4
  0000004D: 75 1F              jne         0000006E
  0000004F: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000054: 83 C4 04           add         esp,4
  00000057: 85 C0              test        eax,eax
  00000059: 0F 84 9B 00 00 00  je          000000FA
  0000005F: 56                 push        esi
  00000060: 8B C8              mov         ecx,eax
  00000062: E8 00 00 00 00     call        ??0TFtEE2232@@QAE@PAUft_private_vars@@@Z
  00000067: 8B F0              mov         esi,eax
  00000069: E9 8E 00 00 00     jmp         000000FC
  0000006E: 83 F8 06           cmp         eax,6
  00000071: 75 18              jne         0000008B
  00000073: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000078: 83 C4 04           add         esp,4
  0000007B: 85 C0              test        eax,eax
  0000007D: 74 7B              je          000000FA
  0000007F: 56                 push        esi
  00000080: 8B C8              mov         ecx,eax
  00000082: E8 00 00 00 00     call        ??0TFtEE2232H@@QAE@PAUft_private_vars@@@Z
  00000087: 8B F0              mov         esi,eax
  00000089: EB 71              jmp         000000FC
  0000008B: 83 F8 07           cmp         eax,7
  0000008E: 75 18              jne         000000A8
  00000090: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000095: 83 C4 04           add         esp,4
  00000098: 85 C0              test        eax,eax
  0000009A: 74 5E              je          000000FA
  0000009C: 56                 push        esi
  0000009D: 8B C8              mov         ecx,eax
  0000009F: E8 00 00 00 00     call        ??0TFtEE4232H@@QAE@PAUft_private_vars@@@Z
  000000A4: 8B F0              mov         esi,eax
  000000A6: EB 54              jmp         000000FC
  000000A8: 83 F8 08           cmp         eax,8
  000000AB: 75 18              jne         000000C5
  000000AD: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000B2: 83 C4 04           add         esp,4
  000000B5: 85 C0              test        eax,eax
  000000B7: 74 41              je          000000FA
  000000B9: 56                 push        esi
  000000BA: 8B C8              mov         ecx,eax
  000000BC: E8 00 00 00 00     call        ??0TFtEE232H@@QAE@PAUft_private_vars@@@Z
  000000C1: 8B F0              mov         esi,eax
  000000C3: EB 37              jmp         000000FC
  000000C5: 83 F8 09           cmp         eax,9
  000000C8: 75 18              jne         000000E2
  000000CA: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000CF: 83 C4 04           add         esp,4
  000000D2: 85 C0              test        eax,eax
  000000D4: 74 24              je          000000FA
  000000D6: 56                 push        esi
  000000D7: 8B C8              mov         ecx,eax
  000000D9: E8 00 00 00 00     call        ??0TFtEEFTX@@QAE@PAUft_private_vars@@@Z
  000000DE: 8B F0              mov         esi,eax
  000000E0: EB 1A              jmp         000000FC
  000000E2: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000E7: 83 C4 04           add         esp,4
  000000EA: 85 C0              test        eax,eax
  000000EC: 74 0C              je          000000FA
  000000EE: 56                 push        esi
  000000EF: 8B C8              mov         ecx,eax
  000000F1: E8 00 00 00 00     call        ??0TFtEE232@@QAE@PAUft_private_vars@@@Z
  000000F6: 8B F0              mov         esi,eax
  000000F8: EB 02              jmp         000000FC
  000000FA: 33 F6              xor         esi,esi
  000000FC: 85 F6              test        esi,esi
  000000FE: 75 08              jne         00000108
  00000100: 5F                 pop         edi
  00000101: 8D 46 05           lea         eax,[esi+5]
  00000104: 5E                 pop         esi
  00000105: C2 10 00           ret         10h
  00000108: 8B 06              mov         eax,dword ptr [esi]
  0000010A: 8B CE              mov         ecx,esi
  0000010C: FF 10              call        dword ptr [eax]
  0000010E: 85 C0              test        eax,eax
  00000110: 75 13              jne         00000125
  00000112: 56                 push        esi
  00000113: 8D 78 0B           lea         edi,[eax+0Bh]
  00000116: E8 00 00 00 00     call        ??3@YAXPAX@Z
  0000011B: 83 C4 04           add         esp,4
  0000011E: 8B C7              mov         eax,edi
  00000120: 5F                 pop         edi
  00000121: 5E                 pop         esi
  00000122: C2 10 00           ret         10h
  00000125: FF 74 24 18        push        dword ptr [esp+18h]
  00000129: 8B 16              mov         edx,dword ptr [esi]
  0000012B: 8B CE              mov         ecx,esi
  0000012D: FF 74 24 18        push        dword ptr [esp+18h]
  00000131: FF 74 24 18        push        dword ptr [esp+18h]
  00000135: FF 52 14           call        dword ptr [edx+14h]
  00000138: 56                 push        esi
  00000139: E8 00 00 00 00     call        ??3@YAXPAX@Z
  0000013E: 83 C4 04           add         esp,4
  00000141: 8B C7              mov         eax,edi
  00000143: 5F                 pop         edi
  00000144: 5E                 pop         esi
  00000145: C2 10 00           ret         10h

_FT_EE_UASize@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 53                 push        ebx
  00000006: 33 DB              xor         ebx,ebx
  00000008: 56                 push        esi
  00000009: 85 C0              test        eax,eax
  0000000B: 74 0E              je          0000001B
  0000000D: 8B 74 24 0C        mov         esi,dword ptr [esp+0Ch]
  00000011: 3B C6              cmp         eax,esi
  00000013: 74 10              je          00000025
  00000015: 8B 00              mov         eax,dword ptr [eax]
  00000017: 85 C0              test        eax,eax
  00000019: 75 F6              jne         00000011
  0000001B: 5E                 pop         esi
  0000001C: B8 01 00 00 00     mov         eax,1
  00000021: 5B                 pop         ebx
  00000022: C2 08 00           ret         8
  00000025: 57                 push        edi
  00000026: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  0000002A: 85 FF              test        edi,edi
  0000002C: 75 09              jne         00000037
  0000002E: 8D 47 06           lea         eax,[edi+6]
  00000031: 5F                 pop         edi
  00000032: 5E                 pop         esi
  00000033: 5B                 pop         ebx
  00000034: C2 08 00           ret         8
  00000037: 8B 46 18           mov         eax,dword ptr [esi+18h]
  0000003A: 68 34 08 00 00     push        834h
  0000003F: 83 F8 04           cmp         eax,4
  00000042: 75 1F              jne         00000063
  00000044: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000049: 83 C4 04           add         esp,4
  0000004C: 85 C0              test        eax,eax
  0000004E: 0F 84 9B 00 00 00  je          000000EF
  00000054: 56                 push        esi
  00000055: 8B C8              mov         ecx,eax
  00000057: E8 00 00 00 00     call        ??0TFtEE2232@@QAE@PAUft_private_vars@@@Z
  0000005C: 8B F0              mov         esi,eax
  0000005E: E9 8E 00 00 00     jmp         000000F1
  00000063: 83 F8 06           cmp         eax,6
  00000066: 75 18              jne         00000080
  00000068: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000006D: 83 C4 04           add         esp,4
  00000070: 85 C0              test        eax,eax
  00000072: 74 7B              je          000000EF
  00000074: 56                 push        esi
  00000075: 8B C8              mov         ecx,eax
  00000077: E8 00 00 00 00     call        ??0TFtEE2232H@@QAE@PAUft_private_vars@@@Z
  0000007C: 8B F0              mov         esi,eax
  0000007E: EB 71              jmp         000000F1
  00000080: 83 F8 07           cmp         eax,7
  00000083: 75 18              jne         0000009D
  00000085: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000008A: 83 C4 04           add         esp,4
  0000008D: 85 C0              test        eax,eax
  0000008F: 74 5E              je          000000EF
  00000091: 56                 push        esi
  00000092: 8B C8              mov         ecx,eax
  00000094: E8 00 00 00 00     call        ??0TFtEE4232H@@QAE@PAUft_private_vars@@@Z
  00000099: 8B F0              mov         esi,eax
  0000009B: EB 54              jmp         000000F1
  0000009D: 83 F8 08           cmp         eax,8
  000000A0: 75 18              jne         000000BA
  000000A2: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000A7: 83 C4 04           add         esp,4
  000000AA: 85 C0              test        eax,eax
  000000AC: 74 41              je          000000EF
  000000AE: 56                 push        esi
  000000AF: 8B C8              mov         ecx,eax
  000000B1: E8 00 00 00 00     call        ??0TFtEE232H@@QAE@PAUft_private_vars@@@Z
  000000B6: 8B F0              mov         esi,eax
  000000B8: EB 37              jmp         000000F1
  000000BA: 83 F8 09           cmp         eax,9
  000000BD: 75 18              jne         000000D7
  000000BF: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000C4: 83 C4 04           add         esp,4
  000000C7: 85 C0              test        eax,eax
  000000C9: 74 24              je          000000EF
  000000CB: 56                 push        esi
  000000CC: 8B C8              mov         ecx,eax
  000000CE: E8 00 00 00 00     call        ??0TFtEEFTX@@QAE@PAUft_private_vars@@@Z
  000000D3: 8B F0              mov         esi,eax
  000000D5: EB 1A              jmp         000000F1
  000000D7: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000DC: 83 C4 04           add         esp,4
  000000DF: 85 C0              test        eax,eax
  000000E1: 74 0C              je          000000EF
  000000E3: 56                 push        esi
  000000E4: 8B C8              mov         ecx,eax
  000000E6: E8 00 00 00 00     call        ??0TFtEE232@@QAE@PAUft_private_vars@@@Z
  000000EB: 8B F0              mov         esi,eax
  000000ED: EB 02              jmp         000000F1
  000000EF: 33 F6              xor         esi,esi
  000000F1: 85 F6              test        esi,esi
  000000F3: 75 09              jne         000000FE
  000000F5: 5F                 pop         edi
  000000F6: 8D 46 05           lea         eax,[esi+5]
  000000F9: 5E                 pop         esi
  000000FA: 5B                 pop         ebx
  000000FB: C2 08 00           ret         8
  000000FE: 8B 06              mov         eax,dword ptr [esi]
  00000100: 8B CE              mov         ecx,esi
  00000102: FF 10              call        dword ptr [eax]
  00000104: 85 C0              test        eax,eax
  00000106: 74 1F              je          00000127
  00000108: 8B 06              mov         eax,dword ptr [esi]
  0000010A: 8B CE              mov         ecx,esi
  0000010C: FF 50 0C           call        dword ptr [eax+0Ch]
  0000010F: 0F B7 C0           movzx       eax,ax
  00000112: 03 C0              add         eax,eax
  00000114: 56                 push        esi
  00000115: 89 07              mov         dword ptr [edi],eax
  00000117: E8 00 00 00 00     call        ??3@YAXPAX@Z
  0000011C: 83 C4 04           add         esp,4
  0000011F: 8B C3              mov         eax,ebx
  00000121: 5F                 pop         edi
  00000122: 5E                 pop         esi
  00000123: 5B                 pop         ebx
  00000124: C2 08 00           ret         8
  00000127: 89 1F              mov         dword ptr [edi],ebx
  00000129: BB 0B 00 00 00     mov         ebx,0Bh
  0000012E: 56                 push        esi
  0000012F: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000134: 83 C4 04           add         esp,4
  00000137: 8B C3              mov         eax,ebx
  00000139: 5F                 pop         edi
  0000013A: 5E                 pop         esi
  0000013B: 5B                 pop         ebx
  0000013C: C2 08 00           ret         8

_FT_EE_UAWrite@12:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 53                 push        ebx
  00000006: 33 DB              xor         ebx,ebx
  00000008: 57                 push        edi
  00000009: 85 C0              test        eax,eax
  0000000B: 74 0E              je          0000001B
  0000000D: 8B 7C 24 0C        mov         edi,dword ptr [esp+0Ch]
  00000011: 3B C7              cmp         eax,edi
  00000013: 74 10              je          00000025
  00000015: 8B 00              mov         eax,dword ptr [eax]
  00000017: 85 C0              test        eax,eax
  00000019: 75 F6              jne         00000011
  0000001B: 5F                 pop         edi
  0000001C: B8 01 00 00 00     mov         eax,1
  00000021: 5B                 pop         ebx
  00000022: C2 0C 00           ret         0Ch
  00000025: 55                 push        ebp
  00000026: 8B 6C 24 14        mov         ebp,dword ptr [esp+14h]
  0000002A: 85 ED              test        ebp,ebp
  0000002C: 75 09              jne         00000037
  0000002E: 8D 45 06           lea         eax,[ebp+6]
  00000031: 5D                 pop         ebp
  00000032: 5F                 pop         edi
  00000033: 5B                 pop         ebx
  00000034: C2 0C 00           ret         0Ch
  00000037: 8B 47 18           mov         eax,dword ptr [edi+18h]
  0000003A: 56                 push        esi
  0000003B: 68 34 08 00 00     push        834h
  00000040: 83 F8 04           cmp         eax,4
  00000043: 75 1F              jne         00000064
  00000045: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000004A: 83 C4 04           add         esp,4
  0000004D: 85 C0              test        eax,eax
  0000004F: 0F 84 9B 00 00 00  je          000000F0
  00000055: 57                 push        edi
  00000056: 8B C8              mov         ecx,eax
  00000058: E8 00 00 00 00     call        ??0TFtEE2232@@QAE@PAUft_private_vars@@@Z
  0000005D: 8B F0              mov         esi,eax
  0000005F: E9 8E 00 00 00     jmp         000000F2
  00000064: 83 F8 06           cmp         eax,6
  00000067: 75 18              jne         00000081
  00000069: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000006E: 83 C4 04           add         esp,4
  00000071: 85 C0              test        eax,eax
  00000073: 74 7B              je          000000F0
  00000075: 57                 push        edi
  00000076: 8B C8              mov         ecx,eax
  00000078: E8 00 00 00 00     call        ??0TFtEE2232H@@QAE@PAUft_private_vars@@@Z
  0000007D: 8B F0              mov         esi,eax
  0000007F: EB 71              jmp         000000F2
  00000081: 83 F8 07           cmp         eax,7
  00000084: 75 18              jne         0000009E
  00000086: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000008B: 83 C4 04           add         esp,4
  0000008E: 85 C0              test        eax,eax
  00000090: 74 5E              je          000000F0
  00000092: 57                 push        edi
  00000093: 8B C8              mov         ecx,eax
  00000095: E8 00 00 00 00     call        ??0TFtEE4232H@@QAE@PAUft_private_vars@@@Z
  0000009A: 8B F0              mov         esi,eax
  0000009C: EB 54              jmp         000000F2
  0000009E: 83 F8 08           cmp         eax,8
  000000A1: 75 18              jne         000000BB
  000000A3: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000A8: 83 C4 04           add         esp,4
  000000AB: 85 C0              test        eax,eax
  000000AD: 74 41              je          000000F0
  000000AF: 57                 push        edi
  000000B0: 8B C8              mov         ecx,eax
  000000B2: E8 00 00 00 00     call        ??0TFtEE232H@@QAE@PAUft_private_vars@@@Z
  000000B7: 8B F0              mov         esi,eax
  000000B9: EB 37              jmp         000000F2
  000000BB: 83 F8 09           cmp         eax,9
  000000BE: 75 18              jne         000000D8
  000000C0: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000C5: 83 C4 04           add         esp,4
  000000C8: 85 C0              test        eax,eax
  000000CA: 74 24              je          000000F0
  000000CC: 57                 push        edi
  000000CD: 8B C8              mov         ecx,eax
  000000CF: E8 00 00 00 00     call        ??0TFtEEFTX@@QAE@PAUft_private_vars@@@Z
  000000D4: 8B F0              mov         esi,eax
  000000D6: EB 1A              jmp         000000F2
  000000D8: E8 00 00 00 00     call        ??2@YAPAXI@Z
  000000DD: 83 C4 04           add         esp,4
  000000E0: 85 C0              test        eax,eax
  000000E2: 74 0C              je          000000F0
  000000E4: 57                 push        edi
  000000E5: 8B C8              mov         ecx,eax
  000000E7: E8 00 00 00 00     call        ??0TFtEE232@@QAE@PAUft_private_vars@@@Z
  000000EC: 8B F0              mov         esi,eax
  000000EE: EB 02              jmp         000000F2
  000000F0: 33 F6              xor         esi,esi
  000000F2: 85 F6              test        esi,esi
  000000F4: 75 0A              jne         00000100
  000000F6: 8D 46 05           lea         eax,[esi+5]
  000000F9: 5E                 pop         esi
  000000FA: 5D                 pop         ebp
  000000FB: 5F                 pop         edi
  000000FC: 5B                 pop         ebx
  000000FD: C2 0C 00           ret         0Ch
  00000100: 83 7F 18 05        cmp         dword ptr [edi+18h],5
  00000104: 75 13              jne         00000119
  00000106: 8D 44 24 14        lea         eax,[esp+14h]
  0000010A: 50                 push        eax
  0000010B: 57                 push        edi
  0000010C: E8 00 00 00 00     call        _FT_GetLatencyTimer@8
  00000111: 6A 77              push        77h
  00000113: 57                 push        edi
  00000114: E8 00 00 00 00     call        _FT_SetLatencyTimer@8
  00000119: 8B 06              mov         eax,dword ptr [esi]
  0000011B: 8B CE              mov         ecx,esi
  0000011D: FF 10              call        dword ptr [eax]
  0000011F: 85 C0              test        eax,eax
  00000121: 75 05              jne         00000128
  00000123: 8D 58 0B           lea         ebx,[eax+0Bh]
  00000126: EB 49              jmp         00000171
  00000128: FF 74 24 1C        push        dword ptr [esp+1Ch]
  0000012C: 8B 06              mov         eax,dword ptr [esi]
  0000012E: 8B CE              mov         ecx,esi
  00000130: 55                 push        ebp
  00000131: FF 50 10           call        dword ptr [eax+10h]
  00000134: 85 C0              test        eax,eax
  00000136: 75 05              jne         0000013D
  00000138: 8D 58 0C           lea         ebx,[eax+0Ch]
  0000013B: EB 34              jmp         00000171
  0000013D: 8D 4E 04           lea         ecx,[esi+4]
  00000140: E8 00 00 00 00     call        ?Erase@TEeData@@QAEHXZ
  00000145: 85 C0              test        eax,eax
  00000147: 75 05              jne         0000014E
  00000149: 8D 58 0D           lea         ebx,[eax+0Dh]
  0000014C: EB 23              jmp         00000171
  0000014E: 8D 4E 04           lea         ecx,[esi+4]
  00000151: E8 00 00 00 00     call        ?Write@TEeData@@QAEHXZ
  00000156: 85 C0              test        eax,eax
  00000158: 75 05              jne         0000015F
  0000015A: 8D 58 0C           lea         ebx,[eax+0Ch]
  0000015D: EB 12              jmp         00000171
  0000015F: 8D 4E 04           lea         ecx,[esi+4]
  00000162: E8 00 00 00 00     call        ?Confirm@TEeData@@QAEHXZ
  00000167: 85 C0              test        eax,eax
  00000169: B9 0C 00 00 00     mov         ecx,0Ch
  0000016E: 0F 44 D9           cmove       ebx,ecx
  00000171: 83 7F 18 05        cmp         dword ptr [edi+18h],5
  00000175: 75 0A              jne         00000181
  00000177: FF 74 24 14        push        dword ptr [esp+14h]
  0000017B: 57                 push        edi
  0000017C: E8 00 00 00 00     call        _FT_SetLatencyTimer@8
  00000181: 56                 push        esi
  00000182: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000187: 83 C4 04           add         esp,4
  0000018A: 8B C3              mov         eax,ebx
  0000018C: 5E                 pop         esi
  0000018D: 5D                 pop         ebp
  0000018E: 5F                 pop         edi
  0000018F: 5B                 pop         ebx
  00000190: C2 0C 00           ret         0Ch

_FT_EE_WriteConfig@12:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 0C 00           ret         0Ch
  00000022: 8B 41 18           mov         eax,dword ptr [ecx+18h]
  00000025: 83 F8 08           cmp         eax,8
  00000028: 74 0D              je          00000037
  0000002A: 83 F8 09           cmp         eax,9
  0000002D: 74 08              je          00000037
  0000002F: B8 11 00 00 00     mov         eax,11h
  00000034: C2 0C 00           ret         0Ch
  00000037: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  0000003B: 6A 00              push        0
  0000003D: 88 44 24 08        mov         byte ptr [esp+8],al
  00000041: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000045: 88 44 24 09        mov         byte ptr [esp+9],al
  00000049: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000004D: 50                 push        eax
  0000004E: 6A 00              push        0
  00000050: 6A 00              push        0
  00000052: 6A 02              push        2
  00000054: 8D 44 24 18        lea         eax,[esp+18h]
  00000058: 50                 push        eax
  00000059: 68 D0 01 22 00     push        2201D0h
  0000005E: 51                 push        ecx
  0000005F: E8 00 00 00 00     call        _FT_IoCtl@32
  00000064: C2 0C 00           ret         0Ch

_FT_EraseEE@4:
  00000000: 51                 push        ecx
  00000001: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000006: C7 04 24 AD 0B EE  mov         dword ptr [esp],0ADEE0BADh
            AD
  0000000D: 85 C0              test        eax,eax
  0000000F: 74 0E              je          0000001F
  00000011: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000015: 3B C1              cmp         eax,ecx
  00000017: 74 0F              je          00000028
  00000019: 8B 00              mov         eax,dword ptr [eax]
  0000001B: 85 C0              test        eax,eax
  0000001D: 75 F6              jne         00000015
  0000001F: B8 01 00 00 00     mov         eax,1
  00000024: 59                 pop         ecx
  00000025: C2 04 00           ret         4
  00000028: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000002B: 8D 54 24 08        lea         edx,[esp+8]
  0000002F: 6A 00              push        0
  00000031: 52                 push        edx
  00000032: 6A 00              push        0
  00000034: 6A 00              push        0
  00000036: 6A 04              push        4
  00000038: 8D 54 24 14        lea         edx,[esp+14h]
  0000003C: 52                 push        edx
  0000003D: FF B0 88 00 00 00  push        dword ptr [eax+88h]
  00000043: FF 71 08           push        dword ptr [ecx+8]
  00000046: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000004C: F7 D8              neg         eax
  0000004E: 1B C0              sbb         eax,eax
  00000050: 83 E0 FC           and         eax,0FFFFFFFCh
  00000053: 83 C0 04           add         eax,4
  00000056: 59                 pop         ecx
  00000057: C2 04 00           ret         4

_FT_Finalise@0:
  00000000: 83 3D 00 00 00 00  cmp         dword ptr [?gInitialised@@3HA],0
            00
  00000007: 74 35              je          0000003E
  00000009: A1 00 00 00 00     mov         eax,dword ptr [?ghFtDevListLock@@3PAXA]
  0000000E: 85 C0              test        eax,eax
  00000010: 74 07              je          00000019
  00000012: 50                 push        eax
  00000013: FF 15 00 00 00 00  call        dword ptr [__imp__CloseHandle@4]
  00000019: A1 00 00 00 00     mov         eax,dword ptr [?ghFtOpenLock@@3PAXA]
  0000001E: 85 C0              test        eax,eax
  00000020: 74 07              je          00000029
  00000022: 50                 push        eax
  00000023: FF 15 00 00 00 00  call        dword ptr [__imp__CloseHandle@4]
  00000029: 68 00 00 00 00     push        offset ?gCS@@3U_RTL_CRITICAL_SECTION@@A
  0000002E: FF 15 00 00 00 00  call        dword ptr [__imp__DeleteCriticalSection@4]
  00000034: C7 05 00 00 00 00  mov         dword ptr [?gInitialised@@3HA],0
            00 00 00 00
  0000003E: C3                 ret

_FT_GetBitMode@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 08 00           ret         8
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 01              push        1
  0000002E: FF 74 24 14        push        dword ptr [esp+14h]
  00000032: 6A 00              push        0
  00000034: 6A 00              push        0
  00000036: FF B0 7C 01 00 00  push        dword ptr [eax+17Ch]
  0000003C: FF 71 08           push        dword ptr [ecx+8]
  0000003F: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000045: F7 D8              neg         eax
  00000047: 1B C0              sbb         eax,eax
  00000049: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004C: 83 C0 04           add         eax,4
  0000004F: C2 08 00           ret         8

_FT_GetComPortNumber@8:
  00000000: 56                 push        esi
  00000001: 8B 74 24 0C        mov         esi,dword ptr [esp+0Ch]
  00000005: 85 F6              test        esi,esi
  00000007: 74 2B              je          00000034
  00000009: 6A 00              push        0
  0000000B: 8D 44 24 10        lea         eax,[esp+10h]
  0000000F: 50                 push        eax
  00000010: 6A 04              push        4
  00000012: 56                 push        esi
  00000013: 6A 00              push        0
  00000015: 6A 00              push        0
  00000017: 68 C8 01 22 00     push        2201C8h
  0000001C: FF 74 24 24        push        dword ptr [esp+24h]
  00000020: E8 00 00 00 00     call        _FT_IoCtl@32
  00000025: 83 3E 00           cmp         dword ptr [esi],0
  00000028: 75 0F              jne         00000039
  0000002A: C7 06 FF FF FF FF  mov         dword ptr [esi],0FFFFFFFFh
  00000030: 5E                 pop         esi
  00000031: C2 08 00           ret         8
  00000034: B8 06 00 00 00     mov         eax,6
  00000039: 5E                 pop         esi
  0000003A: C2 08 00           ret         8

_FT_GetDeviceInfo@24:
  00000000: 83 EC 60           sub         esp,60h
  00000003: 6A 60              push        60h
  00000005: 8D 44 24 04        lea         eax,[esp+4]
  00000009: 6A 00              push        0
  0000000B: 50                 push        eax
  0000000C: E8 00 00 00 00     call        _memset
  00000011: 8B 0D 00 00 00 00  mov         ecx,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000017: 83 C4 0C           add         esp,0Ch
  0000001A: C7 04 24 11 00 00  mov         dword ptr [esp],11h
            00
  00000021: 85 C9              test        ecx,ecx
  00000023: 74 15              je          0000003A
  00000025: 8B 54 24 64        mov         edx,dword ptr [esp+64h]
  00000029: 8D A4 24 00 00 00  lea         esp,[esp]
            00
  00000030: 3B CA              cmp         ecx,edx
  00000032: 74 11              je          00000045
  00000034: 8B 09              mov         ecx,dword ptr [ecx]
  00000036: 85 C9              test        ecx,ecx
  00000038: 75 F6              jne         00000030
  0000003A: B8 11 00 00 00     mov         eax,11h
  0000003F: 83 C4 60           add         esp,60h
  00000042: C2 18 00           ret         18h
  00000045: 8B 42 1C           mov         eax,dword ptr [edx+1Ch]
  00000048: 8D 4C 24 64        lea         ecx,[esp+64h]
  0000004C: 6A 00              push        0
  0000004E: 51                 push        ecx
  0000004F: 6A 60              push        60h
  00000051: 8D 4C 24 0C        lea         ecx,[esp+0Ch]
  00000055: 51                 push        ecx
  00000056: 6A 60              push        60h
  00000058: 51                 push        ecx
  00000059: FF B0 98 01 00 00  push        dword ptr [eax+198h]
  0000005F: FF 72 08           push        dword ptr [edx+8]
  00000062: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000068: F7 D8              neg         eax
  0000006A: 1B C0              sbb         eax,eax
  0000006C: 83 E0 FC           and         eax,0FFFFFFFCh
  0000006F: 83 C0 04           add         eax,4
  00000072: 0F 85 90 01 00 00  jne         00000208
  00000078: 56                 push        esi
  00000079: 8B 74 24 04        mov         esi,dword ptr [esp+4]
  0000007D: 85 F6              test        esi,esi
  0000007F: 0F 85 7A 01 00 00  jne         000001FF
  00000085: 8B 4C 24 6C        mov         ecx,dword ptr [esp+6Ch]
  00000089: 85 C9              test        ecx,ecx
  0000008B: 0F 84 18 01 00 00  je          000001A9
  00000091: 8B 54 24 08        mov         edx,dword ptr [esp+8]
  00000095: 81 FA 11 00 36 40  cmp         edx,40360011h
  0000009B: 75 07              jne         000000A4
  0000009D: 89 31              mov         dword ptr [ecx],esi
  0000009F: E9 05 01 00 00     jmp         000001A9
  000000A4: 81 FA 12 00 36 40  cmp         edx,40360012h
  000000AA: 75 0B              jne         000000B7
  000000AC: C7 01 05 00 00 00  mov         dword ptr [ecx],5
  000000B2: E9 F2 00 00 00     jmp         000001A9
  000000B7: 81 FA 00 01 36 40  cmp         edx,40360100h
  000000BD: 75 0B              jne         000000CA
  000000BF: C7 01 04 00 00 00  mov         dword ptr [ecx],4
  000000C5: E9 DF 00 00 00     jmp         000001A9
  000000CA: 81 FA 01 01 36 40  cmp         edx,40360101h
  000000D0: 75 0B              jne         000000DD
  000000D2: C7 01 06 00 00 00  mov         dword ptr [ecx],6
  000000D8: E9 CC 00 00 00     jmp         000001A9
  000000DD: 81 FA 10 01 36 40  cmp         edx,40360110h
  000000E3: 75 0B              jne         000000F0
  000000E5: C7 01 07 00 00 00  mov         dword ptr [ecx],7
  000000EB: E9 B9 00 00 00     jmp         000001A9
  000000F0: 81 FA 40 01 36 40  cmp         edx,40360140h
  000000F6: 75 0B              jne         00000103
  000000F8: C7 01 08 00 00 00  mov         dword ptr [ecx],8
  000000FE: E9 A6 00 00 00     jmp         000001A9
  00000103: 81 FA 50 01 36 40  cmp         edx,40360150h
  00000109: 75 0B              jne         00000116
  0000010B: C7 01 09 00 00 00  mov         dword ptr [ecx],9
  00000111: E9 93 00 00 00     jmp         000001A9
  00000116: 81 FA C0 01 36 40  cmp         edx,403601C0h
  0000011C: 75 0B              jne         00000129
  0000011E: C7 01 0A 00 00 00  mov         dword ptr [ecx],0Ah
  00000124: E9 80 00 00 00     jmp         000001A9
  00000129: 81 FA C1 01 36 40  cmp         edx,403601C1h
  0000012F: 75 08              jne         00000139
  00000131: C7 01 0B 00 00 00  mov         dword ptr [ecx],0Bh
  00000137: EB 70              jmp         000001A9
  00000139: 81 FA C3 01 36 40  cmp         edx,403601C3h
  0000013F: 75 08              jne         00000149
  00000141: C7 01 0C 00 00 00  mov         dword ptr [ecx],0Ch
  00000147: EB 60              jmp         000001A9
  00000149: 81 FA C0 FE 30 40  cmp         edx,4030FEC0h
  0000014F: 75 08              jne         00000159
  00000151: C7 01 0D 00 00 00  mov         dword ptr [ecx],0Dh
  00000157: EB 50              jmp         000001A9
  00000159: 81 FA 10 03 36 40  cmp         edx,40360310h
  0000015F: 75 08              jne         00000169
  00000161: C7 01 0E 00 00 00  mov         dword ptr [ecx],0Eh
  00000167: EB 40              jmp         000001A9
  00000169: 81 FA 20 03 36 40  cmp         edx,40360320h
  0000016F: 75 08              jne         00000179
  00000171: C7 01 0F 00 00 00  mov         dword ptr [ecx],0Fh
  00000177: EB 30              jmp         000001A9
  00000179: 81 FA E0 03 36 40  cmp         edx,403603E0h
  0000017F: 75 08              jne         00000189
  00000181: C7 01 10 00 00 00  mov         dword ptr [ecx],10h
  00000187: EB 20              jmp         000001A9
  00000189: 81 FA 10 00 36 40  cmp         edx,40360010h
  0000018F: 75 08              jne         00000199
  00000191: C7 01 01 00 00 00  mov         dword ptr [ecx],1
  00000197: EB 10              jmp         000001A9
  00000199: 33 C0              xor         eax,eax
  0000019B: 81 FA 20 37 38 40  cmp         edx,40383720h
  000001A1: 0F 95 C0           setne       al
  000001A4: 83 C0 02           add         eax,2
  000001A7: 89 01              mov         dword ptr [ecx],eax
  000001A9: 8B 4C 24 70        mov         ecx,dword ptr [esp+70h]
  000001AD: 85 C9              test        ecx,ecx
  000001AF: 74 06              je          000001B7
  000001B1: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  000001B5: 89 01              mov         dword ptr [ecx],eax
  000001B7: 8B 54 24 74        mov         edx,dword ptr [esp+74h]
  000001BB: 85 D2              test        edx,edx
  000001BD: 74 15              je          000001D4
  000001BF: 8D 4C 24 14        lea         ecx,[esp+14h]
  000001C3: 8B C1              mov         eax,ecx
  000001C5: 2B D0              sub         edx,eax
  000001C7: 8A 01              mov         al,byte ptr [ecx]
  000001C9: 8D 49 01           lea         ecx,[ecx+1]
  000001CC: 88 44 0A FF        mov         byte ptr [edx+ecx-1],al
  000001D0: 84 C0              test        al,al
  000001D2: 75 F3              jne         000001C7
  000001D4: 8B 54 24 78        mov         edx,dword ptr [esp+78h]
  000001D8: 85 D2              test        edx,edx
  000001DA: 74 15              je          000001F1
  000001DC: 8D 4C 24 24        lea         ecx,[esp+24h]
  000001E0: 8B C1              mov         eax,ecx
  000001E2: 2B D0              sub         edx,eax
  000001E4: 8A 01              mov         al,byte ptr [ecx]
  000001E6: 8D 49 01           lea         ecx,[ecx+1]
  000001E9: 88 44 0A FF        mov         byte ptr [edx+ecx-1],al
  000001ED: 84 C0              test        al,al
  000001EF: 75 F3              jne         000001E4
  000001F1: 8B 44 24 7C        mov         eax,dword ptr [esp+7Ch]
  000001F5: 85 C0              test        eax,eax
  000001F7: 74 06              je          000001FF
  000001F9: 8B 4C 24 10        mov         ecx,dword ptr [esp+10h]
  000001FD: 89 08              mov         dword ptr [eax],ecx
  000001FF: 8B C6              mov         eax,esi
  00000201: 5E                 pop         esi
  00000202: 83 C4 60           add         esp,60h
  00000205: C2 18 00           ret         18h
  00000208: 8B 04 24           mov         eax,dword ptr [esp]
  0000020B: 83 C4 60           add         esp,60h
  0000020E: C2 18 00           ret         18h

_FT_GetDeviceInfoDetail@32:
  00000000: 83 3D 00 00 00 00  cmp         dword ptr [?pgAttachedList@@3PAU_ft_device_list_info_node@@A],0
            00
  00000007: 56                 push        esi
  00000008: 0F 84 CB 00 00 00  je          000000D9
  0000000E: 8B 74 24 08        mov         esi,dword ptr [esp+8]
  00000012: 3B 35 00 00 00 00  cmp         esi,dword ptr [?dwNumberOfAttachedDevices@@3KA]
  00000018: 0F 83 BB 00 00 00  jae         000000D9
  0000001E: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  00000023: 85 C0              test        eax,eax
  00000025: 75 09              jne         00000030
  00000027: B8 05 00 00 00     mov         eax,5
  0000002C: 5E                 pop         esi
  0000002D: C2 20 00           ret         20h
  00000030: 6A FF              push        0FFFFFFFFh
  00000032: FF 35 00 00 00 00  push        dword ptr [?ghFtDevListLock@@3PAXA]
  00000038: FF 15 00 00 00 00  call        dword ptr [__imp__WaitForSingleObject@8]
  0000003E: 8B 54 24 0C        mov         edx,dword ptr [esp+0Ch]
  00000042: 6B CE 64           imul        ecx,esi,64h
  00000045: 03 0D 00 00 00 00  add         ecx,dword ptr [?pgAttachedList@@3PAU_ft_device_list_info_node@@A]
  0000004B: 85 D2              test        edx,edx
  0000004D: 74 04              je          00000053
  0000004F: 8B 01              mov         eax,dword ptr [ecx]
  00000051: 89 02              mov         dword ptr [edx],eax
  00000053: 8B 54 24 10        mov         edx,dword ptr [esp+10h]
  00000057: 85 D2              test        edx,edx
  00000059: 74 05              je          00000060
  0000005B: 8B 41 04           mov         eax,dword ptr [ecx+4]
  0000005E: 89 02              mov         dword ptr [edx],eax
  00000060: 8B 54 24 14        mov         edx,dword ptr [esp+14h]
  00000064: 85 D2              test        edx,edx
  00000066: 74 05              je          0000006D
  00000068: 8B 41 08           mov         eax,dword ptr [ecx+8]
  0000006B: 89 02              mov         dword ptr [edx],eax
  0000006D: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  00000071: 85 C0              test        eax,eax
  00000073: 74 09              je          0000007E
  00000075: F3 0F 6F 41 10     movdqu      xmm0,xmmword ptr [ecx+10h]
  0000007A: F3 0F 7F 00        movdqu      xmmword ptr [eax],xmm0
  0000007E: 8B 44 24 20        mov         eax,dword ptr [esp+20h]
  00000082: 85 C0              test        eax,eax
  00000084: 74 27              je          000000AD
  00000086: F3 0F 6F 41 20     movdqu      xmm0,xmmword ptr [ecx+20h]
  0000008B: F3 0F 7F 00        movdqu      xmmword ptr [eax],xmm0
  0000008F: F3 0F 6F 41 30     movdqu      xmm0,xmmword ptr [ecx+30h]
  00000094: F3 0F 7F 40 10     movdqu      xmmword ptr [eax+10h],xmm0
  00000099: F3 0F 6F 41 40     movdqu      xmm0,xmmword ptr [ecx+40h]
  0000009E: F3 0F 7F 40 20     movdqu      xmmword ptr [eax+20h],xmm0
  000000A3: F3 0F 6F 41 50     movdqu      xmm0,xmmword ptr [ecx+50h]
  000000A8: F3 0F 7F 40 30     movdqu      xmmword ptr [eax+30h],xmm0
  000000AD: 8B 54 24 24        mov         edx,dword ptr [esp+24h]
  000000B1: 85 D2              test        edx,edx
  000000B3: 74 05              je          000000BA
  000000B5: 8B 41 60           mov         eax,dword ptr [ecx+60h]
  000000B8: 89 02              mov         dword ptr [edx],eax
  000000BA: 8B 54 24 18        mov         edx,dword ptr [esp+18h]
  000000BE: 85 D2              test        edx,edx
  000000C0: 74 05              je          000000C7
  000000C2: 8B 41 0C           mov         eax,dword ptr [ecx+0Ch]
  000000C5: 89 02              mov         dword ptr [edx],eax
  000000C7: FF 35 00 00 00 00  push        dword ptr [?ghFtDevListLock@@3PAXA]
  000000CD: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  000000D3: 33 C0              xor         eax,eax
  000000D5: 5E                 pop         esi
  000000D6: C2 20 00           ret         20h
  000000D9: B8 02 00 00 00     mov         eax,2
  000000DE: 5E                 pop         esi
  000000DF: C2 20 00           ret         20h

_FT_GetDeviceInfoList@8:
  00000000: 83 7C 24 08 00     cmp         dword ptr [esp+8],0
  00000005: 53                 push        ebx
  00000006: 8B 1D 00 00 00 00  mov         ebx,dword ptr [?pgAttachedList@@3PAU_ft_device_list_info_node@@A]
  0000000C: 75 09              jne         00000017
  0000000E: B8 06 00 00 00     mov         eax,6
  00000013: 5B                 pop         ebx
  00000014: C2 08 00           ret         8
  00000017: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  0000001C: 85 C0              test        eax,eax
  0000001E: 75 09              jne         00000029
  00000020: B8 05 00 00 00     mov         eax,5
  00000025: 5B                 pop         ebx
  00000026: C2 08 00           ret         8
  00000029: 55                 push        ebp
  0000002A: 6A FF              push        0FFFFFFFFh
  0000002C: FF 35 00 00 00 00  push        dword ptr [?ghFtDevListLock@@3PAXA]
  00000032: FF 15 00 00 00 00  call        dword ptr [__imp__WaitForSingleObject@8]
  00000038: 8B 54 24 0C        mov         edx,dword ptr [esp+0Ch]
  0000003C: 85 D2              test        edx,edx
  0000003E: 74 30              je          00000070
  00000040: 85 DB              test        ebx,ebx
  00000042: 74 2C              je          00000070
  00000044: A1 00 00 00 00     mov         eax,dword ptr [?dwNumberOfAttachedDevices@@3KA]
  00000049: 33 ED              xor         ebp,ebp
  0000004B: 85 C0              test        eax,eax
  0000004D: 74 26              je          00000075
  0000004F: 56                 push        esi
  00000050: 57                 push        edi
  00000051: 8B F3              mov         esi,ebx
  00000053: 8B FA              mov         edi,edx
  00000055: B9 19 00 00 00     mov         ecx,19h
  0000005A: 45                 inc         ebp
  0000005B: F3 A5              rep movs    dword ptr es:[edi],dword ptr [esi]
  0000005D: A1 00 00 00 00     mov         eax,dword ptr [?dwNumberOfAttachedDevices@@3KA]
  00000062: 83 C2 64           add         edx,64h
  00000065: 83 C3 64           add         ebx,64h
  00000068: 3B E8              cmp         ebp,eax
  0000006A: 72 E5              jb          00000051
  0000006C: 5F                 pop         edi
  0000006D: 5E                 pop         esi
  0000006E: EB 05              jmp         00000075
  00000070: A1 00 00 00 00     mov         eax,dword ptr [?dwNumberOfAttachedDevices@@3KA]
  00000075: 8B 4C 24 10        mov         ecx,dword ptr [esp+10h]
  00000079: 89 01              mov         dword ptr [ecx],eax
  0000007B: FF 35 00 00 00 00  push        dword ptr [?ghFtDevListLock@@3PAXA]
  00000081: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  00000087: 5D                 pop         ebp
  00000088: 33 C0              xor         eax,eax
  0000008A: 5B                 pop         ebx
  0000008B: C2 08 00           ret         8

_FT_GetDriverVersion@8:
  00000000: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000004: 85 C0              test        eax,eax
  00000006: 74 1F              je          00000027
  00000008: 6A 00              push        0
  0000000A: 8D 4C 24 0C        lea         ecx,[esp+0Ch]
  0000000E: 51                 push        ecx
  0000000F: 6A 04              push        4
  00000011: 50                 push        eax
  00000012: 6A 00              push        0
  00000014: 6A 00              push        0
  00000016: 68 BC 01 22 00     push        2201BCh
  0000001B: FF 74 24 20        push        dword ptr [esp+20h]
  0000001F: E8 00 00 00 00     call        _FT_IoCtl@32
  00000024: C2 08 00           ret         8
  00000027: B8 06 00 00 00     mov         eax,6
  0000002C: C2 08 00           ret         8

_FT_GetEventStatus@8:
  00000000: 51                 push        ecx
  00000001: 6A 00              push        0
  00000003: 8D 44 24 04        lea         eax,[esp+4]
  00000007: 50                 push        eax
  00000008: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  0000000C: 6A 04              push        4
  0000000E: 50                 push        eax
  0000000F: 6A 04              push        4
  00000011: 50                 push        eax
  00000012: 68 90 00 22 00     push        220090h
  00000017: FF 74 24 24        push        dword ptr [esp+24h]
  0000001B: E8 00 00 00 00     call        _FT_IoCtl@32
  00000020: 59                 pop         ecx
  00000021: C2 08 00           ret         8

_FT_GetLatencyTimer@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 08 00           ret         8
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 01              push        1
  0000002E: FF 74 24 14        push        dword ptr [esp+14h]
  00000032: 6A 00              push        0
  00000034: 6A 00              push        0
  00000036: FF B0 74 01 00 00  push        dword ptr [eax+174h]
  0000003C: FF 71 08           push        dword ptr [ecx+8]
  0000003F: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000045: F7 D8              neg         eax
  00000047: 1B C0              sbb         eax,eax
  00000049: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004C: 83 C0 04           add         eax,4
  0000004F: C2 08 00           ret         8

_FT_GetLibraryVersion@4:
  00000000: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  00000004: 85 C0              test        eax,eax
  00000006: 74 0B              je          00000013
  00000008: C7 00 14 02 03 00  mov         dword ptr [eax],30214h
  0000000E: 33 C0              xor         eax,eax
  00000010: C2 04 00           ret         4
  00000013: B8 06 00 00 00     mov         eax,6
  00000018: C2 04 00           ret         4

_FT_GetModemStatus@8:
  00000000: 51                 push        ecx
  00000001: 6A 00              push        0
  00000003: 8D 44 24 04        lea         eax,[esp+4]
  00000007: 50                 push        eax
  00000008: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  0000000C: 6A 04              push        4
  0000000E: 50                 push        eax
  0000000F: 6A 04              push        4
  00000011: 50                 push        eax
  00000012: 68 68 01 22 00     push        220168h
  00000017: FF 74 24 24        push        dword ptr [esp+24h]
  0000001B: E8 00 00 00 00     call        _FT_IoCtl@32
  00000020: 59                 pop         ecx
  00000021: C2 08 00           ret         8

_FT_GetQueueStatus@8:
  00000000: 51                 push        ecx
  00000001: 6A 00              push        0
  00000003: 8D 44 24 04        lea         eax,[esp+4]
  00000007: 50                 push        eax
  00000008: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  0000000C: 6A 04              push        4
  0000000E: 50                 push        eax
  0000000F: 6A 04              push        4
  00000011: 50                 push        eax
  00000012: 68 6C 01 22 00     push        22016Ch
  00000017: FF 74 24 24        push        dword ptr [esp+24h]
  0000001B: E8 00 00 00 00     call        _FT_IoCtl@32
  00000020: 59                 pop         ecx
  00000021: C2 08 00           ret         8

_FT_GetQueueStatusEx@8:
  00000000: 51                 push        ecx
  00000001: 6A 00              push        0
  00000003: 8D 44 24 04        lea         eax,[esp+4]
  00000007: 50                 push        eax
  00000008: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  0000000C: 6A 04              push        4
  0000000E: 50                 push        eax
  0000000F: 6A 04              push        4
  00000011: 50                 push        eax
  00000012: 68 D8 01 22 00     push        2201D8h
  00000017: FF 74 24 24        push        dword ptr [esp+24h]
  0000001B: E8 00 00 00 00     call        _FT_IoCtl@32
  00000020: 59                 pop         ecx
  00000021: C2 08 00           ret         8

_FT_GetStatus@16:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 83 EC 0C           sub         esp,0Ch
  00000008: 85 C0              test        eax,eax
  0000000A: 74 0E              je          0000001A
  0000000C: 8B 4C 24 10        mov         ecx,dword ptr [esp+10h]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 11              je          00000025
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: 83 C4 0C           add         esp,0Ch
  00000022: C2 10 00           ret         10h
  00000025: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000028: 8D 54 24 10        lea         edx,[esp+10h]
  0000002C: 6A 00              push        0
  0000002E: 52                 push        edx
  0000002F: 6A 0C              push        0Ch
  00000031: 8D 54 24 0C        lea         edx,[esp+0Ch]
  00000035: 52                 push        edx
  00000036: 6A 0C              push        0Ch
  00000038: 52                 push        edx
  00000039: FF B0 94 00 00 00  push        dword ptr [eax+94h]
  0000003F: FF 71 08           push        dword ptr [ecx+8]
  00000042: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000048: F7 D8              neg         eax
  0000004A: 1B C0              sbb         eax,eax
  0000004C: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004F: 83 C0 04           add         eax,4
  00000052: 75 CB              jne         0000001F
  00000054: 8B 54 24 14        mov         edx,dword ptr [esp+14h]
  00000058: 8B 0C 24           mov         ecx,dword ptr [esp]
  0000005B: 89 0A              mov         dword ptr [edx],ecx
  0000005D: 8B 54 24 18        mov         edx,dword ptr [esp+18h]
  00000061: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  00000065: 89 0A              mov         dword ptr [edx],ecx
  00000067: 8B 54 24 1C        mov         edx,dword ptr [esp+1Ch]
  0000006B: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  0000006F: 89 0A              mov         dword ptr [edx],ecx
  00000071: 83 C4 0C           add         esp,0Ch
  00000074: C2 10 00           ret         10h

_FT_Initialise@0:
  00000000: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  00000005: 48                 dec         eax
  00000006: F7 D8              neg         eax
  00000008: 1B C0              sbb         eax,eax
  0000000A: 83 E0 05           and         eax,5
  0000000D: C3                 ret

_FT_IoCtl@32:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 54 24 04        mov         edx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C2              cmp         eax,edx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 20 00           ret         20h
  00000022: FF 74 24 20        push        dword ptr [esp+20h]
  00000026: 8B 4C 24 0C        mov         ecx,dword ptr [esp+0Ch]
  0000002A: FF 74 24 20        push        dword ptr [esp+20h]
  0000002E: 8B 42 1C           mov         eax,dword ptr [edx+1Ch]
  00000031: FF 74 24 20        push        dword ptr [esp+20h]
  00000035: C1 E9 02           shr         ecx,2
  00000038: FF 74 24 20        push        dword ptr [esp+20h]
  0000003C: 81 E1 FF 0F 00 00  and         ecx,0FFFh
  00000042: FF 74 24 20        push        dword ptr [esp+20h]
  00000046: FF 74 24 20        push        dword ptr [esp+20h]
  0000004A: FF 34 88           push        dword ptr [eax+ecx*4]
  0000004D: FF 72 08           push        dword ptr [edx+8]
  00000050: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000056: F7 D8              neg         eax
  00000058: 1B C0              sbb         eax,eax
  0000005A: 83 E0 FC           and         eax,0FFFFFFFCh
  0000005D: 83 C0 04           add         eax,4
  00000060: C2 20 00           ret         20h

_FT_ListDevices@12:
  00000000: 83 EC 78           sub         esp,78h
  00000003: 56                 push        esi
  00000004: 57                 push        edi
  00000005: 6A 12              push        12h
  00000007: 33 FF              xor         edi,edi
  00000009: C7 44 24 18 02 00  mov         dword ptr [esp+18h],2
            00 00
  00000011: 57                 push        edi
  00000012: 57                 push        edi
  00000013: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  00000018: 89 7C 24 1C        mov         dword ptr [esp+1Ch],edi
  0000001C: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetClassDevsA@16]
  00000022: 8B F0              mov         esi,eax
  00000024: 85 F6              test        esi,esi
  00000026: 75 0B              jne         00000033
  00000028: 8D 47 02           lea         eax,[edi+2]
  0000002B: 5F                 pop         edi
  0000002C: 5E                 pop         esi
  0000002D: 83 C4 78           add         esp,78h
  00000030: C2 0C 00           ret         0Ch
  00000033: 53                 push        ebx
  00000034: 8B 1D 00 00 00 00  mov         ebx,dword ptr [__imp__SetupDiEnumDeviceInterfaces@20]
  0000003A: 8D 44 24 28        lea         eax,[esp+28h]
  0000003E: 50                 push        eax
  0000003F: 6A 00              push        0
  00000041: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  00000046: 6A 00              push        0
  00000048: 56                 push        esi
  00000049: C7 44 24 3C 1C 00  mov         dword ptr [esp+3Ch],1Ch
            00 00
  00000051: FF D3              call        ebx
  00000053: 85 C0              test        eax,eax
  00000055: 74 15              je          0000006C
  00000057: 8D 44 24 28        lea         eax,[esp+28h]
  0000005B: 47                 inc         edi
  0000005C: 50                 push        eax
  0000005D: 57                 push        edi
  0000005E: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  00000063: 6A 00              push        0
  00000065: 56                 push        esi
  00000066: FF D3              call        ebx
  00000068: 85 C0              test        eax,eax
  0000006A: 75 EB              jne         00000057
  0000006C: 56                 push        esi
  0000006D: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  00000073: 8B 8C 24 90 00 00  mov         ecx,dword ptr [esp+90h]
            00
  0000007A: 8B C1              mov         eax,ecx
  0000007C: 25 00 00 00 E0     and         eax,0E0000000h
  00000081: 3D 00 00 00 80     cmp         eax,80000000h
  00000086: 75 26              jne         000000AE
  00000088: 8B 84 24 88 00 00  mov         eax,dword ptr [esp+88h]
            00
  0000008F: 85 C0              test        eax,eax
  00000091: 75 0E              jne         000000A1
  00000093: 5B                 pop         ebx
  00000094: 5F                 pop         edi
  00000095: B8 06 00 00 00     mov         eax,6
  0000009A: 5E                 pop         esi
  0000009B: 83 C4 78           add         esp,78h
  0000009E: C2 0C 00           ret         0Ch
  000000A1: 5B                 pop         ebx
  000000A2: 89 38              mov         dword ptr [eax],edi
  000000A4: 33 C0              xor         eax,eax
  000000A6: 5F                 pop         edi
  000000A7: 5E                 pop         esi
  000000A8: 83 C4 78           add         esp,78h
  000000AB: C2 0C 00           ret         0Ch
  000000AE: 55                 push        ebp
  000000AF: 3D 00 00 00 40     cmp         eax,40000000h
  000000B4: 75 26              jne         000000DC
  000000B6: 8B 84 24 90 00 00  mov         eax,dword ptr [esp+90h]
            00
  000000BD: 8B 94 24 8C 00 00  mov         edx,dword ptr [esp+8Ch]
            00
  000000C4: 89 54 24 14        mov         dword ptr [esp+14h],edx
  000000C8: 89 44 24 28        mov         dword ptr [esp+28h],eax
  000000CC: 85 C0              test        eax,eax
  000000CE: 0F 84 F3 01 00 00  je          000002C7
  000000D4: 8B 6C 24 28        mov         ebp,dword ptr [esp+28h]
  000000D8: 8B F0              mov         esi,eax
  000000DA: EB 37              jmp         00000113
  000000DC: 3D 00 00 00 20     cmp         eax,20000000h
  000000E1: 0F 85 E0 01 00 00  jne         000002C7
  000000E7: 8B B4 24 8C 00 00  mov         esi,dword ptr [esp+8Ch]
            00
  000000EE: 85 F6              test        esi,esi
  000000F0: 0F 84 D1 01 00 00  je          000002C7
  000000F6: 8B 84 24 90 00 00  mov         eax,dword ptr [esp+90h]
            00
  000000FD: 85 C0              test        eax,eax
  000000FF: 0F 84 C2 01 00 00  je          000002C7
  00000105: 89 38              mov         dword ptr [eax],edi
  00000107: 8B EE              mov         ebp,esi
  00000109: 8B 44 24 28        mov         eax,dword ptr [esp+28h]
  0000010D: 33 D2              xor         edx,edx
  0000010F: 89 44 24 28        mov         dword ptr [esp+28h],eax
  00000113: F6 C1 02           test        cl,2
  00000116: 74 0A              je          00000122
  00000118: C7 44 24 18 A0 00  mov         dword ptr [esp+18h],2200A0h
            22 00
  00000120: EB 16              jmp         00000138
  00000122: F6 C1 04           test        cl,4
  00000125: B8 00 00 00 00     mov         eax,0
  0000012A: 0F 95 C0           setne       al
  0000012D: 8D 04 C5 9C 00 22  lea         eax,[eax*8+22009Ch]
            00
  00000134: 89 44 24 18        mov         dword ptr [esp+18h],eax
  00000138: 33 DB              xor         ebx,ebx
  0000013A: 85 FF              test        edi,edi
  0000013C: 0F 84 77 01 00 00  je          000002B9
  00000142: 8B C1              mov         eax,ecx
  00000144: 25 00 00 00 40     and         eax,40000000h
  00000149: 89 44 24 10        mov         dword ptr [esp+10h],eax
  0000014D: 8D 49 00           lea         ecx,[ecx]
  00000150: 85 C0              test        eax,eax
  00000152: 74 08              je          0000015C
  00000154: 3B D3              cmp         edx,ebx
  00000156: 0F 85 FD 00 00 00  jne         00000259
  0000015C: 8D 44 24 20        lea         eax,[esp+20h]
  00000160: 50                 push        eax
  00000161: 53                 push        ebx
  00000162: E8 00 00 00 00     call        _FT_Open@8
  00000167: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  0000016B: 85 C0              test        eax,eax
  0000016D: 0F 85 96 00 00 00  jne         00000209
  00000173: 6A 40              push        40h
  00000175: 50                 push        eax
  00000176: 8D 44 24 50        lea         eax,[esp+50h]
  0000017A: 50                 push        eax
  0000017B: E8 00 00 00 00     call        _memset
  00000180: 83 C4 0C           add         esp,0Ch
  00000183: 8D 44 24 24        lea         eax,[esp+24h]
  00000187: 6A 00              push        0
  00000189: 50                 push        eax
  0000018A: 6A 40              push        40h
  0000018C: 8D 44 24 54        lea         eax,[esp+54h]
  00000190: 50                 push        eax
  00000191: 6A 40              push        40h
  00000193: 50                 push        eax
  00000194: FF 74 24 30        push        dword ptr [esp+30h]
  00000198: FF 74 24 3C        push        dword ptr [esp+3Ch]
  0000019C: E8 00 00 00 00     call        _FT_IoCtl@32
  000001A1: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  000001A5: 85 C0              test        eax,eax
  000001A7: 75 54              jne         000001FD
  000001A9: 39 44 24 10        cmp         dword ptr [esp+10h],eax
  000001AD: 0F 85 BD 00 00 00  jne         00000270
  000001B3: F7 84 24 94 00 00  test        dword ptr [esp+94h],20000000h
            00 00 00 00 20
  000001BE: 74 3D              je          000001FD
  000001C0: 81 7C 24 18 A4 00  cmp         dword ptr [esp+18h],2200A4h
            22 00
  000001C8: 74 2A              je          000001F4
  000001CA: 8B 4D 00           mov         ecx,dword ptr [ebp]
  000001CD: 85 C9              test        ecx,ecx
  000001CF: 74 2C              je          000001FD
  000001D1: 8B 44 24 24        mov         eax,dword ptr [esp+24h]
  000001D5: 83 C5 04           add         ebp,4
  000001D8: 40                 inc         eax
  000001D9: 50                 push        eax
  000001DA: 8D 44 24 4C        lea         eax,[esp+4Ch]
  000001DE: 50                 push        eax
  000001DF: 51                 push        ecx
  000001E0: E8 00 00 00 00     call        _memcpy
  000001E5: 8B 44 24 2C        mov         eax,dword ptr [esp+2Ch]
  000001E9: 83 C4 0C           add         esp,0Ch
  000001EC: 50                 push        eax
  000001ED: E8 00 00 00 00     call        _FT_Close@4
  000001F2: EB 5D              jmp         00000251
  000001F4: 8B 44 24 48        mov         eax,dword ptr [esp+48h]
  000001F8: 89 06              mov         dword ptr [esi],eax
  000001FA: 83 C6 04           add         esi,4
  000001FD: 8B 44 24 20        mov         eax,dword ptr [esp+20h]
  00000201: 50                 push        eax
  00000202: E8 00 00 00 00     call        _FT_Close@4
  00000207: EB 48              jmp         00000251
  00000209: 8B 8C 24 94 00 00  mov         ecx,dword ptr [esp+94h]
            00
  00000210: F7 C1 00 00 00 20  test        ecx,20000000h
  00000216: 74 39              je          00000251
  00000218: F6 C1 04           test        cl,4
  0000021B: 74 0B              je          00000228
  0000021D: C7 06 00 00 00 00  mov         dword ptr [esi],0
  00000223: 83 C6 04           add         esi,4
  00000226: EB 21              jmp         00000249
  00000228: 6A 40              push        40h
  0000022A: 8D 44 24 4C        lea         eax,[esp+4Ch]
  0000022E: 6A 00              push        0
  00000230: 50                 push        eax
  00000231: E8 00 00 00 00     call        _memset
  00000236: 8B 4D 00           mov         ecx,dword ptr [ebp]
  00000239: 83 C4 0C           add         esp,0Ch
  0000023C: 85 C9              test        ecx,ecx
  0000023E: 74 09              je          00000249
  00000240: 8A 44 24 48        mov         al,byte ptr [esp+48h]
  00000244: 83 C5 04           add         ebp,4
  00000247: 88 01              mov         byte ptr [ecx],al
  00000249: C7 44 24 1C 00 00  mov         dword ptr [esp+1Ch],0
            00 00
  00000251: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000255: 8B 54 24 14        mov         edx,dword ptr [esp+14h]
  00000259: 43                 inc         ebx
  0000025A: 3B DF              cmp         ebx,edi
  0000025C: 0F 82 EE FE FF FF  jb          00000150
  00000262: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  00000266: 5D                 pop         ebp
  00000267: 5B                 pop         ebx
  00000268: 5F                 pop         edi
  00000269: 5E                 pop         esi
  0000026A: 83 C4 78           add         esp,78h
  0000026D: C2 0C 00           ret         0Ch
  00000270: 81 7C 24 18 A4 00  cmp         dword ptr [esp+18h],2200A4h
            22 00
  00000278: 74 2F              je          000002A9
  0000027A: 8B 44 24 24        mov         eax,dword ptr [esp+24h]
  0000027E: 40                 inc         eax
  0000027F: 50                 push        eax
  00000280: 8D 44 24 4C        lea         eax,[esp+4Ch]
  00000284: 50                 push        eax
  00000285: FF 74 24 30        push        dword ptr [esp+30h]
  00000289: E8 00 00 00 00     call        _memcpy
  0000028E: 8B 44 24 2C        mov         eax,dword ptr [esp+2Ch]
  00000292: 83 C4 0C           add         esp,0Ch
  00000295: 50                 push        eax
  00000296: E8 00 00 00 00     call        _FT_Close@4
  0000029B: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  0000029F: 5D                 pop         ebp
  000002A0: 5B                 pop         ebx
  000002A1: 5F                 pop         edi
  000002A2: 5E                 pop         esi
  000002A3: 83 C4 78           add         esp,78h
  000002A6: C2 0C 00           ret         0Ch
  000002A9: 8B 44 24 48        mov         eax,dword ptr [esp+48h]
  000002AD: 89 06              mov         dword ptr [esi],eax
  000002AF: 8B 44 24 20        mov         eax,dword ptr [esp+20h]
  000002B3: 50                 push        eax
  000002B4: E8 00 00 00 00     call        _FT_Close@4
  000002B9: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  000002BD: 5D                 pop         ebp
  000002BE: 5B                 pop         ebx
  000002BF: 5F                 pop         edi
  000002C0: 5E                 pop         esi
  000002C1: 83 C4 78           add         esp,78h
  000002C4: C2 0C 00           ret         0Ch
  000002C7: 5D                 pop         ebp
  000002C8: 5B                 pop         ebx
  000002C9: 5F                 pop         edi
  000002CA: B8 06 00 00 00     mov         eax,6
  000002CF: 5E                 pop         esi
  000002D0: 83 C4 78           add         esp,78h
  000002D3: C2 0C 00           ret         0Ch

_FT_Open@8:
  00000000: 81 EC A8 00 00 00  sub         esp,0A8h
  00000006: 53                 push        ebx
  00000007: 56                 push        esi
  00000008: C7 44 24 0C 00 00  mov         dword ptr [esp+0Ch],0
            00 00
  00000010: 33 DB              xor         ebx,ebx
  00000012: 33 F6              xor         esi,esi
  00000014: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  00000019: 85 C0              test        eax,eax
  0000001B: 75 0E              jne         0000002B
  0000001D: 5E                 pop         esi
  0000001E: 8D 43 05           lea         eax,[ebx+5]
  00000021: 5B                 pop         ebx
  00000022: 81 C4 A8 00 00 00  add         esp,0A8h
  00000028: C2 08 00           ret         8
  0000002B: 55                 push        ebp
  0000002C: 6A FF              push        0FFFFFFFFh
  0000002E: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  00000034: FF 15 00 00 00 00  call        dword ptr [__imp__WaitForSingleObject@8]
  0000003A: 6A 12              push        12h
  0000003C: 6A 00              push        0
  0000003E: 6A 00              push        0
  00000040: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  00000045: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetClassDevsA@16]
  0000004B: 8B E8              mov         ebp,eax
  0000004D: 85 ED              test        ebp,ebp
  0000004F: 75 1B              jne         0000006C
  00000051: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  00000057: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  0000005D: 8D 45 02           lea         eax,[ebp+2]
  00000060: 5D                 pop         ebp
  00000061: 5E                 pop         esi
  00000062: 5B                 pop         ebx
  00000063: 81 C4 A8 00 00 00  add         esp,0A8h
  00000069: C2 08 00           ret         8
  0000006C: 57                 push        edi
  0000006D: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000071: C7 44 24 1C 1C 00  mov         dword ptr [esp+1Ch],1Ch
            00 00
  00000079: 50                 push        eax
  0000007A: FF B4 24 C0 00 00  push        dword ptr [esp+0C0h]
            00
  00000081: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  00000086: 6A 00              push        0
  00000088: 55                 push        ebp
  00000089: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiEnumDeviceInterfaces@20]
  0000008F: 85 C0              test        eax,eax
  00000091: 74 47              je          000000DA
  00000093: 8B 3D 00 00 00 00  mov         edi,dword ptr [__imp__SetupDiGetDeviceInterfaceDetailA@24]
  00000099: 8D 44 24 14        lea         eax,[esp+14h]
  0000009D: 6A 00              push        0
  0000009F: 50                 push        eax
  000000A0: 6A 00              push        0
  000000A2: 6A 00              push        0
  000000A4: 8D 44 24 2C        lea         eax,[esp+2Ch]
  000000A8: 50                 push        eax
  000000A9: 55                 push        ebp
  000000AA: FF D7              call        edi
  000000AC: 8B 74 24 14        mov         esi,dword ptr [esp+14h]
  000000B0: 56                 push        esi
  000000B1: FF 15 00 00 00 00  call        dword ptr [__imp__malloc]
  000000B7: 83 C4 04           add         esp,4
  000000BA: 8B D8              mov         ebx,eax
  000000BC: 8D 44 24 14        lea         eax,[esp+14h]
  000000C0: 6A 00              push        0
  000000C2: 50                 push        eax
  000000C3: 56                 push        esi
  000000C4: 53                 push        ebx
  000000C5: 8D 44 24 2C        lea         eax,[esp+2Ch]
  000000C9: C7 03 05 00 00 00  mov         dword ptr [ebx],5
  000000CF: 50                 push        eax
  000000D0: 55                 push        ebp
  000000D1: FF D7              call        edi
  000000D3: 85 C0              test        eax,eax
  000000D5: 75 40              jne         00000117
  000000D7: 53                 push        ebx
  000000D8: EB 0F              jmp         000000E9
  000000DA: FF 15 00 00 00 00  call        dword ptr [__imp__GetLastError@0]
  000000E0: 3D 03 01 00 00     cmp         eax,103h
  000000E5: 74 32              je          00000119
  000000E7: 6A 00              push        0
  000000E9: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  000000EF: 83 C4 04           add         esp,4
  000000F2: 55                 push        ebp
  000000F3: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  000000F9: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  000000FF: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  00000105: 5F                 pop         edi
  00000106: 5D                 pop         ebp
  00000107: 5E                 pop         esi
  00000108: B8 02 00 00 00     mov         eax,2
  0000010D: 5B                 pop         ebx
  0000010E: 81 C4 A8 00 00 00  add         esp,0A8h
  00000114: C2 08 00           ret         8
  00000117: 33 F6              xor         esi,esi
  00000119: 8D 84 24 9C 00 00  lea         eax,[esp+9Ch]
            00
  00000120: C7 84 24 9C 00 00  mov         dword ptr [esp+9Ch],1Ch
            00 1C 00 00 00
  0000012B: 50                 push        eax
  0000012C: FF B4 24 C0 00 00  push        dword ptr [esp+0C0h]
            00
  00000133: 55                 push        ebp
  00000134: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiEnumDeviceInfo@12]
  0000013A: 8B F8              mov         edi,eax
  0000013C: F7 DF              neg         edi
  0000013E: 55                 push        ebp
  0000013F: 1B FF              sbb         edi,edi
  00000141: 23 BC 24 B4 00 00  and         edi,dword ptr [esp+0B4h]
            00
  00000148: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  0000014E: 85 DB              test        ebx,ebx
  00000150: 74 A7              je          000000F9
  00000152: 83 3D 00 00 00 00  cmp         dword ptr [?gServer2016@@3HA],0
            00
  00000159: B8 00 00 80 00     mov         eax,800000h
  0000015E: 6A 00              push        0
  00000160: 0F 45 F0           cmovne      esi,eax
  00000163: 8D 43 04           lea         eax,[ebx+4]
  00000166: 56                 push        esi
  00000167: 6A 03              push        3
  00000169: 6A 00              push        0
  0000016B: 6A 00              push        0
  0000016D: 68 00 00 00 C0     push        0C0000000h
  00000172: 50                 push        eax
  00000173: FF 15 00 00 00 00  call        dword ptr [__imp__CreateFileA@28]
  00000179: 8B E8              mov         ebp,eax
  0000017B: 83 FD FF           cmp         ebp,0FFFFFFFFh
  0000017E: 75 28              jne         000001A8
  00000180: 53                 push        ebx
  00000181: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  00000187: 83 C4 04           add         esp,4
  0000018A: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  00000190: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  00000196: 5F                 pop         edi
  00000197: 5D                 pop         ebp
  00000198: 5E                 pop         esi
  00000199: B8 03 00 00 00     mov         eax,3
  0000019E: 5B                 pop         ebx
  0000019F: 81 C4 A8 00 00 00  add         esp,0A8h
  000001A5: C2 08 00           ret         8
  000001A8: E8 00 00 00 00     call        ?AddDevice@@YAPAUft_private_vars@@XZ
  000001AD: 8B F0              mov         esi,eax
  000001AF: 85 F6              test        esi,esi
  000001B1: 75 2D              jne         000001E0
  000001B3: 55                 push        ebp
  000001B4: FF 15 00 00 00 00  call        dword ptr [__imp__CloseHandle@4]
  000001BA: 53                 push        ebx
  000001BB: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  000001C1: 83 C4 04           add         esp,4
  000001C4: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  000001CA: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  000001D0: 5F                 pop         edi
  000001D1: 5D                 pop         ebp
  000001D2: 8D 46 05           lea         eax,[esi+5]
  000001D5: 5E                 pop         esi
  000001D6: 5B                 pop         ebx
  000001D7: 81 C4 A8 00 00 00  add         esp,0A8h
  000001DD: C2 08 00           ret         8
  000001E0: 6A 00              push        0
  000001E2: 8D 44 24 5C        lea         eax,[esp+5Ch]
  000001E6: 89 BE 84 00 00 00  mov         dword ptr [esi+84h],edi
  000001EC: 8B BC 24 C4 00 00  mov         edi,dword ptr [esp+0C4h]
            00
  000001F3: 50                 push        eax
  000001F4: 8D 44 24 50        lea         eax,[esp+50h]
  000001F8: 89 6E 08           mov         dword ptr [esi+8],ebp
  000001FB: 50                 push        eax
  000001FC: 8D 44 24 4C        lea         eax,[esp+4Ch]
  00000200: 89 5E 14           mov         dword ptr [esi+14h],ebx
  00000203: 50                 push        eax
  00000204: 8D 44 24 28        lea         eax,[esp+28h]
  00000208: 89 37              mov         dword ptr [edi],esi
  0000020A: 50                 push        eax
  0000020B: C7 46 1C 00 00 00  mov         dword ptr [esi+1Ch],offset ?Set1Ioctls@@3PAKA
            00
  00000212: FF 37              push        dword ptr [edi]
  00000214: E8 00 00 00 00     call        _FT_GetDeviceInfo@24
  00000219: 85 C0              test        eax,eax
  0000021B: 74 24              je          00000241
  0000021D: 6A 00              push        0
  0000021F: 8D 44 24 5C        lea         eax,[esp+5Ch]
  00000223: C7 46 1C 00 00 00  mov         dword ptr [esi+1Ch],offset ?Set2Ioctls@@3PAKA
            00
  0000022A: 50                 push        eax
  0000022B: 8D 44 24 50        lea         eax,[esp+50h]
  0000022F: 50                 push        eax
  00000230: 8D 44 24 4C        lea         eax,[esp+4Ch]
  00000234: 50                 push        eax
  00000235: 8D 44 24 28        lea         eax,[esp+28h]
  00000239: 50                 push        eax
  0000023A: FF 37              push        dword ptr [edi]
  0000023C: E8 00 00 00 00     call        _FT_GetDeviceInfo@24
  00000241: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  00000245: F3 0F 6F 44 24 48  movdqu      xmm0,xmmword ptr [esp+48h]
  0000024B: 89 46 18           mov         dword ptr [esi+18h],eax
  0000024E: 89 46 24           mov         dword ptr [esi+24h],eax
  00000251: 8B 44 24 40        mov         eax,dword ptr [esp+40h]
  00000255: 89 46 28           mov         dword ptr [esi+28h],eax
  00000258: 8D 44 24 10        lea         eax,[esp+10h]
  0000025C: F3 0F 7F 46 30     movdqu      xmmword ptr [esi+30h],xmm0
  00000261: 50                 push        eax
  00000262: F3 0F 6F 44 24 5C  movdqu      xmm0,xmmword ptr [esp+5Ch]
  00000268: F3 0F 7F 46 40     movdqu      xmmword ptr [esi+40h],xmm0
  0000026D: F3 0F 6F 44 24 6C  movdqu      xmm0,xmmword ptr [esp+6Ch]
  00000273: F3 0F 7F 46 50     movdqu      xmmword ptr [esi+50h],xmm0
  00000278: F3 0F 6F 44 24 7C  movdqu      xmm0,xmmword ptr [esp+7Ch]
  0000027E: F3 0F 7F 46 60     movdqu      xmmword ptr [esi+60h],xmm0
  00000283: F3 0F 6F 84 24 8C  movdqu      xmm0,xmmword ptr [esp+8Ch]
            00 00 00
  0000028C: F3 0F 7F 46 70     movdqu      xmmword ptr [esi+70h],xmm0
  00000291: 89 B6 80 00 00 00  mov         dword ptr [esi+80h],esi
  00000297: FF 37              push        dword ptr [edi]
  00000299: E8 00 00 00 00     call        ?FT_GetPacketSize@@YAKPAXPAG@Z
  0000029E: 83 C4 08           add         esp,8
  000002A1: 85 C0              test        eax,eax
  000002A3: 75 0C              jne         000002B1
  000002A5: 66 8B 44 24 10     mov         ax,word ptr [esp+10h]
  000002AA: 66 89 86 8C 00 00  mov         word ptr [esi+8Ch],ax
            00
  000002B1: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  000002B7: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  000002BD: 5F                 pop         edi
  000002BE: 5D                 pop         ebp
  000002BF: 5E                 pop         esi
  000002C0: 33 C0              xor         eax,eax
  000002C2: 5B                 pop         ebx
  000002C3: 81 C4 A8 00 00 00  add         esp,0A8h
  000002C9: C2 08 00           ret         8

_FT_OpenEx@12:
  00000000: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000004: 83 EC 60           sub         esp,60h
  00000007: 53                 push        ebx
  00000008: 55                 push        ebp
  00000009: 33 ED              xor         ebp,ebp
  0000000B: BB 02 00 00 00     mov         ebx,2
  00000010: A8 01              test        al,1
  00000012: 74 0A              je          0000001E
  00000014: C7 44 24 70 9C 00  mov         dword ptr [esp+70h],22009Ch
            22 00
  0000001C: EB 1E              jmp         0000003C
  0000001E: A8 02              test        al,2
  00000020: 74 0A              je          0000002C
  00000022: C7 44 24 70 A0 00  mov         dword ptr [esp+70h],2200A0h
            22 00
  0000002A: EB 10              jmp         0000003C
  0000002C: A8 04              test        al,4
  0000002E: 0F 84 9D 01 00 00  je          000001D1
  00000034: C7 44 24 70 A4 00  mov         dword ptr [esp+70h],2200A4h
            22 00
  0000003C: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  00000041: 85 C0              test        eax,eax
  00000043: 75 0D              jne         00000052
  00000045: 5D                 pop         ebp
  00000046: B8 05 00 00 00     mov         eax,5
  0000004B: 5B                 pop         ebx
  0000004C: 83 C4 60           add         esp,60h
  0000004F: C2 0C 00           ret         0Ch
  00000052: 56                 push        esi
  00000053: 6A 12              push        12h
  00000055: 6A 00              push        0
  00000057: 6A 00              push        0
  00000059: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  0000005E: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetClassDevsA@16]
  00000064: 8B F0              mov         esi,eax
  00000066: 85 F6              test        esi,esi
  00000068: 75 0B              jne         00000075
  0000006A: 5E                 pop         esi
  0000006B: 5D                 pop         ebp
  0000006C: 8B C3              mov         eax,ebx
  0000006E: 5B                 pop         ebx
  0000006F: 83 C4 60           add         esp,60h
  00000072: C2 0C 00           ret         0Ch
  00000075: 57                 push        edi
  00000076: 8B 3D 00 00 00 00  mov         edi,dword ptr [__imp__SetupDiEnumDeviceInterfaces@20]
  0000007C: 8D 44 24 14        lea         eax,[esp+14h]
  00000080: 50                 push        eax
  00000081: 6A 00              push        0
  00000083: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  00000088: 6A 00              push        0
  0000008A: 56                 push        esi
  0000008B: C7 44 24 28 1C 00  mov         dword ptr [esp+28h],1Ch
            00 00
  00000093: FF D7              call        edi
  00000095: 85 C0              test        eax,eax
  00000097: 74 1C              je          000000B5
  00000099: 8D A4 24 00 00 00  lea         esp,[esp]
            00
  000000A0: 8D 44 24 14        lea         eax,[esp+14h]
  000000A4: 45                 inc         ebp
  000000A5: 50                 push        eax
  000000A6: 55                 push        ebp
  000000A7: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  000000AC: 6A 00              push        0
  000000AE: 56                 push        esi
  000000AF: FF D7              call        edi
  000000B1: 85 C0              test        eax,eax
  000000B3: 75 EB              jne         000000A0
  000000B5: 56                 push        esi
  000000B6: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  000000BC: 33 F6              xor         esi,esi
  000000BE: 85 ED              test        ebp,ebp
  000000C0: 0F 84 F2 00 00 00  je          000001B8
  000000C6: 8B 7C 24 7C        mov         edi,dword ptr [esp+7Ch]
  000000CA: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  000000D0: 68 00 00 00 00     push        offset ?gCS@@3U_RTL_CRITICAL_SECTION@@A
  000000D5: FF 15 00 00 00 00  call        dword ptr [__imp__EnterCriticalSection@4]
  000000DB: 57                 push        edi
  000000DC: 56                 push        esi
  000000DD: E8 00 00 00 00     call        _FT_Open@8
  000000E2: 8B D8              mov         ebx,eax
  000000E4: 85 DB              test        ebx,ebx
  000000E6: 0F 85 90 00 00 00  jne         0000017C
  000000EC: 6A 40              push        40h
  000000EE: 50                 push        eax
  000000EF: 8D 44 24 38        lea         eax,[esp+38h]
  000000F3: 50                 push        eax
  000000F4: E8 00 00 00 00     call        _memset
  000000F9: 83 C4 0C           add         esp,0Ch
  000000FC: 8D 44 24 10        lea         eax,[esp+10h]
  00000100: 53                 push        ebx
  00000101: 50                 push        eax
  00000102: 6A 40              push        40h
  00000104: 8D 44 24 3C        lea         eax,[esp+3Ch]
  00000108: 50                 push        eax
  00000109: 6A 40              push        40h
  0000010B: 50                 push        eax
  0000010C: FF B4 24 90 00 00  push        dword ptr [esp+90h]
            00
  00000113: FF 37              push        dword ptr [edi]
  00000115: E8 00 00 00 00     call        _FT_IoCtl@32
  0000011A: 8B D8              mov         ebx,eax
  0000011C: 85 DB              test        ebx,ebx
  0000011E: 75 43              jne         00000163
  00000120: 81 7C 24 78 A4 00  cmp         dword ptr [esp+78h],2200A4h
            22 00
  00000128: 8B 44 24 74        mov         eax,dword ptr [esp+74h]
  0000012C: 74 2F              je          0000015D
  0000012E: 8D 4C 24 30        lea         ecx,[esp+30h]
  00000132: 8A 10              mov         dl,byte ptr [eax]
  00000134: 3A 11              cmp         dl,byte ptr [ecx]
  00000136: 75 1C              jne         00000154
  00000138: 84 D2              test        dl,dl
  0000013A: 74 12              je          0000014E
  0000013C: 8A 50 01           mov         dl,byte ptr [eax+1]
  0000013F: 3A 51 01           cmp         dl,byte ptr [ecx+1]
  00000142: 75 10              jne         00000154
  00000144: 83 C0 02           add         eax,2
  00000147: 83 C1 02           add         ecx,2
  0000014A: 84 D2              test        dl,dl
  0000014C: 75 E4              jne         00000132
  0000014E: 33 C0              xor         eax,eax
  00000150: 85 C0              test        eax,eax
  00000152: EB 0D              jmp         00000161
  00000154: 1B C0              sbb         eax,eax
  00000156: 83 C8 01           or          eax,1
  00000159: 85 C0              test        eax,eax
  0000015B: EB 04              jmp         00000161
  0000015D: 3B 44 24 30        cmp         eax,dword ptr [esp+30h]
  00000161: 74 61              je          000001C4
  00000163: FF 37              push        dword ptr [edi]
  00000165: E8 00 00 00 00     call        _FT_Close@4
  0000016A: 68 00 00 00 00     push        offset ?gCS@@3U_RTL_CRITICAL_SECTION@@A
  0000016F: FF 15 00 00 00 00  call        dword ptr [__imp__LeaveCriticalSection@4]
  00000175: BB 02 00 00 00     mov         ebx,2
  0000017A: EB 0B              jmp         00000187
  0000017C: 68 00 00 00 00     push        offset ?gCS@@3U_RTL_CRITICAL_SECTION@@A
  00000181: FF 15 00 00 00 00  call        dword ptr [__imp__LeaveCriticalSection@4]
  00000187: 46                 inc         esi
  00000188: 3B F5              cmp         esi,ebp
  0000018A: 0F 82 40 FF FF FF  jb          000000D0
  00000190: 85 DB              test        ebx,ebx
  00000192: 75 24              jne         000001B8
  00000194: 6A 00              push        0
  00000196: 6A 00              push        0
  00000198: 6A 00              push        0
  0000019A: 6A 00              push        0
  0000019C: 8D 84 24 84 00 00  lea         eax,[esp+84h]
            00
  000001A3: 50                 push        eax
  000001A4: FF 37              push        dword ptr [edi]
  000001A6: E8 00 00 00 00     call        _FT_GetDeviceInfo@24
  000001AB: 85 C0              test        eax,eax
  000001AD: 75 09              jne         000001B8
  000001AF: 8B 0F              mov         ecx,dword ptr [edi]
  000001B1: 8B 44 24 74        mov         eax,dword ptr [esp+74h]
  000001B5: 89 41 18           mov         dword ptr [ecx+18h],eax
  000001B8: 5F                 pop         edi
  000001B9: 5E                 pop         esi
  000001BA: 5D                 pop         ebp
  000001BB: 8B C3              mov         eax,ebx
  000001BD: 5B                 pop         ebx
  000001BE: 83 C4 60           add         esp,60h
  000001C1: C2 0C 00           ret         0Ch
  000001C4: 68 00 00 00 00     push        offset ?gCS@@3U_RTL_CRITICAL_SECTION@@A
  000001C9: FF 15 00 00 00 00  call        dword ptr [__imp__LeaveCriticalSection@4]
  000001CF: EB C3              jmp         00000194
  000001D1: 5D                 pop         ebp
  000001D2: B8 06 00 00 00     mov         eax,6
  000001D7: 5B                 pop         ebx
  000001D8: 83 C4 60           add         esp,60h
  000001DB: C2 0C 00           ret         0Ch

_FT_Purge@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 08 00           ret         8
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 04              push        4
  00000032: 8D 54 24 1C        lea         edx,[esp+1Ch]
  00000036: 52                 push        edx
  00000037: FF B0 4C 01 00 00  push        dword ptr [eax+14Ch]
  0000003D: FF 71 08           push        dword ptr [ecx+8]
  00000040: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000046: F7 D8              neg         eax
  00000048: 1B C0              sbb         eax,eax
  0000004A: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004D: 83 C0 04           add         eax,4
  00000050: C2 08 00           ret         8

_FT_Read@16:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 10 00           ret         10h
  00000022: 56                 push        esi
  00000023: 8B 74 24 14        mov         esi,dword ptr [esp+14h]
  00000027: 6A 00              push        0
  00000029: 56                 push        esi
  0000002A: FF 74 24 18        push        dword ptr [esp+18h]
  0000002E: C7 06 00 00 00 00  mov         dword ptr [esi],0
  00000034: FF 74 24 18        push        dword ptr [esp+18h]
  00000038: FF 71 08           push        dword ptr [ecx+8]
  0000003B: FF 15 00 00 00 00  call        dword ptr [__imp__ReadFile@20]
  00000041: 85 C0              test        eax,eax
  00000043: 75 0D              jne         00000052
  00000045: 39 06              cmp         dword ptr [esi],eax
  00000047: 75 09              jne         00000052
  00000049: B8 04 00 00 00     mov         eax,4
  0000004E: 5E                 pop         esi
  0000004F: C2 10 00           ret         10h
  00000052: 33 C0              xor         eax,eax
  00000054: 5E                 pop         esi
  00000055: C2 10 00           ret         10h

_FT_ReadEE@12:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 0C 00           ret         0Ch
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 02              push        2
  0000002E: FF 74 24 18        push        dword ptr [esp+18h]
  00000032: 8D 54 24 18        lea         edx,[esp+18h]
  00000036: 6A 04              push        4
  00000038: 52                 push        edx
  00000039: FF B0 80 00 00 00  push        dword ptr [eax+80h]
  0000003F: FF 71 08           push        dword ptr [ecx+8]
  00000042: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000048: F7 D8              neg         eax
  0000004A: 1B C0              sbb         eax,eax
  0000004C: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004F: 83 C0 04           add         eax,4
  00000052: C2 0C 00           ret         0Ch

_FT_Reload@8:
  00000000: 66 8B 4C 24 04     mov         cx,word ptr [esp+4]
  00000005: 83 EC 50           sub         esp,50h
  00000008: 56                 push        esi
  00000009: 66 8B 74 24 5C     mov         si,word ptr [esp+5Ch]
  0000000E: 66 85 C9           test        cx,cx
  00000011: 75 41              jne         00000054
  00000013: 66 85 F6           test        si,si
  00000016: 75 3C              jne         00000054
  00000018: 8D 44 24 58        lea         eax,[esp+58h]
  0000001C: C7 44 24 58 00 00  mov         dword ptr [esp+58h],offset ??_C@_0N@EHFJGMNP@USB?2ROOT_HUB?$AA@
            00 00
  00000024: 50                 push        eax
  00000025: 6A 01              push        1
  00000027: 6A 00              push        0
  00000029: 6A 00              push        0
  0000002B: E8 00 00 00 00     call        ?cmdRestart@@YAHPBD0HQAPAD@Z
  00000030: 8D 44 24 68        lea         eax,[esp+68h]
  00000034: C7 44 24 68 00 00  mov         dword ptr [esp+68h],offset ??_C@_0P@LKANLEPH@USB?2ROOT_HUB20?$AA@
            00 00
  0000003C: 50                 push        eax
  0000003D: 6A 01              push        1
  0000003F: 6A 00              push        0
  00000041: 6A 00              push        0
  00000043: E8 00 00 00 00     call        ?cmdRestart@@YAHPBD0HQAPAD@Z
  00000048: 83 C4 20           add         esp,20h
  0000004B: 33 C0              xor         eax,eax
  0000004D: 5E                 pop         esi
  0000004E: 83 C4 50           add         esp,50h
  00000051: C2 08 00           ret         8
  00000054: A1 10 00 00 00     mov         eax,dword ptr [??_C@_0BG@NCALHNG@USB?2VID_0000?$CGPID_0000?$AA@+10h]
  00000059: 8D 54 24 0F        lea         edx,[esp+0Fh]
  0000005D: 89 44 24 14        mov         dword ptr [esp+14h],eax
  00000061: 66 A1 14 00 00 00  mov         ax,word ptr [??_C@_0BG@NCALHNG@USB?2VID_0000?$CGPID_0000?$AA@+14h]
  00000067: 66 89 44 24 18     mov         word ptr [esp+18h],ax
  0000006C: 0F B7 C1           movzx       eax,cx
  0000006F: 89 44 24 58        mov         dword ptr [esp+58h],eax
  00000073: F3 0F 6F 05 00 00  movdqu      xmm0,xmmword ptr [??_C@_0BG@NCALHNG@USB?2VID_0000?$CGPID_0000?$AA@]
            00 00
  0000007B: F3 0F 7F 44 24 04  movdqu      xmmword ptr [esp+4],xmm0
  00000081: 66 85 C9           test        cx,cx
  00000084: 74 2B              je          000000B1
  00000086: 66 8B C8           mov         cx,ax
  00000089: 8D A4 24 00 00 00  lea         esp,[esp]
            00
  00000090: 0F B7 C1           movzx       eax,cx
  00000093: 25 0F 00 00 80     and         eax,8000000Fh
  00000098: 79 05              jns         0000009F
  0000009A: 48                 dec         eax
  0000009B: 83 C8 F0           or          eax,0FFFFFFF0h
  0000009E: 40                 inc         eax
  0000009F: 8A 80 00 00 00 00  mov         al,byte ptr ??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@[eax]
  000000A5: 88 02              mov         byte ptr [edx],al
  000000A7: 4A                 dec         edx
  000000A8: 66 C1 E9 04        shr         cx,4
  000000AC: 66 85 C9           test        cx,cx
  000000AF: 75 DF              jne         00000090
  000000B1: 0F B7 C6           movzx       eax,si
  000000B4: 8D 54 24 18        lea         edx,[esp+18h]
  000000B8: 89 44 24 58        mov         dword ptr [esp+58h],eax
  000000BC: 66 85 F6           test        si,si
  000000BF: 74 24              je          000000E5
  000000C1: 66 8B C8           mov         cx,ax
  000000C4: 0F B7 C1           movzx       eax,cx
  000000C7: 25 0F 00 00 80     and         eax,8000000Fh
  000000CC: 79 05              jns         000000D3
  000000CE: 48                 dec         eax
  000000CF: 83 C8 F0           or          eax,0FFFFFFF0h
  000000D2: 40                 inc         eax
  000000D3: 8A 80 00 00 00 00  mov         al,byte ptr ??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@[eax]
  000000D9: 88 02              mov         byte ptr [edx],al
  000000DB: 4A                 dec         edx
  000000DC: 66 C1 E9 04        shr         cx,4
  000000E0: 66 85 C9           test        cx,cx
  000000E3: 75 DF              jne         000000C4
  000000E5: 8D 44 24 04        lea         eax,[esp+4]
  000000E9: 89 44 24 58        mov         dword ptr [esp+58h],eax
  000000ED: 8D 44 24 58        lea         eax,[esp+58h]
  000000F1: 50                 push        eax
  000000F2: 6A 01              push        1
  000000F4: 6A 00              push        0
  000000F6: 6A 00              push        0
  000000F8: E8 00 00 00 00     call        ?cmdRestart@@YAHPBD0HQAPAD@Z
  000000FD: 83 C4 10           add         esp,10h
  00000100: 33 C0              xor         eax,eax
  00000102: 5E                 pop         esi
  00000103: 83 C4 50           add         esp,50h
  00000106: C2 08 00           ret         8

_FT_Rescan@0:
  00000000: E9 00 00 00 00     jmp         ?ListClass@@YAKXZ

_FT_ResetDevice@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF 70 04           push        dword ptr [eax+4]
  00000037: FF 71 08           push        dword ptr [ecx+8]
  0000003A: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000040: F7 D8              neg         eax
  00000042: 1B C0              sbb         eax,eax
  00000044: 83 E0 FC           and         eax,0FFFFFFFCh
  00000047: 83 C0 04           add         eax,4
  0000004A: C2 04 00           ret         4

_FT_ResetPort@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 A8 01 00 00  push        dword ptr [eax+1A8h]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C2 04 00           ret         4

_FT_RestartInTask@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 A0 01 00 00  push        dword ptr [eax+1A0h]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C2 04 00           ret         4

_FT_SetBaudRate@8:
  00000000: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000004: 89 44 24 08        mov         dword ptr [esp+8],eax
  00000008: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  0000000D: 85 C0              test        eax,eax
  0000000F: 74 0E              je          0000001F
  00000011: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  00000015: 3B C1              cmp         eax,ecx
  00000017: 74 0E              je          00000027
  00000019: 8B 00              mov         eax,dword ptr [eax]
  0000001B: 85 C0              test        eax,eax
  0000001D: 75 F6              jne         00000015
  0000001F: B8 01 00 00 00     mov         eax,1
  00000024: C2 08 00           ret         8
  00000027: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000002A: 8D 54 24 04        lea         edx,[esp+4]
  0000002E: 6A 00              push        0
  00000030: 52                 push        edx
  00000031: 6A 00              push        0
  00000033: 6A 00              push        0
  00000035: 6A 04              push        4
  00000037: 8D 54 24 1C        lea         edx,[esp+1Ch]
  0000003B: 52                 push        edx
  0000003C: FF B0 04 01 00 00  push        dword ptr [eax+104h]
  00000042: FF 71 08           push        dword ptr [ecx+8]
  00000045: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000004B: F7 D8              neg         eax
  0000004D: B9 07 00 00 00     mov         ecx,7
  00000052: 1B C0              sbb         eax,eax
  00000054: 83 E0 FC           and         eax,0FFFFFFFCh
  00000057: 83 C0 04           add         eax,4
  0000005A: 83 F8 04           cmp         eax,4
  0000005D: 0F 44 C1           cmove       eax,ecx
  00000060: C2 08 00           ret         8

_FT_SetBitMode@12:
  00000000: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000004: 88 44 24 08        mov         byte ptr [esp+8],al
  00000008: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  0000000C: 88 44 24 09        mov         byte ptr [esp+9],al
  00000010: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000015: 85 C0              test        eax,eax
  00000017: 74 11              je          0000002A
  00000019: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000001D: 8D 49 00           lea         ecx,[ecx]
  00000020: 3B C1              cmp         eax,ecx
  00000022: 74 0E              je          00000032
  00000024: 8B 00              mov         eax,dword ptr [eax]
  00000026: 85 C0              test        eax,eax
  00000028: 75 F6              jne         00000020
  0000002A: B8 01 00 00 00     mov         eax,1
  0000002F: C2 0C 00           ret         0Ch
  00000032: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000035: 8D 54 24 0C        lea         edx,[esp+0Ch]
  00000039: 6A 00              push        0
  0000003B: 52                 push        edx
  0000003C: 6A 00              push        0
  0000003E: 6A 00              push        0
  00000040: 6A 02              push        2
  00000042: 8D 54 24 1C        lea         edx,[esp+1Ch]
  00000046: 52                 push        edx
  00000047: FF B0 78 01 00 00  push        dword ptr [eax+178h]
  0000004D: FF 71 08           push        dword ptr [ecx+8]
  00000050: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000056: F7 D8              neg         eax
  00000058: 1B C0              sbb         eax,eax
  0000005A: 83 E0 FC           and         eax,0FFFFFFFCh
  0000005D: 83 C0 04           add         eax,4
  00000060: C2 0C 00           ret         0Ch

_FT_SetBreakOff@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 14 01 00 00  push        dword ptr [eax+114h]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C2 04 00           ret         4

_FT_SetBreakOn@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 10 01 00 00  push        dword ptr [eax+110h]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C2 04 00           ret         4

_FT_SetChars@20:
  00000000: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000004: 88 44 24 08        mov         byte ptr [esp+8],al
  00000008: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  0000000C: 88 44 24 09        mov         byte ptr [esp+9],al
  00000010: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000014: 88 44 24 0A        mov         byte ptr [esp+0Ah],al
  00000018: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  0000001C: 88 44 24 0B        mov         byte ptr [esp+0Bh],al
  00000020: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000025: 85 C0              test        eax,eax
  00000027: 74 11              je          0000003A
  00000029: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000002D: 8D 49 00           lea         ecx,[ecx]
  00000030: 3B C1              cmp         eax,ecx
  00000032: 74 0E              je          00000042
  00000034: 8B 00              mov         eax,dword ptr [eax]
  00000036: 85 C0              test        eax,eax
  00000038: 75 F6              jne         00000030
  0000003A: B8 01 00 00 00     mov         eax,1
  0000003F: C2 14 00           ret         14h
  00000042: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000045: 8D 54 24 0C        lea         edx,[esp+0Ch]
  00000049: 6A 00              push        0
  0000004B: 52                 push        edx
  0000004C: 6A 00              push        0
  0000004E: 6A 00              push        0
  00000050: 6A 04              push        4
  00000052: 8D 54 24 1C        lea         edx,[esp+1Ch]
  00000056: 52                 push        edx
  00000057: FF B0 5C 01 00 00  push        dword ptr [eax+15Ch]
  0000005D: FF 71 08           push        dword ptr [ecx+8]
  00000060: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000066: F7 D8              neg         eax
  00000068: 1B C0              sbb         eax,eax
  0000006A: 83 E0 FC           and         eax,0FFFFFFFCh
  0000006D: 83 C0 04           add         eax,4
  00000070: C2 14 00           ret         14h

_FT_SetDataCharacteristics@16:
  00000000: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000004: 88 44 24 0A        mov         byte ptr [esp+0Ah],al
  00000008: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  0000000C: 88 44 24 08        mov         byte ptr [esp+8],al
  00000010: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000014: 88 44 24 09        mov         byte ptr [esp+9],al
  00000018: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  0000001D: 85 C0              test        eax,eax
  0000001F: 74 0E              je          0000002F
  00000021: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  00000025: 3B C1              cmp         eax,ecx
  00000027: 74 0E              je          00000037
  00000029: 8B 00              mov         eax,dword ptr [eax]
  0000002B: 85 C0              test        eax,eax
  0000002D: 75 F6              jne         00000025
  0000002F: B8 01 00 00 00     mov         eax,1
  00000034: C2 10 00           ret         10h
  00000037: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000003A: 8D 54 24 0C        lea         edx,[esp+0Ch]
  0000003E: 6A 00              push        0
  00000040: 52                 push        edx
  00000041: 6A 00              push        0
  00000043: 6A 00              push        0
  00000045: 6A 03              push        3
  00000047: 8D 54 24 1C        lea         edx,[esp+1Ch]
  0000004B: 52                 push        edx
  0000004C: FF B0 0C 01 00 00  push        dword ptr [eax+10Ch]
  00000052: FF 71 08           push        dword ptr [ecx+8]
  00000055: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000005B: F7 D8              neg         eax
  0000005D: 1B C0              sbb         eax,eax
  0000005F: 83 E0 FC           and         eax,0FFFFFFFCh
  00000062: 83 C0 04           add         eax,4
  00000065: C2 10 00           ret         10h

_FT_SetDeadmanTimeout@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 08 00           ret         8
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 04              push        4
  00000032: 8D 54 24 1C        lea         edx,[esp+1Ch]
  00000036: 52                 push        edx
  00000037: FF B0 AC 01 00 00  push        dword ptr [eax+1ACh]
  0000003D: FF 71 08           push        dword ptr [ecx+8]
  00000040: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000046: F7 D8              neg         eax
  00000048: 1B C0              sbb         eax,eax
  0000004A: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004D: 83 C0 04           add         eax,4
  00000050: C2 08 00           ret         8

_FT_SetDivisor@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 08 00           ret         8
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 02              push        2
  00000032: 8D 54 24 1C        lea         edx,[esp+1Ch]
  00000036: 52                 push        edx
  00000037: FF B0 98 00 00 00  push        dword ptr [eax+98h]
  0000003D: FF 71 08           push        dword ptr [ecx+8]
  00000040: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000046: F7 D8              neg         eax
  00000048: 1B C0              sbb         eax,eax
  0000004A: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004D: 83 C0 04           add         eax,4
  00000050: C2 08 00           ret         8

_FT_SetDtr@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 24 01 00 00  push        dword ptr [eax+124h]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C2 04 00           ret         4

_FT_SetEventNotification@12:
  00000000: 83 EC 0C           sub         esp,0Ch
  00000003: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000007: 8B 4C 24 10        mov         ecx,dword ptr [esp+10h]
  0000000B: 89 44 24 04        mov         dword ptr [esp+4],eax
  0000000F: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  00000013: 89 44 24 08        mov         dword ptr [esp+8],eax
  00000017: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  0000001C: 89 0C 24           mov         dword ptr [esp],ecx
  0000001F: 85 C0              test        eax,eax
  00000021: 74 0A              je          0000002D
  00000023: 3B C1              cmp         eax,ecx
  00000025: 74 11              je          00000038
  00000027: 8B 00              mov         eax,dword ptr [eax]
  00000029: 85 C0              test        eax,eax
  0000002B: 75 F6              jne         00000023
  0000002D: B8 01 00 00 00     mov         eax,1
  00000032: 83 C4 0C           add         esp,0Ch
  00000035: C2 0C 00           ret         0Ch
  00000038: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000003B: 8D 54 24 10        lea         edx,[esp+10h]
  0000003F: 6A 00              push        0
  00000041: 52                 push        edx
  00000042: 6A 00              push        0
  00000044: 6A 00              push        0
  00000046: 6A 0C              push        0Ch
  00000048: 8D 54 24 14        lea         edx,[esp+14h]
  0000004C: 52                 push        edx
  0000004D: FF B0 8C 00 00 00  push        dword ptr [eax+8Ch]
  00000053: FF 71 08           push        dword ptr [ecx+8]
  00000056: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000005C: F7 D8              neg         eax
  0000005E: 1B C0              sbb         eax,eax
  00000060: 83 E0 FC           and         eax,0FFFFFFFCh
  00000063: 83 C0 04           add         eax,4
  00000066: 83 C4 0C           add         esp,0Ch
  00000069: C2 0C 00           ret         0Ch

_FT_SetFlowControl@16:
  00000000: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000004: 66 89 44 24 08     mov         word ptr [esp+8],ax
  00000009: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  0000000D: 88 44 24 0A        mov         byte ptr [esp+0Ah],al
  00000011: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000015: 88 44 24 0B        mov         byte ptr [esp+0Bh],al
  00000019: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  0000001E: 85 C0              test        eax,eax
  00000020: 74 0E              je          00000030
  00000022: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  00000026: 3B C1              cmp         eax,ecx
  00000028: 74 0E              je          00000038
  0000002A: 8B 00              mov         eax,dword ptr [eax]
  0000002C: 85 C0              test        eax,eax
  0000002E: 75 F6              jne         00000026
  00000030: B8 01 00 00 00     mov         eax,1
  00000035: C2 10 00           ret         10h
  00000038: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000003B: 8D 54 24 0C        lea         edx,[esp+0Ch]
  0000003F: 6A 00              push        0
  00000041: 52                 push        edx
  00000042: 6A 00              push        0
  00000044: 6A 00              push        0
  00000046: 6A 04              push        4
  00000048: 8D 54 24 1C        lea         edx,[esp+1Ch]
  0000004C: 52                 push        edx
  0000004D: FF B0 64 01 00 00  push        dword ptr [eax+164h]
  00000053: FF 71 08           push        dword ptr [ecx+8]
  00000056: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000005C: F7 D8              neg         eax
  0000005E: 1B C0              sbb         eax,eax
  00000060: 83 E0 FC           and         eax,0FFFFFFFCh
  00000063: 83 C0 04           add         eax,4
  00000066: C2 10 00           ret         10h

_FT_SetLatencyTimer@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 08 00           ret         8
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 01              push        1
  00000032: 8D 54 24 1C        lea         edx,[esp+1Ch]
  00000036: 52                 push        edx
  00000037: FF B0 70 01 00 00  push        dword ptr [eax+170h]
  0000003D: FF 71 08           push        dword ptr [ecx+8]
  00000040: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000046: F7 D8              neg         eax
  00000048: 1B C0              sbb         eax,eax
  0000004A: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004D: 83 C0 04           add         eax,4
  00000050: C2 08 00           ret         8

_FT_SetResetPipeRetryCount@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 08 00           ret         8
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 04              push        4
  00000032: 8D 54 24 1C        lea         edx,[esp+1Ch]
  00000036: 52                 push        edx
  00000037: FF B0 A4 01 00 00  push        dword ptr [eax+1A4h]
  0000003D: FF 71 08           push        dword ptr [ecx+8]
  00000040: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000046: F7 D8              neg         eax
  00000048: 1B C0              sbb         eax,eax
  0000004A: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004D: 83 C0 04           add         eax,4
  00000050: C2 08 00           ret         8

_FT_SetRts@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 30 01 00 00  push        dword ptr [eax+130h]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C2 04 00           ret         4

_FT_SetTimeouts@12:
  00000000: 83 EC 08           sub         esp,8
  00000003: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000007: 89 04 24           mov         dword ptr [esp],eax
  0000000A: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  0000000E: 89 44 24 04        mov         dword ptr [esp+4],eax
  00000012: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000017: 85 C0              test        eax,eax
  00000019: 74 0F              je          0000002A
  0000001B: 8B 4C 24 0C        mov         ecx,dword ptr [esp+0Ch]
  0000001F: 90                 nop
  00000020: 3B C1              cmp         eax,ecx
  00000022: 74 11              je          00000035
  00000024: 8B 00              mov         eax,dword ptr [eax]
  00000026: 85 C0              test        eax,eax
  00000028: 75 F6              jne         00000020
  0000002A: B8 01 00 00 00     mov         eax,1
  0000002F: 83 C4 08           add         esp,8
  00000032: C2 0C 00           ret         0Ch
  00000035: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000038: 8D 54 24 10        lea         edx,[esp+10h]
  0000003C: 6A 00              push        0
  0000003E: 52                 push        edx
  0000003F: 6A 00              push        0
  00000041: 6A 00              push        0
  00000043: 6A 08              push        8
  00000045: 8D 54 24 14        lea         edx,[esp+14h]
  00000049: 52                 push        edx
  0000004A: FF B0 1C 01 00 00  push        dword ptr [eax+11Ch]
  00000050: FF 71 08           push        dword ptr [ecx+8]
  00000053: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000059: F7 D8              neg         eax
  0000005B: 1B C0              sbb         eax,eax
  0000005D: 83 E0 FC           and         eax,0FFFFFFFCh
  00000060: 83 C0 04           add         eax,4
  00000063: 83 C4 08           add         esp,8
  00000066: C2 0C 00           ret         0Ch

_FT_SetUSBParameters@12:
  00000000: 83 EC 08           sub         esp,8
  00000003: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000007: 89 04 24           mov         dword ptr [esp],eax
  0000000A: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  0000000E: 89 44 24 04        mov         dword ptr [esp+4],eax
  00000012: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000017: 85 C0              test        eax,eax
  00000019: 74 0F              je          0000002A
  0000001B: 8B 4C 24 0C        mov         ecx,dword ptr [esp+0Ch]
  0000001F: 90                 nop
  00000020: 3B C1              cmp         eax,ecx
  00000022: 74 11              je          00000035
  00000024: 8B 00              mov         eax,dword ptr [eax]
  00000026: 85 C0              test        eax,eax
  00000028: 75 F6              jne         00000020
  0000002A: B8 01 00 00 00     mov         eax,1
  0000002F: 83 C4 08           add         esp,8
  00000032: C2 0C 00           ret         0Ch
  00000035: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000038: 8D 54 24 10        lea         edx,[esp+10h]
  0000003C: 6A 00              push        0
  0000003E: 52                 push        edx
  0000003F: 6A 00              push        0
  00000041: 6A 00              push        0
  00000043: 6A 08              push        8
  00000045: 8D 54 24 14        lea         edx,[esp+14h]
  00000049: 52                 push        edx
  0000004A: FF B0 80 01 00 00  push        dword ptr [eax+180h]
  00000050: FF 71 08           push        dword ptr [ecx+8]
  00000053: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000059: F7 D8              neg         eax
  0000005B: 1B C0              sbb         eax,eax
  0000005D: 83 E0 FC           and         eax,0FFFFFFFCh
  00000060: 83 C0 04           add         eax,4
  00000063: 83 C4 08           add         esp,8
  00000066: C2 0C 00           ret         0Ch

_FT_SetWaitMask@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 08 00           ret         8
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 04              push        4
  00000032: 8D 54 24 1C        lea         edx,[esp+1Ch]
  00000036: 52                 push        edx
  00000037: FF B0 44 01 00 00  push        dword ptr [eax+144h]
  0000003D: FF 71 08           push        dword ptr [ecx+8]
  00000040: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000046: F7 D8              neg         eax
  00000048: 1B C0              sbb         eax,eax
  0000004A: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004D: 83 C0 04           add         eax,4
  00000050: C2 08 00           ret         8

_FT_StopInTask@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 04 00           ret         4
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 00              push        0
  0000002E: 6A 00              push        0
  00000030: 6A 00              push        0
  00000032: 6A 00              push        0
  00000034: FF B0 9C 01 00 00  push        dword ptr [eax+19Ch]
  0000003A: FF 71 08           push        dword ptr [ecx+8]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000043: F7 D8              neg         eax
  00000045: 1B C0              sbb         eax,eax
  00000047: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004A: 83 C0 04           add         eax,4
  0000004D: C2 04 00           ret         4

_FT_VendorCmdGet@16:
  00000000: 81 EC 88 00 00 00  sub         esp,88h
  00000006: 8B 84 24 90 00 00  mov         eax,dword ptr [esp+90h]
            00
  0000000D: 57                 push        edi
  0000000E: 66 8B BC 24 9C 00  mov         di,word ptr [esp+9Ch]
            00 00
  00000016: 88 44 24 08        mov         byte ptr [esp+8],al
  0000001A: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  0000001F: C6 44 24 09 00     mov         byte ptr [esp+9],0
  00000024: 66 89 7C 24 0A     mov         word ptr [esp+0Ah],di
  00000029: 85 C0              test        eax,eax
  0000002B: 74 11              je          0000003E
  0000002D: 8B 8C 24 90 00 00  mov         ecx,dword ptr [esp+90h]
            00
  00000034: 3B C1              cmp         eax,ecx
  00000036: 74 15              je          0000004D
  00000038: 8B 00              mov         eax,dword ptr [eax]
  0000003A: 85 C0              test        eax,eax
  0000003C: 75 F6              jne         00000034
  0000003E: B8 01 00 00 00     mov         eax,1
  00000043: 5F                 pop         edi
  00000044: 81 C4 88 00 00 00  add         esp,88h
  0000004A: C2 10 00           ret         10h
  0000004D: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000050: 8D 54 24 04        lea         edx,[esp+4]
  00000054: 56                 push        esi
  00000055: 6A 00              push        0
  00000057: 52                 push        edx
  00000058: 68 84 00 00 00     push        84h
  0000005D: 8D 54 24 18        lea         edx,[esp+18h]
  00000061: 52                 push        edx
  00000062: 68 84 00 00 00     push        84h
  00000067: 52                 push        edx
  00000068: FF B0 E4 01 00 00  push        dword ptr [eax+1E4h]
  0000006E: FF 71 08           push        dword ptr [ecx+8]
  00000071: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000077: 8B F0              mov         esi,eax
  00000079: F7 DE              neg         esi
  0000007B: 1B F6              sbb         esi,esi
  0000007D: 83 E6 FC           and         esi,0FFFFFFFCh
  00000080: 83 C6 04           add         esi,4
  00000083: 75 18              jne         0000009D
  00000085: 0F B7 CF           movzx       ecx,di
  00000088: 8D 44 24 10        lea         eax,[esp+10h]
  0000008C: 51                 push        ecx
  0000008D: 50                 push        eax
  0000008E: FF B4 24 A4 00 00  push        dword ptr [esp+0A4h]
            00
  00000095: E8 00 00 00 00     call        _memcpy
  0000009A: 83 C4 0C           add         esp,0Ch
  0000009D: 8B C6              mov         eax,esi
  0000009F: 5E                 pop         esi
  000000A0: 5F                 pop         edi
  000000A1: 81 C4 88 00 00 00  add         esp,88h
  000000A7: C2 10 00           ret         10h

_FT_VendorCmdGetEx@16:
  00000000: 81 EC 8C 00 00 00  sub         esp,8Ch
  00000006: 8B 84 24 94 00 00  mov         eax,dword ptr [esp+94h]
            00
  0000000D: 57                 push        edi
  0000000E: 66 8B BC 24 A0 00  mov         di,word ptr [esp+0A0h]
            00 00
  00000016: 66 89 44 24 08     mov         word ptr [esp+8],ax
  0000001B: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000020: C6 44 24 0A 00     mov         byte ptr [esp+0Ah],0
  00000025: 66 89 7C 24 0C     mov         word ptr [esp+0Ch],di
  0000002A: 85 C0              test        eax,eax
  0000002C: 74 11              je          0000003F
  0000002E: 8B 8C 24 94 00 00  mov         ecx,dword ptr [esp+94h]
            00
  00000035: 3B C1              cmp         eax,ecx
  00000037: 74 15              je          0000004E
  00000039: 8B 00              mov         eax,dword ptr [eax]
  0000003B: 85 C0              test        eax,eax
  0000003D: 75 F6              jne         00000035
  0000003F: B8 01 00 00 00     mov         eax,1
  00000044: 5F                 pop         edi
  00000045: 81 C4 8C 00 00 00  add         esp,8Ch
  0000004B: C2 10 00           ret         10h
  0000004E: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000051: 8D 54 24 04        lea         edx,[esp+4]
  00000055: 56                 push        esi
  00000056: 6A 00              push        0
  00000058: 52                 push        edx
  00000059: 68 86 00 00 00     push        86h
  0000005E: 8D 54 24 18        lea         edx,[esp+18h]
  00000062: 52                 push        edx
  00000063: 68 86 00 00 00     push        86h
  00000068: 52                 push        edx
  00000069: FF B0 EC 01 00 00  push        dword ptr [eax+1ECh]
  0000006F: FF 71 08           push        dword ptr [ecx+8]
  00000072: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000078: 8B F0              mov         esi,eax
  0000007A: F7 DE              neg         esi
  0000007C: 1B F6              sbb         esi,esi
  0000007E: 83 E6 FC           and         esi,0FFFFFFFCh
  00000081: 83 C6 04           add         esi,4
  00000084: 75 18              jne         0000009E
  00000086: 0F B7 CF           movzx       ecx,di
  00000089: 8D 44 24 12        lea         eax,[esp+12h]
  0000008D: 51                 push        ecx
  0000008E: 50                 push        eax
  0000008F: FF B4 24 A8 00 00  push        dword ptr [esp+0A8h]
            00
  00000096: E8 00 00 00 00     call        _memcpy
  0000009B: 83 C4 0C           add         esp,0Ch
  0000009E: 8B C6              mov         eax,esi
  000000A0: 5E                 pop         esi
  000000A1: 5F                 pop         edi
  000000A2: 81 C4 8C 00 00 00  add         esp,8Ch
  000000A8: C2 10 00           ret         10h

_FT_VendorCmdSet@16:
  00000000: 81 EC 88 00 00 00  sub         esp,88h
  00000006: 8B 84 24 90 00 00  mov         eax,dword ptr [esp+90h]
            00
  0000000D: 88 44 24 04        mov         byte ptr [esp+4],al
  00000011: 66 8B 84 24 98 00  mov         ax,word ptr [esp+98h]
            00 00
  00000019: 66 89 44 24 06     mov         word ptr [esp+6],ax
  0000001E: 0F B7 C0           movzx       eax,ax
  00000021: 50                 push        eax
  00000022: FF B4 24 98 00 00  push        dword ptr [esp+98h]
            00
  00000029: 8D 44 24 10        lea         eax,[esp+10h]
  0000002D: C6 44 24 0D 00     mov         byte ptr [esp+0Dh],0
  00000032: 50                 push        eax
  00000033: E8 00 00 00 00     call        _memcpy
  00000038: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  0000003D: 83 C4 0C           add         esp,0Ch
  00000040: 85 C0              test        eax,eax
  00000042: 74 16              je          0000005A
  00000044: 8B 8C 24 8C 00 00  mov         ecx,dword ptr [esp+8Ch]
            00
  0000004B: EB 03              jmp         00000050
  0000004D: 8D 49 00           lea         ecx,[ecx]
  00000050: 3B C1              cmp         eax,ecx
  00000052: 74 14              je          00000068
  00000054: 8B 00              mov         eax,dword ptr [eax]
  00000056: 85 C0              test        eax,eax
  00000058: 75 F6              jne         00000050
  0000005A: B8 01 00 00 00     mov         eax,1
  0000005F: 81 C4 88 00 00 00  add         esp,88h
  00000065: C2 10 00           ret         10h
  00000068: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000006B: 8D 14 24           lea         edx,[esp]
  0000006E: 6A 00              push        0
  00000070: 52                 push        edx
  00000071: 6A 00              push        0
  00000073: 6A 00              push        0
  00000075: 68 84 00 00 00     push        84h
  0000007A: 8D 54 24 18        lea         edx,[esp+18h]
  0000007E: 52                 push        edx
  0000007F: FF B0 E8 01 00 00  push        dword ptr [eax+1E8h]
  00000085: FF 71 08           push        dword ptr [ecx+8]
  00000088: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000008E: F7 D8              neg         eax
  00000090: 1B C0              sbb         eax,eax
  00000092: 83 E0 FC           and         eax,0FFFFFFFCh
  00000095: 83 C0 04           add         eax,4
  00000098: 81 C4 88 00 00 00  add         esp,88h
  0000009E: C2 10 00           ret         10h

_FT_VendorCmdSetEx@16:
  00000000: 81 EC 8C 00 00 00  sub         esp,8Ch
  00000006: 8B 84 24 94 00 00  mov         eax,dword ptr [esp+94h]
            00
  0000000D: 66 89 44 24 04     mov         word ptr [esp+4],ax
  00000012: 66 8B 84 24 9C 00  mov         ax,word ptr [esp+9Ch]
            00 00
  0000001A: 66 89 44 24 08     mov         word ptr [esp+8],ax
  0000001F: 0F B7 C0           movzx       eax,ax
  00000022: 50                 push        eax
  00000023: FF B4 24 9C 00 00  push        dword ptr [esp+9Ch]
            00
  0000002A: 8D 44 24 12        lea         eax,[esp+12h]
  0000002E: C6 44 24 0E 00     mov         byte ptr [esp+0Eh],0
  00000033: 50                 push        eax
  00000034: E8 00 00 00 00     call        _memcpy
  00000039: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  0000003E: 83 C4 0C           add         esp,0Ch
  00000041: 85 C0              test        eax,eax
  00000043: 74 15              je          0000005A
  00000045: 8B 8C 24 90 00 00  mov         ecx,dword ptr [esp+90h]
            00
  0000004C: 8D 64 24 00        lea         esp,[esp]
  00000050: 3B C1              cmp         eax,ecx
  00000052: 74 14              je          00000068
  00000054: 8B 00              mov         eax,dword ptr [eax]
  00000056: 85 C0              test        eax,eax
  00000058: 75 F6              jne         00000050
  0000005A: B8 01 00 00 00     mov         eax,1
  0000005F: 81 C4 8C 00 00 00  add         esp,8Ch
  00000065: C2 10 00           ret         10h
  00000068: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000006B: 8D 14 24           lea         edx,[esp]
  0000006E: 6A 00              push        0
  00000070: 52                 push        edx
  00000071: 6A 00              push        0
  00000073: 6A 00              push        0
  00000075: 68 86 00 00 00     push        86h
  0000007A: 8D 54 24 18        lea         edx,[esp+18h]
  0000007E: 52                 push        edx
  0000007F: FF B0 F0 01 00 00  push        dword ptr [eax+1F0h]
  00000085: FF 71 08           push        dword ptr [ecx+8]
  00000088: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000008E: F7 D8              neg         eax
  00000090: 1B C0              sbb         eax,eax
  00000092: 83 E0 FC           and         eax,0FFFFFFFCh
  00000095: 83 C0 04           add         eax,4
  00000098: 81 C4 8C 00 00 00  add         esp,8Ch
  0000009E: C2 10 00           ret         10h

_FT_W32_CancelIo@4:
  00000000: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  00000004: FF 70 08           push        dword ptr [eax+8]
  00000007: FF 15 00 00 00 00  call        dword ptr [__imp__CancelIo@4]
  0000000D: C2 04 00           ret         4

_FT_W32_ClearCommBreak@4:
  00000000: 51                 push        ecx
  00000001: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000005: 8D 04 24           lea         eax,[esp]
  00000008: 6A 00              push        0
  0000000A: 50                 push        eax
  0000000B: 6A 00              push        0
  0000000D: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000010: 6A 00              push        0
  00000012: 6A 00              push        0
  00000014: 6A 00              push        0
  00000016: FF B0 14 01 00 00  push        dword ptr [eax+114h]
  0000001C: FF 71 08           push        dword ptr [ecx+8]
  0000001F: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000025: 59                 pop         ecx
  00000026: C2 04 00           ret         4

_FT_W32_ClearCommError@12:
  00000000: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  00000004: 8D 44 24 EC        lea         eax,[esp-14h]
  00000008: 83 EC 14           sub         esp,14h
  0000000B: 56                 push        esi
  0000000C: 6A 00              push        0
  0000000E: 50                 push        eax
  0000000F: 6A 10              push        10h
  00000011: 8D 44 24 14        lea         eax,[esp+14h]
  00000015: 50                 push        eax
  00000016: 6A 10              push        10h
  00000018: 50                 push        eax
  00000019: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000001C: FF B0 8C 01 00 00  push        dword ptr [eax+18Ch]
  00000022: FF 71 08           push        dword ptr [ecx+8]
  00000025: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000002B: 8B F0              mov         esi,eax
  0000002D: 85 F6              test        esi,esi
  0000002F: 74 21              je          00000052
  00000031: 8B 54 24 20        mov         edx,dword ptr [esp+20h]
  00000035: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000039: F3 0F 7E 44 24 0C  movq        xmm0,mmword ptr [esp+0Ch]
  0000003F: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000043: 89 0A              mov         dword ptr [edx],ecx
  00000045: 8B 4C 24 24        mov         ecx,dword ptr [esp+24h]
  00000049: 66 0F D6 01        movq        mmword ptr [ecx],xmm0
  0000004D: 89 41 08           mov         dword ptr [ecx+8],eax
  00000050: 8B C6              mov         eax,esi
  00000052: 5E                 pop         esi
  00000053: 83 C4 14           add         esp,14h
  00000056: C2 0C 00           ret         0Ch

_FT_W32_CloseHandle@4:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 56                 push        esi
  00000006: 85 C0              test        eax,eax
  00000008: 74 10              je          0000001A
  0000000A: 8B 74 24 08        mov         esi,dword ptr [esp+8]
  0000000E: 8B FF              mov         edi,edi
  00000010: 3B C6              cmp         eax,esi
  00000012: 74 0C              je          00000020
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: 33 C0              xor         eax,eax
  0000001C: 5E                 pop         esi
  0000001D: C2 04 00           ret         4
  00000020: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  00000025: 85 C0              test        eax,eax
  00000027: 75 09              jne         00000032
  00000029: B8 05 00 00 00     mov         eax,5
  0000002E: 5E                 pop         esi
  0000002F: C2 04 00           ret         4
  00000032: 6A FF              push        0FFFFFFFFh
  00000034: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  0000003A: FF 15 00 00 00 00  call        dword ptr [__imp__WaitForSingleObject@8]
  00000040: FF 76 08           push        dword ptr [esi+8]
  00000043: FF 15 00 00 00 00  call        dword ptr [__imp__CloseHandle@4]
  00000049: 8B 46 14           mov         eax,dword ptr [esi+14h]
  0000004C: 85 C0              test        eax,eax
  0000004E: 74 11              je          00000061
  00000050: 50                 push        eax
  00000051: FF 15 00 00 00 00  call        dword ptr [__imp__free]
  00000057: 83 C4 04           add         esp,4
  0000005A: C7 46 14 00 00 00  mov         dword ptr [esi+14h],0
            00
  00000061: 56                 push        esi
  00000062: E8 00 00 00 00     call        ?RemoveDevice@@YAKPAUft_private_vars@@@Z
  00000067: 83 C4 04           add         esp,4
  0000006A: 8B F0              mov         esi,eax
  0000006C: FF 35 00 00 00 00  push        dword ptr [?ghFtOpenLock@@3PAXA]
  00000072: FF 15 00 00 00 00  call        dword ptr [__imp__ReleaseMutex@4]
  00000078: 33 C0              xor         eax,eax
  0000007A: 85 F6              test        esi,esi
  0000007C: 5E                 pop         esi
  0000007D: 0F 94 C0           sete        al
  00000080: C2 04 00           ret         4

_FT_W32_CreateFile@28:
  00000000: 8B 44 24 18        mov         eax,dword ptr [esp+18h]
  00000004: 83 EC 64           sub         esp,64h
  00000007: 55                 push        ebp
  00000008: 56                 push        esi
  00000009: 33 ED              xor         ebp,ebp
  0000000B: 83 CE FF           or          esi,0FFFFFFFFh
  0000000E: A8 01              test        al,1
  00000010: 74 0A              je          0000001C
  00000012: C7 44 24 08 9C 00  mov         dword ptr [esp+8],22009Ch
            22 00
  0000001A: EB 1E              jmp         0000003A
  0000001C: A8 02              test        al,2
  0000001E: 74 0A              je          0000002A
  00000020: C7 44 24 08 A0 00  mov         dword ptr [esp+8],2200A0h
            22 00
  00000028: EB 10              jmp         0000003A
  0000002A: A8 04              test        al,4
  0000002C: 0F 84 AC 01 00 00  je          000001DE
  00000032: C7 44 24 08 A4 00  mov         dword ptr [esp+8],2200A4h
            22 00
  0000003A: 57                 push        edi
  0000003B: 6A 12              push        12h
  0000003D: 6A 00              push        0
  0000003F: 6A 00              push        0
  00000041: 83 E0 F8           and         eax,0FFFFFFF8h
  00000044: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  00000049: 89 84 24 98 00 00  mov         dword ptr [esp+98h],eax
            00
  00000050: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetClassDevsA@16]
  00000056: 8B F8              mov         edi,eax
  00000058: 85 FF              test        edi,edi
  0000005A: 75 0C              jne         00000068
  0000005C: 5F                 pop         edi
  0000005D: 5E                 pop         esi
  0000005E: 83 C8 FF           or          eax,0FFFFFFFFh
  00000061: 5D                 pop         ebp
  00000062: 83 C4 64           add         esp,64h
  00000065: C2 1C 00           ret         1Ch
  00000068: 53                 push        ebx
  00000069: 8B 1D 00 00 00 00  mov         ebx,dword ptr [__imp__SetupDiEnumDeviceInterfaces@20]
  0000006F: 8D 44 24 18        lea         eax,[esp+18h]
  00000073: 50                 push        eax
  00000074: 6A 00              push        0
  00000076: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  0000007B: 6A 00              push        0
  0000007D: 57                 push        edi
  0000007E: C7 44 24 2C 1C 00  mov         dword ptr [esp+2Ch],1Ch
            00 00
  00000086: FF D3              call        ebx
  00000088: 85 C0              test        eax,eax
  0000008A: 74 19              je          000000A5
  0000008C: 8D 64 24 00        lea         esp,[esp]
  00000090: 8D 44 24 18        lea         eax,[esp+18h]
  00000094: 45                 inc         ebp
  00000095: 50                 push        eax
  00000096: 55                 push        ebp
  00000097: 68 00 00 00 00     push        offset _GUID_CLASS_FT_BULK
  0000009C: 6A 00              push        0
  0000009E: 57                 push        edi
  0000009F: FF D3              call        ebx
  000000A1: 85 C0              test        eax,eax
  000000A3: 75 EB              jne         00000090
  000000A5: 57                 push        edi
  000000A6: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  000000AC: 33 FF              xor         edi,edi
  000000AE: 85 ED              test        ebp,ebp
  000000B0: 0F 84 1C 01 00 00  je          000001D2
  000000B6: 8B 9C 24 8C 00 00  mov         ebx,dword ptr [esp+8Ch]
            00
  000000BD: 8D 49 00           lea         ecx,[ecx]
  000000C0: FF B4 24 90 00 00  push        dword ptr [esp+90h]
            00
  000000C7: 53                 push        ebx
  000000C8: FF B4 24 90 00 00  push        dword ptr [esp+90h]
            00
  000000CF: FF B4 24 90 00 00  push        dword ptr [esp+90h]
            00
  000000D6: FF B4 24 90 00 00  push        dword ptr [esp+90h]
            00
  000000DD: FF B4 24 90 00 00  push        dword ptr [esp+90h]
            00
  000000E4: 57                 push        edi
  000000E5: E8 00 00 00 00     call        ?FT_W32_OpenFile@@YAPAXKKKPAU_SECURITY_ATTRIBUTES@@KKPAX@Z
  000000EA: 8B F0              mov         esi,eax
  000000EC: 83 C4 1C           add         esp,1Ch
  000000EF: 85 F6              test        esi,esi
  000000F1: 0F 84 96 00 00 00  je          0000018D
  000000F7: 6A 40              push        40h
  000000F9: 8D 44 24 38        lea         eax,[esp+38h]
  000000FD: 6A 00              push        0
  000000FF: 50                 push        eax
  00000100: E8 00 00 00 00     call        _memset
  00000105: 8B 4C 24 1C        mov         ecx,dword ptr [esp+1Ch]
  00000109: 8D 44 24 20        lea         eax,[esp+20h]
  0000010D: 83 C4 0C           add         esp,0Ch
  00000110: C1 E9 02           shr         ecx,2
  00000113: 81 E1 FF 0F 00 00  and         ecx,0FFFh
  00000119: 6A 00              push        0
  0000011B: 50                 push        eax
  0000011C: 6A 40              push        40h
  0000011E: 8D 44 24 40        lea         eax,[esp+40h]
  00000122: 50                 push        eax
  00000123: 6A 40              push        40h
  00000125: 50                 push        eax
  00000126: 8B 46 1C           mov         eax,dword ptr [esi+1Ch]
  00000129: FF 34 88           push        dword ptr [eax+ecx*4]
  0000012C: FF 76 08           push        dword ptr [esi+8]
  0000012F: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000135: 85 C0              test        eax,eax
  00000137: 74 4C              je          00000185
  00000139: 81 7C 24 10 A4 00  cmp         dword ptr [esp+10h],2200A4h
            22 00
  00000141: 74 38              je          0000017B
  00000143: 8B 4C 24 78        mov         ecx,dword ptr [esp+78h]
  00000147: 8D 44 24 34        lea         eax,[esp+34h]
  0000014B: EB 03              jmp         00000150
  0000014D: 8D 49 00           lea         ecx,[ecx]
  00000150: 8A 11              mov         dl,byte ptr [ecx]
  00000152: 3A 10              cmp         dl,byte ptr [eax]
  00000154: 75 1C              jne         00000172
  00000156: 84 D2              test        dl,dl
  00000158: 74 12              je          0000016C
  0000015A: 8A 51 01           mov         dl,byte ptr [ecx+1]
  0000015D: 3A 50 01           cmp         dl,byte ptr [eax+1]
  00000160: 75 10              jne         00000172
  00000162: 83 C1 02           add         ecx,2
  00000165: 83 C0 02           add         eax,2
  00000168: 84 D2              test        dl,dl
  0000016A: 75 E4              jne         00000150
  0000016C: 33 C0              xor         eax,eax
  0000016E: 85 C0              test        eax,eax
  00000170: EB 11              jmp         00000183
  00000172: 1B C0              sbb         eax,eax
  00000174: 83 C8 01           or          eax,1
  00000177: 85 C0              test        eax,eax
  00000179: EB 08              jmp         00000183
  0000017B: 8B 44 24 78        mov         eax,dword ptr [esp+78h]
  0000017F: 3B 44 24 34        cmp         eax,dword ptr [esp+34h]
  00000183: 74 11              je          00000196
  00000185: 56                 push        esi
  00000186: E8 00 00 00 00     call        _FT_Close@4
  0000018B: 33 F6              xor         esi,esi
  0000018D: 47                 inc         edi
  0000018E: 3B FD              cmp         edi,ebp
  00000190: 0F 82 2A FF FF FF  jb          000000C0
  00000196: 85 F6              test        esi,esi
  00000198: 75 0F              jne         000001A9
  0000019A: 5B                 pop         ebx
  0000019B: 83 CE FF           or          esi,0FFFFFFFFh
  0000019E: 5F                 pop         edi
  0000019F: 8B C6              mov         eax,esi
  000001A1: 5E                 pop         esi
  000001A2: 5D                 pop         ebp
  000001A3: 83 C4 64           add         esp,64h
  000001A6: C2 1C 00           ret         1Ch
  000001A9: 83 FE FF           cmp         esi,0FFFFFFFFh
  000001AC: 74 24              je          000001D2
  000001AE: 6A 00              push        0
  000001B0: 6A 00              push        0
  000001B2: 6A 00              push        0
  000001B4: 6A 00              push        0
  000001B6: 8D 84 24 9C 00 00  lea         eax,[esp+9Ch]
            00
  000001BD: 50                 push        eax
  000001BE: 56                 push        esi
  000001BF: E8 00 00 00 00     call        _FT_GetDeviceInfo@24
  000001C4: 85 C0              test        eax,eax
  000001C6: 75 0A              jne         000001D2
  000001C8: 8B 84 24 8C 00 00  mov         eax,dword ptr [esp+8Ch]
            00
  000001CF: 89 46 18           mov         dword ptr [esi+18h],eax
  000001D2: 5B                 pop         ebx
  000001D3: 5F                 pop         edi
  000001D4: 8B C6              mov         eax,esi
  000001D6: 5E                 pop         esi
  000001D7: 5D                 pop         ebp
  000001D8: 83 C4 64           add         esp,64h
  000001DB: C2 1C 00           ret         1Ch
  000001DE: 5E                 pop         esi
  000001DF: 83 C8 FF           or          eax,0FFFFFFFFh
  000001E2: 5D                 pop         ebp
  000001E3: 83 C4 64           add         esp,64h
  000001E6: C2 1C 00           ret         1Ch

_FT_W32_EscapeCommFunction@8:
  00000000: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000004: 83 C0 FD           add         eax,0FFFFFFFDh
  00000007: 83 F8 06           cmp         eax,6
  0000000A: 0F 87 F7 00 00 00  ja          $LN12
  00000010: FF 24 85 00 00 00  jmp         dword ptr $LN14[eax*4]
            00
$LN7:
  00000017: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000001B: 8D 44 24 08        lea         eax,[esp+8]
  0000001F: 6A 00              push        0
  00000021: 50                 push        eax
  00000022: 6A 00              push        0
  00000024: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000027: 6A 00              push        0
  00000029: 6A 00              push        0
  0000002B: 6A 00              push        0
  0000002D: FF B0 24 01 00 00  push        dword ptr [eax+124h]
  00000033: FF 71 08           push        dword ptr [ecx+8]
  00000036: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000003C: C2 08 00           ret         8
$LN6:
  0000003F: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  00000043: 8D 44 24 08        lea         eax,[esp+8]
  00000047: 6A 00              push        0
  00000049: 50                 push        eax
  0000004A: 6A 00              push        0
  0000004C: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000004F: 6A 00              push        0
  00000051: 6A 00              push        0
  00000053: 6A 00              push        0
  00000055: FF B0 28 01 00 00  push        dword ptr [eax+128h]
  0000005B: FF 71 08           push        dword ptr [ecx+8]
  0000005E: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000064: C2 08 00           ret         8
$LN5:
  00000067: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000006B: 8D 44 24 08        lea         eax,[esp+8]
  0000006F: 6A 00              push        0
  00000071: 50                 push        eax
  00000072: 6A 00              push        0
  00000074: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000077: 6A 00              push        0
  00000079: 6A 00              push        0
  0000007B: 6A 00              push        0
  0000007D: FF B0 30 01 00 00  push        dword ptr [eax+130h]
  00000083: FF 71 08           push        dword ptr [ecx+8]
  00000086: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000008C: C2 08 00           ret         8
$LN4:
  0000008F: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  00000093: 8D 44 24 08        lea         eax,[esp+8]
  00000097: 6A 00              push        0
  00000099: 50                 push        eax
  0000009A: 6A 00              push        0
  0000009C: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000009F: 6A 00              push        0
  000000A1: 6A 00              push        0
  000000A3: 6A 00              push        0
  000000A5: FF B0 34 01 00 00  push        dword ptr [eax+134h]
  000000AB: FF 71 08           push        dword ptr [ecx+8]
  000000AE: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  000000B4: C2 08 00           ret         8
$LN3:
  000000B7: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  000000BB: 8D 44 24 08        lea         eax,[esp+8]
  000000BF: 6A 00              push        0
  000000C1: 50                 push        eax
  000000C2: 6A 00              push        0
  000000C4: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  000000C7: 6A 00              push        0
  000000C9: 6A 00              push        0
  000000CB: 6A 00              push        0
  000000CD: FF B0 10 01 00 00  push        dword ptr [eax+110h]
  000000D3: FF 71 08           push        dword ptr [ecx+8]
  000000D6: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  000000DC: C2 08 00           ret         8
$LN2:
  000000DF: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  000000E3: 8D 44 24 08        lea         eax,[esp+8]
  000000E7: 6A 00              push        0
  000000E9: 50                 push        eax
  000000EA: 6A 00              push        0
  000000EC: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  000000EF: 6A 00              push        0
  000000F1: 6A 00              push        0
  000000F3: 6A 00              push        0
  000000F5: FF B0 14 01 00 00  push        dword ptr [eax+114h]
  000000FB: FF 71 08           push        dword ptr [ecx+8]
  000000FE: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000104: C2 08 00           ret         8
$LN12:
  00000107: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  0000010B: C2 08 00           ret         8
  0000010E: 8B FF              mov         edi,edi
$LN14:
  00000110: 00 00              add         byte ptr [eax],al
  00000112: 00 00              add         byte ptr [eax],al
  00000114: 00 00              add         byte ptr [eax],al
  00000116: 00 00              add         byte ptr [eax],al
  00000118: 00 00              add         byte ptr [eax],al
  0000011A: 00 00              add         byte ptr [eax],al
  0000011C: 00 00              add         byte ptr [eax],al
  0000011E: 00 00              add         byte ptr [eax],al
  00000120: 00 00              add         byte ptr [eax],al
  00000122: 00 00              add         byte ptr [eax],al
  00000124: 00 00              add         byte ptr [eax],al
  00000126: 00 00              add         byte ptr [eax],al
  00000128: 00 00              add         byte ptr [eax],al
  0000012A: 00 00              add         byte ptr [eax],al

_FT_W32_GetCommMask@8:
  00000000: 51                 push        ecx
  00000001: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000005: 8D 04 24           lea         eax,[esp]
  00000008: 6A 00              push        0
  0000000A: 50                 push        eax
  0000000B: 6A 04              push        4
  0000000D: FF 74 24 18        push        dword ptr [esp+18h]
  00000011: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000014: 6A 00              push        0
  00000016: 6A 00              push        0
  00000018: FF B0 C0 01 00 00  push        dword ptr [eax+1C0h]
  0000001E: FF 71 08           push        dword ptr [ecx+8]
  00000021: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000027: 59                 pop         ecx
  00000028: C2 08 00           ret         8

_FT_W32_GetCommModemStatus@8:
  00000000: 51                 push        ecx
  00000001: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000005: 8D 04 24           lea         eax,[esp]
  00000008: 6A 00              push        0
  0000000A: 50                 push        eax
  0000000B: 6A 04              push        4
  0000000D: FF 74 24 18        push        dword ptr [esp+18h]
  00000011: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000014: 6A 00              push        0
  00000016: 6A 00              push        0
  00000018: FF B0 68 01 00 00  push        dword ptr [eax+168h]
  0000001E: FF 71 08           push        dword ptr [ecx+8]
  00000021: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000027: 59                 pop         ecx
  00000028: C2 08 00           ret         8

_FT_W32_GetCommState@8:
  00000000: 83 EC 1C           sub         esp,1Ch
  00000003: 8B 4C 24 20        mov         ecx,dword ptr [esp+20h]
  00000007: 56                 push        esi
  00000008: 8B 74 24 28        mov         esi,dword ptr [esp+28h]
  0000000C: 6A 00              push        0
  0000000E: 8B 46 18           mov         eax,dword ptr [esi+18h]
  00000011: F3 0F 6F 06        movdqu      xmm0,xmmword ptr [esi]
  00000015: 89 44 24 20        mov         dword ptr [esp+20h],eax
  00000019: 8D 44 24 2C        lea         eax,[esp+2Ch]
  0000001D: 50                 push        eax
  0000001E: 6A 1C              push        1Ch
  00000020: 8D 44 24 10        lea         eax,[esp+10h]
  00000024: 50                 push        eax
  00000025: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000028: 6A 00              push        0
  0000002A: F3 0F 7F 44 24 18  movdqu      xmmword ptr [esp+18h],xmm0
  00000030: 6A 00              push        0
  00000032: F3 0F 7E 46 10     movq        xmm0,mmword ptr [esi+10h]
  00000037: 66 0F D6 44 24 2C  movq        mmword ptr [esp+2Ch],xmm0
  0000003D: FF B0 94 01 00 00  push        dword ptr [eax+194h]
  00000043: FF 71 08           push        dword ptr [ecx+8]
  00000046: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000004C: 85 C0              test        eax,eax
  0000004E: 74 1C              je          0000006C
  00000050: F3 0F 6F 44 24 04  movdqu      xmm0,xmmword ptr [esp+4]
  00000056: 8B 4C 24 1C        mov         ecx,dword ptr [esp+1Ch]
  0000005A: F3 0F 7F 06        movdqu      xmmword ptr [esi],xmm0
  0000005E: F3 0F 7E 44 24 14  movq        xmm0,mmword ptr [esp+14h]
  00000064: 66 0F D6 46 10     movq        mmword ptr [esi+10h],xmm0
  00000069: 89 4E 18           mov         dword ptr [esi+18h],ecx
  0000006C: 5E                 pop         esi
  0000006D: 83 C4 1C           add         esp,1Ch
  00000070: C2 08 00           ret         8

_FT_W32_GetCommTimeouts@8:
  00000000: 51                 push        ecx
  00000001: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000005: 8D 04 24           lea         eax,[esp]
  00000008: 6A 00              push        0
  0000000A: 50                 push        eax
  0000000B: 6A 14              push        14h
  0000000D: FF 74 24 18        push        dword ptr [esp+18h]
  00000011: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000014: 6A 00              push        0
  00000016: 6A 00              push        0
  00000018: FF B0 20 01 00 00  push        dword ptr [eax+120h]
  0000001E: FF 71 08           push        dword ptr [ecx+8]
  00000021: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000027: 59                 pop         ecx
  00000028: C2 08 00           ret         8

_FT_W32_GetLastError@4:
  00000000: FF 15 00 00 00 00  call        dword ptr [__imp__GetLastError@0]
  00000006: C2 04 00           ret         4

_FT_W32_GetOverlappedResult@16:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0B              je          0000001F
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: 33 C0              xor         eax,eax
  0000001C: C2 10 00           ret         10h
  0000001F: FF 74 24 10        push        dword ptr [esp+10h]
  00000023: FF 74 24 10        push        dword ptr [esp+10h]
  00000027: FF 74 24 10        push        dword ptr [esp+10h]
  0000002B: FF 71 08           push        dword ptr [ecx+8]
  0000002E: FF 15 00 00 00 00  call        dword ptr [__imp__GetOverlappedResult@16]
  00000034: C2 10 00           ret         10h

_FT_W32_PurgeComm@8:
  00000000: 51                 push        ecx
  00000001: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  00000005: 33 C9              xor         ecx,ecx
  00000007: A8 0A              test        al,0Ah
  00000009: BA 01 00 00 00     mov         edx,1
  0000000E: 0F 45 CA           cmovne      ecx,edx
  00000011: 89 4C 24 0C        mov         dword ptr [esp+0Ch],ecx
  00000015: A8 05              test        al,5
  00000017: 74 07              je          00000020
  00000019: 83 C9 02           or          ecx,2
  0000001C: 89 4C 24 0C        mov         dword ptr [esp+0Ch],ecx
  00000020: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000024: 8D 04 24           lea         eax,[esp]
  00000027: 6A 00              push        0
  00000029: 50                 push        eax
  0000002A: 6A 00              push        0
  0000002C: 6A 00              push        0
  0000002E: 6A 04              push        4
  00000030: 8D 44 24 20        lea         eax,[esp+20h]
  00000034: 50                 push        eax
  00000035: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000038: FF B0 4C 01 00 00  push        dword ptr [eax+14Ch]
  0000003E: FF 71 08           push        dword ptr [ecx+8]
  00000041: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000047: 59                 pop         ecx
  00000048: C2 08 00           ret         8

_FT_W32_ReadFile@20:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0B              je          0000001F
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: 33 C0              xor         eax,eax
  0000001C: C2 14 00           ret         14h
  0000001F: FF 74 24 14        push        dword ptr [esp+14h]
  00000023: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000027: 50                 push        eax
  00000028: FF 74 24 14        push        dword ptr [esp+14h]
  0000002C: FF 74 24 14        push        dword ptr [esp+14h]
  00000030: C7 00 00 00 00 00  mov         dword ptr [eax],0
  00000036: FF 71 08           push        dword ptr [ecx+8]
  00000039: FF 15 00 00 00 00  call        dword ptr [__imp__ReadFile@20]
  0000003F: C2 14 00           ret         14h

_FT_W32_SetCommBreak@4:
  00000000: 51                 push        ecx
  00000001: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000005: 8D 04 24           lea         eax,[esp]
  00000008: 6A 00              push        0
  0000000A: 50                 push        eax
  0000000B: 6A 00              push        0
  0000000D: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000010: 6A 00              push        0
  00000012: 6A 00              push        0
  00000014: 6A 00              push        0
  00000016: FF B0 10 01 00 00  push        dword ptr [eax+110h]
  0000001C: FF 71 08           push        dword ptr [ecx+8]
  0000001F: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000025: 59                 pop         ecx
  00000026: C2 04 00           ret         4

_FT_W32_SetCommMask@8:
  00000000: 51                 push        ecx
  00000001: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000005: 8D 04 24           lea         eax,[esp]
  00000008: 6A 00              push        0
  0000000A: 50                 push        eax
  0000000B: 6A 00              push        0
  0000000D: 6A 00              push        0
  0000000F: 6A 04              push        4
  00000011: 8D 44 24 20        lea         eax,[esp+20h]
  00000015: 50                 push        eax
  00000016: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000019: FF B0 84 01 00 00  push        dword ptr [eax+184h]
  0000001F: FF 71 08           push        dword ptr [ecx+8]
  00000022: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000028: 59                 pop         ecx
  00000029: C2 08 00           ret         8

_FT_W32_SetCommState@8:
  00000000: 83 EC 1C           sub         esp,1Ch
  00000003: 8B 44 24 24        mov         eax,dword ptr [esp+24h]
  00000007: 8B 4C 24 20        mov         ecx,dword ptr [esp+20h]
  0000000B: 6A 00              push        0
  0000000D: F3 0F 6F 00        movdqu      xmm0,xmmword ptr [eax]
  00000011: F3 0F 7F 44 24 04  movdqu      xmmword ptr [esp+4],xmm0
  00000017: F3 0F 7E 40 10     movq        xmm0,mmword ptr [eax+10h]
  0000001C: 8B 40 18           mov         eax,dword ptr [eax+18h]
  0000001F: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  00000023: 8D 44 24 28        lea         eax,[esp+28h]
  00000027: 50                 push        eax
  00000028: 6A 00              push        0
  0000002A: 6A 00              push        0
  0000002C: 6A 1C              push        1Ch
  0000002E: 8D 44 24 14        lea         eax,[esp+14h]
  00000032: 66 0F D6 44 24 24  movq        mmword ptr [esp+24h],xmm0
  00000038: 50                 push        eax
  00000039: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000003C: FF B0 90 01 00 00  push        dword ptr [eax+190h]
  00000042: FF 71 08           push        dword ptr [ecx+8]
  00000045: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000004B: 83 C4 1C           add         esp,1Ch
  0000004E: C2 08 00           ret         8

_FT_W32_SetCommTimeouts@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0B              je          0000001F
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: 33 C0              xor         eax,eax
  0000001C: C2 08 00           ret         8
  0000001F: 6A 00              push        0
  00000021: 8D 44 24 08        lea         eax,[esp+8]
  00000025: 50                 push        eax
  00000026: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000029: 6A 00              push        0
  0000002B: 6A 00              push        0
  0000002D: 6A 14              push        14h
  0000002F: FF 74 24 1C        push        dword ptr [esp+1Ch]
  00000033: FF B0 1C 01 00 00  push        dword ptr [eax+11Ch]
  00000039: FF 71 08           push        dword ptr [ecx+8]
  0000003C: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000042: C2 08 00           ret         8

_FT_W32_SetupComm@12:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0B              je          0000001F
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: 33 C0              xor         eax,eax
  0000001C: C2 0C 00           ret         0Ch
  0000001F: B8 01 00 00 00     mov         eax,1
  00000024: C2 0C 00           ret         0Ch

_FT_W32_WaitCommEvent@12:
  00000000: FF 74 24 0C        push        dword ptr [esp+0Ch]
  00000004: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000008: 8D 44 24 10        lea         eax,[esp+10h]
  0000000C: 50                 push        eax
  0000000D: 6A 04              push        4
  0000000F: FF 74 24 14        push        dword ptr [esp+14h]
  00000013: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000016: 6A 00              push        0
  00000018: 6A 00              push        0
  0000001A: FF B0 88 01 00 00  push        dword ptr [eax+188h]
  00000020: FF 71 08           push        dword ptr [ecx+8]
  00000023: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000029: C2 0C 00           ret         0Ch

_FT_W32_WriteFile@20:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0B              je          0000001F
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: 33 C0              xor         eax,eax
  0000001C: C2 14 00           ret         14h
  0000001F: FF 74 24 14        push        dword ptr [esp+14h]
  00000023: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000027: 50                 push        eax
  00000028: FF 74 24 14        push        dword ptr [esp+14h]
  0000002C: FF 74 24 14        push        dword ptr [esp+14h]
  00000030: C7 00 00 00 00 00  mov         dword ptr [eax],0
  00000036: FF 71 08           push        dword ptr [ecx+8]
  00000039: FF 15 00 00 00 00  call        dword ptr [__imp__WriteFile@20]
  0000003F: C2 14 00           ret         14h

_FT_WaitOnMask@8:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 08 00           ret         8
  00000022: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000025: 8D 54 24 04        lea         edx,[esp+4]
  00000029: 6A 00              push        0
  0000002B: 52                 push        edx
  0000002C: 6A 04              push        4
  0000002E: FF 74 24 14        push        dword ptr [esp+14h]
  00000032: 6A 00              push        0
  00000034: 6A 00              push        0
  00000036: FF B0 48 01 00 00  push        dword ptr [eax+148h]
  0000003C: FF 71 08           push        dword ptr [ecx+8]
  0000003F: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000045: F7 D8              neg         eax
  00000047: 1B C0              sbb         eax,eax
  00000049: 83 E0 FC           and         eax,0FFFFFFFCh
  0000004C: 83 C0 04           add         eax,4
  0000004F: C2 08 00           ret         8

_FT_Write@16:
  00000000: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  00000005: 85 C0              test        eax,eax
  00000007: 74 11              je          0000001A
  00000009: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000000D: 8D 49 00           lea         ecx,[ecx]
  00000010: 3B C1              cmp         eax,ecx
  00000012: 74 0E              je          00000022
  00000014: 8B 00              mov         eax,dword ptr [eax]
  00000016: 85 C0              test        eax,eax
  00000018: 75 F6              jne         00000010
  0000001A: B8 01 00 00 00     mov         eax,1
  0000001F: C2 10 00           ret         10h
  00000022: 56                 push        esi
  00000023: 8B 74 24 14        mov         esi,dword ptr [esp+14h]
  00000027: 6A 00              push        0
  00000029: 56                 push        esi
  0000002A: FF 74 24 18        push        dword ptr [esp+18h]
  0000002E: C7 06 00 00 00 00  mov         dword ptr [esi],0
  00000034: FF 74 24 18        push        dword ptr [esp+18h]
  00000038: FF 71 08           push        dword ptr [ecx+8]
  0000003B: FF 15 00 00 00 00  call        dword ptr [__imp__WriteFile@20]
  00000041: 85 C0              test        eax,eax
  00000043: 75 0D              jne         00000052
  00000045: 39 06              cmp         dword ptr [esi],eax
  00000047: 75 09              jne         00000052
  00000049: B8 04 00 00 00     mov         eax,4
  0000004E: 5E                 pop         esi
  0000004F: C2 10 00           ret         10h
  00000052: 33 C0              xor         eax,eax
  00000054: 5E                 pop         esi
  00000055: C2 10 00           ret         10h

_FT_WriteEE@12:
  00000000: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000004: 66 89 44 24 08     mov         word ptr [esp+8],ax
  00000009: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  0000000D: 88 44 24 0A        mov         byte ptr [esp+0Ah],al
  00000011: C1 E8 08           shr         eax,8
  00000014: 88 44 24 0B        mov         byte ptr [esp+0Bh],al
  00000018: A1 00 00 00 00     mov         eax,dword ptr [?pgDeviceList@@3PAUft_private_vars@@A]
  0000001D: 85 C0              test        eax,eax
  0000001F: 74 0E              je          0000002F
  00000021: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  00000025: 3B C1              cmp         eax,ecx
  00000027: 74 0E              je          00000037
  00000029: 8B 00              mov         eax,dword ptr [eax]
  0000002B: 85 C0              test        eax,eax
  0000002D: 75 F6              jne         00000025
  0000002F: B8 01 00 00 00     mov         eax,1
  00000034: C2 0C 00           ret         0Ch
  00000037: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000003A: 8D 54 24 0C        lea         edx,[esp+0Ch]
  0000003E: 6A 00              push        0
  00000040: 52                 push        edx
  00000041: 6A 00              push        0
  00000043: 6A 00              push        0
  00000045: 6A 04              push        4
  00000047: 8D 54 24 1C        lea         edx,[esp+1Ch]
  0000004B: 52                 push        edx
  0000004C: FF B0 84 00 00 00  push        dword ptr [eax+84h]
  00000052: FF 71 08           push        dword ptr [ecx+8]
  00000055: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000005B: F7 D8              neg         eax
  0000005D: 1B C0              sbb         eax,eax
  0000005F: 83 E0 FC           and         eax,0FFFFFFFCh
  00000062: 83 C0 04           add         eax,4
  00000065: C2 0C 00           ret         0Ch

??0TEeData@@QAE@H@Z (public: __thiscall TEeData::TEeData(int)):
  00000000: 56                 push        esi
  00000001: 68 00 08 00 00     push        800h
  00000006: 8B F1              mov         esi,ecx
  00000008: 6A 00              push        0
  0000000A: 56                 push        esi
  0000000B: E8 00 00 00 00     call        _memset
  00000010: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000014: 83 C4 0C           add         esp,0Ch
  00000017: 89 86 08 08 00 00  mov         dword ptr [esi+808h],eax
  0000001D: 8B C6              mov         eax,esi
  0000001F: C7 86 00 08 00 00  mov         dword ptr [esi+800h],0
            00 00 00 00
  00000029: C7 86 04 08 00 00  mov         dword ptr [esi+804h],1
            01 00 00 00
  00000033: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],0
            00 00 00 00
  0000003D: 5E                 pop         esi
  0000003E: C2 04 00           ret         4

??0TEeData@@QAE@PAUft_private_vars@@@Z (public: __thiscall TEeData::TEeData(struct ft_private_vars *)):
  00000000: 56                 push        esi
  00000001: 68 00 08 00 00     push        800h
  00000006: 8B F1              mov         esi,ecx
  00000008: 6A 00              push        0
  0000000A: 56                 push        esi
  0000000B: E8 00 00 00 00     call        _memset
  00000010: 8B 4C 24 14        mov         ecx,dword ptr [esp+14h]
  00000014: 83 C4 0C           add         esp,0Ch
  00000017: C7 86 00 08 00 00  mov         dword ptr [esi+800h],0
            00 00 00 00
  00000021: C7 86 04 08 00 00  mov         dword ptr [esi+804h],1
            01 00 00 00
  0000002B: C7 86 08 08 00 00  mov         dword ptr [esi+808h],40h
            40 00 00 00
  00000035: 8B 41 08           mov         eax,dword ptr [ecx+8]
  00000038: 89 86 0C 08 00 00  mov         dword ptr [esi+80Ch],eax
  0000003E: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000041: 8B 80 80 00 00 00  mov         eax,dword ptr [eax+80h]
  00000047: 89 86 10 08 00 00  mov         dword ptr [esi+810h],eax
  0000004D: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  00000050: 8B 80 84 00 00 00  mov         eax,dword ptr [eax+84h]
  00000056: 89 86 14 08 00 00  mov         dword ptr [esi+814h],eax
  0000005C: 8B 41 1C           mov         eax,dword ptr [ecx+1Ch]
  0000005F: 8B 80 88 00 00 00  mov         eax,dword ptr [eax+88h]
  00000065: 89 86 18 08 00 00  mov         dword ptr [esi+818h],eax
  0000006B: 8B C6              mov         eax,esi
  0000006D: 5E                 pop         esi
  0000006E: C2 04 00           ret         4

??0TEeData@@QAE@PAX@Z (public: __thiscall TEeData::TEeData(void *)):
  00000000: 56                 push        esi
  00000001: 68 00 08 00 00     push        800h
  00000006: 8B F1              mov         esi,ecx
  00000008: 6A 00              push        0
  0000000A: 56                 push        esi
  0000000B: E8 00 00 00 00     call        _memset
  00000010: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000014: 83 C4 0C           add         esp,0Ch
  00000017: 89 86 0C 08 00 00  mov         dword ptr [esi+80Ch],eax
  0000001D: 8B C6              mov         eax,esi
  0000001F: C7 86 00 08 00 00  mov         dword ptr [esi+800h],0
            00 00 00 00
  00000029: C7 86 04 08 00 00  mov         dword ptr [esi+804h],1
            01 00 00 00
  00000033: C7 86 08 08 00 00  mov         dword ptr [esi+808h],40h
            40 00 00 00
  0000003D: C7 86 10 08 00 00  mov         dword ptr [esi+810h],220080h
            80 00 22 00
  00000047: C7 86 14 08 00 00  mov         dword ptr [esi+814h],220084h
            84 00 22 00
  00000051: C7 86 18 08 00 00  mov         dword ptr [esi+818h],220088h
            88 00 22 00
  0000005B: 5E                 pop         esi
  0000005C: C2 04 00           ret         4

??0TEeData@@QAE@XZ (public: __thiscall TEeData::TEeData(void)):
  00000000: 56                 push        esi
  00000001: 68 00 08 00 00     push        800h
  00000006: 8B F1              mov         esi,ecx
  00000008: 6A 00              push        0
  0000000A: 56                 push        esi
  0000000B: E8 00 00 00 00     call        _memset
  00000010: 83 C4 0C           add         esp,0Ch
  00000013: C7 86 00 08 00 00  mov         dword ptr [esi+800h],0
            00 00 00 00
  0000001D: C7 86 04 08 00 00  mov         dword ptr [esi+804h],1
            01 00 00 00
  00000027: 8B C6              mov         eax,esi
  00000029: C7 86 08 08 00 00  mov         dword ptr [esi+808h],40h
            40 00 00 00
  00000033: C7 86 0C 08 00 00  mov         dword ptr [esi+80Ch],0
            00 00 00 00
  0000003D: 5E                 pop         esi
  0000003E: C3                 ret

?Add@TEeData@@QAEXG@Z (public: void __thiscall TEeData::Add(unsigned short)):
  00000000: 56                 push        esi
  00000001: 8B F1              mov         esi,ecx
  00000003: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000007: 8B 86 00 08 00 00  mov         eax,dword ptr [esi+00000800h]
  0000000D: 88 0C 06           mov         byte ptr [esi+eax],cl
  00000010: 8B C1              mov         eax,ecx
  00000012: FF 86 00 08 00 00  inc         dword ptr [esi+00000800h]
  00000018: 8B 96 00 08 00 00  mov         edx,dword ptr [esi+00000800h]
  0000001E: C1 E8 08           shr         eax,8
  00000021: 88 04 32           mov         byte ptr [edx+esi],al
  00000024: B8 FF FF 00 00     mov         eax,0FFFFh
  00000029: FF 86 00 08 00 00  inc         dword ptr [esi+00000800h]
  0000002F: 66 3B C8           cmp         cx,ax
  00000032: 74 0A              je          0000003E
  00000034: C7 86 04 08 00 00  mov         dword ptr [esi+00000804h],0
            00 00 00 00
  0000003E: 5E                 pop         esi
  0000003F: C2 04 00           ret         4

?Check@TEeData@@QAEHXZ (public: int __thiscall TEeData::Check(void)):
  00000000: B8 01 00 00 00     mov         eax,1
  00000005: C3                 ret

?Confirm@TEeData@@QAEHXZ (public: int __thiscall TEeData::Confirm(void)):
  00000000: 81 EC 0C 08 00 00  sub         esp,80Ch
  00000006: 56                 push        esi
  00000007: 8B F1              mov         esi,ecx
  00000009: 57                 push        edi
  0000000A: 8B BE 08 08 00 00  mov         edi,dword ptr [esi+808h]
  00000010: 8D 04 3F           lea         eax,[edi+edi]
  00000013: 85 C0              test        eax,eax
  00000015: 7E 0F              jle         00000026
  00000017: 50                 push        eax
  00000018: 8D 44 24 18        lea         eax,[esp+18h]
  0000001C: 56                 push        esi
  0000001D: 50                 push        eax
  0000001E: E8 00 00 00 00     call        _memcpy
  00000023: 83 C4 0C           add         esp,0Ch
  00000026: 83 BE 0C 08 00 00  cmp         dword ptr [esi+80Ch],0
            00
  0000002D: 0F 84 91 00 00 00  je          000000C4
  00000033: C7 86 00 08 00 00  mov         dword ptr [esi+800h],0
            00 00 00 00
  0000003D: C7 44 24 08 00 00  mov         dword ptr [esp+8],0
            00 00
  00000045: 85 FF              test        edi,edi
  00000047: 74 7B              je          000000C4
  00000049: 8B 3D 00 00 00 00  mov         edi,dword ptr [__imp__DeviceIoControl@32]
  0000004F: 53                 push        ebx
  00000050: BB FF FF 00 00     mov         ebx,0FFFFh
  00000055: 6A 00              push        0
  00000057: 8D 44 24 18        lea         eax,[esp+18h]
  0000005B: 50                 push        eax
  0000005C: 6A 02              push        2
  0000005E: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000062: 50                 push        eax
  00000063: 6A 04              push        4
  00000065: 8D 44 24 20        lea         eax,[esp+20h]
  00000069: 50                 push        eax
  0000006A: FF B6 10 08 00 00  push        dword ptr [esi+810h]
  00000070: FF B6 0C 08 00 00  push        dword ptr [esi+80Ch]
  00000076: FF D7              call        edi
  00000078: 8B 86 00 08 00 00  mov         eax,dword ptr [esi+800h]
  0000007E: 66 8B 4C 24 10     mov         cx,word ptr [esp+10h]
  00000083: 0F B7 D1           movzx       edx,cx
  00000086: 88 0C 06           mov         byte ptr [esi+eax],cl
  00000089: 8B C2              mov         eax,edx
  0000008B: FF 86 00 08 00 00  inc         dword ptr [esi+800h]
  00000091: 8B 8E 00 08 00 00  mov         ecx,dword ptr [esi+800h]
  00000097: C1 E8 08           shr         eax,8
  0000009A: 88 04 31           mov         byte ptr [ecx+esi],al
  0000009D: FF 86 00 08 00 00  inc         dword ptr [esi+800h]
  000000A3: 66 3B D3           cmp         dx,bx
  000000A6: 74 0A              je          000000B2
  000000A8: C7 86 04 08 00 00  mov         dword ptr [esi+804h],0
            00 00 00 00
  000000B2: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  000000B6: 40                 inc         eax
  000000B7: 89 44 24 0C        mov         dword ptr [esp+0Ch],eax
  000000BB: 3B 86 08 08 00 00  cmp         eax,dword ptr [esi+808h]
  000000C1: 72 92              jb          00000055
  000000C3: 5B                 pop         ebx
  000000C4: 8B BE 08 08 00 00  mov         edi,dword ptr [esi+808h]
  000000CA: 33 D2              xor         edx,edx
  000000CC: 03 FF              add         edi,edi
  000000CE: 85 FF              test        edi,edi
  000000D0: 7E 18              jle         000000EA
  000000D2: 8D 44 24 14        lea         eax,[esp+14h]
  000000D6: 2B F0              sub         esi,eax
  000000D8: 8D 4C 24 14        lea         ecx,[esp+14h]
  000000DC: 03 CA              add         ecx,edx
  000000DE: 8A 01              mov         al,byte ptr [ecx]
  000000E0: 3A 04 0E           cmp         al,byte ptr [esi+ecx]
  000000E3: 75 13              jne         000000F8
  000000E5: 42                 inc         edx
  000000E6: 3B D7              cmp         edx,edi
  000000E8: 7C EE              jl          000000D8
  000000EA: 5F                 pop         edi
  000000EB: B8 01 00 00 00     mov         eax,1
  000000F0: 5E                 pop         esi
  000000F1: 81 C4 0C 08 00 00  add         esp,80Ch
  000000F7: C3                 ret
  000000F8: 5F                 pop         edi
  000000F9: 33 C0              xor         eax,eax
  000000FB: 5E                 pop         esi
  000000FC: 81 C4 0C 08 00 00  add         esp,80Ch
  00000102: C3                 ret

?Erase@TEeData@@QAEHXZ (public: int __thiscall TEeData::Erase(void)):
  00000000: 51                 push        ecx
  00000001: 56                 push        esi
  00000002: 8B F1              mov         esi,ecx
  00000004: 8B 86 0C 08 00 00  mov         eax,dword ptr [esi+80Ch]
  0000000A: 85 C0              test        eax,eax
  0000000C: 75 03              jne         00000011
  0000000E: 5E                 pop         esi
  0000000F: 59                 pop         ecx
  00000010: C3                 ret
  00000011: 6A 00              push        0
  00000013: 8D 4C 24 08        lea         ecx,[esp+8]
  00000017: 51                 push        ecx
  00000018: 6A 00              push        0
  0000001A: 6A 00              push        0
  0000001C: 6A 00              push        0
  0000001E: 6A 00              push        0
  00000020: FF B6 18 08 00 00  push        dword ptr [esi+818h]
  00000026: 50                 push        eax
  00000027: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  0000002D: C7 86 04 08 00 00  mov         dword ptr [esi+804h],1
            01 00 00 00
  00000037: B8 01 00 00 00     mov         eax,1
  0000003C: 5E                 pop         esi
  0000003D: 59                 pop         ecx
  0000003E: C3                 ret

?Get@TEeData@@QAEGXZ (public: unsigned short __thiscall TEeData::Get(void)):
  00000000: 8B 81 00 08 00 00  mov         eax,dword ptr [ecx+00000800h]
  00000006: 56                 push        esi
  00000007: 8D 70 01           lea         esi,[eax+1]
  0000000A: 57                 push        edi
  0000000B: 8A 14 08           mov         dl,byte ptr [eax+ecx]
  0000000E: 8D 46 01           lea         eax,[esi+1]
  00000011: 89 B1 00 08 00 00  mov         dword ptr [ecx+00000800h],esi
  00000017: 0F B6 FA           movzx       edi,dl
  0000001A: 8A 14 0E           mov         dl,byte ptr [esi+ecx]
  0000001D: 89 81 00 08 00 00  mov         dword ptr [ecx+00000800h],eax
  00000023: 0F B6 C2           movzx       eax,dl
  00000026: 66 C1 E0 08        shl         ax,8
  0000002A: 66 0B C7           or          ax,di
  0000002D: 5F                 pop         edi
  0000002E: 5E                 pop         esi
  0000002F: C3                 ret

?Init@TEeData@@QAEXPAD00@Z (public: void __thiscall TEeData::Init(char *,char *,char *)):
  00000000: 56                 push        esi
  00000001: 68 00 08 00 00     push        800h
  00000006: 8B F1              mov         esi,ecx
  00000008: 6A 00              push        0
  0000000A: 56                 push        esi
  0000000B: E8 00 00 00 00     call        _memset
  00000010: 83 C4 0C           add         esp,0Ch
  00000013: C7 86 04 08 00 00  mov         dword ptr [esi+804h],0
            00 00 00 00
  0000001D: 5E                 pop         esi
  0000001E: C2 0C 00           ret         0Ch

?Invalidate@TEeData@@QAEHXZ (public: int __thiscall TEeData::Invalidate(void)):
  00000000: B8 01 00 00 00     mov         eax,1
  00000005: C3                 ret

?IsErased@TEeData@@QAEHXZ (public: int __thiscall TEeData::IsErased(void)):
  00000000: 8B 81 04 08 00 00  mov         eax,dword ptr [ecx+00000804h]
  00000006: C3                 ret

?Read@TEeData@@QAEHXZ (public: int __thiscall TEeData::Read(void)):
  00000000: 83 EC 0C           sub         esp,0Ch
  00000003: 56                 push        esi
  00000004: 8B F1              mov         esi,ecx
  00000006: 83 BE 0C 08 00 00  cmp         dword ptr [esi+80Ch],0
            00
  0000000D: 75 07              jne         00000016
  0000000F: 33 C0              xor         eax,eax
  00000011: 5E                 pop         esi
  00000012: 83 C4 0C           add         esp,0Ch
  00000015: C3                 ret
  00000016: 83 BE 08 08 00 00  cmp         dword ptr [esi+808h],0
            00
  0000001D: C7 86 00 08 00 00  mov         dword ptr [esi+800h],0
            00 00 00 00
  00000027: C7 44 24 08 00 00  mov         dword ptr [esp+8],0
            00 00
  0000002F: 76 7F              jbe         000000B0
  00000031: 53                 push        ebx
  00000032: 57                 push        edi
  00000033: 8B 3D 00 00 00 00  mov         edi,dword ptr [__imp__DeviceIoControl@32]
  00000039: BB FF FF 00 00     mov         ebx,0FFFFh
  0000003E: 8B FF              mov         edi,edi
  00000040: 6A 00              push        0
  00000042: 8D 44 24 18        lea         eax,[esp+18h]
  00000046: 50                 push        eax
  00000047: 6A 02              push        2
  00000049: 8D 44 24 18        lea         eax,[esp+18h]
  0000004D: 50                 push        eax
  0000004E: 6A 04              push        4
  00000050: 8D 44 24 24        lea         eax,[esp+24h]
  00000054: 50                 push        eax
  00000055: FF B6 10 08 00 00  push        dword ptr [esi+810h]
  0000005B: FF B6 0C 08 00 00  push        dword ptr [esi+80Ch]
  00000061: FF D7              call        edi
  00000063: 8B 86 00 08 00 00  mov         eax,dword ptr [esi+800h]
  00000069: 66 8B 4C 24 0C     mov         cx,word ptr [esp+0Ch]
  0000006E: 0F B7 D1           movzx       edx,cx
  00000071: 88 0C 06           mov         byte ptr [esi+eax],cl
  00000074: 8B C2              mov         eax,edx
  00000076: FF 86 00 08 00 00  inc         dword ptr [esi+800h]
  0000007C: 8B 8E 00 08 00 00  mov         ecx,dword ptr [esi+800h]
  00000082: C1 E8 08           shr         eax,8
  00000085: 88 04 31           mov         byte ptr [ecx+esi],al
  00000088: FF 86 00 08 00 00  inc         dword ptr [esi+800h]
  0000008E: 66 3B D3           cmp         dx,bx
  00000091: 74 0A              je          0000009D
  00000093: C7 86 04 08 00 00  mov         dword ptr [esi+804h],0
            00 00 00 00
  0000009D: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  000000A1: 40                 inc         eax
  000000A2: 89 44 24 10        mov         dword ptr [esp+10h],eax
  000000A6: 3B 86 08 08 00 00  cmp         eax,dword ptr [esi+808h]
  000000AC: 72 92              jb          00000040
  000000AE: 5F                 pop         edi
  000000AF: 5B                 pop         ebx
  000000B0: B8 01 00 00 00     mov         eax,1
  000000B5: 5E                 pop         esi
  000000B6: 83 C4 0C           add         esp,0Ch
  000000B9: C3                 ret

?ReadWord@TEeData@@QAEHKPAG@Z (public: int __thiscall TEeData::ReadWord(unsigned long,unsigned short *)):
  00000000: 51                 push        ecx
  00000001: 8B 81 0C 08 00 00  mov         eax,dword ptr [ecx+80Ch]
  00000007: 85 C0              test        eax,eax
  00000009: 75 04              jne         0000000F
  0000000B: 59                 pop         ecx
  0000000C: C2 08 00           ret         8
  0000000F: 6A 00              push        0
  00000011: 8D 54 24 04        lea         edx,[esp+4]
  00000015: 52                 push        edx
  00000016: 6A 02              push        2
  00000018: FF 74 24 18        push        dword ptr [esp+18h]
  0000001C: 8D 54 24 18        lea         edx,[esp+18h]
  00000020: 6A 04              push        4
  00000022: 52                 push        edx
  00000023: FF B1 10 08 00 00  push        dword ptr [ecx+810h]
  00000029: 50                 push        eax
  0000002A: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000030: B8 01 00 00 00     mov         eax,1
  00000035: 59                 pop         ecx
  00000036: C2 08 00           ret         8

?Reset@TEeData@@QAEXXZ (public: void __thiscall TEeData::Reset(void)):
  00000000: C7 81 00 08 00 00  mov         dword ptr [ecx+00000800h],0
            00 00 00 00
  0000000A: C3                 ret

?Write@TEeData@@QAEHXZ (public: int __thiscall TEeData::Write(void)):
  00000000: 83 EC 08           sub         esp,8
  00000003: 56                 push        esi
  00000004: 8B F1              mov         esi,ecx
  00000006: 83 BE 0C 08 00 00  cmp         dword ptr [esi+80Ch],0
            00
  0000000D: 75 07              jne         00000016
  0000000F: 33 C0              xor         eax,eax
  00000011: 5E                 pop         esi
  00000012: 83 C4 08           add         esp,8
  00000015: C3                 ret
  00000016: 53                 push        ebx
  00000017: 33 DB              xor         ebx,ebx
  00000019: C7 86 00 08 00 00  mov         dword ptr [esi+800h],0
            00 00 00 00
  00000023: 39 9E 08 08 00 00  cmp         dword ptr [esi+808h],ebx
  00000029: 76 70              jbe         0000009B
  0000002B: 55                 push        ebp
  0000002C: 8B 2D 00 00 00 00  mov         ebp,dword ptr [__imp__DeviceIoControl@32]
  00000032: 57                 push        edi
  00000033: 8B 86 00 08 00 00  mov         eax,dword ptr [esi+800h]
  00000039: 8D 50 01           lea         edx,[eax+1]
  0000003C: 6A 00              push        0
  0000003E: 8A 0C 30           mov         cl,byte ptr [eax+esi]
  00000041: 8D 42 01           lea         eax,[edx+1]
  00000044: 89 96 00 08 00 00  mov         dword ptr [esi+800h],edx
  0000004A: 0F B6 F9           movzx       edi,cl
  0000004D: 8A 0C 32           mov         cl,byte ptr [edx+esi]
  00000050: 89 86 00 08 00 00  mov         dword ptr [esi+800h],eax
  00000056: 0F B6 C1           movzx       eax,cl
  00000059: 66 C1 E0 08        shl         ax,8
  0000005D: 66 0B C7           or          ax,di
  00000060: 66 89 5C 24 14     mov         word ptr [esp+14h],bx
  00000065: 0F B7 C0           movzx       eax,ax
  00000068: 88 44 24 16        mov         byte ptr [esp+16h],al
  0000006C: C1 E8 08           shr         eax,8
  0000006F: 88 44 24 17        mov         byte ptr [esp+17h],al
  00000073: 8D 44 24 18        lea         eax,[esp+18h]
  00000077: 50                 push        eax
  00000078: 6A 04              push        4
  0000007A: 8D 44 24 1C        lea         eax,[esp+1Ch]
  0000007E: 50                 push        eax
  0000007F: 6A 04              push        4
  00000081: 50                 push        eax
  00000082: FF B6 14 08 00 00  push        dword ptr [esi+814h]
  00000088: FF B6 0C 08 00 00  push        dword ptr [esi+80Ch]
  0000008E: FF D5              call        ebp
  00000090: 43                 inc         ebx
  00000091: 3B 9E 08 08 00 00  cmp         ebx,dword ptr [esi+808h]
  00000097: 72 9A              jb          00000033
  00000099: 5F                 pop         edi
  0000009A: 5D                 pop         ebp
  0000009B: 5B                 pop         ebx
  0000009C: B8 01 00 00 00     mov         eax,1
  000000A1: 5E                 pop         esi
  000000A2: 83 C4 08           add         esp,8
  000000A5: C3                 ret

?WriteToFile@TEeData@@QAEHPAD@Z (public: int __thiscall TEeData::WriteToFile(char *)):
  00000000: 56                 push        esi
  00000001: 57                 push        edi
  00000002: 68 00 00 00 00     push        offset ??_C@_02GMLFBBN@wb?$AA@
  00000007: FF 74 24 10        push        dword ptr [esp+10h]
  0000000B: 8B F1              mov         esi,ecx
  0000000D: FF 15 00 00 00 00  call        dword ptr [__imp__fopen]
  00000013: 8B F8              mov         edi,eax
  00000015: 83 C4 08           add         esp,8
  00000018: 85 FF              test        edi,edi
  0000001A: 75 05              jne         00000021
  0000001C: 5F                 pop         edi
  0000001D: 5E                 pop         esi
  0000001E: C2 04 00           ret         4
  00000021: 57                 push        edi
  00000022: 68 80 00 00 00     push        80h
  00000027: 6A 01              push        1
  00000029: 56                 push        esi
  0000002A: FF 15 00 00 00 00  call        dword ptr [__imp__fwrite]
  00000030: 57                 push        edi
  00000031: 8B F0              mov         esi,eax
  00000033: FF 15 00 00 00 00  call        dword ptr [__imp__fclose]
  00000039: 83 C4 14           add         esp,14h
  0000003C: 33 C0              xor         eax,eax
  0000003E: 81 FE 80 00 00 00  cmp         esi,80h
  00000044: 0F 94 C0           sete        al
  00000047: 5F                 pop         edi
  00000048: 5E                 pop         esi
  00000049: C2 04 00           ret         4

?WriteWord@TEeData@@QAEHKG@Z (public: int __thiscall TEeData::WriteWord(unsigned long,unsigned short)):
  00000000: 8B 91 0C 08 00 00  mov         edx,dword ptr [ecx+80Ch]
  00000006: 85 D2              test        edx,edx
  00000008: 75 05              jne         0000000F
  0000000A: 33 C0              xor         eax,eax
  0000000C: C2 08 00           ret         8
  0000000F: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  00000013: 66 89 44 24 04     mov         word ptr [esp+4],ax
  00000018: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  0000001C: 88 44 24 06        mov         byte ptr [esp+6],al
  00000020: 6A 00              push        0
  00000022: C1 E8 08           shr         eax,8
  00000025: 88 44 24 0B        mov         byte ptr [esp+0Bh],al
  00000029: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000002D: 50                 push        eax
  0000002E: 6A 04              push        4
  00000030: 8D 44 24 10        lea         eax,[esp+10h]
  00000034: 50                 push        eax
  00000035: 6A 04              push        4
  00000037: 50                 push        eax
  00000038: FF B1 14 08 00 00  push        dword ptr [ecx+814h]
  0000003E: 52                 push        edx
  0000003F: FF 15 00 00 00 00  call        dword ptr [__imp__DeviceIoControl@32]
  00000045: B8 01 00 00 00     mov         eax,1
  0000004A: C2 08 00           ret         8

?ControlCallback@@YAHPAXPAU_SP_DEVINFO_DATA@@K0@Z (int __cdecl ControlCallback(void *,struct _SP_DEVINFO_DATA *,unsigned long,void *)):
  00000000: 81 EC 3C 01 00 00  sub         esp,13Ch
  00000006: 53                 push        ebx
  00000007: 8B 9C 24 44 01 00  mov         ebx,dword ptr [esp+144h]
            00
  0000000E: 56                 push        esi
  0000000F: 8B B4 24 54 01 00  mov         esi,dword ptr [esp+154h]
            00
  00000016: 57                 push        edi
  00000017: 8B BC 24 50 01 00  mov         edi,dword ptr [esp+150h]
            00
  0000001E: C7 44 24 0C 08 00  mov         dword ptr [esp+0Ch],8
            00 00
  00000026: 8B 4E 04           mov         ecx,dword ptr [esi+4]
  00000029: 8B C1              mov         eax,ecx
  0000002B: 48                 dec         eax
  0000002C: C7 44 24 10 12 00  mov         dword ptr [esp+10h],12h
            00 00
  00000034: A1 00 00 00 00     mov         eax,dword ptr [__imp__SetupDiSetClassInstallParamsA@16]
  00000039: C7 44 24 1C 00 00  mov         dword ptr [esp+1Ch],0
            00 00
  00000041: 74 06              je          00000049
  00000043: 89 4C 24 14        mov         dword ptr [esp+14h],ecx
  00000047: EB 4D              jmp         00000096
  00000049: 6A 14              push        14h
  0000004B: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000004F: C7 44 24 18 01 00  mov         dword ptr [esp+18h],1
            00 00
  00000057: 51                 push        ecx
  00000058: 57                 push        edi
  00000059: 53                 push        ebx
  0000005A: C7 44 24 28 01 00  mov         dword ptr [esp+28h],1
            00 00
  00000062: FF D0              call        eax
  00000064: 85 C0              test        eax,eax
  00000066: 74 0A              je          00000072
  00000068: 57                 push        edi
  00000069: 53                 push        ebx
  0000006A: 6A 12              push        12h
  0000006C: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiCallClassInstaller@12]
  00000072: 8B 46 04           mov         eax,dword ptr [esi+4]
  00000075: 89 44 24 14        mov         dword ptr [esp+14h],eax
  00000079: A1 00 00 00 00     mov         eax,dword ptr [__imp__SetupDiSetClassInstallParamsA@16]
  0000007E: C7 44 24 0C 08 00  mov         dword ptr [esp+0Ch],8
            00 00
  00000086: C7 44 24 10 12 00  mov         dword ptr [esp+10h],12h
            00 00
  0000008E: C7 44 24 1C 00 00  mov         dword ptr [esp+1Ch],0
            00 00
  00000096: 6A 14              push        14h
  00000098: 8D 4C 24 10        lea         ecx,[esp+10h]
  0000009C: C7 44 24 1C 02 00  mov         dword ptr [esp+1Ch],2
            00 00
  000000A4: 51                 push        ecx
  000000A5: 57                 push        edi
  000000A6: 53                 push        ebx
  000000A7: FF D0              call        eax
  000000A9: 85 C0              test        eax,eax
  000000AB: 74 6E              je          0000011B
  000000AD: 57                 push        edi
  000000AE: 53                 push        ebx
  000000AF: 6A 12              push        12h
  000000B1: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiCallClassInstaller@12]
  000000B7: 85 C0              test        eax,eax
  000000B9: 74 60              je          0000011B
  000000BB: 8D 44 24 20        lea         eax,[esp+20h]
  000000BF: C7 44 24 20 28 01  mov         dword ptr [esp+20h],128h
            00 00
  000000C7: 50                 push        eax
  000000C8: 57                 push        edi
  000000C9: 53                 push        ebx
  000000CA: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetDeviceInstallParamsA@12]
  000000D0: 85 C0              test        eax,eax
  000000D2: 74 2C              je          00000100
  000000D4: F7 44 24 24 80 01  test        dword ptr [esp+24h],180h
            00 00
  000000DC: 74 22              je          00000100
  000000DE: FF 76 10           push        dword ptr [esi+10h]
  000000E1: 57                 push        edi
  000000E2: 53                 push        ebx
  000000E3: E8 00 00 00 00     call        ?DumpDeviceWithInfo@@YAHPAXPAU_SP_DEVINFO_DATA@@PBD@Z
  000000E8: FF 06              inc         dword ptr [esi]
  000000EA: 83 C4 0C           add         esp,0Ch
  000000ED: C7 46 08 01 00 00  mov         dword ptr [esi+8],1
            00
  000000F4: 33 C0              xor         eax,eax
  000000F6: 5F                 pop         edi
  000000F7: 5E                 pop         esi
  000000F8: 5B                 pop         ebx
  000000F9: 81 C4 3C 01 00 00  add         esp,13Ch
  000000FF: C3                 ret
  00000100: FF 76 0C           push        dword ptr [esi+0Ch]
  00000103: 57                 push        edi
  00000104: 53                 push        ebx
  00000105: E8 00 00 00 00     call        ?DumpDeviceWithInfo@@YAHPAXPAU_SP_DEVINFO_DATA@@PBD@Z
  0000010A: FF 06              inc         dword ptr [esi]
  0000010C: 83 C4 0C           add         esp,0Ch
  0000010F: 33 C0              xor         eax,eax
  00000111: 5F                 pop         edi
  00000112: 5E                 pop         esi
  00000113: 5B                 pop         ebx
  00000114: 81 C4 3C 01 00 00  add         esp,13Ch
  0000011A: C3                 ret
  0000011B: FF 76 14           push        dword ptr [esi+14h]
  0000011E: 57                 push        edi
  0000011F: 53                 push        ebx
  00000120: E8 00 00 00 00     call        ?DumpDeviceWithInfo@@YAHPAXPAU_SP_DEVINFO_DATA@@PBD@Z
  00000125: 83 C4 0C           add         esp,0Ch
  00000128: 33 C0              xor         eax,eax
  0000012A: 5F                 pop         edi
  0000012B: 5E                 pop         esi
  0000012C: 5B                 pop         ebx
  0000012D: 81 C4 3C 01 00 00  add         esp,13Ch
  00000133: C3                 ret

?CopyMultiSz@@YAPAPADPAPA_W@Z (char * * __cdecl CopyMultiSz(wchar_t * *)):
  00000000: 53                 push        ebx
  00000001: 8B 5C 24 08        mov         ebx,dword ptr [esp+8]
  00000005: 55                 push        ebp
  00000006: 56                 push        esi
  00000007: 33 F6              xor         esi,esi
  00000009: 57                 push        edi
  0000000A: 85 DB              test        ebx,ebx
  0000000C: 74 1C              je          0000002A
  0000000E: 8B 03              mov         eax,dword ptr [ebx]
  00000010: 33 FF              xor         edi,edi
  00000012: 85 C0              test        eax,eax
  00000014: 74 14              je          0000002A
  00000016: 50                 push        eax
  00000017: FF 15 00 00 00 00  call        dword ptr [__imp__lstrlenA@4]
  0000001D: 40                 inc         eax
  0000001E: 8D 7F 01           lea         edi,[edi+1]
  00000021: 03 F0              add         esi,eax
  00000023: 8B 04 BB           mov         eax,dword ptr [ebx+edi*4]
  00000026: 85 C0              test        eax,eax
  00000028: 75 EC              jne         00000016
  0000002A: 46                 inc         esi
  0000002B: 56                 push        esi
  0000002C: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000031: 8B E8              mov         ebp,eax
  00000033: 83 C4 04           add         esp,4
  00000036: 85 ED              test        ebp,ebp
  00000038: 74 6E              je          000000A8
  0000003A: 33 FF              xor         edi,edi
  0000003C: 85 DB              test        ebx,ebx
  0000003E: 74 43              je          00000083
  00000040: 89 7C 24 14        mov         dword ptr [esp+14h],edi
  00000044: 39 3B              cmp         dword ptr [ebx],edi
  00000046: 74 3B              je          00000083
  00000048: 8B C3              mov         eax,ebx
  0000004A: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  00000050: FF 30              push        dword ptr [eax]
  00000052: 8B C6              mov         eax,esi
  00000054: 8D 0C 2F           lea         ecx,[edi+ebp]
  00000057: 2B C7              sub         eax,edi
  00000059: 50                 push        eax
  0000005A: 51                 push        ecx
  0000005B: E8 00 00 00 00     call        ?StringCchCopyA@@YGJPADIPBD@Z
  00000060: 85 C0              test        eax,eax
  00000062: 78 3B              js          0000009F
  00000064: 8D 04 2F           lea         eax,[edi+ebp]
  00000067: 50                 push        eax
  00000068: FF 15 00 00 00 00  call        dword ptr [__imp__lstrlenA@4]
  0000006E: 40                 inc         eax
  0000006F: 03 F8              add         edi,eax
  00000071: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000075: 40                 inc         eax
  00000076: 83 3C 83 00        cmp         dword ptr [ebx+eax*4],0
  0000007A: 89 44 24 14        mov         dword ptr [esp+14h],eax
  0000007E: 8D 04 83           lea         eax,[ebx+eax*4]
  00000081: 75 CD              jne         00000050
  00000083: 3B FE              cmp         edi,esi
  00000085: 7D 06              jge         0000008D
  00000087: C6 04 2F 00        mov         byte ptr [edi+ebp],0
  0000008B: EB 05              jmp         00000092
  0000008D: C6 44 2E FF 00     mov         byte ptr [esi+ebp-1],0
  00000092: 55                 push        ebp
  00000093: E8 00 00 00 00     call        ?GetMultiSzIndexArray@@YAPAPADPAD@Z
  00000098: 83 C4 04           add         esp,4
  0000009B: 85 C0              test        eax,eax
  0000009D: 75 0B              jne         000000AA
  0000009F: 55                 push        ebp
  000000A0: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000000A5: 83 C4 04           add         esp,4
  000000A8: 33 C0              xor         eax,eax
  000000AA: 5F                 pop         edi
  000000AB: 5E                 pop         esi
  000000AC: 5D                 pop         ebp
  000000AD: 5B                 pop         ebx
  000000AE: C3                 ret

?DelMultiSz@@YAXPAPA_W@Z (void __cdecl DelMultiSz(wchar_t * *)):
  00000000: 56                 push        esi
  00000001: 8B 74 24 08        mov         esi,dword ptr [esp+8]
  00000005: 85 F6              test        esi,esi
  00000007: 74 1C              je          00000025
  00000009: 8B 46 FC           mov         eax,dword ptr [esi-4]
  0000000C: 83 EE 04           sub         esi,4
  0000000F: 85 C0              test        eax,eax
  00000011: 74 09              je          0000001C
  00000013: 50                 push        eax
  00000014: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000019: 83 C4 04           add         esp,4
  0000001C: 56                 push        esi
  0000001D: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000022: 83 C4 04           add         esp,4
  00000025: 5E                 pop         esi
  00000026: C3                 ret

?DumpDeviceWithInfo@@YAHPAXPAU_SP_DEVINFO_DATA@@PBD@Z (int __cdecl DumpDeviceWithInfo(void *,struct _SP_DEVINFO_DATA *,char const *)):
  00000000: 81 EC E8 01 00 00  sub         esp,1E8h
  00000006: 56                 push        esi
  00000007: 8D 84 24 CC 00 00  lea         eax,[esp+0CCh]
            00
  0000000E: C7 84 24 CC 00 00  mov         dword ptr [esp+0CCh],11Fh
            00 1F 01 00 00
  00000019: 50                 push        eax
  0000001A: FF B4 24 F4 01 00  push        dword ptr [esp+1F4h]
            00
  00000021: BE 01 00 00 00     mov         esi,1
  00000026: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetDeviceInfoListDetailA@8]
  0000002C: 85 C0              test        eax,eax
  0000002E: 74 27              je          00000057
  00000030: FF B4 24 E0 00 00  push        dword ptr [esp+0E0h]
            00
  00000037: 8D 44 24 08        lea         eax,[esp+8]
  0000003B: 6A 00              push        0
  0000003D: 68 C8 00 00 00     push        0C8h
  00000042: 50                 push        eax
  00000043: 8B 84 24 04 02 00  mov         eax,dword ptr [esp+204h]
            00
  0000004A: FF 70 14           push        dword ptr [eax+14h]
  0000004D: FF 15 00 00 00 00  call        dword ptr [__imp__CM_Get_Device_ID_ExA@20]
  00000053: 85 C0              test        eax,eax
  00000055: 74 12              je          00000069
  00000057: 68 00 00 00 00     push        offset ??_C@_01OGPIMHDM@?$DP?$AA@
  0000005C: 8D 44 24 08        lea         eax,[esp+8]
  00000060: 50                 push        eax
  00000061: FF 15 00 00 00 00  call        dword ptr [__imp__lstrcpyA@8]
  00000067: 33 F6              xor         esi,esi
  00000069: 8B 84 24 F8 01 00  mov         eax,dword ptr [esp+1F8h]
            00
  00000070: 85 C0              test        eax,eax
  00000072: 74 1E              je          00000092
  00000074: 50                 push        eax
  00000075: 8D 44 24 08        lea         eax,[esp+8]
  00000079: 50                 push        eax
  0000007A: 68 00 00 00 00     push        offset ??_C@_0L@IDOCKPDF@?$CF?960s?3?5?$CFs?6?$AA@
  0000007F: FF 15 00 00 00 00  call        dword ptr [__imp__printf]
  00000085: 83 C4 0C           add         esp,0Ch
  00000088: 8B C6              mov         eax,esi
  0000008A: 5E                 pop         esi
  0000008B: 81 C4 E8 01 00 00  add         esp,1E8h
  00000091: C3                 ret
  00000092: 8D 44 24 04        lea         eax,[esp+4]
  00000096: 50                 push        eax
  00000097: 68 00 00 00 00     push        offset ??_C@_03OFAPEBGM@?$CFs?6?$AA@
  0000009C: FF 15 00 00 00 00  call        dword ptr [__imp__printf]
  000000A2: 83 C4 08           add         esp,8
  000000A5: 8B C6              mov         eax,esi
  000000A7: 5E                 pop         esi
  000000A8: 81 C4 E8 01 00 00  add         esp,1E8h
  000000AE: C3                 ret

?EnumerateDevices@@YAHPBD0KHPAPA_WP6AHPAXPAU_SP_DEVINFO_DATA@@K2@Z2@Z (int __cdecl EnumerateDevices(char const *,char const *,unsigned long,int,wchar_t * *,int (__cdecl*)(void *,struct _SP_DEVINFO_DATA *,unsigned long,void *),void *)):
  00000000: 81 EC 3C 02 00 00  sub         esp,23Ch
  00000006: 55                 push        ebp
  00000007: 57                 push        edi
  00000008: 8B BC 24 54 02 00  mov         edi,dword ptr [esp+254h]
            00
  0000000F: 33 C0              xor         eax,eax
  00000011: C7 44 24 14 00 00  mov         dword ptr [esp+14h],0
            00 00
  00000019: BD 02 00 00 00     mov         ebp,2
  0000001E: C7 44 24 08 00 00  mov         dword ptr [esp+8],0
            00 00
  00000026: C7 44 24 1C 00 00  mov         dword ptr [esp+1Ch],0
            00 00
  0000002E: 89 44 24 0C        mov         dword ptr [esp+0Ch],eax
  00000032: 85 FF              test        edi,edi
  00000034: 75 0C              jne         00000042
  00000036: 5F                 pop         edi
  00000037: 8D 45 01           lea         eax,[ebp+1]
  0000003A: 5D                 pop         ebp
  0000003B: 81 C4 3C 02 00 00  add         esp,23Ch
  00000041: C3                 ret
  00000042: 33 C9              xor         ecx,ecx
  00000044: 8B C7              mov         eax,edi
  00000046: BA 0C 00 00 00     mov         edx,0Ch
  0000004B: F7 E2              mul         eax,edx
  0000004D: 0F 90 C1           seto        cl
  00000050: F7 D9              neg         ecx
  00000052: 0B C8              or          ecx,eax
  00000054: 51                 push        ecx
  00000055: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000005A: 8B D0              mov         edx,eax
  0000005C: 83 C4 04           add         esp,4
  0000005F: 89 54 24 18        mov         dword ptr [esp+18h],edx
  00000063: 85 D2              test        edx,edx
  00000065: 74 74              je          000000DB
  00000067: 53                 push        ebx
  00000068: 8B 9C 24 50 02 00  mov         ebx,dword ptr [esp+250h]
            00
  0000006F: 56                 push        esi
  00000070: 85 FF              test        edi,edi
  00000072: 0F 8E 9A 00 00 00  jle         00000112
  00000078: 8B B4 24 60 02 00  mov         esi,dword ptr [esp+260h]
            00
  0000007F: 8B 06              mov         eax,dword ptr [esi]
  00000081: 66 83 38 3D        cmp         word ptr [eax],3Dh
  00000085: 75 6E              jne         000000F5
  00000087: 83 C0 02           add         eax,2
  0000008A: 66 83 38 00        cmp         word ptr [eax],0
  0000008E: 74 65              je          000000F5
  00000090: 6A 00              push        0
  00000092: 53                 push        ebx
  00000093: 8D 4C 24 2C        lea         ecx,[esp+2Ch]
  00000097: 51                 push        ecx
  00000098: 6A 01              push        1
  0000009A: 8D 4C 24 64        lea         ecx,[esp+64h]
  0000009E: 51                 push        ecx
  0000009F: 50                 push        eax
  000000A0: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiClassGuidsFromNameExA@24]
  000000A6: 85 C0              test        eax,eax
  000000A8: 75 0B              jne         000000B5
  000000AA: FF 15 00 00 00 00  call        dword ptr [__imp__GetLastError@0]
  000000B0: 83 F8 7A           cmp         eax,7Ah
  000000B3: 75 09              jne         000000BE
  000000B5: 83 7C 24 24 00     cmp         dword ptr [esp+24h],0
  000000BA: 75 2A              jne         000000E6
  000000BC: 33 ED              xor         ebp,ebp
  000000BE: 83 CB FF           or          ebx,0FFFFFFFFh
$final$97:
  000000C1: FF 74 24 20        push        dword ptr [esp+20h]
  000000C5: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000000CA: 83 C4 04           add         esp,4
  000000CD: 83 FB FF           cmp         ebx,0FFFFFFFFh
  000000D0: 74 07              je          000000D9
  000000D2: 53                 push        ebx
  000000D3: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiDestroyDeviceInfoList@4]
  000000D9: 5E                 pop         esi
  000000DA: 5B                 pop         ebx
  000000DB: 5F                 pop         edi
  000000DC: 8B C5              mov         eax,ebp
  000000DE: 5D                 pop         ebp
  000000DF: 81 C4 3C 02 00 00  add         esp,23Ch
  000000E5: C3                 ret
  000000E6: 8B 54 24 20        mov         edx,dword ptr [esp+20h]
  000000EA: B9 01 00 00 00     mov         ecx,1
  000000EF: 89 4C 24 14        mov         dword ptr [esp+14h],ecx
  000000F3: EB 02              jmp         000000F7
  000000F5: 33 C9              xor         ecx,ecx
  000000F7: 3B F9              cmp         edi,ecx
  000000F9: 7E 19              jle         00000114
  000000FB: 8B 04 8E           mov         eax,dword ptr [esi+ecx*4]
  000000FE: 66 83 38 2A        cmp         word ptr [eax],2Ah
  00000102: 75 18              jne         0000011C
  00000104: 66 83 78 02 00     cmp         word ptr [eax+2],0
  00000109: 75 11              jne         0000011C
  0000010B: 41                 inc         ecx
  0000010C: 89 4C 24 14        mov         dword ptr [esp+14h],ecx
  00000110: EB 02              jmp         00000114
  00000112: 33 C9              xor         ecx,ecx
  00000114: C7 44 24 10 01 00  mov         dword ptr [esp+10h],1
            00 00
  0000011C: 8B F9              mov         edi,ecx
  0000011E: 3B 8C 24 5C 02 00  cmp         ecx,dword ptr [esp+25Ch]
            00
  00000125: 0F 8D A2 00 00 00  jge         000001CD
  0000012B: 8B AC 24 60 02 00  mov         ebp,dword ptr [esp+260h]
            00
  00000132: 8D 71 01           lea         esi,[ecx+1]
  00000135: 8D 34 71           lea         esi,[ecx+esi*2]
  00000138: 8B 0D 00 00 00 00  mov         ecx,dword ptr [__imp__CharNextA@4]
  0000013E: 8D 34 B2           lea         esi,[edx+esi*4]
  00000141: 8B 44 BD 00        mov         eax,dword ptr [ebp+edi*4]
  00000145: 33 DB              xor         ebx,ebx
  00000147: 89 5C 24 30        mov         dword ptr [esp+30h],ebx
  0000014B: 89 44 24 2C        mov         dword ptr [esp+2Ch],eax
  0000014F: 80 38 40           cmp         byte ptr [eax],40h
  00000152: 75 12              jne         00000166
  00000154: 50                 push        eax
  00000155: BB 01 00 00 00     mov         ebx,1
  0000015A: FF D1              call        ecx
  0000015C: 8B 0D 00 00 00 00  mov         ecx,dword ptr [__imp__CharNextA@4]
  00000162: 89 44 24 2C        mov         dword ptr [esp+2Ch],eax
  00000166: 80 38 27           cmp         byte ptr [eax],27h
  00000169: 75 09              jne         00000174
  0000016B: 50                 push        eax
  0000016C: FF D1              call        ecx
  0000016E: 89 44 24 2C        mov         dword ptr [esp+2Ch],eax
  00000172: EB 10              jmp         00000184
  00000174: 6A 2A              push        2Ah
  00000176: 50                 push        eax
  00000177: FF 15 00 00 00 00  call        dword ptr [__imp___mbschr]
  0000017D: 83 C4 08           add         esp,8
  00000180: 89 44 24 30        mov         dword ptr [esp+30h],eax
  00000184: F3 0F 7E 44 24 2C  movq        xmm0,mmword ptr [esp+2Ch]
  0000018A: 66 0F D6 46 F8     movq        mmword ptr [esi-8],xmm0
  0000018F: 89 1E              mov         dword ptr [esi],ebx
  00000191: 83 7E FC 00        cmp         dword ptr [esi-4],0
  00000195: 75 04              jne         0000019B
  00000197: 85 DB              test        ebx,ebx
  00000199: 75 0B              jne         000001A6
  0000019B: B8 01 00 00 00     mov         eax,1
  000001A0: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  000001A4: EB 04              jmp         000001AA
  000001A6: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  000001AA: 8B 0D 00 00 00 00  mov         ecx,dword ptr [__imp__CharNextA@4]
  000001B0: 47                 inc         edi
  000001B1: 83 C6 0C           add         esi,0Ch
  000001B4: 3B BC 24 5C 02 00  cmp         edi,dword ptr [esp+25Ch]
            00
  000001BB: 7C 84              jl          00000141
  000001BD: BD 02 00 00 00     mov         ebp,2
  000001C2: 85 C0              test        eax,eax
  000001C4: 75 2F              jne         000001F5
  000001C6: 8B 9C 24 54 02 00  mov         ebx,dword ptr [esp+254h]
            00
  000001CD: 83 7C 24 10 00     cmp         dword ptr [esp+10h],0
  000001D2: 75 21              jne         000001F5
  000001D4: 6A 00              push        0
  000001D6: 33 C9              xor         ecx,ecx
  000001D8: 8D 44 24 58        lea         eax,[esp+58h]
  000001DC: 39 4C 24 28        cmp         dword ptr [esp+28h],ecx
  000001E0: 53                 push        ebx
  000001E1: 6A 00              push        0
  000001E3: 0F 44 C1           cmove       eax,ecx
  000001E6: 50                 push        eax
  000001E7: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiCreateDeviceInfoListExA@16]
  000001ED: 8B D8              mov         ebx,eax
  000001EF: 89 5C 24 18        mov         dword ptr [esp+18h],ebx
  000001F3: EB 3B              jmp         00000230
  000001F5: 8B 4C 24 24        mov         ecx,dword ptr [esp+24h]
  000001F9: 33 D2              xor         edx,edx
  000001FB: 6A 00              push        0
  000001FD: FF B4 24 58 02 00  push        dword ptr [esp+258h]
            00
  00000204: 85 C9              test        ecx,ecx
  00000206: B8 04 00 00 00     mov         eax,4
  0000020B: 6A 00              push        0
  0000020D: 0F 45 C2           cmovne      eax,edx
  00000210: 0B 84 24 64 02 00  or          eax,dword ptr [esp+264h]
            00
  00000217: 85 C9              test        ecx,ecx
  00000219: 50                 push        eax
  0000021A: 52                 push        edx
  0000021B: 8D 44 24 68        lea         eax,[esp+68h]
  0000021F: 52                 push        edx
  00000220: 0F 44 C2           cmove       eax,edx
  00000223: 50                 push        eax
  00000224: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetClassDevsExA@28]
  0000022A: 8B D8              mov         ebx,eax
  0000022C: 89 44 24 18        mov         dword ptr [esp+18h],eax
  00000230: 83 FB FF           cmp         ebx,0FFFFFFFFh
  00000233: 0F 84 88 FE FF FF  je          $final$97
  00000239: 8B B4 24 5C 02 00  mov         esi,dword ptr [esp+25Ch]
            00
  00000240: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  00000244: 3B FE              cmp         edi,esi
  00000246: 7D 48              jge         00000290
  00000248: 8B 4C 24 20        mov         ecx,dword ptr [esp+20h]
  0000024C: 8D 04 7F           lea         eax,[edi+edi*2]
  0000024F: 8B BC 24 5C 02 00  mov         edi,dword ptr [esp+25Ch]
            00
  00000256: 2B 7C 24 14        sub         edi,dword ptr [esp+14h]
  0000025A: 8B 1D 00 00 00 00  mov         ebx,dword ptr [__imp__SetupDiOpenDeviceInfoA@20]
  00000260: 8B 6C 24 18        mov         ebp,dword ptr [esp+18h]
  00000264: 8D 34 81           lea         esi,[ecx+eax*4]
  00000267: 83 7E 08 00        cmp         dword ptr [esi+8],0
  0000026B: 74 0B              je          00000278
  0000026D: 6A 00              push        0
  0000026F: 6A 00              push        0
  00000271: 6A 00              push        0
  00000273: FF 36              push        dword ptr [esi]
  00000275: 55                 push        ebp
  00000276: FF D3              call        ebx
  00000278: 83 C6 0C           add         esi,0Ch
  0000027B: 4F                 dec         edi
  0000027C: 75 E9              jne         00000267
  0000027E: 8B 5C 24 18        mov         ebx,dword ptr [esp+18h]
  00000282: 8D 6F 02           lea         ebp,[edi+2]
  00000285: 8B B4 24 5C 02 00  mov         esi,dword ptr [esp+25Ch]
            00
  0000028C: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  00000290: 8D 84 24 2C 01 00  lea         eax,[esp+12Ch]
            00
  00000297: C7 84 24 2C 01 00  mov         dword ptr [esp+12Ch],11Fh
            00 1F 01 00 00
  000002A2: 50                 push        eax
  000002A3: 53                 push        ebx
  000002A4: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetDeviceInfoListDetailA@8]
  000002AA: 85 C0              test        eax,eax
  000002AC: 0F 84 0F FE FF FF  je          $final$97
  000002B2: 8B 6C 24 1C        mov         ebp,dword ptr [esp+1Ch]
  000002B6: 33 C0              xor         eax,eax
  000002B8: 39 44 24 10        cmp         dword ptr [esp+10h],eax
  000002BC: 89 44 24 10        mov         dword ptr [esp+10h],eax
  000002C0: 0F 45 E8           cmovne      ebp,eax
  000002C3: C7 44 24 38 1C 00  mov         dword ptr [esp+38h],1Ch
            00 00
  000002CB: 8D 44 24 38        lea         eax,[esp+38h]
  000002CF: 89 6C 24 1C        mov         dword ptr [esp+1Ch],ebp
  000002D3: 50                 push        eax
  000002D4: 6A 00              push        0
  000002D6: 53                 push        ebx
  000002D7: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiEnumDeviceInfo@12]
  000002DD: 85 C0              test        eax,eax
  000002DF: 0F 84 6B 01 00 00  je          00000450
  000002E5: 85 ED              test        ebp,ebp
  000002E7: 0F 84 11 01 00 00  je          000003FE
  000002ED: 33 ED              xor         ebp,ebp
  000002EF: 89 7C 24 28        mov         dword ptr [esp+28h],edi
  000002F3: 3B FE              cmp         edi,esi
  000002F5: 0F 8D 33 01 00 00  jge         0000042E
  000002FB: 8B 4C 24 20        mov         ecx,dword ptr [esp+20h]
  000002FF: 8D 04 7F           lea         eax,[edi+edi*2]
  00000302: 8D 34 81           lea         esi,[ecx+eax*4]
  00000305: 85 ED              test        ebp,ebp
  00000307: 0F 85 F1 00 00 00  jne         000003FE
  0000030D: FF B4 24 40 01 00  push        dword ptr [esp+140h]
            00
  00000314: 8D 44 24 68        lea         eax,[esp+68h]
  00000318: 55                 push        ebp
  00000319: 68 C8 00 00 00     push        0C8h
  0000031E: 50                 push        eax
  0000031F: FF 74 24 5C        push        dword ptr [esp+5Ch]
  00000323: FF 15 00 00 00 00  call        dword ptr [__imp__CM_Get_Device_ID_ExA@20]
  00000329: 0F B6 4C 24 64     movzx       ecx,byte ptr [esp+64h]
  0000032E: 33 D2              xor         edx,edx
  00000330: 85 C0              test        eax,eax
  00000332: 0F 45 CA           cmovne      ecx,edx
  00000335: 88 4C 24 64        mov         byte ptr [esp+64h],cl
  00000339: 39 56 08           cmp         dword ptr [esi+8],edx
  0000033C: 74 20              je          0000035E
  0000033E: 8D 44 24 64        lea         eax,[esp+64h]
  00000342: 56                 push        esi
  00000343: 50                 push        eax
  00000344: E8 00 00 00 00     call        ?WildCardMatch@@YAHPBDABUIdEntry@@@Z
  00000349: 83 C4 08           add         esp,8
  0000034C: 85 C0              test        eax,eax
  0000034E: 0F 84 8D 00 00 00  je          000003E1
  00000354: BD 01 00 00 00     mov         ebp,1
  00000359: E9 83 00 00 00     jmp         000003E1
  0000035E: 6A 01              push        1
  00000360: 8D 44 24 3C        lea         eax,[esp+3Ch]
  00000364: 50                 push        eax
  00000365: 53                 push        ebx
  00000366: E8 00 00 00 00     call        ?GetDevMultiSz@@YAPAPADPAXPAU_SP_DEVINFO_DATA@@K@Z
  0000036B: 8B F8              mov         edi,eax
  0000036D: 8D 44 24 44        lea         eax,[esp+44h]
  00000371: 6A 02              push        2
  00000373: 50                 push        eax
  00000374: 53                 push        ebx
  00000375: E8 00 00 00 00     call        ?GetDevMultiSz@@YAPAPADPAXPAU_SP_DEVINFO_DATA@@K@Z
  0000037A: 56                 push        esi
  0000037B: 57                 push        edi
  0000037C: 8B D8              mov         ebx,eax
  0000037E: E8 00 00 00 00     call        ?WildCompareHwIds@@YAHPAPA_WABUIdEntry@@@Z
  00000383: 83 C4 20           add         esp,20h
  00000386: 85 C0              test        eax,eax
  00000388: 75 0E              jne         00000398
  0000038A: 56                 push        esi
  0000038B: 53                 push        ebx
  0000038C: E8 00 00 00 00     call        ?WildCompareHwIds@@YAHPAPA_WABUIdEntry@@@Z
  00000391: 83 C4 08           add         esp,8
  00000394: 85 C0              test        eax,eax
  00000396: 74 05              je          0000039D
  00000398: BD 01 00 00 00     mov         ebp,1
  0000039D: 85 FF              test        edi,edi
  0000039F: 74 1C              je          000003BD
  000003A1: 8B 47 FC           mov         eax,dword ptr [edi-4]
  000003A4: 83 C7 FC           add         edi,0FFFFFFFCh
  000003A7: 85 C0              test        eax,eax
  000003A9: 74 09              je          000003B4
  000003AB: 50                 push        eax
  000003AC: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000003B1: 83 C4 04           add         esp,4
  000003B4: 57                 push        edi
  000003B5: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000003BA: 83 C4 04           add         esp,4
  000003BD: 85 DB              test        ebx,ebx
  000003BF: 74 1C              je          000003DD
  000003C1: 8B 43 FC           mov         eax,dword ptr [ebx-4]
  000003C4: 8D 7B FC           lea         edi,[ebx-4]
  000003C7: 85 C0              test        eax,eax
  000003C9: 74 09              je          000003D4
  000003CB: 50                 push        eax
  000003CC: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000003D1: 83 C4 04           add         esp,4
  000003D4: 57                 push        edi
  000003D5: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000003DA: 83 C4 04           add         esp,4
  000003DD: 8B 5C 24 18        mov         ebx,dword ptr [esp+18h]
  000003E1: 8B 4C 24 28        mov         ecx,dword ptr [esp+28h]
  000003E5: 83 C6 0C           add         esi,0Ch
  000003E8: 41                 inc         ecx
  000003E9: 89 4C 24 28        mov         dword ptr [esp+28h],ecx
  000003ED: 3B 8C 24 5C 02 00  cmp         ecx,dword ptr [esp+25Ch]
            00
  000003F4: 0F 8C 0B FF FF FF  jl          00000305
  000003FA: 85 ED              test        ebp,ebp
  000003FC: 74 25              je          00000423
  000003FE: FF B4 24 68 02 00  push        dword ptr [esp+268h]
            00
  00000405: 8D 44 24 3C        lea         eax,[esp+3Ch]
  00000409: FF 74 24 14        push        dword ptr [esp+14h]
  0000040D: 50                 push        eax
  0000040E: 53                 push        ebx
  0000040F: FF 94 24 74 02 00  call        dword ptr [esp+274h]
            00
  00000416: 8B E8              mov         ebp,eax
  00000418: 83 C4 10           add         esp,10h
  0000041B: 85 ED              test        ebp,ebp
  0000041D: 0F 85 9E FC FF FF  jne         $final$97
  00000423: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  00000427: 8B B4 24 5C 02 00  mov         esi,dword ptr [esp+25Ch]
            00
  0000042E: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000432: 8D 4C 24 38        lea         ecx,[esp+38h]
  00000436: 40                 inc         eax
  00000437: 51                 push        ecx
  00000438: 50                 push        eax
  00000439: 53                 push        ebx
  0000043A: 89 44 24 1C        mov         dword ptr [esp+1Ch],eax
  0000043E: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiEnumDeviceInfo@12]
  00000444: 8B 6C 24 1C        mov         ebp,dword ptr [esp+1Ch]
  00000448: 85 C0              test        eax,eax
  0000044A: 0F 85 95 FE FF FF  jne         000002E5
  00000450: 33 ED              xor         ebp,ebp
  00000452: E9 6A FC FF FF     jmp         $final$97

?FormatToStream@@YAXPAU_iobuf@@KZZ (void __cdecl FormatToStream(struct _iobuf *,unsigned long,...)):
  00000000: 83 EC 08           sub         esp,8
  00000003: 56                 push        esi
  00000004: 8D 44 24 18        lea         eax,[esp+18h]
  00000008: C7 44 24 04 00 00  mov         dword ptr [esp+4],0
            00 00
  00000010: 89 44 24 08        mov         dword ptr [esp+8],eax
  00000014: 8D 44 24 08        lea         eax,[esp+8]
  00000018: 50                 push        eax
  00000019: 6A 00              push        0
  0000001B: 8D 44 24 0C        lea         eax,[esp+0Ch]
  0000001F: 50                 push        eax
  00000020: 6A 00              push        0
  00000022: FF 74 24 24        push        dword ptr [esp+24h]
  00000026: 6A 00              push        0
  00000028: 68 00 09 00 00     push        900h
  0000002D: FF 15 00 00 00 00  call        dword ptr [__imp__FormatMessageA@28]
  00000033: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  00000037: 8B F0              mov         esi,eax
  00000039: 85 C9              test        ecx,ecx
  0000003B: 74 62              je          0000009F
  0000003D: 85 F6              test        esi,esi
  0000003F: 74 57              je          00000098
  00000041: 53                 push        ebx
  00000042: 8B 1D 00 00 00 00  mov         ebx,dword ptr [__imp__CharPrevA@8]
  00000048: 57                 push        edi
  00000049: 33 FF              xor         edi,edi
  0000004B: EB 03              jmp         00000050
  0000004D: 8D 49 00           lea         ecx,[ecx]
  00000050: 8D 04 0E           lea         eax,[esi+ecx]
  00000053: 50                 push        eax
  00000054: 51                 push        ecx
  00000055: FF D3              call        ebx
  00000057: 0F BE 00           movsx       eax,byte ptr [eax]
  0000005A: 83 F8 0D           cmp         eax,0Dh
  0000005D: 74 05              je          00000064
  0000005F: 83 F8 0A           cmp         eax,0Ah
  00000062: 75 08              jne         0000006C
  00000064: 8B 4C 24 0C        mov         ecx,dword ptr [esp+0Ch]
  00000068: 4E                 dec         esi
  00000069: 47                 inc         edi
  0000006A: EB E4              jmp         00000050
  0000006C: 85 FF              test        edi,edi
  0000006E: 5F                 pop         edi
  0000006F: 5B                 pop         ebx
  00000070: 74 11              je          00000083
  00000072: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  00000076: C6 04 06 0A        mov         byte ptr [esi+eax],0Ah
  0000007A: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  0000007E: C6 44 06 01 00     mov         byte ptr [esi+eax+1],0
  00000083: FF 74 24 10        push        dword ptr [esp+10h]
  00000087: FF 74 24 08        push        dword ptr [esp+8]
  0000008B: FF 15 00 00 00 00  call        dword ptr [__imp__fputs]
  00000091: 8B 4C 24 0C        mov         ecx,dword ptr [esp+0Ch]
  00000095: 83 C4 08           add         esp,8
  00000098: 51                 push        ecx
  00000099: FF 15 00 00 00 00  call        dword ptr [__imp__LocalFree@4]
  0000009F: 5E                 pop         esi
  000000A0: 83 C4 08           add         esp,8
  000000A3: C3                 ret

?GetDevMultiSz@@YAPAPADPAXPAU_SP_DEVINFO_DATA@@K@Z (char * * __cdecl GetDevMultiSz(void *,struct _SP_DEVINFO_DATA *,unsigned long)):
  00000000: 83 EC 08           sub         esp,8
  00000003: 56                 push        esi
  00000004: 68 02 20 00 00     push        2002h
  00000009: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000000E: 8B F0              mov         esi,eax
  00000010: 83 C4 04           add         esp,4
  00000013: 85 F6              test        esi,esi
  00000015: 75 05              jne         0000001C
  00000017: 5E                 pop         esi
  00000018: 83 C4 08           add         esp,8
  0000001B: C3                 ret
  0000001C: 53                 push        ebx
  0000001D: 55                 push        ebp
  0000001E: 8B 6C 24 20        mov         ebp,dword ptr [esp+20h]
  00000022: 8D 44 24 0C        lea         eax,[esp+0Ch]
  00000026: 57                 push        edi
  00000027: 50                 push        eax
  00000028: 68 00 20 00 00     push        2000h
  0000002D: 56                 push        esi
  0000002E: 8D 44 24 20        lea         eax,[esp+20h]
  00000032: 50                 push        eax
  00000033: 55                 push        ebp
  00000034: FF 74 24 34        push        dword ptr [esp+34h]
  00000038: FF 74 24 34        push        dword ptr [esp+34h]
  0000003C: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetDeviceRegistryPropertyA@28]
  00000042: 85 C0              test        eax,eax
  00000044: 75 53              jne         00000099
  00000046: 8B 1D 00 00 00 00  mov         ebx,dword ptr [__imp__GetLastError@0]
  0000004C: 8D 64 24 00        lea         esp,[esp]
  00000050: FF D3              call        ebx
  00000052: 83 F8 7A           cmp         eax,7Ah
  00000055: 75 59              jne         $failed$24
  00000057: 83 7C 24 14 07     cmp         dword ptr [esp+14h],7
  0000005C: 75 52              jne         $failed$24
  0000005E: 8B 7C 24 10        mov         edi,dword ptr [esp+10h]
  00000062: 56                 push        esi
  00000063: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000068: 8D 47 02           lea         eax,[edi+2]
  0000006B: 50                 push        eax
  0000006C: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000071: 8B F0              mov         esi,eax
  00000073: 83 C4 08           add         esp,8
  00000076: 85 F6              test        esi,esi
  00000078: 74 3F              je          000000B9
  0000007A: 8D 44 24 10        lea         eax,[esp+10h]
  0000007E: 50                 push        eax
  0000007F: 57                 push        edi
  00000080: 56                 push        esi
  00000081: 8D 44 24 20        lea         eax,[esp+20h]
  00000085: 50                 push        eax
  00000086: 55                 push        ebp
  00000087: FF 74 24 34        push        dword ptr [esp+34h]
  0000008B: FF 74 24 34        push        dword ptr [esp+34h]
  0000008F: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetDeviceRegistryPropertyA@28]
  00000095: 85 C0              test        eax,eax
  00000097: 74 B7              je          00000050
  00000099: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  0000009D: 56                 push        esi
  0000009E: 66 C7 04 30 00 00  mov         word ptr [eax+esi],0
  000000A4: E8 00 00 00 00     call        ?GetMultiSzIndexArray@@YAPAPADPAD@Z
  000000A9: 83 C4 04           add         esp,4
  000000AC: 85 C0              test        eax,eax
  000000AE: 75 0B              jne         000000BB
$failed$24:
  000000B0: 56                 push        esi
  000000B1: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000000B6: 83 C4 04           add         esp,4
  000000B9: 33 C0              xor         eax,eax
  000000BB: 5F                 pop         edi
  000000BC: 5D                 pop         ebp
  000000BD: 5B                 pop         ebx
  000000BE: 5E                 pop         esi
  000000BF: 83 C4 08           add         esp,8
  000000C2: C3                 ret

?GetDeviceDescription@@YAPADPAXPAU_SP_DEVINFO_DATA@@@Z (char * __cdecl GetDeviceDescription(void *,struct _SP_DEVINFO_DATA *)):
  00000000: 6A 0C              push        0Ch
  00000002: FF 74 24 0C        push        dword ptr [esp+0Ch]
  00000006: FF 74 24 0C        push        dword ptr [esp+0Ch]
  0000000A: E8 00 00 00 00     call        ?GetDeviceStringProperty@@YAPADPAXPAU_SP_DEVINFO_DATA@@K@Z
  0000000F: 83 C4 0C           add         esp,0Ch
  00000012: 85 C0              test        eax,eax
  00000014: 75 11              jne         00000027
  00000016: 50                 push        eax
  00000017: FF 74 24 0C        push        dword ptr [esp+0Ch]
  0000001B: FF 74 24 0C        push        dword ptr [esp+0Ch]
  0000001F: E8 00 00 00 00     call        ?GetDeviceStringProperty@@YAPADPAXPAU_SP_DEVINFO_DATA@@K@Z
  00000024: 83 C4 0C           add         esp,0Ch
  00000027: C3                 ret

?GetDeviceStringProperty@@YAPADPAXPAU_SP_DEVINFO_DATA@@K@Z (char * __cdecl GetDeviceStringProperty(void *,struct _SP_DEVINFO_DATA *,unsigned long)):
  00000000: 83 EC 08           sub         esp,8
  00000003: 56                 push        esi
  00000004: 68 01 04 00 00     push        401h
  00000009: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000000E: 8B F0              mov         esi,eax
  00000010: 83 C4 04           add         esp,4
  00000013: 85 F6              test        esi,esi
  00000015: 75 05              jne         0000001C
  00000017: 5E                 pop         esi
  00000018: 83 C4 08           add         esp,8
  0000001B: C3                 ret
  0000001C: 53                 push        ebx
  0000001D: 55                 push        ebp
  0000001E: 8B 6C 24 20        mov         ebp,dword ptr [esp+20h]
  00000022: 8D 44 24 0C        lea         eax,[esp+0Ch]
  00000026: 57                 push        edi
  00000027: 50                 push        eax
  00000028: 68 00 04 00 00     push        400h
  0000002D: 56                 push        esi
  0000002E: 8D 44 24 20        lea         eax,[esp+20h]
  00000032: 50                 push        eax
  00000033: 55                 push        ebp
  00000034: FF 74 24 34        push        dword ptr [esp+34h]
  00000038: FF 74 24 34        push        dword ptr [esp+34h]
  0000003C: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetDeviceRegistryPropertyA@28]
  00000042: 85 C0              test        eax,eax
  00000044: 75 53              jne         00000099
  00000046: 8B 1D 00 00 00 00  mov         ebx,dword ptr [__imp__GetLastError@0]
  0000004C: 8D 64 24 00        lea         esp,[esp]
  00000050: FF D3              call        ebx
  00000052: 83 F8 7A           cmp         eax,7Ah
  00000055: 75 54              jne         $failed$23
  00000057: 83 7C 24 14 01     cmp         dword ptr [esp+14h],1
  0000005C: 75 4D              jne         $failed$23
  0000005E: 8B 7C 24 10        mov         edi,dword ptr [esp+10h]
  00000062: 56                 push        esi
  00000063: E8 00 00 00 00     call        ??3@YAXPAX@Z
  00000068: 8D 47 01           lea         eax,[edi+1]
  0000006B: 50                 push        eax
  0000006C: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000071: 8B F0              mov         esi,eax
  00000073: 83 C4 08           add         esp,8
  00000076: 85 F6              test        esi,esi
  00000078: 74 3A              je          000000B4
  0000007A: 8D 44 24 10        lea         eax,[esp+10h]
  0000007E: 50                 push        eax
  0000007F: 57                 push        edi
  00000080: 56                 push        esi
  00000081: 8D 44 24 20        lea         eax,[esp+20h]
  00000085: 50                 push        eax
  00000086: 55                 push        ebp
  00000087: FF 74 24 34        push        dword ptr [esp+34h]
  0000008B: FF 74 24 34        push        dword ptr [esp+34h]
  0000008F: FF 15 00 00 00 00  call        dword ptr [__imp__SetupDiGetDeviceRegistryPropertyA@28]
  00000095: 85 C0              test        eax,eax
  00000097: 74 B7              je          00000050
  00000099: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  0000009D: 5F                 pop         edi
  0000009E: 5D                 pop         ebp
  0000009F: 5B                 pop         ebx
  000000A0: C6 04 30 00        mov         byte ptr [eax+esi],0
  000000A4: 8B C6              mov         eax,esi
  000000A6: 5E                 pop         esi
  000000A7: 83 C4 08           add         esp,8
  000000AA: C3                 ret
$failed$23:
  000000AB: 56                 push        esi
  000000AC: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000000B1: 83 C4 04           add         esp,4
  000000B4: 5F                 pop         edi
  000000B5: 5D                 pop         ebp
  000000B6: 5B                 pop         ebx
  000000B7: 33 C0              xor         eax,eax
  000000B9: 5E                 pop         esi
  000000BA: 83 C4 08           add         esp,8
  000000BD: C3                 ret

?GetIdType@@YA?AUIdEntry@@PBD@Z (struct IdEntry __cdecl GetIdType(char const *)):
  00000000: 8B 44 24 08        mov         eax,dword ptr [esp+8]
  00000004: 56                 push        esi
  00000005: 8B 74 24 08        mov         esi,dword ptr [esp+8]
  00000009: 80 38 40           cmp         byte ptr [eax],40h
  0000000C: C7 46 08 00 00 00  mov         dword ptr [esi+8],0
            00
  00000013: C7 46 04 00 00 00  mov         dword ptr [esi+4],0
            00
  0000001A: 89 06              mov         dword ptr [esi],eax
  0000001C: 75 10              jne         0000002E
  0000001E: 50                 push        eax
  0000001F: C7 46 08 01 00 00  mov         dword ptr [esi+8],1
            00
  00000026: FF 15 00 00 00 00  call        dword ptr [__imp__CharNextA@4]
  0000002C: 89 06              mov         dword ptr [esi],eax
  0000002E: 8B 06              mov         eax,dword ptr [esi]
  00000030: 80 38 27           cmp         byte ptr [eax],27h
  00000033: 75 0D              jne         00000042
  00000035: 50                 push        eax
  00000036: FF 15 00 00 00 00  call        dword ptr [__imp__CharNextA@4]
  0000003C: 89 06              mov         dword ptr [esi],eax
  0000003E: 8B C6              mov         eax,esi
  00000040: 5E                 pop         esi
  00000041: C3                 ret
  00000042: 6A 2A              push        2Ah
  00000044: 50                 push        eax
  00000045: FF 15 00 00 00 00  call        dword ptr [__imp___mbschr]
  0000004B: 83 C4 08           add         esp,8
  0000004E: 89 46 04           mov         dword ptr [esi+4],eax
  00000051: 8B C6              mov         eax,esi
  00000053: 5E                 pop         esi
  00000054: C3                 ret

?GetMultiSzIndexArray@@YAPAPADPAD@Z (char * * __cdecl GetMultiSzIndexArray(char *)):
  00000000: 53                 push        ebx
  00000001: 55                 push        ebp
  00000002: 8B 2D 00 00 00 00  mov         ebp,dword ptr [__imp__lstrlenA@4]
  00000008: 56                 push        esi
  00000009: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  0000000D: 8B DE              mov         ebx,esi
  0000000F: 57                 push        edi
  00000010: 33 FF              xor         edi,edi
  00000012: 80 3E 00           cmp         byte ptr [esi],0
  00000015: 74 0C              je          00000023
  00000017: 53                 push        ebx
  00000018: FF D5              call        ebp
  0000001A: 43                 inc         ebx
  0000001B: 47                 inc         edi
  0000001C: 03 D8              add         ebx,eax
  0000001E: 80 3B 00           cmp         byte ptr [ebx],0
  00000021: 75 F4              jne         00000017
  00000023: 33 C9              xor         ecx,ecx
  00000025: 8D 47 02           lea         eax,[edi+2]
  00000028: BA 04 00 00 00     mov         edx,4
  0000002D: F7 E2              mul         eax,edx
  0000002F: 0F 90 C1           seto        cl
  00000032: F7 D9              neg         ecx
  00000034: 0B C8              or          ecx,eax
  00000036: 51                 push        ecx
  00000037: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000003C: 8B D8              mov         ebx,eax
  0000003E: 83 C4 04           add         esp,4
  00000041: 85 DB              test        ebx,ebx
  00000043: 75 05              jne         0000004A
  00000045: 5F                 pop         edi
  00000046: 5E                 pop         esi
  00000047: 5D                 pop         ebp
  00000048: 5B                 pop         ebx
  00000049: C3                 ret
  0000004A: 89 33              mov         dword ptr [ebx],esi
  0000004C: 85 FF              test        edi,edi
  0000004E: 74 17              je          00000067
  00000050: 33 FF              xor         edi,edi
  00000052: 80 3E 00           cmp         byte ptr [esi],0
  00000055: 74 10              je          00000067
  00000057: 56                 push        esi
  00000058: 89 74 BB 04        mov         dword ptr [ebx+edi*4+4],esi
  0000005C: FF D5              call        ebp
  0000005E: 46                 inc         esi
  0000005F: 47                 inc         edi
  00000060: 03 F0              add         esi,eax
  00000062: 80 3E 00           cmp         byte ptr [esi],0
  00000065: 75 F0              jne         00000057
  00000067: C7 44 BB 04 00 00  mov         dword ptr [ebx+edi*4+4],0
            00 00
  0000006F: 8D 43 04           lea         eax,[ebx+4]
  00000072: 5F                 pop         edi
  00000073: 5E                 pop         esi
  00000074: 5D                 pop         ebp
  00000075: 5B                 pop         ebx
  00000076: C3                 ret

?GetRegMultiSz@@YAPAPADPAUHKEY__@@PBD@Z (char * * __cdecl GetRegMultiSz(struct HKEY__ *,char const *)):
  00000000: 83 EC 08           sub         esp,8
  00000003: 57                 push        edi
  00000004: 68 02 20 00 00     push        2002h
  00000009: E8 00 00 00 00     call        ??2@YAPAXI@Z
  0000000E: 8B F8              mov         edi,eax
  00000010: 83 C4 04           add         esp,4
  00000013: 85 FF              test        edi,edi
  00000015: 75 05              jne         0000001C
  00000017: 5F                 pop         edi
  00000018: 83 C4 08           add         esp,8
  0000001B: C3                 ret
  0000001C: 53                 push        ebx
  0000001D: 55                 push        ebp
  0000001E: 8B 6C 24 1C        mov         ebp,dword ptr [esp+1Ch]
  00000022: 8D 44 24 0C        lea         eax,[esp+0Ch]
  00000026: 56                 push        esi
  00000027: 50                 push        eax
  00000028: 57                 push        edi
  00000029: 8D 44 24 1C        lea         eax,[esp+1Ch]
  0000002D: C7 44 24 18 00 20  mov         dword ptr [esp+18h],2000h
            00 00
  00000035: 50                 push        eax
  00000036: 6A 00              push        0
  00000038: 55                 push        ebp
  00000039: FF 74 24 30        push        dword ptr [esp+30h]
  0000003D: FF 15 00 00 00 00  call        dword ptr [__imp__RegQueryValueExA@24]
  00000043: 85 C0              test        eax,eax
  00000045: 74 51              je          00000098
  00000047: 8B 1D 00 00 00 00  mov         ebx,dword ptr [__imp__GetLastError@0]
  0000004D: 8D 49 00           lea         ecx,[ecx]
  00000050: FF D3              call        ebx
  00000052: 3D EA 00 00 00     cmp         eax,0EAh
  00000057: 75 56              jne         $failed$24
  00000059: 83 7C 24 14 07     cmp         dword ptr [esp+14h],7
  0000005E: 75 4F              jne         $failed$24
  00000060: 8B 74 24 10        mov         esi,dword ptr [esp+10h]
  00000064: 57                 push        edi
  00000065: E8 00 00 00 00     call        ??3@YAXPAX@Z
  0000006A: 8D 46 02           lea         eax,[esi+2]
  0000006D: 50                 push        eax
  0000006E: E8 00 00 00 00     call        ??2@YAPAXI@Z
  00000073: 8B F8              mov         edi,eax
  00000075: 83 C4 08           add         esp,8
  00000078: 85 FF              test        edi,edi
  0000007A: 74 3C              je          000000B8
  0000007C: 8D 44 24 10        lea         eax,[esp+10h]
  00000080: 50                 push        eax
  00000081: 57                 push        edi
  00000082: 8D 44 24 1C        lea         eax,[esp+1Ch]
  00000086: 50                 push        eax
  00000087: 6A 00              push        0
  00000089: 55                 push        ebp
  0000008A: FF 74 24 30        push        dword ptr [esp+30h]
  0000008E: FF 15 00 00 00 00  call        dword ptr [__imp__RegQueryValueExA@24]
  00000094: 85 C0              test        eax,eax
  00000096: 75 B8              jne         00000050
  00000098: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  0000009C: 57                 push        edi
  0000009D: 66 C7 04 38 00 00  mov         word ptr [eax+edi],0
  000000A3: E8 00 00 00 00     call        ?GetMultiSzIndexArray@@YAPAPADPAD@Z
  000000A8: 83 C4 04           add         esp,4
  000000AB: 85 C0              test        eax,eax
  000000AD: 75 0B              jne         000000BA
$failed$24:
  000000AF: 57                 push        edi
  000000B0: E8 00 00 00 00     call        ??3@YAXPAX@Z
  000000B5: 83 C4 04           add         esp,4
  000000B8: 33 C0              xor         eax,eax
  000000BA: 5E                 pop         esi
  000000BB: 5D                 pop         ebp
  000000BC: 5B                 pop         ebx
  000000BD: 5F                 pop         edi
  000000BE: 83 C4 08           add         esp,8
  000000C1: C3                 ret

?Reboot@@YAHXZ (int __cdecl Reboot(void)):
  00000000: 83 EC 1C           sub         esp,1Ch
  00000003: 8D 04 24           lea         eax,[esp]
  00000006: 50                 push        eax
  00000007: 6A 20              push        20h
  00000009: FF 15 00 00 00 00  call        dword ptr [__imp__GetCurrentProcess@0]
  0000000F: 50                 push        eax
  00000010: FF 15 00 00 00 00  call        dword ptr [__imp__OpenProcessToken@12]
  00000016: 85 C0              test        eax,eax
  00000018: 74 56              je          $final$9
  0000001A: 8D 44 24 04        lea         eax,[esp+4]
  0000001E: 50                 push        eax
  0000001F: 68 00 00 00 00     push        offset ??_C@_0BE@POPFGFGJ@SeShutdownPrivilege?$AA@
  00000024: 6A 00              push        0
  00000026: FF 15 00 00 00 00  call        dword ptr [__imp__LookupPrivilegeValueA@12]
  0000002C: 85 C0              test        eax,eax
  0000002E: 74 37              je          00000067
  00000030: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  00000034: 6A 00              push        0
  00000036: 6A 00              push        0
  00000038: 89 44 24 18        mov         dword ptr [esp+18h],eax
  0000003C: 8B 44 24 10        mov         eax,dword ptr [esp+10h]
  00000040: 6A 00              push        0
  00000042: 89 44 24 20        mov         dword ptr [esp+20h],eax
  00000046: 8D 44 24 18        lea         eax,[esp+18h]
  0000004A: 50                 push        eax
  0000004B: 6A 00              push        0
  0000004D: FF 74 24 14        push        dword ptr [esp+14h]
  00000051: C7 44 24 24 01 00  mov         dword ptr [esp+24h],1
            00 00
  00000059: C7 44 24 30 02 00  mov         dword ptr [esp+30h],2
            00 00
  00000061: FF 15 00 00 00 00  call        dword ptr [__imp__AdjustTokenPrivileges@24]
  00000067: FF 34 24           push        dword ptr [esp]
  0000006A: FF 15 00 00 00 00  call        dword ptr [__imp__CloseHandle@4]
$final$9:
  00000070: 68 02 00 01 80     push        80010002h
  00000075: 6A 01              push        1
  00000077: 6A 00              push        0
  00000079: 6A 00              push        0
  0000007B: 6A 00              push        0
  0000007D: 6A 00              push        0
  0000007F: FF 15 00 00 00 00  call        dword ptr [__imp__InitiateSystemShutdownExA@24]
  00000085: 83 C4 1C           add         esp,1Ch
  00000088: C3                 ret

?SplitCommandLine@@YA_NAAHAAPAPAD01@Z (bool __cdecl SplitCommandLine(int &,char * * &,int &,char * * &)):
  00000000: 53                 push        ebx
  00000001: 8B 5C 24 0C        mov         ebx,dword ptr [esp+0Ch]
  00000005: 55                 push        ebp
  00000006: 56                 push        esi
  00000007: 57                 push        edi
  00000008: 8B 7C 24 14        mov         edi,dword ptr [esp+14h]
  0000000C: 33 F6              xor         esi,esi
  0000000E: 39 37              cmp         dword ptr [edi],esi
  00000010: 7E 26              jle         00000038
  00000012: 8B 2D 00 00 00 00  mov         ebp,dword ptr [__imp___mbsicmp]
  00000018: EB 06              jmp         00000020
  0000001A: 8D 9B 00 00 00 00  lea         ebx,[ebx]
  00000020: 8B 03              mov         eax,dword ptr [ebx]
  00000022: 68 00 00 00 00     push        offset ??_C@_02EDKKAOBF@?3?$DN?$AA@
  00000027: FF 34 B0           push        dword ptr [eax+esi*4]
  0000002A: FF D5              call        ebp
  0000002C: 83 C4 08           add         esp,8
  0000002F: 85 C0              test        eax,eax
  00000031: 74 23              je          00000056
  00000033: 46                 inc         esi
  00000034: 3B 37              cmp         esi,dword ptr [edi]
  00000036: 7C E8              jl          00000020
  00000038: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  0000003C: C7 00 00 00 00 00  mov         dword ptr [eax],0
  00000042: 8B 03              mov         eax,dword ptr [ebx]
  00000044: 8B 0F              mov         ecx,dword ptr [edi]
  00000046: 5F                 pop         edi
  00000047: 5E                 pop         esi
  00000048: 5D                 pop         ebp
  00000049: 8D 0C 88           lea         ecx,[eax+ecx*4]
  0000004C: 8B 44 24 14        mov         eax,dword ptr [esp+14h]
  00000050: 5B                 pop         ebx
  00000051: 89 08              mov         dword ptr [eax],ecx
  00000053: 32 C0              xor         al,al
  00000055: C3                 ret
  00000056: 8B 0F              mov         ecx,dword ptr [edi]
  00000058: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  0000005C: 2B CE              sub         ecx,esi
  0000005E: 49                 dec         ecx
  0000005F: 89 08              mov         dword ptr [eax],ecx
  00000061: 8B 0B              mov         ecx,dword ptr [ebx]
  00000063: 8B 44 24 20        mov         eax,dword ptr [esp+20h]
  00000067: 83 C1 04           add         ecx,4
  0000006A: 8D 0C B1           lea         ecx,[ecx+esi*4]
  0000006D: 89 08              mov         dword ptr [eax],ecx
  0000006F: B0 01              mov         al,1
  00000071: 89 37              mov         dword ptr [edi],esi
  00000073: 5F                 pop         edi
  00000074: 5E                 pop         esi
  00000075: 5D                 pop         ebp
  00000076: 5B                 pop         ebx
  00000077: C3                 ret

?StringCchCopyA@@YGJPADIPBD@Z (long __stdcall StringCchCopyA(char *,unsigned int,char const *)):
  00000000: 8B 54 24 08        mov         edx,dword ptr [esp+8]
  00000004: 33 C0              xor         eax,eax
  00000006: 85 D2              test        edx,edx
  00000008: 74 08              je          00000012
  0000000A: 81 FA FF FF FF 7F  cmp         edx,7FFFFFFFh
  00000010: 76 05              jbe         00000017
  00000012: B8 57 00 07 80     mov         eax,80070057h
  00000017: 85 C0              test        eax,eax
  00000019: 78 53              js          0000006E
  0000001B: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  0000001F: 53                 push        ebx
  00000020: 56                 push        esi
  00000021: 33 DB              xor         ebx,ebx
  00000023: 57                 push        edi
  00000024: 85 D2              test        edx,edx
  00000026: 74 35              je          0000005D
  00000028: 8B 7C 24 18        mov         edi,dword ptr [esp+18h]
  0000002C: BE FE FF FF 7F     mov         esi,7FFFFFFEh
  00000031: 2B F2              sub         esi,edx
  00000033: 2B F9              sub         edi,ecx
  00000035: 8D 04 16           lea         eax,[esi+edx]
  00000038: 85 C0              test        eax,eax
  0000003A: 74 1D              je          00000059
  0000003C: 8A 04 0F           mov         al,byte ptr [edi+ecx]
  0000003F: 84 C0              test        al,al
  00000041: 74 16              je          00000059
  00000043: 88 01              mov         byte ptr [ecx],al
  00000045: 41                 inc         ecx
  00000046: 4A                 dec         edx
  00000047: 75 EC              jne         00000035
  00000049: 49                 dec         ecx
  0000004A: BB 7A 00 07 80     mov         ebx,8007007Ah
  0000004F: 5F                 pop         edi
  00000050: 5E                 pop         esi
  00000051: 8B C3              mov         eax,ebx
  00000053: 88 11              mov         byte ptr [ecx],dl
  00000055: 5B                 pop         ebx
  00000056: C2 0C 00           ret         0Ch
  00000059: 85 D2              test        edx,edx
  0000005B: 75 06              jne         00000063
  0000005D: 49                 dec         ecx
  0000005E: BB 7A 00 07 80     mov         ebx,8007007Ah
  00000063: 5F                 pop         edi
  00000064: 5E                 pop         esi
  00000065: 8B C3              mov         eax,ebx
  00000067: C6 01 00           mov         byte ptr [ecx],0
  0000006A: 5B                 pop         ebx
  0000006B: C2 0C 00           ret         0Ch
  0000006E: 85 D2              test        edx,edx
  00000070: 74 07              je          00000079
  00000072: 8B 4C 24 04        mov         ecx,dword ptr [esp+4]
  00000076: C6 01 00           mov         byte ptr [ecx],0
  00000079: C2 0C 00           ret         0Ch

?StringCopyWorkerA@@YGJPADIPAIPBDI@Z (long __stdcall StringCopyWorkerA(char *,unsigned int,unsigned int *,char const *,unsigned int)):
  00000000: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000004: 33 D2              xor         edx,edx
  00000006: 8B 44 24 04        mov         eax,dword ptr [esp+4]
  0000000A: 53                 push        ebx
  0000000B: 55                 push        ebp
  0000000C: 56                 push        esi
  0000000D: 33 ED              xor         ebp,ebp
  0000000F: 57                 push        edi
  00000010: 85 C9              test        ecx,ecx
  00000012: 74 25              je          00000039
  00000014: 8B 7C 24 20        mov         edi,dword ptr [esp+20h]
  00000018: 8B 74 24 24        mov         esi,dword ptr [esp+24h]
  0000001C: 2B F8              sub         edi,eax
  0000001E: 8B FF              mov         edi,edi
  00000020: 85 F6              test        esi,esi
  00000022: 74 11              je          00000035
  00000024: 8A 1C 07           mov         bl,byte ptr [edi+eax]
  00000027: 84 DB              test        bl,bl
  00000029: 74 0A              je          00000035
  0000002B: 88 18              mov         byte ptr [eax],bl
  0000002D: 4E                 dec         esi
  0000002E: 40                 inc         eax
  0000002F: 42                 inc         edx
  00000030: 49                 dec         ecx
  00000031: 75 ED              jne         00000020
  00000033: EB 04              jmp         00000039
  00000035: 85 C9              test        ecx,ecx
  00000037: 75 07              jne         00000040
  00000039: 48                 dec         eax
  0000003A: BD 7A 00 07 80     mov         ebp,8007007Ah
  0000003F: 4A                 dec         edx
  00000040: 8B 4C 24 1C        mov         ecx,dword ptr [esp+1Ch]
  00000044: C6 00 00           mov         byte ptr [eax],0
  00000047: 8B C5              mov         eax,ebp
  00000049: 85 C9              test        ecx,ecx
  0000004B: 74 02              je          0000004F
  0000004D: 89 11              mov         dword ptr [ecx],edx
  0000004F: 5F                 pop         edi
  00000050: 5E                 pop         esi
  00000051: 5D                 pop         ebp
  00000052: 5B                 pop         ebx
  00000053: C2 14 00           ret         14h

?StringValidateDestA@@YGJPBDII@Z (long __stdcall StringValidateDestA(char const *,unsigned int,unsigned int)):
  00000000: 8B 4C 24 08        mov         ecx,dword ptr [esp+8]
  00000004: 85 C9              test        ecx,ecx
  00000006: 74 0B              je          00000013
  00000008: 3B 4C 24 0C        cmp         ecx,dword ptr [esp+0Ch]
  0000000C: 77 05              ja          00000013
  0000000E: 33 C0              xor         eax,eax
  00000010: C2 0C 00           ret         0Ch
  00000013: B8 57 00 07 80     mov         eax,80070057h
  00000018: C2 0C 00           ret         0Ch

?WildCardMatch@@YAHPBDABUIdEntry@@@Z (int __cdecl WildCardMatch(char const *,struct IdEntry const &)):
  00000000: 51                 push        ecx
  00000001: 57                 push        edi
  00000002: 8B 7C 24 10        mov         edi,dword ptr [esp+10h]
  00000006: 8B 4F 04           mov         ecx,dword ptr [edi+4]
  00000009: 85 C9              test        ecx,ecx
  0000000B: 75 17              jne         00000024
  0000000D: FF 37              push        dword ptr [edi]
  0000000F: FF 74 24 10        push        dword ptr [esp+10h]
  00000013: FF 15 00 00 00 00  call        dword ptr [__imp___mbsicmp]
  00000019: 83 C4 08           add         esp,8
  0000001C: F7 D8              neg         eax
  0000001E: 1B C0              sbb         eax,eax
  00000020: 40                 inc         eax
  00000021: 5F                 pop         edi
  00000022: 59                 pop         ecx
  00000023: C3                 ret
  00000024: 8B 07              mov         eax,dword ptr [edi]
  00000026: 2B C8              sub         ecx,eax
  00000028: 55                 push        ebp
  00000029: 8B 6C 24 10        mov         ebp,dword ptr [esp+10h]
  0000002D: 51                 push        ecx
  0000002E: 50                 push        eax
  0000002F: 55                 push        ebp
  00000030: FF 15 00 00 00 00  call        dword ptr [__imp___mbsnbicmp]
  00000036: 83 C4 0C           add         esp,0Ch
  00000039: 85 C0              test        eax,eax
  0000003B: 74 06              je          00000043
  0000003D: 5D                 pop         ebp
  0000003E: 33 C0              xor         eax,eax
  00000040: 5F                 pop         edi
  00000041: 59                 pop         ecx
  00000042: C3                 ret
  00000043: 53                 push        ebx
  00000044: 8B 5F 04           mov         ebx,dword ptr [edi+4]
  00000047: 56                 push        esi
  00000048: 8B F3              mov         esi,ebx
  0000004A: 2B 37              sub         esi,dword ptr [edi]
  0000004C: 8A 03              mov         al,byte ptr [ebx]
  0000004E: 03 F5              add         esi,ebp
  00000050: 84 C0              test        al,al
  00000052: 0F 84 BD 00 00 00  je          00000115
  00000058: 8B 2D 00 00 00 00  mov         ebp,dword ptr [__imp__CharNextA@4]
  0000005E: 8B FF              mov         edi,edi
  00000060: 3C 2A              cmp         al,2Ah
  00000062: 75 0A              jne         0000006E
  00000064: 53                 push        ebx
  00000065: FF D5              call        ebp
  00000067: 8B D8              mov         ebx,eax
  00000069: E9 9D 00 00 00     jmp         0000010B
  0000006E: 6A 2A              push        2Ah
  00000070: 53                 push        ebx
  00000071: FF 15 00 00 00 00  call        dword ptr [__imp___mbschr]
  00000077: 8B F8              mov         edi,eax
  00000079: 83 C4 08           add         esp,8
  0000007C: 85 FF              test        edi,edi
  0000007E: 0F 84 9E 00 00 00  je          00000122
  00000084: 0F BE 0B           movsx       ecx,byte ptr [ebx]
  00000087: 2B FB              sub         edi,ebx
  00000089: 51                 push        ecx
  0000008A: FF 15 00 00 00 00  call        dword ptr [__imp___ismbcalpha]
  00000090: 83 C4 04           add         esp,4
  00000093: 85 C0              test        eax,eax
  00000095: 0F BE 03           movsx       eax,byte ptr [ebx]
  00000098: 50                 push        eax
  00000099: 74 45              je          000000E0
  0000009B: FF 15 00 00 00 00  call        dword ptr [__imp___mbctoupper]
  000000A1: 0F BE 0B           movsx       ecx,byte ptr [ebx]
  000000A4: 51                 push        ecx
  000000A5: 88 44 24 24        mov         byte ptr [esp+24h],al
  000000A9: FF 15 00 00 00 00  call        dword ptr [__imp___mbctolower]
  000000AF: 8A 0E              mov         cl,byte ptr [esi]
  000000B1: 83 C4 08           add         esp,8
  000000B4: 88 44 24 13        mov         byte ptr [esp+13h],al
  000000B8: 84 C9              test        cl,cl
  000000BA: 74 78              je          00000134
  000000BC: 8D 64 24 00        lea         esp,[esp]
  000000C0: 3A 4C 24 1C        cmp         cl,byte ptr [esp+1Ch]
  000000C4: 74 15              je          000000DB
  000000C6: 3A C8              cmp         cl,al
  000000C8: 74 11              je          000000DB
  000000CA: 56                 push        esi
  000000CB: FF D5              call        ebp
  000000CD: 8B F0              mov         esi,eax
  000000CF: 8A 0E              mov         cl,byte ptr [esi]
  000000D1: 84 C9              test        cl,cl
  000000D3: 74 5F              je          00000134
  000000D5: 8A 44 24 13        mov         al,byte ptr [esp+13h]
  000000D9: EB E5              jmp         000000C0
  000000DB: 80 3E 00           cmp         byte ptr [esi],0
  000000DE: EB 0E              jmp         000000EE
  000000E0: 56                 push        esi
  000000E1: FF 15 00 00 00 00  call        dword ptr [__imp___mbschr]
  000000E7: 8B F0              mov         esi,eax
  000000E9: 83 C4 08           add         esp,8
  000000EC: 85 F6              test        esi,esi
  000000EE: 74 44              je          00000134
  000000F0: 57                 push        edi
  000000F1: 53                 push        ebx
  000000F2: 56                 push        esi
  000000F3: FF 15 00 00 00 00  call        dword ptr [__imp___mbsnbicmp]
  000000F9: 83 C4 0C           add         esp,0Ch
  000000FC: 85 C0              test        eax,eax
  000000FE: 74 07              je          00000107
  00000100: 56                 push        esi
  00000101: FF D5              call        ebp
  00000103: 8B F0              mov         esi,eax
  00000105: EB 04              jmp         0000010B
  00000107: 03 F7              add         esi,edi
  00000109: 03 DF              add         ebx,edi
  0000010B: 8A 03              mov         al,byte ptr [ebx]
  0000010D: 84 C0              test        al,al
  0000010F: 0F 85 4B FF FF FF  jne         00000060
  00000115: 33 C0              xor         eax,eax
  00000117: 38 03              cmp         byte ptr [ebx],al
  00000119: 5E                 pop         esi
  0000011A: 5B                 pop         ebx
  0000011B: 5D                 pop         ebp
  0000011C: 0F 94 C0           sete        al
  0000011F: 5F                 pop         edi
  00000120: 59                 pop         ecx
  00000121: C3                 ret
  00000122: 8B 3D 00 00 00 00  mov         edi,dword ptr [__imp__lstrlenA@4]
  00000128: 56                 push        esi
  00000129: FF D7              call        edi
  0000012B: 53                 push        ebx
  0000012C: 8B E8              mov         ebp,eax
  0000012E: FF D7              call        edi
  00000130: 3B E8              cmp         ebp,eax
  00000132: 73 08              jae         0000013C
  00000134: 5E                 pop         esi
  00000135: 5B                 pop         ebx
  00000136: 5D                 pop         ebp
  00000137: 33 C0              xor         eax,eax
  00000139: 5F                 pop         edi
  0000013A: 59                 pop         ecx
  0000013B: C3                 ret
  0000013C: 2B E8              sub         ebp,eax
  0000013E: 53                 push        ebx
  0000013F: 03 EE              add         ebp,esi
  00000141: 55                 push        ebp
  00000142: FF 15 00 00 00 00  call        dword ptr [__imp___mbsicmp]
  00000148: 83 C4 08           add         esp,8
  0000014B: F7 D8              neg         eax
  0000014D: 1B C0              sbb         eax,eax
  0000014F: 40                 inc         eax
  00000150: 5E                 pop         esi
  00000151: 5B                 pop         ebx
  00000152: 5D                 pop         ebp
  00000153: 5F                 pop         edi
  00000154: 59                 pop         ecx
  00000155: C3                 ret

?WildCompareHwIds@@YAHPAPA_WABUIdEntry@@@Z (int __cdecl WildCompareHwIds(wchar_t * *,struct IdEntry const &)):
  00000000: 51                 push        ecx
  00000001: 8B 54 24 08        mov         edx,dword ptr [esp+8]
  00000005: 53                 push        ebx
  00000006: 55                 push        ebp
  00000007: 56                 push        esi
  00000008: 57                 push        edi
  00000009: 85 D2              test        edx,edx
  0000000B: 0F 84 34 01 00 00  je          00000145
  00000011: 8B 1A              mov         ebx,dword ptr [edx]
  00000013: 85 DB              test        ebx,ebx
  00000015: 0F 84 2A 01 00 00  je          00000145
  0000001B: 8B 2D 00 00 00 00  mov         ebp,dword ptr [__imp__CharNextA@4]
  00000021: 8B 74 24 1C        mov         esi,dword ptr [esp+1Ch]
  00000025: 8B 4E 04           mov         ecx,dword ptr [esi+4]
  00000028: 85 C9              test        ecx,ecx
  0000002A: 75 16              jne         00000042
  0000002C: FF 36              push        dword ptr [esi]
  0000002E: 53                 push        ebx
  0000002F: FF 15 00 00 00 00  call        dword ptr [__imp___mbsicmp]
  00000035: 83 C4 08           add         esp,8
  00000038: F7 D8              neg         eax
  0000003A: 1B C0              sbb         eax,eax
  0000003C: 40                 inc         eax
  0000003D: E9 EA 00 00 00     jmp         0000012C
  00000042: 8B 06              mov         eax,dword ptr [esi]
  00000044: 2B C8              sub         ecx,eax
  00000046: 51                 push        ecx
  00000047: 50                 push        eax
  00000048: 53                 push        ebx
  00000049: FF 15 00 00 00 00  call        dword ptr [__imp___mbsnbicmp]
  0000004F: 83 C4 0C           add         esp,0Ch
  00000052: 85 C0              test        eax,eax
  00000054: 0F 85 D6 00 00 00  jne         00000130
  0000005A: 8B 7E 04           mov         edi,dword ptr [esi+4]
  0000005D: 8B F7              mov         esi,edi
  0000005F: 8B 44 24 1C        mov         eax,dword ptr [esp+1Ch]
  00000063: 2B 30              sub         esi,dword ptr [eax]
  00000065: 8A 07              mov         al,byte ptr [edi]
  00000067: 03 F3              add         esi,ebx
  00000069: 84 C0              test        al,al
  0000006B: 0F 84 B4 00 00 00  je          00000125
  00000071: 3C 2A              cmp         al,2Ah
  00000073: 75 0A              jne         0000007F
  00000075: 57                 push        edi
  00000076: FF D5              call        ebp
  00000078: 8B F8              mov         edi,eax
  0000007A: E9 9C 00 00 00     jmp         0000011B
  0000007F: 6A 2A              push        2Ah
  00000081: 57                 push        edi
  00000082: FF 15 00 00 00 00  call        dword ptr [__imp___mbschr]
  00000088: 8B D8              mov         ebx,eax
  0000008A: 83 C4 08           add         esp,8
  0000008D: 85 DB              test        ebx,ebx
  0000008F: 0F 84 B8 00 00 00  je          0000014D
  00000095: 0F BE 0F           movsx       ecx,byte ptr [edi]
  00000098: 2B DF              sub         ebx,edi
  0000009A: 51                 push        ecx
  0000009B: FF 15 00 00 00 00  call        dword ptr [__imp___ismbcalpha]
  000000A1: 83 C4 04           add         esp,4
  000000A4: 85 C0              test        eax,eax
  000000A6: 0F BE 07           movsx       eax,byte ptr [edi]
  000000A9: 50                 push        eax
  000000AA: 74 44              je          000000F0
  000000AC: FF 15 00 00 00 00  call        dword ptr [__imp___mbctoupper]
  000000B2: 0F BE 0F           movsx       ecx,byte ptr [edi]
  000000B5: 51                 push        ecx
  000000B6: 88 44 24 1A        mov         byte ptr [esp+1Ah],al
  000000BA: FF 15 00 00 00 00  call        dword ptr [__imp___mbctolower]
  000000C0: 8A 0E              mov         cl,byte ptr [esi]
  000000C2: 83 C4 08           add         esp,8
  000000C5: 88 44 24 13        mov         byte ptr [esp+13h],al
  000000C9: 84 C9              test        cl,cl
  000000CB: 74 63              je          00000130
  000000CD: 8D 49 00           lea         ecx,[ecx]
  000000D0: 3A 4C 24 12        cmp         cl,byte ptr [esp+12h]
  000000D4: 74 15              je          000000EB
  000000D6: 3A C8              cmp         cl,al
  000000D8: 74 11              je          000000EB
  000000DA: 56                 push        esi
  000000DB: FF D5              call        ebp
  000000DD: 8B F0              mov         esi,eax
  000000DF: 8A 0E              mov         cl,byte ptr [esi]
  000000E1: 84 C9              test        cl,cl
  000000E3: 74 4B              je          00000130
  000000E5: 8A 44 24 13        mov         al,byte ptr [esp+13h]
  000000E9: EB E5              jmp         000000D0
  000000EB: 80 3E 00           cmp         byte ptr [esi],0
  000000EE: EB 0E              jmp         000000FE
  000000F0: 56                 push        esi
  000000F1: FF 15 00 00 00 00  call        dword ptr [__imp___mbschr]
  000000F7: 8B F0              mov         esi,eax
  000000F9: 83 C4 08           add         esp,8
  000000FC: 85 F6              test        esi,esi
  000000FE: 74 30              je          00000130
  00000100: 53                 push        ebx
  00000101: 57                 push        edi
  00000102: 56                 push        esi
  00000103: FF 15 00 00 00 00  call        dword ptr [__imp___mbsnbicmp]
  00000109: 83 C4 0C           add         esp,0Ch
  0000010C: 85 C0              test        eax,eax
  0000010E: 74 07              je          00000117
  00000110: 56                 push        esi
  00000111: FF D5              call        ebp
  00000113: 8B F0              mov         esi,eax
  00000115: EB 04              jmp         0000011B
  00000117: 03 F3              add         esi,ebx
  00000119: 03 FB              add         edi,ebx
  0000011B: 8A 07              mov         al,byte ptr [edi]
  0000011D: 84 C0              test        al,al
  0000011F: 0F 85 4C FF FF FF  jne         00000071
  00000125: 33 C0              xor         eax,eax
  00000127: 38 07              cmp         byte ptr [edi],al
  00000129: 0F 94 C0           sete        al
  0000012C: 85 C0              test        eax,eax
  0000012E: 75 47              jne         00000177
  00000130: 8B 54 24 18        mov         edx,dword ptr [esp+18h]
  00000134: 83 C2 04           add         edx,4
  00000137: 89 54 24 18        mov         dword ptr [esp+18h],edx
  0000013B: 8B 1A              mov         ebx,dword ptr [edx]
  0000013D: 85 DB              test        ebx,ebx
  0000013F: 0F 85 DC FE FF FF  jne         00000021
  00000145: 5F                 pop         edi
  00000146: 5E                 pop         esi
  00000147: 5D                 pop         ebp
  00000148: 33 C0              xor         eax,eax
  0000014A: 5B                 pop         ebx
  0000014B: 59                 pop         ecx
  0000014C: C3                 ret
  0000014D: 56                 push        esi
  0000014E: FF 15 00 00 00 00  call        dword ptr [__imp__lstrlenA@4]
  00000154: 57                 push        edi
  00000155: 8B D8              mov         ebx,eax
  00000157: FF 15 00 00 00 00  call        dword ptr [__imp__lstrlenA@4]
  0000015D: 3B D8              cmp         ebx,eax
  0000015F: 72 CF              jb          00000130
  00000161: 2B D8              sub         ebx,eax
  00000163: 57                 push        edi
  00000164: 03 DE              add         ebx,esi
  00000166: 53                 push        ebx
  00000167: FF 15 00 00 00 00  call        dword ptr [__imp___mbsicmp]
  0000016D: 83 C4 08           add         esp,8
  00000170: F7 D8              neg         eax
  00000172: 1B C0              sbb         eax,eax
  00000174: 40                 inc         eax
  00000175: EB B5              jmp         0000012C
  00000177: 5F                 pop         edi
  00000178: 5E                 pop         esi
  00000179: 5D                 pop         ebp
  0000017A: B8 01 00 00 00     mov         eax,1
  0000017F: 5B                 pop         ebx
  00000180: 59                 pop         ecx
  00000181: C3                 ret

?cmdRestart@@YAHPBD0HQAPAD@Z (int __cdecl cmdRestart(char const *,char const *,int,char * * const)):
  00000000: 8B 44 24 0C        mov         eax,dword ptr [esp+0Ch]
  00000004: 81 EC 08 01 00 00  sub         esp,108h
  0000000A: 85 C0              test        eax,eax
  0000000C: 75 0C              jne         0000001A
  0000000E: B8 03 00 00 00     mov         eax,3
  00000013: 81 C4 08 01 00 00  add         esp,108h
  00000019: C3                 ret
  0000001A: 83 BC 24 10 01 00  cmp         dword ptr [esp+110h],0
            00 00
  00000022: 75 EA              jne         0000000E
  00000024: 8D 4C 24 18        lea         ecx,[esp+18h]
  00000028: C7 44 24 04 03 00  mov         dword ptr [esp+4],3
            00 00
  00000030: 89 4C 24 10        mov         dword ptr [esp+10h],ecx
  00000034: 8D 4C 24 68        lea         ecx,[esp+68h]
  00000038: 89 4C 24 0C        mov         dword ptr [esp+0Ch],ecx
  0000003C: 8D 8C 24 B8 00 00  lea         ecx,[esp+0B8h]
            00
  00000043: 89 4C 24 14        mov         dword ptr [esp+14h],ecx
  00000047: 8D 0C 24           lea         ecx,[esp]
  0000004A: 51                 push        ecx
  0000004B: 68 00 00 00 00     push        offset ?ControlCallback@@YAHPAXPAU_SP_DEVINFO_DATA@@K0@Z
  00000050: FF B4 24 20 01 00  push        dword ptr [esp+120h]
            00
  00000057: C7 44 24 14 00 00  mov         dword ptr [esp+14h],0
            00 00
  0000005F: 50                 push        eax
  00000060: 6A 02              push        2
  00000062: 6A 00              push        0
  00000064: FF B4 24 24 01 00  push        dword ptr [esp+124h]
            00
  0000006B: C7 44 24 1C 00 00  mov         dword ptr [esp+1Ch],0
            00 00
  00000073: E8 00 00 00 00     call        ?EnumerateDevices@@YAHPBD0KHPAPA_WP6AHPAXPAU_SP_DEVINFO_DATA@@K2@Z2@Z
  00000078: 83 C4 1C           add         esp,1Ch
  0000007B: 85 C0              test        eax,eax
  0000007D: 75 11              jne         00000090
  0000007F: 39 04 24           cmp         dword ptr [esp],eax
  00000082: 74 0C              je          00000090
  00000084: 39 44 24 08        cmp         dword ptr [esp+8],eax
  00000088: B9 01 00 00 00     mov         ecx,1
  0000008D: 0F 45 C1           cmovne      eax,ecx
  00000090: 81 C4 08 01 00 00  add         esp,108h
  00000096: C3                 ret

__tcschr:
  00000000: FF 25 00 00 00 00  jmp         dword ptr [__imp___mbschr]

__tcsicmp:
  00000000: FF 25 00 00 00 00  jmp         dword ptr [__imp___mbsicmp]

__tcsnicmp:
  00000000: FF 25 00 00 00 00  jmp         dword ptr [__imp___mbsnbicmp]

  Summary

           4 .00cfg
          38 .bss
         3EC .data
         218 .data$r
       80A6A .debug$S
        8BE8 .debug$T
         EDB .drectve
          28 .idata$2
          28 .idata$3
           8 .idata$4
           8 .idata$5
          1A .idata$6
         7F5 .rdata
         63F .rdata$r
        D7AF .text$mn
           F .text$mn$00
