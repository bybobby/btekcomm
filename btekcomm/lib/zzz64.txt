Microsoft (R) COFF/PE Dumper Version 14.20.27508.1
Copyright (C) Microsoft Corporation.  All rights reserved.


Dump of file ftd2xx_x64.lib

File Type: LIBRARY

_guard_check_icall_nop:
  0000000000000000: C2 00 00           ret         0

_guard_check_icall:
  0000000000000000: 48 FF 25 00 00 00  jmp         qword ptr [__guard_check_icall_fptr]
                    00

_guard_icall_checks_enforced:
  0000000000000000: 33 C0              xor         eax,eax
  0000000000000002: 48 8D 0D 00 00 00  lea         rcx,[_guard_check_icall_nop]
                    00
  0000000000000009: 48 39 0D 00 00 00  cmp         qword ptr [__guard_check_icall_fptr],rcx
                    00
  0000000000000010: 0F 95 C0           setne       al
  0000000000000013: C3                 ret

$$000000:
  0000000000000000: CC                 int         3
  0000000000000001: CC                 int         3
  0000000000000002: CC                 int         3
  0000000000000003: CC                 int         3
  0000000000000004: CC                 int         3
  0000000000000005: CC                 int         3
  0000000000000006: 66 66 0F 1F 84 00  nop         word ptr [rax+rax]
                    00 00 00 00
__guard_check_icall_thunk:
  0000000000000010: 48 50              push        rax
  0000000000000012: 51                 push        rcx
  0000000000000013: 52                 push        rdx
  0000000000000014: 41 50              push        r8
  0000000000000016: 41 51              push        r9
  0000000000000018: 48 83 EC 20        sub         rsp,20h
  000000000000001C: 48 8B C8           mov         rcx,rax
  000000000000001F: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 41 59              pop         r9
  000000000000002B: 41 58              pop         r8
  000000000000002D: 5A                 pop         rdx
  000000000000002E: 59                 pop         rcx
  000000000000002F: 58                 pop         rax
  0000000000000030: C3                 ret

SQLConfigDataSource:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 20        sub         rsp,20h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BE@LCNCPACH@SQLConfigDataSource?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 0F B7 EA           movzx       ebp,dx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 17              je          0000000000000051
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 4C 8B CF           mov         r9,rdi
  0000000000000046: 4C 8B C6           mov         r8,rsi
  0000000000000049: 0F B7 D5           movzx       edx,bp
  000000000000004C: 49 8B CE           mov         rcx,r14
  000000000000004F: FF D3              call        rbx
  0000000000000051: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000056: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000005B: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000060: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  0000000000000065: 48 83 C4 20        add         rsp,20h
  0000000000000069: 41 5E              pop         r14
  000000000000006B: C3                 ret

SQLConfigDataSourceW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 20        sub         rsp,20h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BF@FAECKMAI@SQLConfigDataSourceW?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 0F B7 EA           movzx       ebp,dx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 17              je          0000000000000051
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 4C 8B CF           mov         r9,rdi
  0000000000000046: 4C 8B C6           mov         r8,rsi
  0000000000000049: 0F B7 D5           movzx       edx,bp
  000000000000004C: 49 8B CE           mov         rcx,r14
  000000000000004F: FF D3              call        rbx
  0000000000000051: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000056: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000005B: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000060: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  0000000000000065: 48 83 C4 20        add         rsp,20h
  0000000000000069: 41 5E              pop         r14
  000000000000006B: C3                 ret

SQLConfigDriver:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 40        sub         rsp,40h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@HPACMNBB@SQLConfigDriver?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 0F B7 EA           movzx       ebp,dx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 38              je          0000000000000072
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 0F B7 54 24 78     movzx       edx,word ptr [rsp+78h]
  0000000000000048: 4C 8B 8C 24 80 00  mov         r9,qword ptr [rsp+80h]
                    00 00
  0000000000000050: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000055: 4C 89 4C 24 30     mov         qword ptr [rsp+30h],r9
  000000000000005A: 66 89 54 24 28     mov         word ptr [rsp+28h],dx
  000000000000005F: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000064: 4C 8B CF           mov         r9,rdi
  0000000000000067: 4C 8B C6           mov         r8,rsi
  000000000000006A: 49 8B CE           mov         rcx,r14
  000000000000006D: 0F B7 D5           movzx       edx,bp
  0000000000000070: FF D3              call        rbx
  0000000000000072: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000077: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  000000000000007C: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  0000000000000081: 48 8B 7C 24 68     mov         rdi,qword ptr [rsp+68h]
  0000000000000086: 48 83 C4 40        add         rsp,40h
  000000000000008A: 41 5E              pop         r14
  000000000000008C: C3                 ret

SQLConfigDriverW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 40        sub         rsp,40h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BB@JPDFOJKM@SQLConfigDriverW?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 0F B7 EA           movzx       ebp,dx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 38              je          0000000000000072
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 0F B7 54 24 78     movzx       edx,word ptr [rsp+78h]
  0000000000000048: 4C 8B 8C 24 80 00  mov         r9,qword ptr [rsp+80h]
                    00 00
  0000000000000050: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000055: 4C 89 4C 24 30     mov         qword ptr [rsp+30h],r9
  000000000000005A: 66 89 54 24 28     mov         word ptr [rsp+28h],dx
  000000000000005F: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000064: 4C 8B CF           mov         r9,rdi
  0000000000000067: 4C 8B C6           mov         r8,rsi
  000000000000006A: 49 8B CE           mov         rcx,r14
  000000000000006D: 0F B7 D5           movzx       edx,bp
  0000000000000070: FF D3              call        rbx
  0000000000000072: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000077: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  000000000000007C: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  0000000000000081: 48 8B 7C 24 68     mov         rdi,qword ptr [rsp+68h]
  0000000000000086: 48 83 C4 40        add         rsp,40h
  000000000000008A: 41 5E              pop         r14
  000000000000008C: C3                 ret

SQLCreateDataSource:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B F1           mov         rsi,rcx
  0000000000000012: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BE@PJJGNIOF@SQLCreateDataSource?$AA@]
                    00
  0000000000000019: 48 8B FA           mov         rdi,rdx
  000000000000001C: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000021: 48 8B D8           mov         rbx,rax
  0000000000000024: 48 85 C0           test        rax,rax
  0000000000000027: 74 24              je          000000000000004D
  0000000000000029: 48 8B C8           mov         rcx,rax
  000000000000002C: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000032: 48 8B D7           mov         rdx,rdi
  0000000000000035: 48 8B CE           mov         rcx,rsi
  0000000000000038: 48 8B C3           mov         rax,rbx
  000000000000003B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000040: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000045: 48 83 C4 20        add         rsp,20h
  0000000000000049: 5F                 pop         rdi
  000000000000004A: 48 FF E0           jmp         rax
  000000000000004D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000052: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000057: 48 83 C4 20        add         rsp,20h
  000000000000005B: 5F                 pop         rdi
  000000000000005C: C3                 ret

SQLCreateDataSourceW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B F1           mov         rsi,rcx
  0000000000000012: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BF@CFGDELLM@SQLCreateDataSourceW?$AA@]
                    00
  0000000000000019: 48 8B FA           mov         rdi,rdx
  000000000000001C: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000021: 48 8B D8           mov         rbx,rax
  0000000000000024: 48 85 C0           test        rax,rax
  0000000000000027: 74 24              je          000000000000004D
  0000000000000029: 48 8B C8           mov         rcx,rax
  000000000000002C: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000032: 48 8B D7           mov         rdx,rdi
  0000000000000035: 48 8B CE           mov         rcx,rsi
  0000000000000038: 48 8B C3           mov         rax,rbx
  000000000000003B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000040: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000045: 48 83 C4 20        add         rsp,20h
  0000000000000049: 5F                 pop         rdi
  000000000000004A: 48 FF E0           jmp         rax
  000000000000004D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000052: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000057: 48 83 C4 20        add         rsp,20h
  000000000000005B: 5F                 pop         rdi
  000000000000005C: C3                 ret

SQLGetAvailableDrivers:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BH@KGKFGDBJ@SQLGetAvailableDrivers?$AA@]
                    00
  000000000000000D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000012: 48 8B D8           mov         rbx,rax
  0000000000000015: 48 85 C0           test        rax,rax
  0000000000000018: 74 2B              je          0000000000000045
  000000000000001A: 48 8B C8           mov         rcx,rax
  000000000000001D: 48 89 7C 24 30     mov         qword ptr [rsp+30h],rdi
  0000000000000022: 33 FF              xor         edi,edi
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000002A: 45 33 C9           xor         r9d,r9d
  000000000000002D: 44 0F B7 C7        movzx       r8d,di
  0000000000000031: 33 D2              xor         edx,edx
  0000000000000033: 33 C9              xor         ecx,ecx
  0000000000000035: 48 8B C3           mov         rax,rbx
  0000000000000038: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  000000000000003D: 48 83 C4 20        add         rsp,20h
  0000000000000041: 5B                 pop         rbx
  0000000000000042: 48 FF E0           jmp         rax
  0000000000000045: 48 83 C4 20        add         rsp,20h
  0000000000000049: 5B                 pop         rbx
  000000000000004A: C3                 ret

SQLGetAvailableDriversW:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BI@JBDHMGDA@SQLGetAvailableDriversW?$AA@]
                    00
  000000000000000D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000012: 48 8B D8           mov         rbx,rax
  0000000000000015: 48 85 C0           test        rax,rax
  0000000000000018: 74 2B              je          0000000000000045
  000000000000001A: 48 8B C8           mov         rcx,rax
  000000000000001D: 48 89 7C 24 30     mov         qword ptr [rsp+30h],rdi
  0000000000000022: 33 FF              xor         edi,edi
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000002A: 45 33 C9           xor         r9d,r9d
  000000000000002D: 44 0F B7 C7        movzx       r8d,di
  0000000000000031: 33 D2              xor         edx,edx
  0000000000000033: 33 C9              xor         ecx,ecx
  0000000000000035: 48 8B C3           mov         rax,rbx
  0000000000000038: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  000000000000003D: 48 83 C4 20        add         rsp,20h
  0000000000000041: 5B                 pop         rbx
  0000000000000042: 48 FF E0           jmp         rax
  0000000000000045: 48 83 C4 20        add         rsp,20h
  0000000000000049: 5B                 pop         rbx
  000000000000004A: C3                 ret

SQLGetConfigMode:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B F9           mov         rdi,rcx
  000000000000000D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BB@KEIIMOKK@SQLGetConfigMode?$AA@]
                    00
  0000000000000014: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000019: 48 8B D8           mov         rbx,rax
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 74 1C              je          000000000000003D
  0000000000000021: 48 8B C8           mov         rcx,rax
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000002A: 48 8B CF           mov         rcx,rdi
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: 48 FF E0           jmp         rax
  000000000000003D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 5F                 pop         rdi
  0000000000000047: C3                 ret

SQLGetInstalledDrivers:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B E9           mov         rbp,rcx
  0000000000000017: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BH@IILGJKKA@SQLGetInstalledDrivers?$AA@]
                    00
  000000000000001E: 49 8B F8           mov         rdi,r8
  0000000000000021: 0F B7 F2           movzx       esi,dx
  0000000000000024: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000029: 48 8B D8           mov         rbx,rax
  000000000000002C: 48 85 C0           test        rax,rax
  000000000000002F: 74 14              je          0000000000000045
  0000000000000031: 48 8B C8           mov         rcx,rax
  0000000000000034: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000003A: 4C 8B C7           mov         r8,rdi
  000000000000003D: 0F B7 D6           movzx       edx,si
  0000000000000040: 48 8B CD           mov         rcx,rbp
  0000000000000043: FF D3              call        rbx
  0000000000000045: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000004A: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000004F: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000054: 48 83 C4 20        add         rsp,20h
  0000000000000058: 5F                 pop         rdi
  0000000000000059: C3                 ret

SQLGetInstalledDriversW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B E9           mov         rbp,rcx
  0000000000000017: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BI@CDKENOOB@SQLGetInstalledDriversW?$AA@]
                    00
  000000000000001E: 49 8B F8           mov         rdi,r8
  0000000000000021: 0F B7 F2           movzx       esi,dx
  0000000000000024: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000029: 48 8B D8           mov         rbx,rax
  000000000000002C: 48 85 C0           test        rax,rax
  000000000000002F: 74 14              je          0000000000000045
  0000000000000031: 48 8B C8           mov         rcx,rax
  0000000000000034: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000003A: 4C 8B C7           mov         r8,rdi
  000000000000003D: 0F B7 D6           movzx       edx,si
  0000000000000040: 48 8B CD           mov         rcx,rbp
  0000000000000043: FF D3              call        rbx
  0000000000000045: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000004A: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000004F: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000054: 48 83 C4 20        add         rsp,20h
  0000000000000058: 5F                 pop         rdi
  0000000000000059: C3                 ret

SQLGetPrivateProfileString:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 30        sub         rsp,30h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BL@KBJJEPE@SQLGetPrivateProfileString?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 48 8B EA           mov         rbp,rdx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 29              je          0000000000000063
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 4C 8B 4C 24 68     mov         r9,qword ptr [rsp+68h]
  0000000000000048: 8B 54 24 60        mov         edx,dword ptr [rsp+60h]
  000000000000004C: 4C 89 4C 24 28     mov         qword ptr [rsp+28h],r9
  0000000000000051: 89 54 24 20        mov         dword ptr [rsp+20h],edx
  0000000000000055: 4C 8B C6           mov         r8,rsi
  0000000000000058: 48 8B D5           mov         rdx,rbp
  000000000000005B: 4C 8B CF           mov         r9,rdi
  000000000000005E: 49 8B CE           mov         rcx,r14
  0000000000000061: FF D3              call        rbx
  0000000000000063: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000068: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000006D: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000072: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  0000000000000077: 48 83 C4 30        add         rsp,30h
  000000000000007B: 41 5E              pop         r14
  000000000000007D: C3                 ret

SQLGetPrivateProfileStringW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 30        sub         rsp,30h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BM@EPCAOEAC@SQLGetPrivateProfileStringW?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 48 8B EA           mov         rbp,rdx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 29              je          0000000000000063
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 4C 8B 4C 24 68     mov         r9,qword ptr [rsp+68h]
  0000000000000048: 8B 54 24 60        mov         edx,dword ptr [rsp+60h]
  000000000000004C: 4C 89 4C 24 28     mov         qword ptr [rsp+28h],r9
  0000000000000051: 89 54 24 20        mov         dword ptr [rsp+20h],edx
  0000000000000055: 4C 8B C6           mov         r8,rsi
  0000000000000058: 48 8B D5           mov         rdx,rbp
  000000000000005B: 4C 8B CF           mov         r9,rdi
  000000000000005E: 49 8B CE           mov         rcx,r14
  0000000000000061: FF D3              call        rbx
  0000000000000063: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000068: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000006D: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000072: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  0000000000000077: 48 83 C4 30        add         rsp,30h
  000000000000007B: 41 5E              pop         r14
  000000000000007D: C3                 ret

SQLGetTranslator:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 40        sub         rsp,40h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BB@NONPILHB@SQLGetTranslator?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 41 0F B7 F0        movzx       esi,r8w
  000000000000002B: 48 8B EA           mov         rbp,rdx
  000000000000002E: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000033: 48 8B D8           mov         rbx,rax
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 46              je          0000000000000081
  000000000000003B: 48 8B C8           mov         rcx,rax
  000000000000003E: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000044: 4C 8B 8C 24 88 00  mov         r9,qword ptr [rsp+88h]
                    00 00
  000000000000004C: 48 8B 94 24 80 00  mov         rdx,qword ptr [rsp+80h]
                    00 00
  0000000000000054: 0F B7 4C 24 78     movzx       ecx,word ptr [rsp+78h]
  0000000000000059: 4C 89 4C 24 38     mov         qword ptr [rsp+38h],r9
  000000000000005E: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000063: 66 89 4C 24 28     mov         word ptr [rsp+28h],cx
  0000000000000068: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  000000000000006D: 4C 8B CF           mov         r9,rdi
  0000000000000070: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000075: 44 0F B7 C6        movzx       r8d,si
  0000000000000079: 48 8B D5           mov         rdx,rbp
  000000000000007C: 49 8B CE           mov         rcx,r14
  000000000000007F: FF D3              call        rbx
  0000000000000081: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000086: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  000000000000008B: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  0000000000000090: 48 8B 7C 24 68     mov         rdi,qword ptr [rsp+68h]
  0000000000000095: 48 83 C4 40        add         rsp,40h
  0000000000000099: 41 5E              pop         r14
  000000000000009B: C3                 ret

SQLGetTranslatorW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 40        sub         rsp,40h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BC@NCCGFFLC@SQLGetTranslatorW?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 41 0F B7 F0        movzx       esi,r8w
  000000000000002B: 48 8B EA           mov         rbp,rdx
  000000000000002E: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000033: 48 8B D8           mov         rbx,rax
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 46              je          0000000000000081
  000000000000003B: 48 8B C8           mov         rcx,rax
  000000000000003E: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000044: 4C 8B 8C 24 88 00  mov         r9,qword ptr [rsp+88h]
                    00 00
  000000000000004C: 48 8B 94 24 80 00  mov         rdx,qword ptr [rsp+80h]
                    00 00
  0000000000000054: 0F B7 4C 24 78     movzx       ecx,word ptr [rsp+78h]
  0000000000000059: 4C 89 4C 24 38     mov         qword ptr [rsp+38h],r9
  000000000000005E: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000063: 66 89 4C 24 28     mov         word ptr [rsp+28h],cx
  0000000000000068: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  000000000000006D: 4C 8B CF           mov         r9,rdi
  0000000000000070: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000075: 44 0F B7 C6        movzx       r8d,si
  0000000000000079: 48 8B D5           mov         rdx,rbp
  000000000000007C: 49 8B CE           mov         rcx,r14
  000000000000007F: FF D3              call        rbx
  0000000000000081: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000086: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  000000000000008B: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  0000000000000090: 48 8B 7C 24 68     mov         rdi,qword ptr [rsp+68h]
  0000000000000095: 48 83 C4 40        add         rsp,40h
  0000000000000099: 41 5E              pop         r14
  000000000000009B: C3                 ret

SQLInstallDriver:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 30        sub         rsp,30h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BB@LMIMCDGA@SQLInstallDriver?$AA@]
                    00
  0000000000000024: 41 0F B7 F9        movzx       edi,r9w
  0000000000000028: 49 8B F0           mov         rsi,r8
  000000000000002B: 48 8B EA           mov         rbp,rdx
  000000000000002E: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000033: 48 8B D8           mov         rbx,rax
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 22              je          000000000000005D
  000000000000003B: 48 8B C8           mov         rcx,rax
  000000000000003E: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000044: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  0000000000000049: 4C 8B C6           mov         r8,rsi
  000000000000004C: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  0000000000000051: 48 8B D5           mov         rdx,rbp
  0000000000000054: 49 8B CE           mov         rcx,r14
  0000000000000057: 44 0F B7 CF        movzx       r9d,di
  000000000000005B: FF D3              call        rbx
  000000000000005D: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000062: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  0000000000000067: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  000000000000006C: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  0000000000000071: 48 83 C4 30        add         rsp,30h
  0000000000000075: 41 5E              pop         r14
  0000000000000077: C3                 ret

SQLInstallDriverEx:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 40        sub         rsp,40h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BD@FGCNBKIM@SQLInstallDriverEx?$AA@]
                    00
  0000000000000024: 41 0F B7 F9        movzx       edi,r9w
  0000000000000028: 49 8B F0           mov         rsi,r8
  000000000000002B: 48 8B EA           mov         rbp,rdx
  000000000000002E: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000033: 48 8B D8           mov         rbx,rax
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 39              je          0000000000000074
  000000000000003B: 48 8B C8           mov         rcx,rax
  000000000000003E: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000044: 4C 8B 8C 24 80 00  mov         r9,qword ptr [rsp+80h]
                    00 00
  000000000000004C: 0F B7 54 24 78     movzx       edx,word ptr [rsp+78h]
  0000000000000051: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000056: 4C 89 4C 24 30     mov         qword ptr [rsp+30h],r9
  000000000000005B: 66 89 54 24 28     mov         word ptr [rsp+28h],dx
  0000000000000060: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000065: 44 0F B7 CF        movzx       r9d,di
  0000000000000069: 4C 8B C6           mov         r8,rsi
  000000000000006C: 49 8B CE           mov         rcx,r14
  000000000000006F: 48 8B D5           mov         rdx,rbp
  0000000000000072: FF D3              call        rbx
  0000000000000074: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000079: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  000000000000007E: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  0000000000000083: 48 8B 7C 24 68     mov         rdi,qword ptr [rsp+68h]
  0000000000000088: 48 83 C4 40        add         rsp,40h
  000000000000008C: 41 5E              pop         r14
  000000000000008E: C3                 ret

SQLInstallDriverExW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 40        sub         rsp,40h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BE@BBKCCJIC@SQLInstallDriverExW?$AA@]
                    00
  0000000000000024: 41 0F B7 F9        movzx       edi,r9w
  0000000000000028: 49 8B F0           mov         rsi,r8
  000000000000002B: 48 8B EA           mov         rbp,rdx
  000000000000002E: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000033: 48 8B D8           mov         rbx,rax
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 39              je          0000000000000074
  000000000000003B: 48 8B C8           mov         rcx,rax
  000000000000003E: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000044: 4C 8B 8C 24 80 00  mov         r9,qword ptr [rsp+80h]
                    00 00
  000000000000004C: 0F B7 54 24 78     movzx       edx,word ptr [rsp+78h]
  0000000000000051: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000056: 4C 89 4C 24 30     mov         qword ptr [rsp+30h],r9
  000000000000005B: 66 89 54 24 28     mov         word ptr [rsp+28h],dx
  0000000000000060: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000065: 44 0F B7 CF        movzx       r9d,di
  0000000000000069: 4C 8B C6           mov         r8,rsi
  000000000000006C: 49 8B CE           mov         rcx,r14
  000000000000006F: 48 8B D5           mov         rdx,rbp
  0000000000000072: FF D3              call        rbx
  0000000000000074: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000079: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  000000000000007E: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  0000000000000083: 48 8B 7C 24 68     mov         rdi,qword ptr [rsp+68h]
  0000000000000088: 48 83 C4 40        add         rsp,40h
  000000000000008C: 41 5E              pop         r14
  000000000000008E: C3                 ret

SQLInstallDriverManager:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B E9           mov         rbp,rcx
  0000000000000017: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BI@NFCNOKHD@SQLInstallDriverManager?$AA@]
                    00
  000000000000001E: 49 8B F8           mov         rdi,r8
  0000000000000021: 0F B7 F2           movzx       esi,dx
  0000000000000024: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000029: 48 8B D8           mov         rbx,rax
  000000000000002C: 48 85 C0           test        rax,rax
  000000000000002F: 74 14              je          0000000000000045
  0000000000000031: 48 8B C8           mov         rcx,rax
  0000000000000034: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000003A: 4C 8B C7           mov         r8,rdi
  000000000000003D: 0F B7 D6           movzx       edx,si
  0000000000000040: 48 8B CD           mov         rcx,rbp
  0000000000000043: FF D3              call        rbx
  0000000000000045: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000004A: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000004F: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000054: 48 83 C4 20        add         rsp,20h
  0000000000000058: 5F                 pop         rdi
  0000000000000059: C3                 ret

SQLInstallDriverManagerW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B E9           mov         rbp,rcx
  0000000000000017: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BJ@DMCDMGPP@SQLInstallDriverManagerW?$AA@]
                    00
  000000000000001E: 49 8B F8           mov         rdi,r8
  0000000000000021: 0F B7 F2           movzx       esi,dx
  0000000000000024: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000029: 48 8B D8           mov         rbx,rax
  000000000000002C: 48 85 C0           test        rax,rax
  000000000000002F: 74 14              je          0000000000000045
  0000000000000031: 48 8B C8           mov         rcx,rax
  0000000000000034: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000003A: 4C 8B C7           mov         r8,rdi
  000000000000003D: 0F B7 D6           movzx       edx,si
  0000000000000040: 48 8B CD           mov         rcx,rbp
  0000000000000043: FF D3              call        rbx
  0000000000000045: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000004A: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000004F: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000054: 48 83 C4 20        add         rsp,20h
  0000000000000058: 5F                 pop         rdi
  0000000000000059: C3                 ret

SQLInstallDriverW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 30        sub         rsp,30h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BC@LIPECGOI@SQLInstallDriverW?$AA@]
                    00
  0000000000000024: 41 0F B7 F9        movzx       edi,r9w
  0000000000000028: 49 8B F0           mov         rsi,r8
  000000000000002B: 48 8B EA           mov         rbp,rdx
  000000000000002E: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000033: 48 8B D8           mov         rbx,rax
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 22              je          000000000000005D
  000000000000003B: 48 8B C8           mov         rcx,rax
  000000000000003E: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000044: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  0000000000000049: 4C 8B C6           mov         r8,rsi
  000000000000004C: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  0000000000000051: 48 8B D5           mov         rdx,rbp
  0000000000000054: 49 8B CE           mov         rcx,r14
  0000000000000057: 44 0F B7 CF        movzx       r9d,di
  000000000000005B: FF D3              call        rbx
  000000000000005D: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000062: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  0000000000000067: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  000000000000006C: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  0000000000000071: 48 83 C4 30        add         rsp,30h
  0000000000000075: 41 5E              pop         r14
  0000000000000077: C3                 ret

SQLInstallODBC:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0P@HMFMOAPK@SQLInstallODBC?$AA@]
                    00
  000000000000000D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000012: 48 8B D8           mov         rbx,rax
  0000000000000015: 48 85 C0           test        rax,rax
  0000000000000018: 74 1E              je          0000000000000038
  000000000000001A: 48 8B C8           mov         rcx,rax
  000000000000001D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000023: 45 33 C9           xor         r9d,r9d
  0000000000000026: 45 33 C0           xor         r8d,r8d
  0000000000000029: 33 D2              xor         edx,edx
  000000000000002B: 33 C9              xor         ecx,ecx
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 83 C4 20        add         rsp,20h
  0000000000000034: 5B                 pop         rbx
  0000000000000035: 48 FF E0           jmp         rax
  0000000000000038: 48 83 C4 20        add         rsp,20h
  000000000000003C: 5B                 pop         rbx
  000000000000003D: C3                 ret

SQLInstallODBCW:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@KIOOIMHB@SQLInstallODBCW?$AA@]
                    00
  000000000000000D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000012: 48 8B D8           mov         rbx,rax
  0000000000000015: 48 85 C0           test        rax,rax
  0000000000000018: 74 1E              je          0000000000000038
  000000000000001A: 48 8B C8           mov         rcx,rax
  000000000000001D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000023: 45 33 C9           xor         r9d,r9d
  0000000000000026: 45 33 C0           xor         r8d,r8d
  0000000000000029: 33 D2              xor         edx,edx
  000000000000002B: 33 C9              xor         ecx,ecx
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 83 C4 20        add         rsp,20h
  0000000000000034: 5B                 pop         rbx
  0000000000000035: 48 FF E0           jmp         rax
  0000000000000038: 48 83 C4 20        add         rsp,20h
  000000000000003C: 5B                 pop         rbx
  000000000000003D: C3                 ret

SQLInstallTranslator:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 40        sub         rsp,40h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BF@MNODFPFH@SQLInstallTranslator?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 48 8B EA           mov         rbp,rdx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 45              je          000000000000007F
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 48 8B 4C 24 78     mov         rcx,qword ptr [rsp+78h]
  0000000000000048: 4C 8B 8C 24 88 00  mov         r9,qword ptr [rsp+88h]
                    00 00
  0000000000000050: 0F B7 94 24 80 00  movzx       edx,word ptr [rsp+80h]
                    00 00
  0000000000000058: 4C 89 4C 24 38     mov         qword ptr [rsp+38h],r9
  000000000000005D: 4C 8B C6           mov         r8,rsi
  0000000000000060: 66 89 54 24 30     mov         word ptr [rsp+30h],dx
  0000000000000065: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  000000000000006A: 0F B7 4C 24 70     movzx       ecx,word ptr [rsp+70h]
  000000000000006F: 66 89 4C 24 20     mov         word ptr [rsp+20h],cx
  0000000000000074: 4C 8B CF           mov         r9,rdi
  0000000000000077: 48 8B D5           mov         rdx,rbp
  000000000000007A: 49 8B CE           mov         rcx,r14
  000000000000007D: FF D3              call        rbx
  000000000000007F: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000084: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  0000000000000089: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  000000000000008E: 48 8B 7C 24 68     mov         rdi,qword ptr [rsp+68h]
  0000000000000093: 48 83 C4 40        add         rsp,40h
  0000000000000097: 41 5E              pop         r14
  0000000000000099: C3                 ret

SQLInstallTranslatorEx:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 40        sub         rsp,40h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BH@JPJJPGMA@SQLInstallTranslatorEx?$AA@]
                    00
  0000000000000024: 41 0F B7 F9        movzx       edi,r9w
  0000000000000028: 49 8B F0           mov         rsi,r8
  000000000000002B: 48 8B EA           mov         rbp,rdx
  000000000000002E: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000033: 48 8B D8           mov         rbx,rax
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 39              je          0000000000000074
  000000000000003B: 48 8B C8           mov         rcx,rax
  000000000000003E: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000044: 4C 8B 8C 24 80 00  mov         r9,qword ptr [rsp+80h]
                    00 00
  000000000000004C: 0F B7 54 24 78     movzx       edx,word ptr [rsp+78h]
  0000000000000051: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000056: 4C 89 4C 24 30     mov         qword ptr [rsp+30h],r9
  000000000000005B: 66 89 54 24 28     mov         word ptr [rsp+28h],dx
  0000000000000060: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000065: 44 0F B7 CF        movzx       r9d,di
  0000000000000069: 4C 8B C6           mov         r8,rsi
  000000000000006C: 49 8B CE           mov         rcx,r14
  000000000000006F: 48 8B D5           mov         rdx,rbp
  0000000000000072: FF D3              call        rbx
  0000000000000074: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000079: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  000000000000007E: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  0000000000000083: 48 8B 7C 24 68     mov         rdi,qword ptr [rsp+68h]
  0000000000000088: 48 83 C4 40        add         rsp,40h
  000000000000008C: 41 5E              pop         r14
  000000000000008E: C3                 ret

SQLInstallTranslatorExW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 40        sub         rsp,40h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BI@GOABJANF@SQLInstallTranslatorExW?$AA@]
                    00
  0000000000000024: 41 0F B7 F9        movzx       edi,r9w
  0000000000000028: 49 8B F0           mov         rsi,r8
  000000000000002B: 48 8B EA           mov         rbp,rdx
  000000000000002E: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000033: 48 8B D8           mov         rbx,rax
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 39              je          0000000000000074
  000000000000003B: 48 8B C8           mov         rcx,rax
  000000000000003E: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000044: 4C 8B 8C 24 80 00  mov         r9,qword ptr [rsp+80h]
                    00 00
  000000000000004C: 0F B7 54 24 78     movzx       edx,word ptr [rsp+78h]
  0000000000000051: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000056: 4C 89 4C 24 30     mov         qword ptr [rsp+30h],r9
  000000000000005B: 66 89 54 24 28     mov         word ptr [rsp+28h],dx
  0000000000000060: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000065: 44 0F B7 CF        movzx       r9d,di
  0000000000000069: 4C 8B C6           mov         r8,rsi
  000000000000006C: 49 8B CE           mov         rcx,r14
  000000000000006F: 48 8B D5           mov         rdx,rbp
  0000000000000072: FF D3              call        rbx
  0000000000000074: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000079: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  000000000000007E: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  0000000000000083: 48 8B 7C 24 68     mov         rdi,qword ptr [rsp+68h]
  0000000000000088: 48 83 C4 40        add         rsp,40h
  000000000000008C: 41 5E              pop         r14
  000000000000008E: C3                 ret

SQLInstallTranslatorW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 40        sub         rsp,40h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BG@DIOMJL@SQLInstallTranslatorW?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 48 8B EA           mov         rbp,rdx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 45              je          000000000000007F
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 48 8B 4C 24 78     mov         rcx,qword ptr [rsp+78h]
  0000000000000048: 4C 8B 8C 24 88 00  mov         r9,qword ptr [rsp+88h]
                    00 00
  0000000000000050: 0F B7 94 24 80 00  movzx       edx,word ptr [rsp+80h]
                    00 00
  0000000000000058: 4C 89 4C 24 38     mov         qword ptr [rsp+38h],r9
  000000000000005D: 4C 8B C6           mov         r8,rsi
  0000000000000060: 66 89 54 24 30     mov         word ptr [rsp+30h],dx
  0000000000000065: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  000000000000006A: 0F B7 4C 24 70     movzx       ecx,word ptr [rsp+70h]
  000000000000006F: 66 89 4C 24 20     mov         word ptr [rsp+20h],cx
  0000000000000074: 4C 8B CF           mov         r9,rdi
  0000000000000077: 48 8B D5           mov         rdx,rbp
  000000000000007A: 49 8B CE           mov         rcx,r14
  000000000000007D: FF D3              call        rbx
  000000000000007F: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000084: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  0000000000000089: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  000000000000008E: 48 8B 7C 24 68     mov         rdi,qword ptr [rsp+68h]
  0000000000000093: 48 83 C4 40        add         rsp,40h
  0000000000000097: 41 5E              pop         r14
  0000000000000099: C3                 ret

SQLInstallerError:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 30        sub         rsp,30h
  000000000000001A: 44 0F B7 F1        movzx       r14d,cx
  000000000000001E: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BC@DJAFKIEP@SQLInstallerError?$AA@]
                    00
  0000000000000025: 41 0F B7 F9        movzx       edi,r9w
  0000000000000029: 49 8B F0           mov         rsi,r8
  000000000000002C: 48 8B EA           mov         rbp,rdx
  000000000000002F: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000034: 48 8B D8           mov         rbx,rax
  0000000000000037: 48 85 C0           test        rax,rax
  000000000000003A: 74 25              je          0000000000000061
  000000000000003C: 48 8B C8           mov         rcx,rax
  000000000000003F: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000045: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  000000000000004A: 4C 8B C6           mov         r8,rsi
  000000000000004D: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  0000000000000052: 48 8B D5           mov         rdx,rbp
  0000000000000055: 41 0F B7 CE        movzx       ecx,r14w
  0000000000000059: 44 0F B7 CF        movzx       r9d,di
  000000000000005D: FF D3              call        rbx
  000000000000005F: EB 03              jmp         0000000000000064
  0000000000000061: 83 C8 FF           or          eax,0FFFFFFFFh
  0000000000000064: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000069: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000006E: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000073: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  0000000000000078: 48 83 C4 30        add         rsp,30h
  000000000000007C: 41 5E              pop         r14
  000000000000007E: C3                 ret

SQLInstallerErrorW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 30        sub         rsp,30h
  000000000000001A: 44 0F B7 F1        movzx       r14d,cx
  000000000000001E: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BD@BDKAJCDK@SQLInstallerErrorW?$AA@]
                    00
  0000000000000025: 41 0F B7 F9        movzx       edi,r9w
  0000000000000029: 49 8B F0           mov         rsi,r8
  000000000000002C: 48 8B EA           mov         rbp,rdx
  000000000000002F: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000034: 48 8B D8           mov         rbx,rax
  0000000000000037: 48 85 C0           test        rax,rax
  000000000000003A: 74 25              je          0000000000000061
  000000000000003C: 48 8B C8           mov         rcx,rax
  000000000000003F: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000045: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  000000000000004A: 4C 8B C6           mov         r8,rsi
  000000000000004D: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  0000000000000052: 48 8B D5           mov         rdx,rbp
  0000000000000055: 41 0F B7 CE        movzx       ecx,r14w
  0000000000000059: 44 0F B7 CF        movzx       r9d,di
  000000000000005D: FF D3              call        rbx
  000000000000005F: EB 03              jmp         0000000000000064
  0000000000000061: 83 C8 FF           or          eax,0FFFFFFFFh
  0000000000000064: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000069: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000006E: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000073: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  0000000000000078: 48 83 C4 30        add         rsp,30h
  000000000000007C: 41 5E              pop         r14
  000000000000007E: C3                 ret

SQLManageDataSources:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B F9           mov         rdi,rcx
  000000000000000D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BF@MJGFEIGA@SQLManageDataSources?$AA@]
                    00
  0000000000000014: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000019: 48 8B D8           mov         rbx,rax
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 74 1C              je          000000000000003D
  0000000000000021: 48 8B C8           mov         rcx,rax
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000002A: 48 8B CF           mov         rcx,rdi
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: 48 FF E0           jmp         rax
  000000000000003D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 5F                 pop         rdi
  0000000000000047: C3                 ret

SQLPostInstallerError:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 8B F1              mov         esi,ecx
  0000000000000011: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BG@CDCFGBML@SQLPostInstallerError?$AA@]
                    00
  0000000000000018: 48 8B FA           mov         rdi,rdx
  000000000000001B: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000020: 48 8B D8           mov         rbx,rax
  0000000000000023: 48 85 C0           test        rax,rax
  0000000000000026: 74 23              je          000000000000004B
  0000000000000028: 48 8B C8           mov         rcx,rax
  000000000000002B: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000031: 48 8B D7           mov         rdx,rdi
  0000000000000034: 8B CE              mov         ecx,esi
  0000000000000036: 48 8B C3           mov         rax,rbx
  0000000000000039: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000003E: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000043: 48 83 C4 20        add         rsp,20h
  0000000000000047: 5F                 pop         rdi
  0000000000000048: 48 FF E0           jmp         rax
  000000000000004B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000050: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000055: 83 C8 FF           or          eax,0FFFFFFFFh
  0000000000000058: 48 83 C4 20        add         rsp,20h
  000000000000005C: 5F                 pop         rdi
  000000000000005D: C3                 ret

SQLPostInstallerErrorW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 8B F1              mov         esi,ecx
  0000000000000011: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BH@PJGPPFMK@SQLPostInstallerErrorW?$AA@]
                    00
  0000000000000018: 48 8B FA           mov         rdi,rdx
  000000000000001B: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000020: 48 8B D8           mov         rbx,rax
  0000000000000023: 48 85 C0           test        rax,rax
  0000000000000026: 74 23              je          000000000000004B
  0000000000000028: 48 8B C8           mov         rcx,rax
  000000000000002B: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000031: 48 8B D7           mov         rdx,rdi
  0000000000000034: 8B CE              mov         ecx,esi
  0000000000000036: 48 8B C3           mov         rax,rbx
  0000000000000039: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000003E: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000043: 48 83 C4 20        add         rsp,20h
  0000000000000047: 5F                 pop         rdi
  0000000000000048: 48 FF E0           jmp         rax
  000000000000004B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000050: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000055: 48 83 C4 20        add         rsp,20h
  0000000000000059: 5F                 pop         rdi
  000000000000005A: C3                 ret

SQLReadFileDSN:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 30        sub         rsp,30h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0P@CPNMPJKP@SQLReadFileDSN?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 48 8B EA           mov         rbp,rdx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 2B              je          0000000000000065
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 4C 8B 4C 24 68     mov         r9,qword ptr [rsp+68h]
  0000000000000048: 0F B7 54 24 60     movzx       edx,word ptr [rsp+60h]
  000000000000004D: 4C 89 4C 24 28     mov         qword ptr [rsp+28h],r9
  0000000000000052: 66 89 54 24 20     mov         word ptr [rsp+20h],dx
  0000000000000057: 4C 8B C6           mov         r8,rsi
  000000000000005A: 48 8B D5           mov         rdx,rbp
  000000000000005D: 4C 8B CF           mov         r9,rdi
  0000000000000060: 49 8B CE           mov         rcx,r14
  0000000000000063: FF D3              call        rbx
  0000000000000065: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006A: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000006F: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000074: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  0000000000000079: 48 83 C4 30        add         rsp,30h
  000000000000007D: 41 5E              pop         r14
  000000000000007F: C3                 ret

SQLReadFileDSNW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 30        sub         rsp,30h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@LDLMKJBD@SQLReadFileDSNW?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 48 8B EA           mov         rbp,rdx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 2B              je          0000000000000065
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 4C 8B 4C 24 68     mov         r9,qword ptr [rsp+68h]
  0000000000000048: 0F B7 54 24 60     movzx       edx,word ptr [rsp+60h]
  000000000000004D: 4C 89 4C 24 28     mov         qword ptr [rsp+28h],r9
  0000000000000052: 66 89 54 24 20     mov         word ptr [rsp+20h],dx
  0000000000000057: 4C 8B C6           mov         r8,rsi
  000000000000005A: 48 8B D5           mov         rdx,rbp
  000000000000005D: 4C 8B CF           mov         r9,rdi
  0000000000000060: 49 8B CE           mov         rcx,r14
  0000000000000063: FF D3              call        rbx
  0000000000000065: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006A: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000006F: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000074: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  0000000000000079: 48 83 C4 30        add         rsp,30h
  000000000000007D: 41 5E              pop         r14
  000000000000007F: C3                 ret

SQLRemoveDSNFromIni:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B F9           mov         rdi,rcx
  000000000000000D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BE@IIEGFOOO@SQLRemoveDSNFromIni?$AA@]
                    00
  0000000000000014: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000019: 48 8B D8           mov         rbx,rax
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 74 1C              je          000000000000003D
  0000000000000021: 48 8B C8           mov         rcx,rax
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000002A: 48 8B CF           mov         rcx,rdi
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: 48 FF E0           jmp         rax
  000000000000003D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 5F                 pop         rdi
  0000000000000047: C3                 ret

SQLRemoveDSNFromIniW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B F9           mov         rdi,rcx
  000000000000000D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BF@LCMAECLC@SQLRemoveDSNFromIniW?$AA@]
                    00
  0000000000000014: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000019: 48 8B D8           mov         rbx,rax
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 74 1C              je          000000000000003D
  0000000000000021: 48 8B C8           mov         rcx,rax
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000002A: 48 8B CF           mov         rcx,rdi
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: 48 FF E0           jmp         rax
  000000000000003D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 5F                 pop         rdi
  0000000000000047: C3                 ret

SQLRemoveDefaultDataSource:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BL@IAMOPLF@SQLRemoveDefaultDataSource?$AA@]
                    00
  000000000000000D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000012: 48 8B D8           mov         rbx,rax
  0000000000000015: 48 85 C0           test        rax,rax
  0000000000000018: 74 14              je          000000000000002E
  000000000000001A: 48 8B C8           mov         rcx,rax
  000000000000001D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000023: 48 8B C3           mov         rax,rbx
  0000000000000026: 48 83 C4 20        add         rsp,20h
  000000000000002A: 5B                 pop         rbx
  000000000000002B: 48 FF E0           jmp         rax
  000000000000002E: 48 83 C4 20        add         rsp,20h
  0000000000000032: 5B                 pop         rbx
  0000000000000033: C3                 ret

SQLRemoveDriver:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B E9           mov         rbp,rcx
  0000000000000017: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@KIAPJNDJ@SQLRemoveDriver?$AA@]
                    00
  000000000000001E: 49 8B F8           mov         rdi,r8
  0000000000000021: 8B F2              mov         esi,edx
  0000000000000023: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000028: 48 8B D8           mov         rbx,rax
  000000000000002B: 48 85 C0           test        rax,rax
  000000000000002E: 74 13              je          0000000000000043
  0000000000000030: 48 8B C8           mov         rcx,rax
  0000000000000033: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000039: 4C 8B C7           mov         r8,rdi
  000000000000003C: 8B D6              mov         edx,esi
  000000000000003E: 48 8B CD           mov         rcx,rbp
  0000000000000041: FF D3              call        rbx
  0000000000000043: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000048: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000004D: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000052: 48 83 C4 20        add         rsp,20h
  0000000000000056: 5F                 pop         rdi
  0000000000000057: C3                 ret

SQLRemoveDriverManager:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B F9           mov         rdi,rcx
  000000000000000D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BH@GKJNDOJI@SQLRemoveDriverManager?$AA@]
                    00
  0000000000000014: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000019: 48 8B D8           mov         rbx,rax
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 74 1C              je          000000000000003D
  0000000000000021: 48 8B C8           mov         rcx,rax
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000002A: 48 8B CF           mov         rcx,rdi
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: 48 FF E0           jmp         rax
  000000000000003D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 5F                 pop         rdi
  0000000000000047: C3                 ret

SQLRemoveDriverW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B E9           mov         rbp,rcx
  0000000000000017: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BB@KKFHEMAG@SQLRemoveDriverW?$AA@]
                    00
  000000000000001E: 49 8B F8           mov         rdi,r8
  0000000000000021: 8B F2              mov         esi,edx
  0000000000000023: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000028: 48 8B D8           mov         rbx,rax
  000000000000002B: 48 85 C0           test        rax,rax
  000000000000002E: 74 13              je          0000000000000043
  0000000000000030: 48 8B C8           mov         rcx,rax
  0000000000000033: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000039: 4C 8B C7           mov         r8,rdi
  000000000000003C: 8B D6              mov         edx,esi
  000000000000003E: 48 8B CD           mov         rcx,rbp
  0000000000000041: FF D3              call        rbx
  0000000000000043: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000048: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000004D: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000052: 48 83 C4 20        add         rsp,20h
  0000000000000056: 5F                 pop         rdi
  0000000000000057: C3                 ret

SQLRemoveTranslator:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B F1           mov         rsi,rcx
  0000000000000012: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BE@LOFCNDJA@SQLRemoveTranslator?$AA@]
                    00
  0000000000000019: 48 8B FA           mov         rdi,rdx
  000000000000001C: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000021: 48 8B D8           mov         rbx,rax
  0000000000000024: 48 85 C0           test        rax,rax
  0000000000000027: 74 24              je          000000000000004D
  0000000000000029: 48 8B C8           mov         rcx,rax
  000000000000002C: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000032: 48 8B D7           mov         rdx,rdi
  0000000000000035: 48 8B CE           mov         rcx,rsi
  0000000000000038: 48 8B C3           mov         rax,rbx
  000000000000003B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000040: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000045: 48 83 C4 20        add         rsp,20h
  0000000000000049: 5F                 pop         rdi
  000000000000004A: 48 FF E0           jmp         rax
  000000000000004D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000052: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000057: 48 83 C4 20        add         rsp,20h
  000000000000005B: 5F                 pop         rdi
  000000000000005C: C3                 ret

SQLRemoveTranslatorW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B F1           mov         rsi,rcx
  0000000000000012: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BF@FELAKAE@SQLRemoveTranslatorW?$AA@]
                    00
  0000000000000019: 48 8B FA           mov         rdi,rdx
  000000000000001C: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000021: 48 8B D8           mov         rbx,rax
  0000000000000024: 48 85 C0           test        rax,rax
  0000000000000027: 74 24              je          000000000000004D
  0000000000000029: 48 8B C8           mov         rcx,rax
  000000000000002C: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000032: 48 8B D7           mov         rdx,rdi
  0000000000000035: 48 8B CE           mov         rcx,rsi
  0000000000000038: 48 8B C3           mov         rax,rbx
  000000000000003B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000040: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000045: 48 83 C4 20        add         rsp,20h
  0000000000000049: 5F                 pop         rdi
  000000000000004A: 48 FF E0           jmp         rax
  000000000000004D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000052: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000057: 48 83 C4 20        add         rsp,20h
  000000000000005B: 5F                 pop         rdi
  000000000000005C: C3                 ret

SQLSetConfigMode:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 0F B7 F9           movzx       edi,cx
  000000000000000D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BB@NLJGHNNN@SQLSetConfigMode?$AA@]
                    00
  0000000000000014: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000019: 48 8B D8           mov         rbx,rax
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 74 1C              je          000000000000003D
  0000000000000021: 48 8B C8           mov         rcx,rax
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000002A: 0F B7 CF           movzx       ecx,di
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: 48 FF E0           jmp         rax
  000000000000003D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 5F                 pop         rdi
  0000000000000047: C3                 ret

SQLValidDSN:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B F9           mov         rdi,rcx
  000000000000000D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0M@PEFJFIPJ@SQLValidDSN?$AA@]
                    00
  0000000000000014: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000019: 48 8B D8           mov         rbx,rax
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 74 1C              je          000000000000003D
  0000000000000021: 48 8B C8           mov         rcx,rax
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000002A: 48 8B CF           mov         rcx,rdi
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: 48 FF E0           jmp         rax
  000000000000003D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 5F                 pop         rdi
  0000000000000047: C3                 ret

SQLValidDSNW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B F9           mov         rdi,rcx
  000000000000000D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0N@DBGPNIHD@SQLValidDSNW?$AA@]
                    00
  0000000000000014: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000019: 48 8B D8           mov         rbx,rax
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 74 1C              je          000000000000003D
  0000000000000021: 48 8B C8           mov         rcx,rax
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  000000000000002A: 48 8B CF           mov         rcx,rdi
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: 48 FF E0           jmp         rax
  000000000000003D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 5F                 pop         rdi
  0000000000000047: C3                 ret

SQLWriteDSNToIni:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B F1           mov         rsi,rcx
  0000000000000012: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BB@ECPGBBGJ@SQLWriteDSNToIni?$AA@]
                    00
  0000000000000019: 48 8B FA           mov         rdi,rdx
  000000000000001C: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000021: 48 8B D8           mov         rbx,rax
  0000000000000024: 48 85 C0           test        rax,rax
  0000000000000027: 74 24              je          000000000000004D
  0000000000000029: 48 8B C8           mov         rcx,rax
  000000000000002C: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000032: 48 8B D7           mov         rdx,rdi
  0000000000000035: 48 8B CE           mov         rcx,rsi
  0000000000000038: 48 8B C3           mov         rax,rbx
  000000000000003B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000040: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000045: 48 83 C4 20        add         rsp,20h
  0000000000000049: 5F                 pop         rdi
  000000000000004A: 48 FF E0           jmp         rax
  000000000000004D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000052: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000057: 48 83 C4 20        add         rsp,20h
  000000000000005B: 5F                 pop         rdi
  000000000000005C: C3                 ret

SQLWriteDSNToIniW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B F1           mov         rsi,rcx
  0000000000000012: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BC@MBNGOEHO@SQLWriteDSNToIniW?$AA@]
                    00
  0000000000000019: 48 8B FA           mov         rdi,rdx
  000000000000001C: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000021: 48 8B D8           mov         rbx,rax
  0000000000000024: 48 85 C0           test        rax,rax
  0000000000000027: 74 24              je          000000000000004D
  0000000000000029: 48 8B C8           mov         rcx,rax
  000000000000002C: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000032: 48 8B D7           mov         rdx,rdi
  0000000000000035: 48 8B CE           mov         rcx,rsi
  0000000000000038: 48 8B C3           mov         rax,rbx
  000000000000003B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000040: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000045: 48 83 C4 20        add         rsp,20h
  0000000000000049: 5F                 pop         rdi
  000000000000004A: 48 FF E0           jmp         rax
  000000000000004D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000052: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000057: 48 83 C4 20        add         rsp,20h
  000000000000005B: 5F                 pop         rdi
  000000000000005C: C3                 ret

SQLWriteFileDSN:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 20        sub         rsp,20h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@BLPCDOIE@SQLWriteFileDSN?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 48 8B EA           mov         rbp,rdx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 17              je          0000000000000051
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 4C 8B CF           mov         r9,rdi
  0000000000000046: 4C 8B C6           mov         r8,rsi
  0000000000000049: 48 8B D5           mov         rdx,rbp
  000000000000004C: 49 8B CE           mov         rcx,r14
  000000000000004F: FF D3              call        rbx
  0000000000000051: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000056: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000005B: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000060: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  0000000000000065: 48 83 C4 20        add         rsp,20h
  0000000000000069: 41 5E              pop         r14
  000000000000006B: C3                 ret

SQLWriteFileDSNW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 20        sub         rsp,20h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BB@BPDEHOJE@SQLWriteFileDSNW?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 48 8B EA           mov         rbp,rdx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 17              je          0000000000000051
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 4C 8B CF           mov         r9,rdi
  0000000000000046: 4C 8B C6           mov         r8,rsi
  0000000000000049: 48 8B D5           mov         rdx,rbp
  000000000000004C: 49 8B CE           mov         rcx,r14
  000000000000004F: FF D3              call        rbx
  0000000000000051: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000056: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000005B: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000060: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  0000000000000065: 48 83 C4 20        add         rsp,20h
  0000000000000069: 41 5E              pop         r14
  000000000000006B: C3                 ret

SQLWritePrivateProfileString:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 20        sub         rsp,20h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BN@FPPPBCJE@SQLWritePrivateProfileString?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 48 8B EA           mov         rbp,rdx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 17              je          0000000000000051
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 4C 8B CF           mov         r9,rdi
  0000000000000046: 4C 8B C6           mov         r8,rsi
  0000000000000049: 48 8B D5           mov         rdx,rbp
  000000000000004C: 49 8B CE           mov         rcx,r14
  000000000000004F: FF D3              call        rbx
  0000000000000051: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000056: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000005B: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000060: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  0000000000000065: 48 83 C4 20        add         rsp,20h
  0000000000000069: 41 5E              pop         r14
  000000000000006B: C3                 ret

SQLWritePrivateProfileStringW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 20        sub         rsp,20h
  000000000000001A: 4C 8B F1           mov         r14,rcx
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BO@CMHGDNM@SQLWritePrivateProfileStringW?$AA@]
                    00
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: 49 8B F0           mov         rsi,r8
  000000000000002A: 48 8B EA           mov         rbp,rdx
  000000000000002D: E8 00 00 00 00     call        ODBC___GetSetupProc
  0000000000000032: 48 8B D8           mov         rbx,rax
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 17              je          0000000000000051
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__guard_check_icall_fptr]
  0000000000000043: 4C 8B CF           mov         r9,rdi
  0000000000000046: 4C 8B C6           mov         r8,rsi
  0000000000000049: 48 8B D5           mov         rdx,rbp
  000000000000004C: 49 8B CE           mov         rcx,r14
  000000000000004F: FF D3              call        rbx
  0000000000000051: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000056: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000005B: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000060: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  0000000000000065: 48 83 C4 20        add         rsp,20h
  0000000000000069: 41 5E              pop         r14
  000000000000006B: C3                 ret

LoadProperSetupDLL:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 81 EC 50 04 00  sub         rsp,450h
                    00
  0000000000000009: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000010: 48 33 C4           xor         rax,rsp
  0000000000000013: 48 89 84 24 40 04  mov         qword ptr [rsp+440h],rax
                    00 00
  000000000000001B: 33 C0              xor         eax,eax
  000000000000001D: BB 0A 02 00 00     mov         ebx,20Ah
  0000000000000022: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000027: 8B D3              mov         edx,ebx
  0000000000000029: 66 89 44 24 20     mov         word ptr [rsp+20h],ax
  000000000000002E: FF 15 00 00 00 00  call        qword ptr [__imp_GetSystemDirectoryW]
  0000000000000034: 8D 48 FF           lea         ecx,[rax-1]
  0000000000000037: 81 F9 08 02 00 00  cmp         ecx,208h
  000000000000003D: 77 33              ja          0000000000000072
  000000000000003F: 8B C0              mov         eax,eax
  0000000000000041: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000046: 4C 8D 05 00 00 00  lea         r8,[??_C@_1BM@GPGPKJLG@?$AA?2?$AAo?$AAd?$AAb?$AAc?$AAc?$AAp?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@]
                    00
  000000000000004D: 48 2B D8           sub         rbx,rax
  0000000000000050: 48 8D 0C 41        lea         rcx,[rcx+rax*2]
  0000000000000054: 48 8B D3           mov         rdx,rbx
  0000000000000057: E8 00 00 00 00     call        StringCchCopyW
  000000000000005C: 85 C0              test        eax,eax
  000000000000005E: 78 12              js          0000000000000072
  0000000000000060: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000065: 45 33 C0           xor         r8d,r8d
  0000000000000068: 33 D2              xor         edx,edx
  000000000000006A: FF 15 00 00 00 00  call        qword ptr [__imp_LoadLibraryExW]
  0000000000000070: EB 02              jmp         0000000000000074
  0000000000000072: 33 C0              xor         eax,eax
  0000000000000074: 48 8B 8C 24 40 04  mov         rcx,qword ptr [rsp+440h]
                    00 00
  000000000000007C: 48 33 CC           xor         rcx,rsp
  000000000000007F: E8 00 00 00 00     call        __security_check_cookie
  0000000000000084: 48 81 C4 50 04 00  add         rsp,450h
                    00
  000000000000008B: 5B                 pop         rbx
  000000000000008C: C3                 ret

ODBC___GetSetupProc:
  0000000000000000: 40 57              push        rdi
  0000000000000002: 48 81 EC 80 0A 00  sub         rsp,0A80h
                    00
  0000000000000009: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000010: 48 33 C4           xor         rax,rsp
  0000000000000013: 48 89 84 24 70 0A  mov         qword ptr [rsp+0A70h],rax
                    00 00
  000000000000001B: 48 8B 05 00 00 00  mov         rax,qword ptr [g_hInstSetup]
                    00
  0000000000000022: 48 8B F9           mov         rdi,rcx
  0000000000000025: 48 85 C0           test        rax,rax
  0000000000000028: 75 32              jne         000000000000005C
  000000000000002A: E8 00 00 00 00     call        LoadProperSetupDLL
  000000000000002F: 48 89 05 00 00 00  mov         qword ptr [g_hInstSetup],rax
                    00
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 75 21              jne         000000000000005C
  000000000000003B: 44 8D 48 40        lea         r9d,[rax+40h]
  000000000000003F: 4C 8D 05 00 00 00  lea         r8,[INSTALLER_ERROR_TITLE]
                    00
  0000000000000046: 48 8D 15 00 00 00  lea         rdx,[INSTALLER_ERROR_NOT_INSTALLED]
                    00
  000000000000004D: 33 C9              xor         ecx,ecx
  000000000000004F: FF 15 00 00 00 00  call        qword ptr [__imp_MessageBoxW]
  0000000000000055: 33 C0              xor         eax,eax
  0000000000000057: E9 BB 00 00 00     jmp         0000000000000117
  000000000000005C: 48 8B D7           mov         rdx,rdi
  000000000000005F: 48 8B C8           mov         rcx,rax
  0000000000000062: 48 89 9C 24 98 0A  mov         qword ptr [rsp+0A98h],rbx
                    00 00
  000000000000006A: FF 15 00 00 00 00  call        qword ptr [__imp_GetProcAddress]
  0000000000000070: 48 8B D8           mov         rbx,rax
  0000000000000073: 48 85 C0           test        rax,rax
  0000000000000076: 0F 85 90 00 00 00  jne         000000000000010C
  000000000000007C: 48 8B 0D 00 00 00  mov         rcx,qword ptr [g_hInstSetup]
                    00
  0000000000000083: 48 8D 94 24 40 02  lea         rdx,[rsp+240h]
                    00 00
  000000000000008B: 41 B8 05 01 00 00  mov         r8d,105h
  0000000000000091: 66 89 84 24 50 04  mov         word ptr [rsp+450h],ax
                    00 00
  0000000000000099: 66 89 84 24 40 02  mov         word ptr [rsp+240h],ax
                    00 00
  00000000000000A1: 66 89 44 24 30     mov         word ptr [rsp+30h],ax
  00000000000000A6: FF 15 00 00 00 00  call        qword ptr [__imp_GetModuleFileNameW]
  00000000000000AC: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  00000000000000B1: 41 B8 05 01 00 00  mov         r8d,105h
  00000000000000B7: 33 C9              xor         ecx,ecx
  00000000000000B9: FF 15 00 00 00 00  call        qword ptr [__imp_GetModuleFileNameW]
  00000000000000BF: 48 8D 84 24 40 02  lea         rax,[rsp+240h]
                    00 00
  00000000000000C7: 4C 8D 4C 24 30     lea         r9,[rsp+30h]
  00000000000000CC: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000D1: 4C 8D 05 00 00 00  lea         r8,[INSTALLER_ERROR_API_NOTEXIST_FORMAT]
                    00
  00000000000000D8: 48 8D 8C 24 50 04  lea         rcx,[rsp+450h]
                    00 00
  00000000000000E0: BA 0F 03 00 00     mov         edx,30Fh
  00000000000000E5: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  00000000000000EA: E8 00 00 00 00     call        StringCchPrintfW
  00000000000000EF: 4C 8D 05 00 00 00  lea         r8,[INSTALLER_ERROR_TITLE]
                    00
  00000000000000F6: 48 8D 94 24 50 04  lea         rdx,[rsp+450h]
                    00 00
  00000000000000FE: 41 B9 40 00 00 00  mov         r9d,40h
  0000000000000104: 33 C9              xor         ecx,ecx
  0000000000000106: FF 15 00 00 00 00  call        qword ptr [__imp_MessageBoxW]
  000000000000010C: 48 8B C3           mov         rax,rbx
  000000000000010F: 48 8B 9C 24 98 0A  mov         rbx,qword ptr [rsp+0A98h]
                    00 00
  0000000000000117: 48 8B 8C 24 70 0A  mov         rcx,qword ptr [rsp+0A70h]
                    00 00
  000000000000011F: 48 33 CC           xor         rcx,rsp
  0000000000000122: E8 00 00 00 00     call        __security_check_cookie
  0000000000000127: 48 81 C4 80 0A 00  add         rsp,0A80h
                    00
  000000000000012E: 5F                 pop         rdi
  000000000000012F: C3                 ret

StringCchCopyW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 33 DB              xor         ebx,ebx
  0000000000000007: 48 8D 42 FF        lea         rax,[rdx-1]
  000000000000000B: 41 B9 FE FF FF 7F  mov         r9d,7FFFFFFEh
  0000000000000011: 49 3B C1           cmp         rax,r9
  0000000000000014: 44 8B D3           mov         r10d,ebx
  0000000000000017: 41 BB 57 00 07 80  mov         r11d,80070057h
  000000000000001D: 45 0F 47 D3        cmova       r10d,r11d
  0000000000000021: 45 85 D2           test        r10d,r10d
  0000000000000024: 78 5E              js          0000000000000084
  0000000000000026: 44 8B D3           mov         r10d,ebx
  0000000000000029: 48 85 D2           test        rdx,rdx
  000000000000002C: 74 40              je          000000000000006E
  000000000000002E: 4C 2B CA           sub         r9,rdx
  0000000000000031: 4C 2B C1           sub         r8,rcx
  0000000000000034: 49 8D 04 11        lea         rax,[r9+rdx]
  0000000000000038: 48 85 C0           test        rax,rax
  000000000000003B: 74 2C              je          0000000000000069
  000000000000003D: 41 0F B7 04 08     movzx       eax,word ptr [r8+rcx]
  0000000000000042: 66 85 C0           test        ax,ax
  0000000000000045: 74 22              je          0000000000000069
  0000000000000047: 66 89 01           mov         word ptr [rcx],ax
  000000000000004A: 48 83 C1 02        add         rcx,2
  000000000000004E: 48 FF CA           dec         rdx
  0000000000000051: 75 E1              jne         0000000000000034
  0000000000000053: 48 83 E9 02        sub         rcx,2
  0000000000000057: 41 BA 7A 00 07 80  mov         r10d,8007007Ah
  000000000000005D: 66 89 19           mov         word ptr [rcx],bx
  0000000000000060: 41 8B C2           mov         eax,r10d
  0000000000000063: 48 8B 5C 24 08     mov         rbx,qword ptr [rsp+8]
  0000000000000068: C3                 ret
  0000000000000069: 48 85 D2           test        rdx,rdx
  000000000000006C: 75 1B              jne         0000000000000089
  000000000000006E: 48 83 E9 02        sub         rcx,2
  0000000000000072: 41 BA 7A 00 07 80  mov         r10d,8007007Ah
  0000000000000078: 66 89 19           mov         word ptr [rcx],bx
  000000000000007B: 41 8B C2           mov         eax,r10d
  000000000000007E: 48 8B 5C 24 08     mov         rbx,qword ptr [rsp+8]
  0000000000000083: C3                 ret
  0000000000000084: 48 85 D2           test        rdx,rdx
  0000000000000087: 74 03              je          000000000000008C
  0000000000000089: 66 89 19           mov         word ptr [rcx],bx
  000000000000008C: 48 8B 5C 24 08     mov         rbx,qword ptr [rsp+8]
  0000000000000091: 41 8B C2           mov         eax,r10d
  0000000000000094: C3                 ret

StringCchPrintfW:
  0000000000000000: 4C 89 44 24 18     mov         qword ptr [rsp+18h],r8
  0000000000000005: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  000000000000000A: 53                 push        rbx
  000000000000000B: 56                 push        rsi
  000000000000000C: 48 83 EC 38        sub         rsp,38h
  0000000000000010: 33 DB              xor         ebx,ebx
  0000000000000012: 48 8D 42 FF        lea         rax,[rdx-1]
  0000000000000016: 48 8B F1           mov         rsi,rcx
  0000000000000019: 48 3D FE FF FF 7F  cmp         rax,7FFFFFFEh
  000000000000001F: 44 8B CB           mov         r9d,ebx
  0000000000000022: B9 57 00 07 80     mov         ecx,80070057h
  0000000000000027: 44 0F 47 C9        cmova       r9d,ecx
  000000000000002B: 45 85 C9           test        r9d,r9d
  000000000000002E: 78 57              js          0000000000000087
  0000000000000030: 48 8D 44 24 68     lea         rax,[rsp+68h]
  0000000000000035: 4D 8B C8           mov         r9,r8
  0000000000000038: 48 89 7C 24 30     mov         qword ptr [rsp+30h],rdi
  000000000000003D: 48 8D 7A FF        lea         rdi,[rdx-1]
  0000000000000041: 48 8B CE           mov         rcx,rsi
  0000000000000044: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000049: 4C 8B C7           mov         r8,rdi
  000000000000004C: E8 00 00 00 00     call        _vsnwprintf_s
  0000000000000051: 85 C0              test        eax,eax
  0000000000000053: 78 1B              js          0000000000000070
  0000000000000055: 48 98              cdqe
  0000000000000057: 48 3B C7           cmp         rax,rdi
  000000000000005A: 77 14              ja          0000000000000070
  000000000000005C: 75 1B              jne         0000000000000079
  000000000000005E: 66 89 1C 7E        mov         word ptr [rsi+rdi*2],bx
  0000000000000062: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  0000000000000067: 8B C3              mov         eax,ebx
  0000000000000069: 48 83 C4 38        add         rsp,38h
  000000000000006D: 5E                 pop         rsi
  000000000000006E: 5B                 pop         rbx
  000000000000006F: C3                 ret
  0000000000000070: 66 89 1C 7E        mov         word ptr [rsi+rdi*2],bx
  0000000000000074: BB 7A 00 07 80     mov         ebx,8007007Ah
  0000000000000079: 8B C3              mov         eax,ebx
  000000000000007B: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  0000000000000080: 48 83 C4 38        add         rsp,38h
  0000000000000084: 5E                 pop         rsi
  0000000000000085: 5B                 pop         rbx
  0000000000000086: C3                 ret
  0000000000000087: 41 8B C1           mov         eax,r9d
  000000000000008A: 48 85 D2           test        rdx,rdx
  000000000000008D: 74 03              je          0000000000000092
  000000000000008F: 66 89 1E           mov         word ptr [rsi],bx
  0000000000000092: 48 83 C4 38        add         rsp,38h
  0000000000000096: 5E                 pop         rsi
  0000000000000097: 5B                 pop         rbx
  0000000000000098: C3                 ret

StringCopyWorkerW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 7C 24 10     mov         qword ptr [rsp+10h],rdi
  000000000000000A: 33 FF              xor         edi,edi
  000000000000000C: 49 8B D8           mov         rbx,r8
  000000000000000F: 44 8B DF           mov         r11d,edi
  0000000000000012: 44 8B D7           mov         r10d,edi
  0000000000000015: 48 85 D2           test        rdx,rdx
  0000000000000018: 74 32              je          000000000000004C
  000000000000001A: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  000000000000001F: 4C 2B C9           sub         r9,rcx
  0000000000000022: 48 85 C0           test        rax,rax
  0000000000000025: 74 20              je          0000000000000047
  0000000000000027: 45 0F B7 04 09     movzx       r8d,word ptr [r9+rcx]
  000000000000002C: 66 45 85 C0        test        r8w,r8w
  0000000000000030: 74 15              je          0000000000000047
  0000000000000032: 66 44 89 01        mov         word ptr [rcx],r8w
  0000000000000036: 48 83 C1 02        add         rcx,2
  000000000000003A: 48 FF C8           dec         rax
  000000000000003D: 49 FF C2           inc         r10
  0000000000000040: 48 FF CA           dec         rdx
  0000000000000043: 75 DD              jne         0000000000000022
  0000000000000045: EB 05              jmp         000000000000004C
  0000000000000047: 48 85 D2           test        rdx,rdx
  000000000000004A: 75 0D              jne         0000000000000059
  000000000000004C: 48 83 E9 02        sub         rcx,2
  0000000000000050: 41 BB 7A 00 07 80  mov         r11d,8007007Ah
  0000000000000056: 49 FF CA           dec         r10
  0000000000000059: 66 89 39           mov         word ptr [rcx],di
  000000000000005C: 41 8B C3           mov         eax,r11d
  000000000000005F: 48 85 DB           test        rbx,rbx
  0000000000000062: 74 03              je          0000000000000067
  0000000000000064: 4C 89 13           mov         qword ptr [rbx],r10
  0000000000000067: 48 8B 5C 24 08     mov         rbx,qword ptr [rsp+8]
  000000000000006C: 48 8B 7C 24 10     mov         rdi,qword ptr [rsp+10h]
  0000000000000071: C3                 ret

StringVPrintfWorkerW:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 48 89 7C 24 18     mov         qword ptr [rsp+18h],rdi
  000000000000000F: 41 56              push        r14
  0000000000000011: 48 83 EC 30        sub         rsp,30h
  0000000000000015: 48 8B 44 24 60     mov         rax,qword ptr [rsp+60h]
  000000000000001A: 48 8D 5A FF        lea         rbx,[rdx-1]
  000000000000001E: 49 8B F0           mov         rsi,r8
  0000000000000021: 4C 8B C3           mov         r8,rbx
  0000000000000024: 4C 8B F1           mov         r14,rcx
  0000000000000027: 33 FF              xor         edi,edi
  0000000000000029: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  000000000000002E: E8 00 00 00 00     call        _vsnwprintf_s
  0000000000000033: 85 C0              test        eax,eax
  0000000000000035: 78 15              js          000000000000004C
  0000000000000037: 48 98              cdqe
  0000000000000039: 48 3B C3           cmp         rax,rbx
  000000000000003C: 77 0E              ja          000000000000004C
  000000000000003E: 75 07              jne         0000000000000047
  0000000000000040: 66 41 89 3C 5E     mov         word ptr [r14+rbx*2],di
  0000000000000045: EB 0F              jmp         0000000000000056
  0000000000000047: 48 8B D8           mov         rbx,rax
  000000000000004A: EB 0A              jmp         0000000000000056
  000000000000004C: 66 41 89 3C 5E     mov         word ptr [r14+rbx*2],di
  0000000000000051: BF 7A 00 07 80     mov         edi,8007007Ah
  0000000000000056: 8B C7              mov         eax,edi
  0000000000000058: 48 85 F6           test        rsi,rsi
  000000000000005B: 74 03              je          0000000000000060
  000000000000005D: 48 89 1E           mov         qword ptr [rsi],rbx
  0000000000000060: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000065: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  000000000000006A: 48 8B 7C 24 50     mov         rdi,qword ptr [rsp+50h]
  000000000000006F: 48 83 C4 30        add         rsp,30h
  0000000000000073: 41 5E              pop         r14
  0000000000000075: C3                 ret

StringValidateDestW:
  0000000000000000: 48 85 D2           test        rdx,rdx
  0000000000000003: 74 08              je          000000000000000D
  0000000000000005: 49 3B D0           cmp         rdx,r8
  0000000000000008: 77 03              ja          000000000000000D
  000000000000000A: 33 C0              xor         eax,eax
  000000000000000C: C3                 ret
  000000000000000D: B8 57 00 07 80     mov         eax,80070057h
  0000000000000012: C3                 ret

??0TSerialNumber@@QEAA@PEADG@Z (public: __cdecl TSerialNumber::TSerialNumber(char *,unsigned short)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 4C 8B D1           mov         r10,rcx
  0000000000000009: 48 8B D9           mov         rbx,rcx
  000000000000000C: 4C 8B CA           mov         r9,rdx
  000000000000000F: 4C 2B D2           sub         r10,rdx
  0000000000000012: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000016: 66 66 0F 1F 84 00  nop         word ptr [rax+rax]
                    00 00 00 00
  0000000000000020: 41 0F B6 01        movzx       eax,byte ptr [r9]
  0000000000000024: 4D 8D 49 01        lea         r9,[r9+1]
  0000000000000028: 43 88 44 0A 0F     mov         byte ptr [r10+r9+0Fh],al
  000000000000002D: 84 C0              test        al,al
  000000000000002F: 75 EF              jne         0000000000000020
  0000000000000031: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000035: 66 66 66 0F 1F 84  nop         word ptr [rax+rax]
                    00 00 00 00 00
  0000000000000040: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000043: 48 8D 52 01        lea         rdx,[rdx+1]
  0000000000000047: 41 88 44 12 FF     mov         byte ptr [r10+rdx-1],al
  000000000000004C: 84 C0              test        al,al
  000000000000004E: 75 F0              jne         0000000000000040
  0000000000000050: 66 44 89 41 14     mov         word ptr [rcx+14h],r8w
  0000000000000055: E8 00 00 00 00     call        ?Build@TSerialNumber@@QEAAXXZ
  000000000000005A: 48 8B C3           mov         rax,rbx
  000000000000005D: 48 83 C4 20        add         rsp,20h
  0000000000000061: 5B                 pop         rbx
  0000000000000062: C3                 ret

?Build@TSerialNumber@@QEAAXXZ (public: void __cdecl TSerialNumber::Build(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 50        sub         rsp,50h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 33 C9              xor         ecx,ecx
  000000000000000B: FF 15 00 00 00 00  call        qword ptr [__imp__time64]
  0000000000000011: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  0000000000000016: 48 89 44 24 60     mov         qword ptr [rsp+60h],rax
  000000000000001B: FF 15 00 00 00 00  call        qword ptr [__imp__localtime64]
  0000000000000021: 8B 50 14           mov         edx,dword ptr [rax+14h]
  0000000000000024: 48 63 48 10        movsxd      rcx,dword ptr [rax+10h]
  0000000000000028: 4C 8B C0           mov         r8,rax
  000000000000002B: 83 EA 63           sub         edx,63h
  000000000000002E: 4C 63 CA           movsxd      r9,edx
  0000000000000031: 0F B7 53 14        movzx       edx,word ptr [rbx+14h]
  0000000000000035: 48 C1 E2 04        shl         rdx,4
  0000000000000039: 4C 0B CA           or          r9,rdx
  000000000000003C: 49 C1 E1 04        shl         r9,4
  0000000000000040: 4C 0B C9           or          r9,rcx
  0000000000000043: 48 63 48 0C        movsxd      rcx,dword ptr [rax+0Ch]
  0000000000000047: 48 63 40 08        movsxd      rax,dword ptr [rax+8]
  000000000000004B: 49 C1 E1 05        shl         r9,5
  000000000000004F: 4C 0B C9           or          r9,rcx
  0000000000000052: 49 C1 E1 05        shl         r9,5
  0000000000000056: 4C 0B C8           or          r9,rax
  0000000000000059: 49 63 40 04        movsxd      rax,dword ptr [r8+4]
  000000000000005D: 49 C1 E1 06        shl         r9,6
  0000000000000061: 4C 0B C8           or          r9,rax
  0000000000000064: 41 8B 00           mov         eax,dword ptr [r8]
  0000000000000067: 41 B8 24 00 00 00  mov         r8d,24h
  000000000000006D: 99                 cdq
  000000000000006E: 49 C1 E1 05        shl         r9,5
  0000000000000072: 2B C2              sub         eax,edx
  0000000000000074: D1 F8              sar         eax,1
  0000000000000076: 48 63 D0           movsxd      rdx,eax
  0000000000000079: 4C 0B CA           or          r9,rdx
  000000000000007C: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000081: 49 8B C9           mov         rcx,r9
  0000000000000084: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  0000000000000089: FF 15 00 00 00 00  call        qword ptr [__imp__i64toa]
  000000000000008F: 48 8B C8           mov         rcx,rax
  0000000000000092: FF 15 00 00 00 00  call        qword ptr [__imp__strupr]
  0000000000000098: 4C 8D 43 02        lea         r8,[rbx+2]
  000000000000009C: 48 8D 44 24 20     lea         rax,[rsp+20h]
  00000000000000A1: 48 83 CA FF        or          rdx,0FFFFFFFFFFFFFFFFh
  00000000000000A5: 48 FF C2           inc         rdx
  00000000000000A8: 80 3C 10 00        cmp         byte ptr [rax+rdx],0
  00000000000000AC: 75 F7              jne         00000000000000A5
  00000000000000AE: 48 83 FA 06        cmp         rdx,6
  00000000000000B2: 73 61              jae         0000000000000115
  00000000000000B4: C6 43 02 00        mov         byte ptr [rbx+2],0
  00000000000000B8: 48 83 C8 FF        or          rax,0FFFFFFFFFFFFFFFFh
  00000000000000BC: 0F 1F 40 00        nop         dword ptr [rax]
  00000000000000C0: 48 FF C0           inc         rax
  00000000000000C3: 80 7C 03 02 00     cmp         byte ptr [rbx+rax+2],0
  00000000000000C8: 75 F6              jne         00000000000000C0
  00000000000000CA: 48 03 C2           add         rax,rdx
  00000000000000CD: 48 83 F8 06        cmp         rax,6
  00000000000000D1: 73 54              jae         0000000000000127
  00000000000000D3: 0F 1F 40 00        nop         dword ptr [rax]
  00000000000000D7: 66 0F 1F 84 00 00  nop         word ptr [rax+rax]
                    00 00 00
  00000000000000E0: 48 8D 43 01        lea         rax,[rbx+1]
  00000000000000E4: 80 78 01 00        cmp         byte ptr [rax+1],0
  00000000000000E8: 48 8D 40 01        lea         rax,[rax+1]
  00000000000000EC: 75 F6              jne         00000000000000E4
  00000000000000EE: 0F B7 0D 00 00 00  movzx       ecx,word ptr [??_C@_01GBGANLPD@0?$AA@]
                    00
  00000000000000F5: 49 FF C0           inc         r8
  00000000000000F8: 66 89 08           mov         word ptr [rax],cx
  00000000000000FB: 48 83 C8 FF        or          rax,0FFFFFFFFFFFFFFFFh
  00000000000000FF: 90                 nop
  0000000000000100: 48 FF C0           inc         rax
  0000000000000103: 80 7C 03 02 00     cmp         byte ptr [rbx+rax+2],0
  0000000000000108: 75 F6              jne         0000000000000100
  000000000000010A: 48 03 C2           add         rax,rdx
  000000000000010D: 48 83 F8 06        cmp         rax,6
  0000000000000111: 72 CD              jb          00000000000000E0
  0000000000000113: EB 12              jmp         0000000000000127
  0000000000000115: 0F B6 44 24 26     movzx       eax,byte ptr [rsp+26h]
  000000000000011A: 33 C9              xor         ecx,ecx
  000000000000011C: 48 83 FA 06        cmp         rdx,6
  0000000000000120: 0F 47 C1           cmova       eax,ecx
  0000000000000123: 88 44 24 26        mov         byte ptr [rsp+26h],al
  0000000000000127: 48 8D 44 24 20     lea         rax,[rsp+20h]
  000000000000012C: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000131: 4C 2B C0           sub         r8,rax
  0000000000000134: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000138: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000140: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000143: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000147: 41 88 44 08 FF     mov         byte ptr [r8+rcx-1],al
  000000000000014C: 84 C0              test        al,al
  000000000000014E: 75 F0              jne         0000000000000140
  0000000000000150: 48 83 C4 50        add         rsp,50h
  0000000000000154: 5B                 pop         rbx
  0000000000000155: C3                 ret

?Get@TSerialNumber@@QEAAHPEADPEAH@Z (public: int __cdecl TSerialNumber::Get(char *,int *)):
  0000000000000000: 48 8B C1           mov         rax,rcx
  0000000000000003: 48 2B D1           sub         rdx,rcx
  0000000000000006: 66 66 0F 1F 84 00  nop         word ptr [rax+rax+0000000000000000h]
                    00 00 00 00
  0000000000000010: 44 0F B6 08        movzx       r9d,byte ptr [rax]
  0000000000000014: 48 8D 40 01        lea         rax,[rax+1]
  0000000000000018: 44 88 4C 02 FF     mov         byte ptr [rdx+rax-1],r9b
  000000000000001D: 45 84 C9           test        r9b,r9b
  0000000000000020: 75 EE              jne         0000000000000010
  0000000000000022: 48 83 C8 FF        or          rax,0FFFFFFFFFFFFFFFFh
  0000000000000026: 48 FF C0           inc         rax
  0000000000000029: 80 3C 01 00        cmp         byte ptr [rcx+rax],0
  000000000000002D: 75 F7              jne         0000000000000026
  000000000000002F: 41 89 00           mov         dword ptr [r8],eax
  0000000000000032: B8 01 00 00 00     mov         eax,1
  0000000000000037: C3                 ret

?GetSerialNo@TSerialNumber@@QEAAPEADXZ (public: char * __cdecl TSerialNumber::GetSerialNo(void)):
  0000000000000000: 48 8B C1           mov         rax,rcx
  0000000000000003: C3                 ret

localtime:
  0000000000000000: 48 FF 25 00 00 00  jmp         qword ptr [__imp__localtime64]
                    00

time:
  0000000000000000: 48 FF 25 00 00 00  jmp         qword ptr [__imp__time64]
                    00

??0TFtEEFTX@@QEAA@PEAUft_private_vars@@@Z (public: __cdecl TFtEEFTX::TFtEEFTX(struct ft_private_vars *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAUft_private_vars@@@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEEFTX@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],400h
                    00 04 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

??0TFtEEFTX@@QEAA@PEAX@Z (public: __cdecl TFtEEFTX::TFtEEFTX(void *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAX@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEEFTX@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],400h
                    00 04 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

??0TFtEEFTX@@QEAA@XZ (public: __cdecl TFtEEFTX::TFtEEFTX(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@XZ
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEEFTX@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],400h
                    00 04 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

?AddUserArea@TFtEEFTX@@UEAAHPEAEK@Z (public: virtual int __cdecl TFtEEFTX::AddUserArea(unsigned char *,unsigned long)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 20        sub         rsp,20h
  000000000000001A: B8 5C 00 00 00     mov         eax,5Ch
  000000000000001F: 41 8B E8           mov         ebp,r8d
  0000000000000022: 41 8B D8           mov         ebx,r8d
  0000000000000025: 44 3B C0           cmp         r8d,eax
  0000000000000028: 48 8B F2           mov         rsi,rdx
  000000000000002B: 48 8B F9           mov         rdi,rcx
  000000000000002E: 0F 47 E8           cmova       ebp,eax
  0000000000000031: 44 8B C5           mov         r8d,ebp
  0000000000000034: E8 00 00 00 00     call        ?AddUserArea@TFtE2Data@@UEAAHPEAEK@Z
  0000000000000039: 44 8B F0           mov         r14d,eax
  000000000000003C: 85 C0              test        eax,eax
  000000000000003E: 74 42              je          0000000000000082
  0000000000000040: 2B DD              sub         ebx,ebp
  0000000000000042: 74 3E              je          0000000000000082
  0000000000000044: B9 00 01 00 00     mov         ecx,100h
  0000000000000049: 48 83 C6 5C        add         rsi,5Ch
  000000000000004D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000050: 0F B6 06           movzx       eax,byte ptr [rsi]
  0000000000000053: 0F B7 D1           movzx       edx,cx
  0000000000000056: 66 FF C1           inc         cx
  0000000000000059: 88 44 3A 08        mov         byte ptr [rdx+rdi+8],al
  000000000000005D: 8B 97 40 08 00 00  mov         edx,dword ptr [rdi+840h]
  0000000000000063: 0F B7 C1           movzx       eax,cx
  0000000000000066: 83 EA 02           sub         edx,2
  0000000000000069: FF CB              dec         ebx
  000000000000006B: 48 8D 76 01        lea         rsi,[rsi+1]
  000000000000006F: 3B C2              cmp         eax,edx
  0000000000000071: 75 0B              jne         000000000000007E
  0000000000000073: 0F B7 8F 40 08 00  movzx       ecx,word ptr [rdi+840h]
                    00
  000000000000007A: 66 83 C1 02        add         cx,2
  000000000000007E: 85 DB              test        ebx,ebx
  0000000000000080: 75 CE              jne         0000000000000050
  0000000000000082: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000085: 48 8B CF           mov         rcx,rdi
  0000000000000088: FF 50 08           call        qword ptr [rax+8]
  000000000000008B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000090: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  0000000000000095: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  000000000000009A: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  000000000000009F: 41 8B C6           mov         eax,r14d
  00000000000000A2: 48 83 C4 20        add         rsp,20h
  00000000000000A6: 41 5E              pop         r14
  00000000000000A8: C3                 ret

?GetChipID@TFtEEFTX@@QEAAKPEAK@Z (public: unsigned long __cdecl TFtEEFTX::GetChipID(unsigned long *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 59 08        lea         rbx,[rcx+8]
  000000000000000E: 48 8B FA           mov         rdi,rdx
  0000000000000011: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  0000000000000016: 48 8B CB           mov         rcx,rbx
  0000000000000019: BA 43 00 00 00     mov         edx,43h
  000000000000001E: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  0000000000000023: 85 C0              test        eax,eax
  0000000000000025: 74 34              je          000000000000005B
  0000000000000027: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  000000000000002C: BA 44 00 00 00     mov         edx,44h
  0000000000000031: 48 8B CB           mov         rcx,rbx
  0000000000000034: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  0000000000000039: 85 C0              test        eax,eax
  000000000000003B: 74 1E              je          000000000000005B
  000000000000003D: 0F B7 44 24 40     movzx       eax,word ptr [rsp+40h]
  0000000000000042: 0F B7 4C 24 30     movzx       ecx,word ptr [rsp+30h]
  0000000000000047: C1 E1 10           shl         ecx,10h
  000000000000004A: 0B C8              or          ecx,eax
  000000000000004C: 33 C0              xor         eax,eax
  000000000000004E: 89 0F              mov         dword ptr [rdi],ecx
  0000000000000050: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  0000000000000055: 48 83 C4 20        add         rsp,20h
  0000000000000059: 5F                 pop         rdi
  000000000000005A: C3                 ret
  000000000000005B: B8 0B 00 00 00     mov         eax,0Bh
  0000000000000060: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  0000000000000065: 48 83 C4 20        add         rsp,20h
  0000000000000069: 5F                 pop         rdi
  000000000000006A: C3                 ret

?GetChipType@TFtEEFTX@@QEAAKPEAK@Z (public: unsigned long __cdecl TFtEEFTX::GetChipType(unsigned long *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B DA           mov         rbx,rdx
  0000000000000009: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  000000000000000E: 48 83 C1 08        add         rcx,8
  0000000000000012: BA 49 00 00 00     mov         edx,49h
  0000000000000017: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  000000000000001C: 85 C0              test        eax,eax
  000000000000001E: 74 0F              je          000000000000002F
  0000000000000020: 0F B7 44 24 30     movzx       eax,word ptr [rsp+30h]
  0000000000000025: 89 03              mov         dword ptr [rbx],eax
  0000000000000027: 33 C0              xor         eax,eax
  0000000000000029: 48 83 C4 20        add         rsp,20h
  000000000000002D: 5B                 pop         rbx
  000000000000002E: C3                 ret
  000000000000002F: B8 0B 00 00 00     mov         eax,0Bh
  0000000000000034: 48 83 C4 20        add         rsp,20h
  0000000000000038: 5B                 pop         rbx
  0000000000000039: C3                 ret

?GetUserArea@TFtEEFTX@@UEAAXPEAEKPEAK@Z (public: virtual void __cdecl TFtEEFTX::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 56                 push        rsi
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 56              push        r14
  000000000000000E: 48 83 EC 20        sub         rsp,20h
  0000000000000012: B8 5C 00 00 00     mov         eax,5Ch
  0000000000000017: 41 8B E8           mov         ebp,r8d
  000000000000001A: 4D 8B F1           mov         r14,r9
  000000000000001D: 44 3B C0           cmp         r8d,eax
  0000000000000020: 41 8B F0           mov         esi,r8d
  0000000000000023: 4C 8D 4C 24 50     lea         r9,[rsp+50h]
  0000000000000028: 0F 47 E8           cmova       ebp,eax
  000000000000002B: 48 8B DA           mov         rbx,rdx
  000000000000002E: 48 8B F9           mov         rdi,rcx
  0000000000000031: 44 8B C5           mov         r8d,ebp
  0000000000000034: E8 00 00 00 00     call        ?GetUserArea@TFtE2Data@@UEAAXPEAEKPEAK@Z
  0000000000000039: 8B 44 24 50        mov         eax,dword ptr [rsp+50h]
  000000000000003D: 41 89 06           mov         dword ptr [r14],eax
  0000000000000040: 3B C5              cmp         eax,ebp
  0000000000000042: 75 4F              jne         0000000000000093
  0000000000000044: 2B F5              sub         esi,ebp
  0000000000000046: 74 4B              je          0000000000000093
  0000000000000048: B8 00 01 00 00     mov         eax,100h
  000000000000004D: 48 83 C3 5C        add         rbx,5Ch
  0000000000000051: 44 8B C6           mov         r8d,esi
  0000000000000054: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000058: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000060: 0F B7 C8           movzx       ecx,ax
  0000000000000063: 66 FF C0           inc         ax
  0000000000000066: 41 FF C8           dec         r8d
  0000000000000069: 0F B6 54 39 08     movzx       edx,byte ptr [rcx+rdi+8]
  000000000000006E: 0F B7 C8           movzx       ecx,ax
  0000000000000071: 48 8D 5B 01        lea         rbx,[rbx+1]
  0000000000000075: 88 53 FF           mov         byte ptr [rbx-1],dl
  0000000000000078: 3B 8F 40 08 00 00  cmp         ecx,dword ptr [rdi+840h]
  000000000000007E: 75 0B              jne         000000000000008B
  0000000000000080: 0F B7 87 40 08 00  movzx       eax,word ptr [rdi+840h]
                    00
  0000000000000087: 66 83 C0 02        add         ax,2
  000000000000008B: 45 85 C0           test        r8d,r8d
  000000000000008E: 75 D0              jne         0000000000000060
  0000000000000090: 41 01 36           add         dword ptr [r14],esi
  0000000000000093: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000098: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000009D: 48 83 C4 20        add         rsp,20h
  00000000000000A1: 41 5E              pop         r14
  00000000000000A3: 5F                 pop         rdi
  00000000000000A4: 5E                 pop         rsi
  00000000000000A5: C3                 ret

?GetUserAreaAboveStringsOffset@TFtEEFTX@@QEAAGXZ (public: unsigned short __cdecl TFtEEFTX::GetUserAreaAboveStringsOffset(void)):
  0000000000000000: 8B 81 3C 08 00 00  mov         eax,dword ptr [rcx+000000000000083Ch]
  0000000000000006: 44 0F BE 44 08 08  movsx       r8d,byte ptr [rax+rcx+8]
  000000000000000C: 8B 89 40 08 00 00  mov         ecx,dword ptr [rcx+0000000000000840h]
  0000000000000012: 83 E9 02           sub         ecx,2
  0000000000000015: 41 03 C0           add         eax,r8d
  0000000000000018: 3B C1              cmp         eax,ecx
  000000000000001A: 73 03              jae         000000000000001F
  000000000000001C: D1 E8              shr         eax,1
  000000000000001E: C3                 ret
  000000000000001F: 33 C0              xor         eax,eax
  0000000000000021: C3                 ret

?GetUserAreaOffset@TFtEEFTX@@UEAAGXZ (public: virtual unsigned short __cdecl TFtEEFTX::GetUserAreaOffset(void)):
  0000000000000000: B8 12 00 00 00     mov         eax,12h
  0000000000000005: C3                 ret

?GetUserAreaSize@TFtEEFTX@@UEAAGXZ (public: virtual unsigned short __cdecl TFtEEFTX::GetUserAreaSize(void)):
  0000000000000000: B8 AE 03 00 00     mov         eax,3AEh
  0000000000000005: C3                 ret

?Init@TFtEEFTX@@UEAAXPEAX@Z (public: virtual void __cdecl TFtEEFTX::Init(void *)):
  0000000000000000: C2 00 00           ret         0

?MoveStrings@TFtEEFTX@@UEAAXXZ (public: virtual void __cdecl TFtEEFTX::MoveStrings(void)):
  0000000000000000: C2 00 00           ret         0

?Program@TFtEEFTX@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEEFTX::Program(void *,char *,char *,char *,char *)):
  0000000000000000: 4C 8B DC           mov         r11,rsp
  0000000000000003: 4D 89 4B 20        mov         qword ptr [r11+20h],r9
  0000000000000007: 53                 push        rbx
  0000000000000008: 56                 push        rsi
  0000000000000009: 57                 push        rdi
  000000000000000A: 41 55              push        r13
  000000000000000C: 48 81 EC D8 00 00  sub         rsp,0D8h
                    00
  0000000000000013: 33 F6              xor         esi,esi
  0000000000000015: 49 8B C1           mov         rax,r9
  0000000000000018: 4D 8B E8           mov         r13,r8
  000000000000001B: 48 8B FA           mov         rdi,rdx
  000000000000001E: 48 8B D9           mov         rbx,rcx
  0000000000000021: 4D 85 C0           test        r8,r8
  0000000000000024: 0F 84 45 04 00 00  je          000000000000046F
  000000000000002A: 48 85 C0           test        rax,rax
  000000000000002D: 0F 84 3C 04 00 00  je          000000000000046F
  0000000000000033: 4D 89 63 D8        mov         qword ptr [r11-28h],r12
  0000000000000037: 4C 8B A4 24 20 01  mov         r12,qword ptr [rsp+120h]
                    00 00
  000000000000003F: 4D 85 E4           test        r12,r12
  0000000000000042: 0F 84 20 04 00 00  je          0000000000000468
  0000000000000048: 66 39 72 04        cmp         word ptr [rdx+4],si
  000000000000004C: 0F 84 16 04 00 00  je          0000000000000468
  0000000000000052: 66 39 72 06        cmp         word ptr [rdx+6],si
  0000000000000056: 0F 84 0C 04 00 00  je          0000000000000468
  000000000000005C: 80 7A 16 15        cmp         byte ptr [rdx+16h],15h
  0000000000000060: 0F 87 02 04 00 00  ja          0000000000000468
  0000000000000066: 80 7A 17 15        cmp         byte ptr [rdx+17h],15h
  000000000000006A: 0F 87 F8 03 00 00  ja          0000000000000468
  0000000000000070: 80 7A 18 15        cmp         byte ptr [rdx+18h],15h
  0000000000000074: 0F 87 EE 03 00 00  ja          0000000000000468
  000000000000007A: 80 7A 19 15        cmp         byte ptr [rdx+19h],15h
  000000000000007E: 0F 87 E4 03 00 00  ja          0000000000000468
  0000000000000084: 80 7A 1A 15        cmp         byte ptr [rdx+1Ah],15h
  0000000000000088: 0F 87 DA 03 00 00  ja          0000000000000468
  000000000000008E: 80 7A 1B 15        cmp         byte ptr [rdx+1Bh],15h
  0000000000000092: 0F 87 D0 03 00 00  ja          0000000000000468
  0000000000000098: 80 7A 1C 15        cmp         byte ptr [rdx+1Ch],15h
  000000000000009C: 0F 87 C6 03 00 00  ja          0000000000000468
  00000000000000A2: 49 89 6B 08        mov         qword ptr [r11+8],rbp
  00000000000000A6: 4D 89 73 D0        mov         qword ptr [r11-30h],r14
  00000000000000AA: 33 D2              xor         edx,edx
  00000000000000AC: 41 B8 00 08 00 00  mov         r8d,800h
  00000000000000B2: 48 83 C1 08        add         rcx,8
  00000000000000B6: 4D 89 7B C8        mov         qword ptr [r11-38h],r15
  00000000000000BA: E8 00 00 00 00     call        memset
  00000000000000BF: 48 8B CB           mov         rcx,rbx
  00000000000000C2: E8 00 00 00 00     call        ?RetrieveLowerUserAreaData@TFtEEFTX@@QEAAXXZ
  00000000000000C7: 48 8B CB           mov         rcx,rbx
  00000000000000CA: E8 00 00 00 00     call        ?RetrieveProtectedAreaData@TFtEEFTX@@QEAAXXZ
  00000000000000CF: 48 8B CB           mov         rcx,rbx
  00000000000000D2: E8 00 00 00 00     call        ?RetrieveUpperUserAreaData@TFtEEFTX@@QEAAXXZ
  00000000000000D7: 4C 8B BC 24 28 01  mov         r15,qword ptr [rsp+128h]
                    00 00
  00000000000000DF: B8 00 10 00 00     mov         eax,1000h
  00000000000000E4: 49 83 CE FF        or          r14,0FFFFFFFFFFFFFFFFh
  00000000000000E8: 66 89 43 0E        mov         word ptr [rbx+0Eh],ax
  00000000000000EC: 4D 85 FF           test        r15,r15
  00000000000000EF: 74 11              je          0000000000000102
  00000000000000F1: 49 8B C6           mov         rax,r14
  00000000000000F4: 48 FF C0           inc         rax
  00000000000000F7: 41 38 34 07        cmp         byte ptr [r15+rax],sil
  00000000000000FB: 75 F7              jne         00000000000000F4
  00000000000000FD: 48 85 C0           test        rax,rax
  0000000000000100: 75 44              jne         0000000000000146
  0000000000000102: 0F B7 47 06        movzx       eax,word ptr [rdi+6]
  0000000000000106: 25 03 00 00 80     and         eax,80000003h
  000000000000010B: 7D 07              jge         0000000000000114
  000000000000010D: FF C8              dec         eax
  000000000000010F: 83 C8 FC           or          eax,0FFFFFFFCh
  0000000000000112: FF C0              inc         eax
  0000000000000114: 48 8B 94 24 18 01  mov         rdx,qword ptr [rsp+118h]
                    00 00
  000000000000011C: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000121: 44 0F B7 C0        movzx       r8d,ax
  0000000000000125: E8 00 00 00 00     call        ??0TSerialNumber@@QEAA@PEADG@Z
  000000000000012A: 4C 8D 84 24 08 01  lea         r8,[rsp+108h]
                    00 00
  0000000000000132: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  0000000000000137: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000013C: E8 00 00 00 00     call        ?Get@TSerialNumber@@QEAAHPEADPEAH@Z
  0000000000000141: 4C 8D 7C 24 40     lea         r15,[rsp+40h]
  0000000000000146: 0F B7 57 04        movzx       edx,word ptr [rdi+4]
  000000000000014A: 48 8B CB           mov         rcx,rbx
  000000000000014D: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QEAAXG@Z
  0000000000000152: 0F B7 57 06        movzx       edx,word ptr [rdi+6]
  0000000000000156: 48 8B CB           mov         rcx,rbx
  0000000000000159: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QEAAXG@Z
  000000000000015E: 40 38 77 08        cmp         byte ptr [rdi+8],sil
  0000000000000162: 74 04              je          0000000000000168
  0000000000000164: 80 4B 12 08        or          byte ptr [rbx+12h],8
  0000000000000168: 0F B7 57 0A        movzx       edx,word ptr [rdi+0Ah]
  000000000000016C: 48 8B CB           mov         rcx,rbx
  000000000000016F: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QEAAXH@Z
  0000000000000174: 40 38 77 0C        cmp         byte ptr [rdi+0Ch],sil
  0000000000000178: B1 80              mov         cl,80h
  000000000000017A: 0F B6 C1           movzx       eax,cl
  000000000000017D: B9 C0 00 00 00     mov         ecx,0C0h
  0000000000000182: 0F 45 C1           cmovne      eax,ecx
  0000000000000185: 40 38 77 0D        cmp         byte ptr [rdi+0Dh],sil
  0000000000000189: 74 02              je          000000000000018D
  000000000000018B: 0C 20              or          al,20h
  000000000000018D: 0F B6 D0           movzx       edx,al
  0000000000000190: 48 8B CB           mov         rcx,rbx
  0000000000000193: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QEAAXE@Z
  0000000000000198: 40 38 77 0E        cmp         byte ptr [rdi+0Eh],sil
  000000000000019C: 74 04              je          00000000000001A2
  000000000000019E: 80 4B 12 04        or          byte ptr [rbx+12h],4
  00000000000001A2: C6 43 16 A0        mov         byte ptr [rbx+16h],0A0h
  00000000000001A6: 49 8B C6           mov         rax,r14
  00000000000001A9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001B0: 48 FF C0           inc         rax
  00000000000001B3: 41 38 74 05 00     cmp         byte ptr [r13+rax],sil
  00000000000001B8: 75 F6              jne         00000000000001B0
  00000000000001BA: FE C0              inc         al
  00000000000001BC: 49 8B CE           mov         rcx,r14
  00000000000001BF: 02 C0              add         al,al
  00000000000001C1: 88 43 17           mov         byte ptr [rbx+17h],al
  00000000000001C4: 2C 60              sub         al,60h
  00000000000001C6: 88 43 18           mov         byte ptr [rbx+18h],al
  00000000000001C9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001D0: 48 FF C1           inc         rcx
  00000000000001D3: 41 38 34 0C        cmp         byte ptr [r12+rcx],sil
  00000000000001D7: 75 F7              jne         00000000000001D0
  00000000000001D9: FE C1              inc         cl
  00000000000001DB: 02 C9              add         cl,cl
  00000000000001DD: 02 C1              add         al,cl
  00000000000001DF: 88 4B 19           mov         byte ptr [rbx+19h],cl
  00000000000001E2: 88 43 1A           mov         byte ptr [rbx+1Ah],al
  00000000000001E5: 49 FF C6           inc         r14
  00000000000001E8: 43 38 34 37        cmp         byte ptr [r15+r14],sil
  00000000000001EC: 75 F7              jne         00000000000001E5
  00000000000001EE: 41 FE C6           inc         r14b
  00000000000001F1: 48 8D 93 A8 00 00  lea         rdx,[rbx+0A8h]
                    00
  00000000000001F8: 4D 8B C5           mov         r8,r13
  00000000000001FB: 45 02 F6           add         r14b,r14b
  00000000000001FE: 48 8B CB           mov         rcx,rbx
  0000000000000201: 44 88 73 1B        mov         byte ptr [rbx+1Bh],r14b
  0000000000000205: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  000000000000020A: 0F B6 43 18        movzx       eax,byte ptr [rbx+18h]
  000000000000020E: 48 8D 53 08        lea         rdx,[rbx+8]
  0000000000000212: 4D 8B C4           mov         r8,r12
  0000000000000215: 48 8B CB           mov         rcx,rbx
  0000000000000218: 48 03 D0           add         rdx,rax
  000000000000021B: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000220: 0F B6 43 1A        movzx       eax,byte ptr [rbx+1Ah]
  0000000000000224: 48 8D 53 08        lea         rdx,[rbx+8]
  0000000000000228: 48 03 D0           add         rdx,rax
  000000000000022B: 4D 8B C7           mov         r8,r15
  000000000000022E: 48 8B CB           mov         rcx,rbx
  0000000000000231: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000236: 0F BE 4B 16        movsx       ecx,byte ptr [rbx+16h]
  000000000000023A: 0F BE 53 18        movsx       edx,byte ptr [rbx+18h]
  000000000000023E: 44 0F BE 43 1A     movsx       r8d,byte ptr [rbx+1Ah]
  0000000000000243: 4C 8B BC 24 C0 00  mov         r15,qword ptr [rsp+0C0h]
                    00 00
  000000000000024B: 4C 8B B4 24 C8 00  mov         r14,qword ptr [rsp+0C8h]
                    00 00
  0000000000000253: 89 8B 34 08 00 00  mov         dword ptr [rbx+834h],ecx
  0000000000000259: 89 93 38 08 00 00  mov         dword ptr [rbx+838h],edx
  000000000000025F: 41 8B C0           mov         eax,r8d
  0000000000000262: 80 C9 80           or          cl,80h
  0000000000000265: 80 CA 80           or          dl,80h
  0000000000000268: 41 80 C8 80        or          r8b,80h
  000000000000026C: 88 4B 16           mov         byte ptr [rbx+16h],cl
  000000000000026F: 88 53 18           mov         byte ptr [rbx+18h],dl
  0000000000000272: 44 88 43 1A        mov         byte ptr [rbx+1Ah],r8b
  0000000000000276: 89 83 3C 08 00 00  mov         dword ptr [rbx+83Ch],eax
  000000000000027C: 40 38 77 25        cmp         byte ptr [rdi+25h],sil
  0000000000000280: 74 04              je          0000000000000286
  0000000000000282: 80 4B 08 01        or          byte ptr [rbx+8],1
  0000000000000286: 40 38 77 26        cmp         byte ptr [rdi+26h],sil
  000000000000028A: 74 04              je          0000000000000290
  000000000000028C: 80 4B 08 02        or          byte ptr [rbx+8],2
  0000000000000290: 40 38 77 27        cmp         byte ptr [rdi+27h],sil
  0000000000000294: 74 04              je          000000000000029A
  0000000000000296: 80 4B 08 04        or          byte ptr [rbx+8],4
  000000000000029A: 40 38 77 34        cmp         byte ptr [rdi+34h],sil
  000000000000029E: 74 04              je          00000000000002A4
  00000000000002A0: 80 4B 08 08        or          byte ptr [rbx+8],8
  00000000000002A4: 40 38 77 35        cmp         byte ptr [rdi+35h],sil
  00000000000002A8: 74 04              je          00000000000002AE
  00000000000002AA: 80 4B 08 40        or          byte ptr [rbx+8],40h
  00000000000002AE: 80 7F 36 01        cmp         byte ptr [rdi+36h],1
  00000000000002B2: 75 04              jne         00000000000002B8
  00000000000002B4: 80 4B 08 80        or          byte ptr [rbx+8],80h
  00000000000002B8: 40 38 77 31        cmp         byte ptr [rdi+31h],sil
  00000000000002BC: 74 04              je          00000000000002C2
  00000000000002BE: 80 4B 12 10        or          byte ptr [rbx+12h],10h
  00000000000002C2: 40 38 77 32        cmp         byte ptr [rdi+32h],sil
  00000000000002C6: 74 04              je          00000000000002CC
  00000000000002C8: 80 4B 12 20        or          byte ptr [rbx+12h],20h
  00000000000002CC: 40 38 77 33        cmp         byte ptr [rdi+33h],sil
  00000000000002D0: 74 04              je          00000000000002D6
  00000000000002D2: 80 4B 12 40        or          byte ptr [rbx+12h],40h
  00000000000002D6: 40 38 77 30        cmp         byte ptr [rdi+30h],sil
  00000000000002DA: 74 04              je          00000000000002E0
  00000000000002DC: 80 4B 12 80        or          byte ptr [rbx+12h],80h
  00000000000002E0: 40 38 77 1D        cmp         byte ptr [rdi+1Dh],sil
  00000000000002E4: 74 04              je          00000000000002EA
  00000000000002E6: 80 4B 13 01        or          byte ptr [rbx+13h],1
  00000000000002EA: 40 38 77 1E        cmp         byte ptr [rdi+1Eh],sil
  00000000000002EE: 74 04              je          00000000000002F4
  00000000000002F0: 80 4B 13 02        or          byte ptr [rbx+13h],2
  00000000000002F4: 40 38 77 1F        cmp         byte ptr [rdi+1Fh],sil
  00000000000002F8: 74 04              je          00000000000002FE
  00000000000002FA: 80 4B 13 04        or          byte ptr [rbx+13h],4
  00000000000002FE: 40 38 77 20        cmp         byte ptr [rdi+20h],sil
  0000000000000302: 74 04              je          0000000000000308
  0000000000000304: 80 4B 13 08        or          byte ptr [rbx+13h],8
  0000000000000308: 40 38 77 21        cmp         byte ptr [rdi+21h],sil
  000000000000030C: 74 04              je          0000000000000312
  000000000000030E: 80 4B 13 10        or          byte ptr [rbx+13h],10h
  0000000000000312: 40 38 77 22        cmp         byte ptr [rdi+22h],sil
  0000000000000316: 74 04              je          000000000000031C
  0000000000000318: 80 4B 13 20        or          byte ptr [rbx+13h],20h
  000000000000031C: 40 38 77 23        cmp         byte ptr [rdi+23h],sil
  0000000000000320: 74 04              je          0000000000000326
  0000000000000322: 80 4B 13 40        or          byte ptr [rbx+13h],40h
  0000000000000326: 40 38 77 24        cmp         byte ptr [rdi+24h],sil
  000000000000032A: 74 04              je          0000000000000330
  000000000000032C: 80 4B 13 80        or          byte ptr [rbx+13h],80h
  0000000000000330: 0F B6 47 15        movzx       eax,byte ptr [rdi+15h]
  0000000000000334: 3C 04              cmp         al,4
  0000000000000336: 74 1F              je          0000000000000357
  0000000000000338: 3C 08              cmp         al,8
  000000000000033A: 75 07              jne         0000000000000343
  000000000000033C: BE 01 00 00 00     mov         esi,1
  0000000000000341: EB 14              jmp         0000000000000357
  0000000000000343: 3C 0C              cmp         al,0Ch
  0000000000000345: 75 07              jne         000000000000034E
  0000000000000347: BE 02 00 00 00     mov         esi,2
  000000000000034C: EB 09              jmp         0000000000000357
  000000000000034E: 3C 10              cmp         al,10h
  0000000000000350: 75 05              jne         0000000000000357
  0000000000000352: BE 03 00 00 00     mov         esi,3
  0000000000000357: 80 7F 13 00        cmp         byte ptr [rdi+13h],0
  000000000000035B: 74 04              je          0000000000000361
  000000000000035D: 66 83 CE 04        or          si,4
  0000000000000361: 80 7F 14 00        cmp         byte ptr [rdi+14h],0
  0000000000000365: 74 04              je          000000000000036B
  0000000000000367: 66 83 CE 08        or          si,8
  000000000000036B: 0F B6 47 12        movzx       eax,byte ptr [rdi+12h]
  000000000000036F: 3C 04              cmp         al,4
  0000000000000371: 74 1C              je          000000000000038F
  0000000000000373: 3C 08              cmp         al,8
  0000000000000375: 75 06              jne         000000000000037D
  0000000000000377: 66 83 CE 10        or          si,10h
  000000000000037B: EB 12              jmp         000000000000038F
  000000000000037D: 3C 0C              cmp         al,0Ch
  000000000000037F: 75 06              jne         0000000000000387
  0000000000000381: 66 83 CE 20        or          si,20h
  0000000000000385: EB 08              jmp         000000000000038F
  0000000000000387: 3C 10              cmp         al,10h
  0000000000000389: 75 04              jne         000000000000038F
  000000000000038B: 66 83 CE 30        or          si,30h
  000000000000038F: 80 7F 10 00        cmp         byte ptr [rdi+10h],0
  0000000000000393: 74 04              je          0000000000000399
  0000000000000395: 66 83 CE 40        or          si,40h
  0000000000000399: 80 7F 11 00        cmp         byte ptr [rdi+11h],0
  000000000000039D: 74 08              je          00000000000003A7
  000000000000039F: B8 80 00 00 00     mov         eax,80h
  00000000000003A4: 66 0B F0           or          si,ax
  00000000000003A7: 66 89 73 14        mov         word ptr [rbx+14h],si
  00000000000003AB: 0F B6 47 28        movzx       eax,byte ptr [rdi+28h]
  00000000000003AF: 48 8B CB           mov         rcx,rbx
  00000000000003B2: 88 43 1C           mov         byte ptr [rbx+1Ch],al
  00000000000003B5: 0F B6 47 29        movzx       eax,byte ptr [rdi+29h]
  00000000000003B9: 88 43 1D           mov         byte ptr [rbx+1Dh],al
  00000000000003BC: 0F B6 47 2C        movzx       eax,byte ptr [rdi+2Ch]
  00000000000003C0: 88 43 1E           mov         byte ptr [rbx+1Eh],al
  00000000000003C3: 0F B6 47 2D        movzx       eax,byte ptr [rdi+2Dh]
  00000000000003C7: 88 43 1F           mov         byte ptr [rbx+1Fh],al
  00000000000003CA: 0F B6 47 2E        movzx       eax,byte ptr [rdi+2Eh]
  00000000000003CE: 88 43 20           mov         byte ptr [rbx+20h],al
  00000000000003D1: 0F B6 47 16        movzx       eax,byte ptr [rdi+16h]
  00000000000003D5: 88 43 22           mov         byte ptr [rbx+22h],al
  00000000000003D8: 0F B6 47 17        movzx       eax,byte ptr [rdi+17h]
  00000000000003DC: 88 43 23           mov         byte ptr [rbx+23h],al
  00000000000003DF: 0F B6 47 18        movzx       eax,byte ptr [rdi+18h]
  00000000000003E3: 88 43 24           mov         byte ptr [rbx+24h],al
  00000000000003E6: 0F B6 47 19        movzx       eax,byte ptr [rdi+19h]
  00000000000003EA: 88 43 25           mov         byte ptr [rbx+25h],al
  00000000000003ED: 0F B6 47 1A        movzx       eax,byte ptr [rdi+1Ah]
  00000000000003F1: 88 43 26           mov         byte ptr [rbx+26h],al
  00000000000003F4: 0F B6 47 1B        movzx       eax,byte ptr [rdi+1Bh]
  00000000000003F8: 88 43 27           mov         byte ptr [rbx+27h],al
  00000000000003FB: 0F B6 47 1C        movzx       eax,byte ptr [rdi+1Ch]
  00000000000003FF: 88 43 28           mov         byte ptr [rbx+28h],al
  0000000000000402: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000405: FF 50 08           call        qword ptr [rax+8]
  0000000000000408: 48 8D 4B 08        lea         rcx,[rbx+8]
  000000000000040C: 33 FF              xor         edi,edi
  000000000000040E: 89 BB 0C 08 00 00  mov         dword ptr [rbx+80Ch],edi
  0000000000000414: E8 00 00 00 00     call        ?Erase@TEeData@@QEAAHXZ
  0000000000000419: 85 C0              test        eax,eax
  000000000000041B: 75 20              jne         000000000000043D
  000000000000041D: 8D 47 0D           lea         eax,[rdi+0Dh]
  0000000000000420: 48 8B AC 24 00 01  mov         rbp,qword ptr [rsp+100h]
                    00 00
  0000000000000428: 4C 8B A4 24 D0 00  mov         r12,qword ptr [rsp+0D0h]
                    00 00
  0000000000000430: 48 81 C4 D8 00 00  add         rsp,0D8h
                    00
  0000000000000437: 41 5D              pop         r13
  0000000000000439: 5F                 pop         rdi
  000000000000043A: 5E                 pop         rsi
  000000000000043B: 5B                 pop         rbx
  000000000000043C: C3                 ret
  000000000000043D: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000441: E8 00 00 00 00     call        ?Write@TEeData@@QEAAHXZ
  0000000000000446: 85 C0              test        eax,eax
  0000000000000448: 75 07              jne         0000000000000451
  000000000000044A: B8 0C 00 00 00     mov         eax,0Ch
  000000000000044F: EB CF              jmp         0000000000000420
  0000000000000451: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000455: E8 00 00 00 00     call        ?Confirm@TEeData@@QEAAHXZ
  000000000000045A: B9 0C 00 00 00     mov         ecx,0Ch
  000000000000045F: 85 C0              test        eax,eax
  0000000000000461: 0F 44 F9           cmove       edi,ecx
  0000000000000464: 8B C7              mov         eax,edi
  0000000000000466: EB B8              jmp         0000000000000420
  0000000000000468: B8 06 00 00 00     mov         eax,6
  000000000000046D: EB B9              jmp         0000000000000428
  000000000000046F: B8 06 00 00 00     mov         eax,6
  0000000000000474: 48 81 C4 D8 00 00  add         rsp,0D8h
                    00
  000000000000047B: 41 5D              pop         r13
  000000000000047D: 5F                 pop         rdi
  000000000000047E: 5E                 pop         rsi
  000000000000047F: 5B                 pop         rbx
  0000000000000480: C3                 ret

?Read@TFtEEFTX@@UEAAHXZ (public: virtual int __cdecl TFtEEFTX::Read(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ?Read@TFtE2Data@@UEAAHXZ
  000000000000000E: 85 C0              test        eax,eax
  0000000000000010: 75 06              jne         0000000000000018
  0000000000000012: 48 83 C4 20        add         rsp,20h
  0000000000000016: 5B                 pop         rbx
  0000000000000017: C3                 ret
  0000000000000018: 83 AB 34 08 00 00  sub         dword ptr [rbx+834h],0FFFFFF80h
                    80
  000000000000001F: 83 AB 38 08 00 00  sub         dword ptr [rbx+838h],0FFFFFF80h
                    80
  0000000000000026: 83 AB 3C 08 00 00  sub         dword ptr [rbx+83Ch],0FFFFFF80h
                    80
  000000000000002D: B8 01 00 00 00     mov         eax,1
  0000000000000032: 48 83 C4 20        add         rsp,20h
  0000000000000036: 5B                 pop         rbx
  0000000000000037: C3                 ret

?ReadAndParse@TFtEEFTX@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEEFTX::ReadAndParse(void *,char *,char *,char *,char *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 54              push        r12
  0000000000000016: 41 56              push        r14
  0000000000000018: 41 57              push        r15
  000000000000001A: 48 83 EC 60        sub         rsp,60h
  000000000000001E: 33 ED              xor         ebp,ebp
  0000000000000020: 4D 8B F1           mov         r14,r9
  0000000000000023: 4D 8B E0           mov         r12,r8
  0000000000000026: 48 8B DA           mov         rbx,rdx
  0000000000000029: 48 8B F9           mov         rdi,rcx
  000000000000002C: 48 85 D2           test        rdx,rdx
  000000000000002F: 0F 84 4A 03 00 00  je          000000000000037F
  0000000000000035: 4D 85 C0           test        r8,r8
  0000000000000038: 0F 84 41 03 00 00  je          000000000000037F
  000000000000003E: 4D 85 C9           test        r9,r9
  0000000000000041: 0F 84 38 03 00 00  je          000000000000037F
  0000000000000047: 48 8B B4 24 A0 00  mov         rsi,qword ptr [rsp+0A0h]
                    00 00
  000000000000004F: 48 85 F6           test        rsi,rsi
  0000000000000052: 0F 84 27 03 00 00  je          000000000000037F
  0000000000000058: 4C 8B BC 24 A8 00  mov         r15,qword ptr [rsp+0A8h]
                    00 00
  0000000000000060: 4D 85 FF           test        r15,r15
  0000000000000063: 0F 84 16 03 00 00  je          000000000000037F
  0000000000000069: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000006C: FF 10              call        qword ptr [rax]
  000000000000006E: 85 C0              test        eax,eax
  0000000000000070: 0F 84 00 03 00 00  je          0000000000000376
  0000000000000076: 48 8B CF           mov         rcx,rdi
  0000000000000079: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  000000000000007E: 66 85 C0           test        ax,ax
  0000000000000081: 75 0C              jne         000000000000008F
  0000000000000083: BD 0E 00 00 00     mov         ebp,0Eh
  0000000000000088: 8B C5              mov         eax,ebp
  000000000000008A: E9 F5 02 00 00     jmp         0000000000000384
  000000000000008F: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000000000000094: 66 3B C1           cmp         ax,cx
  0000000000000097: 75 0C              jne         00000000000000A5
  0000000000000099: BD 0F 00 00 00     mov         ebp,0Fh
  000000000000009E: 8B C5              mov         eax,ebp
  00000000000000A0: E9 DF 02 00 00     jmp         0000000000000384
  00000000000000A5: 48 8B CF           mov         rcx,rdi
  00000000000000A8: 66 89 43 04        mov         word ptr [rbx+4],ax
  00000000000000AC: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  00000000000000B1: 48 8B CF           mov         rcx,rdi
  00000000000000B4: 66 89 43 06        mov         word ptr [rbx+6],ax
  00000000000000B8: 0F BE 47 12        movsx       eax,byte ptr [rdi+12h]
  00000000000000BC: C1 E8 03           shr         eax,3
  00000000000000BF: 24 01              and         al,1
  00000000000000C1: 88 43 08           mov         byte ptr [rbx+8],al
  00000000000000C4: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  00000000000000C9: 48 8B CF           mov         rcx,rdi
  00000000000000CC: 66 89 43 0A        mov         word ptr [rbx+0Ah],ax
  00000000000000D0: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  00000000000000D5: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000DA: 0F B6 C8           movzx       ecx,al
  00000000000000DD: C0 E8 05           shr         al,5
  00000000000000E0: 24 01              and         al,1
  00000000000000E2: C0 E9 06           shr         cl,6
  00000000000000E5: 88 43 0D           mov         byte ptr [rbx+0Dh],al
  00000000000000E8: 80 E1 01           and         cl,1
  00000000000000EB: 88 4B 0C           mov         byte ptr [rbx+0Ch],cl
  00000000000000EE: 0F BE 47 12        movsx       eax,byte ptr [rdi+12h]
  00000000000000F2: 48 8B CF           mov         rcx,rdi
  00000000000000F5: C1 E8 02           shr         eax,2
  00000000000000F8: 24 01              and         al,1
  00000000000000FA: 88 43 0E           mov         byte ptr [rbx+0Eh],al
  00000000000000FD: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  0000000000000102: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000107: 4C 2B E0           sub         r12,rax
  000000000000010A: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000010F: 90                 nop
  0000000000000110: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000113: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000117: 41 88 44 0C FF     mov         byte ptr [r12+rcx-1],al
  000000000000011C: 84 C0              test        al,al
  000000000000011E: 75 F0              jne         0000000000000110
  0000000000000120: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000125: 48 8B CF           mov         rcx,rdi
  0000000000000128: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  000000000000012D: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000132: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000137: 4C 2B F0           sub         r14,rax
  000000000000013A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000140: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000143: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000147: 41 88 44 0E FF     mov         byte ptr [r14+rcx-1],al
  000000000000014C: 84 C0              test        al,al
  000000000000014E: 75 F0              jne         0000000000000140
  0000000000000150: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000155: 48 8B CF           mov         rcx,rdi
  0000000000000158: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  000000000000015D: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000162: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000167: 48 2B F0           sub         rsi,rax
  000000000000016A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000170: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000173: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000177: 88 44 0E FF        mov         byte ptr [rsi+rcx-1],al
  000000000000017B: 84 C0              test        al,al
  000000000000017D: 75 F1              jne         0000000000000170
  000000000000017F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000184: 48 8B CF           mov         rcx,rdi
  0000000000000187: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000018C: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000191: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000196: 4C 2B F8           sub         r15,rax
  0000000000000199: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001A0: 0F B6 01           movzx       eax,byte ptr [rcx]
  00000000000001A3: 48 FF C1           inc         rcx
  00000000000001A6: 41 88 44 0F FF     mov         byte ptr [r15+rcx-1],al
  00000000000001AB: 84 C0              test        al,al
  00000000000001AD: 75 F1              jne         00000000000001A0
  00000000000001AF: 0F B6 47 08        movzx       eax,byte ptr [rdi+8]
  00000000000001B3: 24 01              and         al,1
  00000000000001B5: 88 43 25           mov         byte ptr [rbx+25h],al
  00000000000001B8: 0F BE 47 08        movsx       eax,byte ptr [rdi+8]
  00000000000001BC: D1 E8              shr         eax,1
  00000000000001BE: 24 01              and         al,1
  00000000000001C0: 88 43 26           mov         byte ptr [rbx+26h],al
  00000000000001C3: 0F BE 47 08        movsx       eax,byte ptr [rdi+8]
  00000000000001C7: C1 E8 02           shr         eax,2
  00000000000001CA: 24 01              and         al,1
  00000000000001CC: 88 43 27           mov         byte ptr [rbx+27h],al
  00000000000001CF: 0F BE 47 08        movsx       eax,byte ptr [rdi+8]
  00000000000001D3: C1 E8 03           shr         eax,3
  00000000000001D6: 24 01              and         al,1
  00000000000001D8: 88 43 34           mov         byte ptr [rbx+34h],al
  00000000000001DB: 0F BE 47 08        movsx       eax,byte ptr [rdi+8]
  00000000000001DF: C1 E8 06           shr         eax,6
  00000000000001E2: 24 01              and         al,1
  00000000000001E4: 88 43 35           mov         byte ptr [rbx+35h],al
  00000000000001E7: 0F BE 47 08        movsx       eax,byte ptr [rdi+8]
  00000000000001EB: C1 E8 07           shr         eax,7
  00000000000001EE: 24 01              and         al,1
  00000000000001F0: 88 43 36           mov         byte ptr [rbx+36h],al
  00000000000001F3: 0F BE 47 12        movsx       eax,byte ptr [rdi+12h]
  00000000000001F7: C1 E8 04           shr         eax,4
  00000000000001FA: 24 01              and         al,1
  00000000000001FC: 88 43 31           mov         byte ptr [rbx+31h],al
  00000000000001FF: 0F BE 47 12        movsx       eax,byte ptr [rdi+12h]
  0000000000000203: C1 E8 05           shr         eax,5
  0000000000000206: 24 01              and         al,1
  0000000000000208: 88 43 32           mov         byte ptr [rbx+32h],al
  000000000000020B: 0F BE 47 12        movsx       eax,byte ptr [rdi+12h]
  000000000000020F: C1 E8 06           shr         eax,6
  0000000000000212: 24 01              and         al,1
  0000000000000214: 88 43 33           mov         byte ptr [rbx+33h],al
  0000000000000217: 0F BE 47 12        movsx       eax,byte ptr [rdi+12h]
  000000000000021B: C1 E8 07           shr         eax,7
  000000000000021E: 24 01              and         al,1
  0000000000000220: 88 43 30           mov         byte ptr [rbx+30h],al
  0000000000000223: 0F B6 47 13        movzx       eax,byte ptr [rdi+13h]
  0000000000000227: 24 01              and         al,1
  0000000000000229: 88 43 1D           mov         byte ptr [rbx+1Dh],al
  000000000000022C: 0F BE 47 13        movsx       eax,byte ptr [rdi+13h]
  0000000000000230: D1 E8              shr         eax,1
  0000000000000232: 24 01              and         al,1
  0000000000000234: 88 43 1E           mov         byte ptr [rbx+1Eh],al
  0000000000000237: 0F BE 47 13        movsx       eax,byte ptr [rdi+13h]
  000000000000023B: C1 E8 02           shr         eax,2
  000000000000023E: 24 01              and         al,1
  0000000000000240: 88 43 1F           mov         byte ptr [rbx+1Fh],al
  0000000000000243: 0F BE 47 13        movsx       eax,byte ptr [rdi+13h]
  0000000000000247: C1 E8 03           shr         eax,3
  000000000000024A: 24 01              and         al,1
  000000000000024C: 88 43 20           mov         byte ptr [rbx+20h],al
  000000000000024F: 0F BE 47 13        movsx       eax,byte ptr [rdi+13h]
  0000000000000253: C1 E8 04           shr         eax,4
  0000000000000256: 24 01              and         al,1
  0000000000000258: 88 43 21           mov         byte ptr [rbx+21h],al
  000000000000025B: 0F BE 47 13        movsx       eax,byte ptr [rdi+13h]
  000000000000025F: C1 E8 05           shr         eax,5
  0000000000000262: 24 01              and         al,1
  0000000000000264: 88 43 22           mov         byte ptr [rbx+22h],al
  0000000000000267: 0F BE 47 13        movsx       eax,byte ptr [rdi+13h]
  000000000000026B: C1 E8 06           shr         eax,6
  000000000000026E: 24 01              and         al,1
  0000000000000270: 88 43 23           mov         byte ptr [rbx+23h],al
  0000000000000273: 0F BE 47 13        movsx       eax,byte ptr [rdi+13h]
  0000000000000277: C1 E8 07           shr         eax,7
  000000000000027A: 24 01              and         al,1
  000000000000027C: 88 43 24           mov         byte ptr [rbx+24h],al
  000000000000027F: 0F B7 4F 14        movzx       ecx,word ptr [rdi+14h]
  0000000000000283: 0F B7 C1           movzx       eax,cx
  0000000000000286: 66 83 E0 03        and         ax,3
  000000000000028A: 66 83 F8 03        cmp         ax,3
  000000000000028E: 75 06              jne         0000000000000296
  0000000000000290: C6 43 15 10        mov         byte ptr [rbx+15h],10h
  0000000000000294: EB 21              jmp         00000000000002B7
  0000000000000296: 66 83 F8 02        cmp         ax,2
  000000000000029A: 75 06              jne         00000000000002A2
  000000000000029C: C6 43 15 0C        mov         byte ptr [rbx+15h],0Ch
  00000000000002A0: EB 15              jmp         00000000000002B7
  00000000000002A2: 66 83 F8 01        cmp         ax,1
  00000000000002A6: 75 06              jne         00000000000002AE
  00000000000002A8: C6 43 15 08        mov         byte ptr [rbx+15h],8
  00000000000002AC: EB 09              jmp         00000000000002B7
  00000000000002AE: 66 85 C0           test        ax,ax
  00000000000002B1: 75 04              jne         00000000000002B7
  00000000000002B3: C6 43 15 04        mov         byte ptr [rbx+15h],4
  00000000000002B7: 0F B6 C1           movzx       eax,cl
  00000000000002BA: C0 E8 02           shr         al,2
  00000000000002BD: 24 01              and         al,1
  00000000000002BF: 88 43 13           mov         byte ptr [rbx+13h],al
  00000000000002C2: 0F B6 C1           movzx       eax,cl
  00000000000002C5: C0 E8 03           shr         al,3
  00000000000002C8: 24 01              and         al,1
  00000000000002CA: 88 43 14           mov         byte ptr [rbx+14h],al
  00000000000002CD: 0F B7 C1           movzx       eax,cx
  00000000000002D0: 66 83 E0 30        and         ax,30h
  00000000000002D4: 66 83 F8 30        cmp         ax,30h
  00000000000002D8: 75 06              jne         00000000000002E0
  00000000000002DA: C6 43 12 10        mov         byte ptr [rbx+12h],10h
  00000000000002DE: EB 21              jmp         0000000000000301
  00000000000002E0: 66 83 F8 20        cmp         ax,20h
  00000000000002E4: 75 06              jne         00000000000002EC
  00000000000002E6: C6 43 12 0C        mov         byte ptr [rbx+12h],0Ch
  00000000000002EA: EB 15              jmp         0000000000000301
  00000000000002EC: 66 83 F8 10        cmp         ax,10h
  00000000000002F0: 75 06              jne         00000000000002F8
  00000000000002F2: C6 43 12 08        mov         byte ptr [rbx+12h],8
  00000000000002F6: EB 09              jmp         0000000000000301
  00000000000002F8: 66 85 C0           test        ax,ax
  00000000000002FB: 75 04              jne         0000000000000301
  00000000000002FD: C6 43 12 04        mov         byte ptr [rbx+12h],4
  0000000000000301: 0F B6 C1           movzx       eax,cl
  0000000000000304: C0 E9 07           shr         cl,7
  0000000000000307: C0 E8 06           shr         al,6
  000000000000030A: 80 E1 01           and         cl,1
  000000000000030D: 88 4B 11           mov         byte ptr [rbx+11h],cl
  0000000000000310: 24 01              and         al,1
  0000000000000312: 88 43 10           mov         byte ptr [rbx+10h],al
  0000000000000315: 0F BE 4F 1D        movsx       ecx,byte ptr [rdi+1Dh]
  0000000000000319: 0F BE 47 1C        movsx       eax,byte ptr [rdi+1Ch]
  000000000000031D: 66 C1 E1 08        shl         cx,8
  0000000000000321: 66 0B C8           or          cx,ax
  0000000000000324: 66 89 4B 28        mov         word ptr [rbx+28h],cx
  0000000000000328: 0F BE 47 1F        movsx       eax,byte ptr [rdi+1Fh]
  000000000000032C: 0F BE 4F 20        movsx       ecx,byte ptr [rdi+20h]
  0000000000000330: C1 E1 08           shl         ecx,8
  0000000000000333: 0B C8              or          ecx,eax
  0000000000000335: 0F BE 47 1E        movsx       eax,byte ptr [rdi+1Eh]
  0000000000000339: C1 E1 08           shl         ecx,8
  000000000000033C: 0B C8              or          ecx,eax
  000000000000033E: 89 4B 2C           mov         dword ptr [rbx+2Ch],ecx
  0000000000000341: 0F B6 47 22        movzx       eax,byte ptr [rdi+22h]
  0000000000000345: 88 43 16           mov         byte ptr [rbx+16h],al
  0000000000000348: 0F B6 47 23        movzx       eax,byte ptr [rdi+23h]
  000000000000034C: 88 43 17           mov         byte ptr [rbx+17h],al
  000000000000034F: 0F B6 47 24        movzx       eax,byte ptr [rdi+24h]
  0000000000000353: 88 43 18           mov         byte ptr [rbx+18h],al
  0000000000000356: 0F B6 47 25        movzx       eax,byte ptr [rdi+25h]
  000000000000035A: 88 43 19           mov         byte ptr [rbx+19h],al
  000000000000035D: 0F B6 47 26        movzx       eax,byte ptr [rdi+26h]
  0000000000000361: 88 43 1A           mov         byte ptr [rbx+1Ah],al
  0000000000000364: 0F B6 47 27        movzx       eax,byte ptr [rdi+27h]
  0000000000000368: 88 43 1B           mov         byte ptr [rbx+1Bh],al
  000000000000036B: 0F B6 47 28        movzx       eax,byte ptr [rdi+28h]
  000000000000036F: 88 43 1C           mov         byte ptr [rbx+1Ch],al
  0000000000000372: 8B C5              mov         eax,ebp
  0000000000000374: EB 0E              jmp         0000000000000384
  0000000000000376: BD 0B 00 00 00     mov         ebp,0Bh
  000000000000037B: 8B C5              mov         eax,ebp
  000000000000037D: EB 05              jmp         0000000000000384
  000000000000037F: B8 06 00 00 00     mov         eax,6
  0000000000000384: 4C 8D 5C 24 60     lea         r11,[rsp+60h]
  0000000000000389: 49 8B 5B 20        mov         rbx,qword ptr [r11+20h]
  000000000000038D: 49 8B 6B 28        mov         rbp,qword ptr [r11+28h]
  0000000000000391: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  0000000000000395: 49 8B 7B 38        mov         rdi,qword ptr [r11+38h]
  0000000000000399: 49 8B E3           mov         rsp,r11
  000000000000039C: 41 5F              pop         r15
  000000000000039E: 41 5E              pop         r14
  00000000000003A0: 41 5C              pop         r12
  00000000000003A2: C3                 ret

?ReadAndParse@TFtEEFTX@@UEAAKPEAX@Z (public: virtual unsigned long __cdecl TFtEEFTX::ReadAndParse(void *)):
  0000000000000000: 33 C0              xor         eax,eax
  0000000000000002: C3                 ret

?RetrieveLowerUserAreaData@TFtEEFTX@@QEAAXXZ (public: void __cdecl TFtEEFTX::RetrieveLowerUserAreaData(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 40        sub         rsp,40h
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: C7 44 24 60 12 00  mov         dword ptr [rsp+60h],12h
                    00 00
  0000000000000015: 33 FF              xor         edi,edi
  0000000000000017: 66 0F 1F 84 00 00  nop         word ptr [rax+rax]
                    00 00 00
  0000000000000020: 8B 93 20 08 00 00  mov         edx,dword ptr [rbx+820h]
  0000000000000026: 48 8B 8B 18 08 00  mov         rcx,qword ptr [rbx+818h]
                    00
  000000000000002D: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000032: 48 8D 44 24 68     lea         rax,[rsp+68h]
  0000000000000037: 4C 8D 44 24 60     lea         r8,[rsp+60h]
  000000000000003C: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000042: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  0000000000000047: 48 8D 44 24 58     lea         rax,[rsp+58h]
  000000000000004C: C7 44 24 28 02 00  mov         dword ptr [rsp+28h],2
                    00 00
  0000000000000054: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000059: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000005F: 8B 44 24 60        mov         eax,dword ptr [rsp+60h]
  0000000000000063: 8D 0C 00           lea         ecx,[rax+rax]
  0000000000000066: 0F B7 44 24 58     movzx       eax,word ptr [rsp+58h]
  000000000000006B: 66 89 44 19 08     mov         word ptr [rcx+rbx+8],ax
  0000000000000070: 8B 44 24 60        mov         eax,dword ptr [rsp+60h]
  0000000000000074: FF C0              inc         eax
  0000000000000076: 89 44 24 60        mov         dword ptr [rsp+60h],eax
  000000000000007A: 83 F8 40           cmp         eax,40h
  000000000000007D: 72 A1              jb          0000000000000020
  000000000000007F: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000084: 48 83 C4 40        add         rsp,40h
  0000000000000088: 5F                 pop         rdi
  0000000000000089: C3                 ret

?RetrieveProtectedAreaData@TFtEEFTX@@QEAAXXZ (public: void __cdecl TFtEEFTX::RetrieveProtectedAreaData(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 40        sub         rsp,40h
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: C7 44 24 60 40 00  mov         dword ptr [rsp+60h],40h
                    00 00
  0000000000000015: 33 FF              xor         edi,edi
  0000000000000017: 66 0F 1F 84 00 00  nop         word ptr [rax+rax]
                    00 00 00
  0000000000000020: 8B 93 20 08 00 00  mov         edx,dword ptr [rbx+820h]
  0000000000000026: 48 8B 8B 18 08 00  mov         rcx,qword ptr [rbx+818h]
                    00
  000000000000002D: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000032: 48 8D 44 24 68     lea         rax,[rsp+68h]
  0000000000000037: 4C 8D 44 24 60     lea         r8,[rsp+60h]
  000000000000003C: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000042: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  0000000000000047: 48 8D 44 24 58     lea         rax,[rsp+58h]
  000000000000004C: C7 44 24 28 02 00  mov         dword ptr [rsp+28h],2
                    00 00
  0000000000000054: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000059: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000005F: 8B 44 24 60        mov         eax,dword ptr [rsp+60h]
  0000000000000063: 8D 0C 00           lea         ecx,[rax+rax]
  0000000000000066: 0F B7 44 24 58     movzx       eax,word ptr [rsp+58h]
  000000000000006B: 66 89 44 19 08     mov         word ptr [rcx+rbx+8],ax
  0000000000000070: 8B 44 24 60        mov         eax,dword ptr [rsp+60h]
  0000000000000074: FF C0              inc         eax
  0000000000000076: 89 44 24 60        mov         dword ptr [rsp+60h],eax
  000000000000007A: 83 F8 50           cmp         eax,50h
  000000000000007D: 72 A1              jb          0000000000000020
  000000000000007F: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000084: 48 83 C4 40        add         rsp,40h
  0000000000000088: 5F                 pop         rdi
  0000000000000089: C3                 ret

?RetrieveUpperUserAreaData@TFtEEFTX@@QEAAXXZ (public: void __cdecl TFtEEFTX::RetrieveUpperUserAreaData(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 40        sub         rsp,40h
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: C7 44 24 60 80 00  mov         dword ptr [rsp+60h],80h
                    00 00
  0000000000000015: 33 FF              xor         edi,edi
  0000000000000017: 66 0F 1F 84 00 00  nop         word ptr [rax+rax]
                    00 00 00
  0000000000000020: 8B 93 20 08 00 00  mov         edx,dword ptr [rbx+820h]
  0000000000000026: 48 8B 8B 18 08 00  mov         rcx,qword ptr [rbx+818h]
                    00
  000000000000002D: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000032: 48 8D 44 24 68     lea         rax,[rsp+68h]
  0000000000000037: 4C 8D 44 24 60     lea         r8,[rsp+60h]
  000000000000003C: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000042: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  0000000000000047: 48 8D 44 24 58     lea         rax,[rsp+58h]
  000000000000004C: C7 44 24 28 02 00  mov         dword ptr [rsp+28h],2
                    00 00
  0000000000000054: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000059: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000005F: 8B 44 24 60        mov         eax,dword ptr [rsp+60h]
  0000000000000063: 8D 0C 00           lea         ecx,[rax+rax]
  0000000000000066: 0F B7 44 24 58     movzx       eax,word ptr [rsp+58h]
  000000000000006B: 66 89 44 19 08     mov         word ptr [rcx+rbx+8],ax
  0000000000000070: 8B 44 24 60        mov         eax,dword ptr [rsp+60h]
  0000000000000074: FF C0              inc         eax
  0000000000000076: 89 44 24 60        mov         dword ptr [rsp+60h],eax
  000000000000007A: 3D 00 04 00 00     cmp         eax,400h
  000000000000007F: 72 9F              jb          0000000000000020
  0000000000000081: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000086: 48 83 C4 40        add         rsp,40h
  000000000000008A: 5F                 pop         rdi
  000000000000008B: C3                 ret

?SetChecksum@TFtEEFTX@@UEAAXXZ (public: virtual void __cdecl TFtEEFTX::SetChecksum(void)):
  0000000000000000: 8B 91 40 08 00 00  mov         edx,dword ptr [rcx+0000000000000840h]
  0000000000000006: 4C 8D 51 08        lea         r10,[rcx+8]
  000000000000000A: 48 8D 41 08        lea         rax,[rcx+8]
  000000000000000E: 4C 03 D2           add         r10,rdx
  0000000000000011: 41 B9 AA AA 00 00  mov         r9d,0AAAAh
  0000000000000017: 4C 8B C1           mov         r8,rcx
  000000000000001A: 66 44 89 89 30 08  mov         word ptr [rcx+0000000000000830h],r9w
                    00 00
  0000000000000022: 49 3B C2           cmp         rax,r10
  0000000000000025: 73 45              jae         000000000000006C
  0000000000000027: 4C 8D 59 2C        lea         r11,[rcx+2Ch]
  000000000000002B: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  0000000000000030: 66 44 33 08        xor         r9w,word ptr [rax]
  0000000000000034: 48 83 C0 02        add         rax,2
  0000000000000038: 41 0F B7 D1        movzx       edx,r9w
  000000000000003C: 41 0F B7 C9        movzx       ecx,r9w
  0000000000000040: 66 C1 EA 0F        shr         dx,0Fh
  0000000000000044: 66 03 C9           add         cx,cx
  0000000000000047: 66 0B CA           or          cx,dx
  000000000000004A: 44 0F B7 C9        movzx       r9d,cx
  000000000000004E: 66 41 89 88 30 08  mov         word ptr [r8+0000000000000830h],cx
                    00 00
  0000000000000056: 49 3B C3           cmp         rax,r11
  0000000000000059: 75 07              jne         0000000000000062
  000000000000005B: 49 8D 80 88 00 00  lea         rax,[r8+0000000000000088h]
                    00
  0000000000000062: 49 3B C2           cmp         rax,r10
  0000000000000065: 72 C9              jb          0000000000000030
  0000000000000067: 66 41 89 0A        mov         word ptr [r10],cx
  000000000000006B: C3                 ret
  000000000000006C: 66 45 89 0A        mov         word ptr [r10],r9w
  0000000000000070: C3                 ret

?SetRomType@TFtEEFTX@@UEAAXXZ (public: virtual void __cdecl TFtEEFTX::SetRomType(void)):
  0000000000000000: B8 31 58 00 00     mov         eax,5831h
  0000000000000005: 66 89 81 32 08 00  mov         word ptr [rcx+0000000000000832h],ax
                    00
  000000000000000C: C3                 ret

??0TFtEE4232H@@QEAA@PEAUft_private_vars@@@Z (public: __cdecl TFtEE4232H::TFtEE4232H(struct ft_private_vars *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAUft_private_vars@@@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE4232H@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

??0TFtEE4232H@@QEAA@PEAX@Z (public: __cdecl TFtEE4232H::TFtEE4232H(void *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAX@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE4232H@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

??0TFtEE4232H@@QEAA@XZ (public: __cdecl TFtEE4232H::TFtEE4232H(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@XZ
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE4232H@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

?AddUserArea@TFtEE4232H@@UEAAHPEAEK@Z (public: virtual int __cdecl TFtEE4232H::AddUserArea(unsigned char *,unsigned long)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 83 EC 20        sub         rsp,20h
  0000000000000018: 41 8B E8           mov         ebp,r8d
  000000000000001B: 41 BF 80 00 00 00  mov         r15d,80h
  0000000000000021: 41 8B D8           mov         ebx,r8d
  0000000000000024: 45 3B C7           cmp         r8d,r15d
  0000000000000027: 48 8B FA           mov         rdi,rdx
  000000000000002A: 48 8B F1           mov         rsi,rcx
  000000000000002D: 41 0F 47 EF        cmova       ebp,r15d
  0000000000000031: 44 8B C5           mov         r8d,ebp
  0000000000000034: E8 00 00 00 00     call        ?AddUserArea@TFtE2Data@@UEAAHPEAEK@Z
  0000000000000039: 44 8B F0           mov         r14d,eax
  000000000000003C: 85 C0              test        eax,eax
  000000000000003E: 74 27              je          0000000000000067
  0000000000000040: 2B DD              sub         ebx,ebp
  0000000000000042: 74 23              je          0000000000000067
  0000000000000044: 48 8B CE           mov         rcx,rsi
  0000000000000047: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  000000000000004C: 66 03 C0           add         ax,ax
  000000000000004F: 49 03 FF           add         rdi,r15
  0000000000000052: 0F B6 0F           movzx       ecx,byte ptr [rdi]
  0000000000000055: 0F B7 D0           movzx       edx,ax
  0000000000000058: 66 FF C0           inc         ax
  000000000000005B: 48 8D 7F 01        lea         rdi,[rdi+1]
  000000000000005F: 88 4C 32 08        mov         byte ptr [rdx+rsi+8],cl
  0000000000000063: FF CB              dec         ebx
  0000000000000065: 75 EB              jne         0000000000000052
  0000000000000067: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000006A: 48 8B CE           mov         rcx,rsi
  000000000000006D: FF 50 08           call        qword ptr [rax+8]
  0000000000000070: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000075: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000007A: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  000000000000007F: 41 8B C6           mov         eax,r14d
  0000000000000082: 48 83 C4 20        add         rsp,20h
  0000000000000086: 41 5F              pop         r15
  0000000000000088: 41 5E              pop         r14
  000000000000008A: 5F                 pop         rdi
  000000000000008B: C3                 ret

?Erase@TFtEE4232H@@QEAAHXZ (public: int __cdecl TFtEE4232H::Erase(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000007: FF 50 40           call        qword ptr [rax+40h]
  000000000000000A: B8 01 00 00 00     mov         eax,1
  000000000000000F: 48 83 C4 28        add         rsp,28h
  0000000000000013: C3                 ret

?GetUserArea@TFtEE4232H@@UEAAXPEAEKPEAK@Z (public: virtual void __cdecl TFtEE4232H::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 83 EC 20        sub         rsp,20h
  0000000000000018: 41 8B E8           mov         ebp,r8d
  000000000000001B: 41 BF 80 00 00 00  mov         r15d,80h
  0000000000000021: 4D 8B F1           mov         r14,r9
  0000000000000024: 45 3B C7           cmp         r8d,r15d
  0000000000000027: 41 8B F8           mov         edi,r8d
  000000000000002A: 4C 8D 4C 24 50     lea         r9,[rsp+50h]
  000000000000002F: 41 0F 47 EF        cmova       ebp,r15d
  0000000000000033: 48 8B DA           mov         rbx,rdx
  0000000000000036: 48 8B F1           mov         rsi,rcx
  0000000000000039: 44 8B C5           mov         r8d,ebp
  000000000000003C: E8 00 00 00 00     call        ?GetUserArea@TFtE2Data@@UEAAXPEAEKPEAK@Z
  0000000000000041: 8B 44 24 50        mov         eax,dword ptr [rsp+50h]
  0000000000000045: 41 89 06           mov         dword ptr [r14],eax
  0000000000000048: 3B C5              cmp         eax,ebp
  000000000000004A: 75 2F              jne         000000000000007B
  000000000000004C: 2B FD              sub         edi,ebp
  000000000000004E: 74 2B              je          000000000000007B
  0000000000000050: 48 8B CE           mov         rcx,rsi
  0000000000000053: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  0000000000000058: 44 8B C7           mov         r8d,edi
  000000000000005B: 66 03 C0           add         ax,ax
  000000000000005E: 49 03 DF           add         rbx,r15
  0000000000000061: 0F B7 C8           movzx       ecx,ax
  0000000000000064: 66 FF C0           inc         ax
  0000000000000067: 48 8D 5B 01        lea         rbx,[rbx+1]
  000000000000006B: 0F B6 54 31 08     movzx       edx,byte ptr [rcx+rsi+8]
  0000000000000070: 88 53 FF           mov         byte ptr [rbx-1],dl
  0000000000000073: 41 FF C8           dec         r8d
  0000000000000076: 75 E9              jne         0000000000000061
  0000000000000078: 41 01 3E           add         dword ptr [r14],edi
  000000000000007B: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000080: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  0000000000000085: 48 8B 74 24 58     mov         rsi,qword ptr [rsp+58h]
  000000000000008A: 48 83 C4 20        add         rsp,20h
  000000000000008E: 41 5F              pop         r15
  0000000000000090: 41 5E              pop         r14
  0000000000000092: 5F                 pop         rdi
  0000000000000093: C3                 ret

?GetUserAreaOffset@TFtEE4232H@@UEAAGXZ (public: virtual unsigned short __cdecl TFtEE4232H::GetUserAreaOffset(void)):
  0000000000000000: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+832h]
                    00
  0000000000000007: BA EF FF 00 00     mov         edx,0FFEFh
  000000000000000C: 66 83 E8 56        sub         ax,56h
  0000000000000010: 66 85 C2           test        dx,ax
  0000000000000013: 0F 85 00 00 00 00  jne         ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  0000000000000019: B8 0D 00 00 00     mov         eax,0Dh
  000000000000001E: C3                 ret

?GetUserAreaSize@TFtEE4232H@@UEAAGXZ (public: virtual unsigned short __cdecl TFtEE4232H::GetUserAreaSize(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+832h]
                    00
  000000000000000B: BA EF FF 00 00     mov         edx,0FFEFh
  0000000000000010: 66 83 E8 56        sub         ax,56h
  0000000000000014: 66 85 C2           test        dx,ax
  0000000000000017: 74 09              je          0000000000000022
  0000000000000019: 48 83 C4 28        add         rsp,28h
  000000000000001D: E9 00 00 00 00     jmp         ?GetUserAreaSize@TFtE2Data@@UEAAGXZ
  0000000000000022: E8 00 00 00 00     call        ?GetUserAreaSize@TFtE2Data@@UEAAGXZ
  0000000000000027: 83 C0 40           add         eax,40h
  000000000000002A: 48 83 C4 28        add         rsp,28h
  000000000000002E: C3                 ret

?Init@TFtEE4232H@@UEAAXPEAX@Z (public: virtual void __cdecl TFtEE4232H::Init(void *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 20        sub         rsp,20h
  000000000000001C: 4C 8B 3A           mov         r15,qword ptr [rdx]
  000000000000001F: 4C 8B 62 08        mov         r12,qword ptr [rdx+8]
  0000000000000023: 45 33 ED           xor         r13d,r13d
  0000000000000026: 41 0F B7 DD        movzx       ebx,r13w
  000000000000002A: 48 8B F1           mov         rsi,rcx
  000000000000002D: 45 0F B7 F5        movzx       r14d,r13w
  0000000000000031: 41 0F B7 ED        movzx       ebp,r13w
  0000000000000035: 38 5A 2A           cmp         byte ptr [rdx+2Ah],bl
  0000000000000038: 74 04              je          000000000000003E
  000000000000003A: 45 8D 75 08        lea         r14d,[r13+8]
  000000000000003E: 41 B9 00 08 00 00  mov         r9d,800h
  0000000000000044: 44 38 6A 2B        cmp         byte ptr [rdx+2Bh],r13b
  0000000000000048: 74 04              je          000000000000004E
  000000000000004A: 66 45 0B F1        or          r14w,r9w
  000000000000004E: B9 80 00 00 00     mov         ecx,80h
  0000000000000053: 44 38 6A 2C        cmp         byte ptr [rdx+2Ch],r13b
  0000000000000057: 74 04              je          000000000000005D
  0000000000000059: 66 44 0B F1        or          r14w,cx
  000000000000005D: 41 B8 00 80 00 00  mov         r8d,8000h
  0000000000000063: 44 38 6A 2D        cmp         byte ptr [rdx+2Dh],r13b
  0000000000000067: 74 04              je          000000000000006D
  0000000000000069: 66 45 0B F0        or          r14w,r8w
  000000000000006D: 44 38 6A 18        cmp         byte ptr [rdx+18h],r13b
  0000000000000071: 74 05              je          0000000000000078
  0000000000000073: BD 04 00 00 00     mov         ebp,4
  0000000000000078: 44 38 6A 19        cmp         byte ptr [rdx+19h],r13b
  000000000000007C: 74 04              je          0000000000000082
  000000000000007E: 66 83 CD 08        or          bp,8
  0000000000000082: 41 BA 00 10 00 00  mov         r10d,1000h
  0000000000000088: 44 38 6A 26        cmp         byte ptr [rdx+26h],r13b
  000000000000008C: 74 04              je          0000000000000092
  000000000000008E: 66 41 0B EA        or          bp,r10w
  0000000000000092: 41 BB 00 20 00 00  mov         r11d,2000h
  0000000000000098: 44 38 6A 27        cmp         byte ptr [rdx+27h],r13b
  000000000000009C: 74 04              je          00000000000000A2
  000000000000009E: 66 41 0B EB        or          bp,r11w
  00000000000000A2: BF 00 40 00 00     mov         edi,4000h
  00000000000000A7: 44 38 6A 28        cmp         byte ptr [rdx+28h],r13b
  00000000000000AB: 74 03              je          00000000000000B0
  00000000000000AD: 66 0B EF           or          bp,di
  00000000000000B0: 44 38 6A 29        cmp         byte ptr [rdx+29h],r13b
  00000000000000B4: 74 04              je          00000000000000BA
  00000000000000B6: 66 41 0B E8        or          bp,r8w
  00000000000000BA: 0F B6 42 1C        movzx       eax,byte ptr [rdx+1Ch]
  00000000000000BE: 3C 04              cmp         al,4
  00000000000000C0: 74 1F              je          00000000000000E1
  00000000000000C2: 3C 08              cmp         al,8
  00000000000000C4: 75 07              jne         00000000000000CD
  00000000000000C6: BB 01 00 00 00     mov         ebx,1
  00000000000000CB: EB 14              jmp         00000000000000E1
  00000000000000CD: 3C 0C              cmp         al,0Ch
  00000000000000CF: 75 07              jne         00000000000000D8
  00000000000000D1: BB 02 00 00 00     mov         ebx,2
  00000000000000D6: EB 09              jmp         00000000000000E1
  00000000000000D8: 3C 10              cmp         al,10h
  00000000000000DA: 75 05              jne         00000000000000E1
  00000000000000DC: BB 03 00 00 00     mov         ebx,3
  00000000000000E1: 44 38 6A 1A        cmp         byte ptr [rdx+1Ah],r13b
  00000000000000E5: 74 04              je          00000000000000EB
  00000000000000E7: 66 83 CB 04        or          bx,4
  00000000000000EB: 44 38 6A 1B        cmp         byte ptr [rdx+1Bh],r13b
  00000000000000EF: 74 04              je          00000000000000F5
  00000000000000F1: 66 83 CB 08        or          bx,8
  00000000000000F5: 0F B6 42 1F        movzx       eax,byte ptr [rdx+1Fh]
  00000000000000F9: 3C 04              cmp         al,4
  00000000000000FB: 74 1C              je          0000000000000119
  00000000000000FD: 3C 08              cmp         al,8
  00000000000000FF: 75 06              jne         0000000000000107
  0000000000000101: 66 83 CB 10        or          bx,10h
  0000000000000105: EB 12              jmp         0000000000000119
  0000000000000107: 3C 0C              cmp         al,0Ch
  0000000000000109: 75 06              jne         0000000000000111
  000000000000010B: 66 83 CB 20        or          bx,20h
  000000000000010F: EB 08              jmp         0000000000000119
  0000000000000111: 3C 10              cmp         al,10h
  0000000000000113: 75 04              jne         0000000000000119
  0000000000000115: 66 83 CB 30        or          bx,30h
  0000000000000119: 44 38 6A 1D        cmp         byte ptr [rdx+1Dh],r13b
  000000000000011D: 74 04              je          0000000000000123
  000000000000011F: 66 83 CB 40        or          bx,40h
  0000000000000123: 44 38 6A 1E        cmp         byte ptr [rdx+1Eh],r13b
  0000000000000127: 74 03              je          000000000000012C
  0000000000000129: 66 0B D9           or          bx,cx
  000000000000012C: 0F B6 42 22        movzx       eax,byte ptr [rdx+22h]
  0000000000000130: 3C 04              cmp         al,4
  0000000000000132: 74 22              je          0000000000000156
  0000000000000134: 3C 08              cmp         al,8
  0000000000000136: 75 07              jne         000000000000013F
  0000000000000138: B8 00 01 00 00     mov         eax,100h
  000000000000013D: EB 14              jmp         0000000000000153
  000000000000013F: 3C 0C              cmp         al,0Ch
  0000000000000141: 75 07              jne         000000000000014A
  0000000000000143: B8 00 02 00 00     mov         eax,200h
  0000000000000148: EB 09              jmp         0000000000000153
  000000000000014A: 3C 10              cmp         al,10h
  000000000000014C: 75 08              jne         0000000000000156
  000000000000014E: B8 00 03 00 00     mov         eax,300h
  0000000000000153: 66 0B D8           or          bx,ax
  0000000000000156: 44 38 6A 20        cmp         byte ptr [rdx+20h],r13b
  000000000000015A: 74 08              je          0000000000000164
  000000000000015C: B8 00 04 00 00     mov         eax,400h
  0000000000000161: 66 0B D8           or          bx,ax
  0000000000000164: 44 38 6A 21        cmp         byte ptr [rdx+21h],r13b
  0000000000000168: 74 04              je          000000000000016E
  000000000000016A: 66 41 0B D9        or          bx,r9w
  000000000000016E: 0F B6 42 25        movzx       eax,byte ptr [rdx+25h]
  0000000000000172: 3C 04              cmp         al,4
  0000000000000174: 74 20              je          0000000000000196
  0000000000000176: 3C 08              cmp         al,8
  0000000000000178: 75 06              jne         0000000000000180
  000000000000017A: 66 41 0B DA        or          bx,r10w
  000000000000017E: EB 16              jmp         0000000000000196
  0000000000000180: 3C 0C              cmp         al,0Ch
  0000000000000182: 75 06              jne         000000000000018A
  0000000000000184: 66 41 0B DB        or          bx,r11w
  0000000000000188: EB 0C              jmp         0000000000000196
  000000000000018A: 3C 10              cmp         al,10h
  000000000000018C: 75 08              jne         0000000000000196
  000000000000018E: B8 00 30 00 00     mov         eax,3000h
  0000000000000193: 66 0B D8           or          bx,ax
  0000000000000196: 44 38 6A 23        cmp         byte ptr [rdx+23h],r13b
  000000000000019A: 74 03              je          000000000000019F
  000000000000019C: 66 0B DF           or          bx,di
  000000000000019F: 44 38 6A 24        cmp         byte ptr [rdx+24h],r13b
  00000000000001A3: 74 04              je          00000000000001A9
  00000000000001A5: 66 41 0B D8        or          bx,r8w
  00000000000001A9: 48 8D 4E 08        lea         rcx,[rsi+8]
  00000000000001AD: 4D 8B C1           mov         r8,r9
  00000000000001B0: 33 D2              xor         edx,edx
  00000000000001B2: E8 00 00 00 00     call        memset
  00000000000001B7: 48 83 C8 FF        or          rax,0FFFFFFFFFFFFFFFFh
  00000000000001BB: 66 44 89 76 08     mov         word ptr [rsi+8],r14w
  00000000000001C0: 48 8B C8           mov         rcx,rax
  00000000000001C3: C7 46 0A 03 04 10  mov         dword ptr [rsi+0Ah],60100403h
                    60
  00000000000001CA: C7 46 0E 00 08 A0  mov         dword ptr [rsi+0Eh],64A00800h
                    64
  00000000000001D1: 66 89 6E 12        mov         word ptr [rsi+12h],bp
  00000000000001D5: 66 89 5E 14        mov         word ptr [rsi+14h],bx
  00000000000001D9: C6 46 16 1A        mov         byte ptr [rsi+16h],1Ah
  00000000000001DD: 0F 1F 00           nop         dword ptr [rax]
  00000000000001E0: 48 FF C1           inc         rcx
  00000000000001E3: 45 38 2C 0F        cmp         byte ptr [r15+rcx],r13b
  00000000000001E7: 75 F7              jne         00000000000001E0
  00000000000001E9: FE C1              inc         cl
  00000000000001EB: 02 C9              add         cl,cl
  00000000000001ED: 88 4E 17           mov         byte ptr [rsi+17h],cl
  00000000000001F0: 80 C1 1A           add         cl,1Ah
  00000000000001F3: 88 4E 18           mov         byte ptr [rsi+18h],cl
  00000000000001F6: 48 FF C0           inc         rax
  00000000000001F9: 45 38 2C 04        cmp         byte ptr [r12+rax],r13b
  00000000000001FD: 75 F7              jne         00000000000001F6
  00000000000001FF: FE C0              inc         al
  0000000000000201: C6 46 1B 02        mov         byte ptr [rsi+1Bh],2
  0000000000000205: 02 C0              add         al,al
  0000000000000207: 88 46 19           mov         byte ptr [rsi+19h],al
  000000000000020A: 02 C1              add         al,cl
  000000000000020C: 88 46 1A           mov         byte ptr [rsi+1Ah],al
  000000000000020F: 0F B7 86 32 08 00  movzx       eax,word ptr [rsi+832h]
                    00
  0000000000000216: 66 85 C0           test        ax,ax
  0000000000000219: 74 05              je          0000000000000220
  000000000000021B: 0F B7 C8           movzx       ecx,ax
  000000000000021E: EB 05              jmp         0000000000000225
  0000000000000220: B9 46 00 00 00     mov         ecx,46h
  0000000000000225: 66 89 4E 20        mov         word ptr [rsi+20h],cx
  0000000000000229: 48 8D 56 22        lea         rdx,[rsi+22h]
  000000000000022D: 4D 8B C7           mov         r8,r15
  0000000000000230: 48 8B CE           mov         rcx,rsi
  0000000000000233: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000238: 48 0F BE 46 18     movsx       rax,byte ptr [rsi+18h]
  000000000000023D: 48 8D 56 08        lea         rdx,[rsi+8]
  0000000000000241: 48 03 D0           add         rdx,rax
  0000000000000244: 4D 8B C4           mov         r8,r12
  0000000000000247: 48 8B CE           mov         rcx,rsi
  000000000000024A: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  000000000000024F: 48 0F BE 46 1A     movsx       rax,byte ptr [rsi+1Ah]
  0000000000000254: 48 8D 56 08        lea         rdx,[rsi+8]
  0000000000000258: 4C 8D 05 00 00 00  lea         r8,[??_C@_00CNPNBAHC@?$AA@]
                    00
  000000000000025F: 48 03 D0           add         rdx,rax
  0000000000000262: 48 8B CE           mov         rcx,rsi
  0000000000000265: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  000000000000026A: 0F BE 56 18        movsx       edx,byte ptr [rsi+18h]
  000000000000026E: 0F BE 4E 16        movsx       ecx,byte ptr [rsi+16h]
  0000000000000272: 44 0F BE 46 1A     movsx       r8d,byte ptr [rsi+1Ah]
  0000000000000277: 89 96 38 08 00 00  mov         dword ptr [rsi+838h],edx
  000000000000027D: 80 CA 80           or          dl,80h
  0000000000000280: 89 8E 34 08 00 00  mov         dword ptr [rsi+834h],ecx
  0000000000000286: 80 C9 80           or          cl,80h
  0000000000000289: 88 56 18           mov         byte ptr [rsi+18h],dl
  000000000000028C: 44 89 86 3C 08 00  mov         dword ptr [rsi+83Ch],r8d
                    00
  0000000000000293: B8 02 03 00 00     mov         eax,302h
  0000000000000298: 88 4E 16           mov         byte ptr [rsi+16h],cl
  000000000000029B: 41 80 C8 80        or          r8b,80h
  000000000000029F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  00000000000002A4: 48 8B CE           mov         rcx,rsi
  00000000000002A7: 44 88 46 1A        mov         byte ptr [rsi+1Ah],r8b
  00000000000002AB: 66 89 44 24 50     mov         word ptr [rsp+50h],ax
  00000000000002B0: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  00000000000002B5: 33 D2              xor         edx,edx
  00000000000002B7: 48 8B CE           mov         rcx,rsi
  00000000000002BA: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  00000000000002BF: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000002C2: 48 8B CE           mov         rcx,rsi
  00000000000002C5: FF 50 08           call        qword ptr [rax+8]
  00000000000002C8: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  00000000000002CD: 48 8B 6C 24 60     mov         rbp,qword ptr [rsp+60h]
  00000000000002D2: 44 89 AE 0C 08 00  mov         dword ptr [rsi+80Ch],r13d
                    00
  00000000000002D9: 48 8B 74 24 68     mov         rsi,qword ptr [rsp+68h]
  00000000000002DE: 48 83 C4 20        add         rsp,20h
  00000000000002E2: 41 5F              pop         r15
  00000000000002E4: 41 5E              pop         r14
  00000000000002E6: 41 5D              pop         r13
  00000000000002E8: 41 5C              pop         r12
  00000000000002EA: 5F                 pop         rdi
  00000000000002EB: C3                 ret

?MoveStrings@TFtEE4232H@@UEAAXXZ (public: virtual void __cdecl TFtEE4232H::MoveStrings(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+0000000000000832h]
                    00
  000000000000000B: 4C 8B D9           mov         r11,rcx
  000000000000000E: B9 EF FF 00 00     mov         ecx,0FFEFh
  0000000000000013: 66 83 E8 56        sub         ax,56h
  0000000000000017: 66 85 C1           test        cx,ax
  000000000000001A: 0F 85 87 00 00 00  jne         00000000000000A7
  0000000000000020: 49 8D 43 22        lea         rax,[r11+22h]
  0000000000000024: 49 8D 93 88 00 00  lea         rdx,[r11+0000000000000088h]
                    00
  000000000000002B: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000030: 33 DB              xor         ebx,ebx
  0000000000000032: 4C 8B C2           mov         r8,rdx
  0000000000000035: 4C 8D 90 80 00 00  lea         r10,[rax+0000000000000080h]
                    00
  000000000000003C: 4C 2B C0           sub         r8,rax
  000000000000003F: 44 8B CB           mov         r9d,ebx
  0000000000000042: 49 FF C0           inc         r8
  0000000000000045: 49 D1 E8           shr         r8,1
  0000000000000048: 48 3B C2           cmp         rax,rdx
  000000000000004B: 48 8B D0           mov         rdx,rax
  000000000000004E: 4C 0F 47 C3        cmova       r8,rbx
  0000000000000052: 4D 85 C0           test        r8,r8
  0000000000000055: 74 1E              je          0000000000000075
  0000000000000057: 4C 2B D0           sub         r10,rax
  000000000000005A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000060: 0F B7 0A           movzx       ecx,word ptr [rdx]
  0000000000000063: 49 FF C1           inc         r9
  0000000000000066: 48 8D 52 02        lea         rdx,[rdx+2]
  000000000000006A: 66 41 89 4C 12 FE  mov         word ptr [r10+rdx-2],cx
  0000000000000070: 4D 3B C8           cmp         r9,r8
  0000000000000073: 72 EB              jb          0000000000000060
  0000000000000075: 48 8B CB           mov         rcx,rbx
  0000000000000078: 4D 85 C0           test        r8,r8
  000000000000007B: 74 12              je          000000000000008F
  000000000000007D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000080: 48 FF C1           inc         rcx
  0000000000000083: 66 89 18           mov         word ptr [rax],bx
  0000000000000086: 48 8D 40 02        lea         rax,[rax+2]
  000000000000008A: 49 3B C8           cmp         rcx,r8
  000000000000008D: 72 F1              jb          0000000000000080
  000000000000008F: 49 8B 03           mov         rax,qword ptr [r11]
  0000000000000092: 49 8B CB           mov         rcx,r11
  0000000000000095: 48 8B 5C 24 20     mov         rbx,qword ptr [rsp+20h]
  000000000000009A: 48 83 C4 28        add         rsp,28h
  000000000000009E: 48 FF 60 08        jmp         qword ptr [rax+8]
  00000000000000A2: 48 8B 5C 24 20     mov         rbx,qword ptr [rsp+20h]
  00000000000000A7: 48 83 C4 28        add         rsp,28h
  00000000000000AB: C3                 ret

?Program@TFtEE4232H@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE4232H::Program(void *,char *,char *,char *,char *)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 4C 89 48 20        mov         qword ptr [rax+20h],r9
  0000000000000007: 4C 89 40 18        mov         qword ptr [rax+18h],r8
  000000000000000B: 53                 push        rbx
  000000000000000C: 56                 push        rsi
  000000000000000D: 57                 push        rdi
  000000000000000E: 41 54              push        r12
  0000000000000010: 41 56              push        r14
  0000000000000012: 48 81 EC D0 00 00  sub         rsp,0D0h
                    00
  0000000000000019: 48 8B F1           mov         rsi,rcx
  000000000000001C: 33 C9              xor         ecx,ecx
  000000000000001E: 48 8B FA           mov         rdi,rdx
  0000000000000021: 44 0F B7 F1        movzx       r14d,cx
  0000000000000025: 44 0F B7 E1        movzx       r12d,cx
  0000000000000029: 0F B7 D9           movzx       ebx,cx
  000000000000002C: 4D 85 C0           test        r8,r8
  000000000000002F: 0F 84 0A 04 00 00  je          000000000000043F
  0000000000000035: 4D 85 C9           test        r9,r9
  0000000000000038: 0F 84 01 04 00 00  je          000000000000043F
  000000000000003E: 4C 89 68 D0        mov         qword ptr [rax-30h],r13
  0000000000000042: 4C 8B AC 24 20 01  mov         r13,qword ptr [rsp+120h]
                    00 00
  000000000000004A: 4D 85 ED           test        r13,r13
  000000000000004D: 0F 84 E5 03 00 00  je          0000000000000438
  0000000000000053: 66 39 4A 04        cmp         word ptr [rdx+4],cx
  0000000000000057: 0F 84 DB 03 00 00  je          0000000000000438
  000000000000005D: 66 39 4A 06        cmp         word ptr [rdx+6],cx
  0000000000000061: 0F 84 D1 03 00 00  je          0000000000000438
  0000000000000067: 48 89 68 08        mov         qword ptr [rax+8],rbp
  000000000000006B: BD 00 08 00 00     mov         ebp,800h
  0000000000000070: 48 8D 4E 08        lea         rcx,[rsi+8]
  0000000000000074: 33 D2              xor         edx,edx
  0000000000000076: 44 8B C5           mov         r8d,ebp
  0000000000000079: 4C 89 78 C8        mov         qword ptr [rax-38h],r15
  000000000000007D: E8 00 00 00 00     call        memset
  0000000000000082: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000085: 48 8B CE           mov         rcx,rsi
  0000000000000088: FF 50 40           call        qword ptr [rax+40h]
  000000000000008B: 4C 8B BC 24 28 01  mov         r15,qword ptr [rsp+128h]
                    00 00
  0000000000000093: 66 89 6E 0E        mov         word ptr [rsi+0Eh],bp
  0000000000000097: 48 83 CD FF        or          rbp,0FFFFFFFFFFFFFFFFh
  000000000000009B: 4D 85 FF           test        r15,r15
  000000000000009E: 74 12              je          00000000000000B2
  00000000000000A0: 48 8B C5           mov         rax,rbp
  00000000000000A3: 48 FF C0           inc         rax
  00000000000000A6: 41 80 3C 07 00     cmp         byte ptr [r15+rax],0
  00000000000000AB: 75 F6              jne         00000000000000A3
  00000000000000AD: 48 85 C0           test        rax,rax
  00000000000000B0: 75 41              jne         00000000000000F3
  00000000000000B2: 0F B7 47 06        movzx       eax,word ptr [rdi+6]
  00000000000000B6: 25 03 00 00 80     and         eax,80000003h
  00000000000000BB: 7D 07              jge         00000000000000C4
  00000000000000BD: FF C8              dec         eax
  00000000000000BF: 83 C8 FC           or          eax,0FFFFFFFCh
  00000000000000C2: FF C0              inc         eax
  00000000000000C4: 48 8B 94 24 18 01  mov         rdx,qword ptr [rsp+118h]
                    00 00
  00000000000000CC: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  00000000000000D1: 44 0F B7 C0        movzx       r8d,ax
  00000000000000D5: E8 00 00 00 00     call        ??0TSerialNumber@@QEAA@PEADG@Z
  00000000000000DA: 4C 8D 44 24 20     lea         r8,[rsp+20h]
  00000000000000DF: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  00000000000000E4: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  00000000000000E9: E8 00 00 00 00     call        ?Get@TSerialNumber@@QEAAHPEADPEAH@Z
  00000000000000EE: 4C 8D 7C 24 40     lea         r15,[rsp+40h]
  00000000000000F3: 0F B7 57 04        movzx       edx,word ptr [rdi+4]
  00000000000000F7: 48 8B CE           mov         rcx,rsi
  00000000000000FA: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QEAAXG@Z
  00000000000000FF: 0F B7 57 06        movzx       edx,word ptr [rdi+6]
  0000000000000103: 48 8B CE           mov         rcx,rsi
  0000000000000106: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QEAAXG@Z
  000000000000010B: 80 7F 08 00        cmp         byte ptr [rdi+8],0
  000000000000010F: 74 04              je          0000000000000115
  0000000000000111: 80 4E 12 08        or          byte ptr [rsi+12h],8
  0000000000000115: 0F B7 57 0A        movzx       edx,word ptr [rdi+0Ah]
  0000000000000119: 48 8B CE           mov         rcx,rsi
  000000000000011C: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QEAAXH@Z
  0000000000000121: 80 7F 0C 00        cmp         byte ptr [rdi+0Ch],0
  0000000000000125: B1 80              mov         cl,80h
  0000000000000127: 0F B6 C1           movzx       eax,cl
  000000000000012A: B9 C0 00 00 00     mov         ecx,0C0h
  000000000000012F: 0F 45 C1           cmovne      eax,ecx
  0000000000000132: 80 7F 0D 00        cmp         byte ptr [rdi+0Dh],0
  0000000000000136: 74 02              je          000000000000013A
  0000000000000138: 0C 20              or          al,20h
  000000000000013A: 0F B6 D0           movzx       edx,al
  000000000000013D: 48 8B CE           mov         rcx,rsi
  0000000000000140: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QEAAXE@Z
  0000000000000145: 80 7F 0E 00        cmp         byte ptr [rdi+0Eh],0
  0000000000000149: 74 04              je          000000000000014F
  000000000000014B: 80 4E 12 04        or          byte ptr [rsi+12h],4
  000000000000014F: 4C 8B 84 24 10 01  mov         r8,qword ptr [rsp+110h]
                    00 00
  0000000000000157: C6 46 16 1A        mov         byte ptr [rsi+16h],1Ah
  000000000000015B: 48 8B C5           mov         rax,rbp
  000000000000015E: 66 90              xchg        ax,ax
  0000000000000160: 48 FF C0           inc         rax
  0000000000000163: 41 80 3C 00 00     cmp         byte ptr [r8+rax],0
  0000000000000168: 75 F6              jne         0000000000000160
  000000000000016A: FE C0              inc         al
  000000000000016C: 48 8B CD           mov         rcx,rbp
  000000000000016F: 02 C0              add         al,al
  0000000000000171: 88 46 17           mov         byte ptr [rsi+17h],al
  0000000000000174: 04 1A              add         al,1Ah
  0000000000000176: 88 46 18           mov         byte ptr [rsi+18h],al
  0000000000000179: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000180: 48 FF C1           inc         rcx
  0000000000000183: 41 80 7C 0D 00 00  cmp         byte ptr [r13+rcx],0
  0000000000000189: 75 F5              jne         0000000000000180
  000000000000018B: FE C1              inc         cl
  000000000000018D: 02 C9              add         cl,cl
  000000000000018F: 88 4E 19           mov         byte ptr [rsi+19h],cl
  0000000000000192: 02 C8              add         cl,al
  0000000000000194: 88 4E 1A           mov         byte ptr [rsi+1Ah],cl
  0000000000000197: 66 0F 1F 84 00 00  nop         word ptr [rax+rax]
                    00 00 00
  00000000000001A0: 48 FF C5           inc         rbp
  00000000000001A3: 41 80 3C 2F 00     cmp         byte ptr [r15+rbp],0
  00000000000001A8: 75 F6              jne         00000000000001A0
  00000000000001AA: 40 FE C5           inc         bpl
  00000000000001AD: 48 8D 56 22        lea         rdx,[rsi+22h]
  00000000000001B1: 48 8B CE           mov         rcx,rsi
  00000000000001B4: 40 02 ED           add         bpl,bpl
  00000000000001B7: 40 88 6E 1B        mov         byte ptr [rsi+1Bh],bpl
  00000000000001BB: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001C0: 0F B6 46 18        movzx       eax,byte ptr [rsi+18h]
  00000000000001C4: 48 8D 56 08        lea         rdx,[rsi+8]
  00000000000001C8: 4D 8B C5           mov         r8,r13
  00000000000001CB: 48 8B CE           mov         rcx,rsi
  00000000000001CE: 48 03 D0           add         rdx,rax
  00000000000001D1: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001D6: 0F B6 46 1A        movzx       eax,byte ptr [rsi+1Ah]
  00000000000001DA: 48 8D 56 08        lea         rdx,[rsi+8]
  00000000000001DE: 48 03 D0           add         rdx,rax
  00000000000001E1: 4D 8B C7           mov         r8,r15
  00000000000001E4: 48 8B CE           mov         rcx,rsi
  00000000000001E7: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001EC: 0F BE 46 16        movsx       eax,byte ptr [rsi+16h]
  00000000000001F0: 48 8B CE           mov         rcx,rsi
  00000000000001F3: 89 86 34 08 00 00  mov         dword ptr [rsi+834h],eax
  00000000000001F9: 0F BE 46 18        movsx       eax,byte ptr [rsi+18h]
  00000000000001FD: 89 86 38 08 00 00  mov         dword ptr [rsi+838h],eax
  0000000000000203: 0F BE 46 1A        movsx       eax,byte ptr [rsi+1Ah]
  0000000000000207: 89 86 3C 08 00 00  mov         dword ptr [rsi+83Ch],eax
  000000000000020D: 80 4E 16 80        or          byte ptr [rsi+16h],80h
  0000000000000211: 80 4E 18 80        or          byte ptr [rsi+18h],80h
  0000000000000215: 80 4E 1A 80        or          byte ptr [rsi+1Ah],80h
  0000000000000219: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000021C: FF 50 48           call        qword ptr [rax+48h]
  000000000000021F: 80 7F 20 01        cmp         byte ptr [rdi+20h],1
  0000000000000223: 48 8B AC 24 00 01  mov         rbp,qword ptr [rsp+100h]
                    00 00
  000000000000022B: 75 06              jne         0000000000000233
  000000000000022D: 41 BE 08 00 00 00  mov         r14d,8
  0000000000000233: 80 7F 21 01        cmp         byte ptr [rdi+21h],1
  0000000000000237: 41 BB 00 08 00 00  mov         r11d,800h
  000000000000023D: 75 04              jne         0000000000000243
  000000000000023F: 66 45 0B F3        or          r14w,r11w
  0000000000000243: 80 7F 22 01        cmp         byte ptr [rdi+22h],1
  0000000000000247: BA 80 00 00 00     mov         edx,80h
  000000000000024C: 75 04              jne         0000000000000252
  000000000000024E: 66 44 0B F2        or          r14w,dx
  0000000000000252: 80 7F 23 01        cmp         byte ptr [rdi+23h],1
  0000000000000256: B9 00 80 00 00     mov         ecx,8000h
  000000000000025B: 75 04              jne         0000000000000261
  000000000000025D: 66 44 0B F1        or          r14w,cx
  0000000000000261: 66 44 89 76 08     mov         word ptr [rsi+8],r14w
  0000000000000266: 80 7F 1C 00        cmp         byte ptr [rdi+1Ch],0
  000000000000026A: 41 B9 00 10 00 00  mov         r9d,1000h
  0000000000000270: 74 03              je          0000000000000275
  0000000000000272: 45 8B E1           mov         r12d,r9d
  0000000000000275: 80 7F 1D 00        cmp         byte ptr [rdi+1Dh],0
  0000000000000279: 41 B8 00 20 00 00  mov         r8d,2000h
  000000000000027F: 74 04              je          0000000000000285
  0000000000000281: 66 45 0B E0        or          r12w,r8w
  0000000000000285: 80 7F 1E 00        cmp         byte ptr [rdi+1Eh],0
  0000000000000289: 41 BA 00 40 00 00  mov         r10d,4000h
  000000000000028F: 74 04              je          0000000000000295
  0000000000000291: 66 45 0B E2        or          r12w,r10w
  0000000000000295: 80 7F 1F 00        cmp         byte ptr [rdi+1Fh],0
  0000000000000299: 74 04              je          000000000000029F
  000000000000029B: 66 44 0B E1        or          r12w,cx
  000000000000029F: 66 44 09 66 12     or          word ptr [rsi+12h],r12w
  00000000000002A4: 0F B6 47 12        movzx       eax,byte ptr [rdi+12h]
  00000000000002A8: 3C 04              cmp         al,4
  00000000000002AA: 74 1F              je          00000000000002CB
  00000000000002AC: 3C 08              cmp         al,8
  00000000000002AE: 75 07              jne         00000000000002B7
  00000000000002B0: BB 01 00 00 00     mov         ebx,1
  00000000000002B5: EB 14              jmp         00000000000002CB
  00000000000002B7: 3C 0C              cmp         al,0Ch
  00000000000002B9: 75 07              jne         00000000000002C2
  00000000000002BB: BB 02 00 00 00     mov         ebx,2
  00000000000002C0: EB 09              jmp         00000000000002CB
  00000000000002C2: 3C 10              cmp         al,10h
  00000000000002C4: 75 05              jne         00000000000002CB
  00000000000002C6: BB 03 00 00 00     mov         ebx,3
  00000000000002CB: 80 7F 10 00        cmp         byte ptr [rdi+10h],0
  00000000000002CF: 74 04              je          00000000000002D5
  00000000000002D1: 66 83 CB 04        or          bx,4
  00000000000002D5: 80 7F 11 00        cmp         byte ptr [rdi+11h],0
  00000000000002D9: 74 04              je          00000000000002DF
  00000000000002DB: 66 83 CB 08        or          bx,8
  00000000000002DF: 0F B6 47 15        movzx       eax,byte ptr [rdi+15h]
  00000000000002E3: 3C 04              cmp         al,4
  00000000000002E5: 74 1C              je          0000000000000303
  00000000000002E7: 3C 08              cmp         al,8
  00000000000002E9: 75 06              jne         00000000000002F1
  00000000000002EB: 66 83 CB 10        or          bx,10h
  00000000000002EF: EB 12              jmp         0000000000000303
  00000000000002F1: 3C 0C              cmp         al,0Ch
  00000000000002F3: 75 06              jne         00000000000002FB
  00000000000002F5: 66 83 CB 20        or          bx,20h
  00000000000002F9: EB 08              jmp         0000000000000303
  00000000000002FB: 3C 10              cmp         al,10h
  00000000000002FD: 75 04              jne         0000000000000303
  00000000000002FF: 66 83 CB 30        or          bx,30h
  0000000000000303: 80 7F 13 00        cmp         byte ptr [rdi+13h],0
  0000000000000307: 74 04              je          000000000000030D
  0000000000000309: 66 83 CB 40        or          bx,40h
  000000000000030D: 80 7F 14 00        cmp         byte ptr [rdi+14h],0
  0000000000000311: 74 03              je          0000000000000316
  0000000000000313: 66 0B DA           or          bx,dx
  0000000000000316: 0F B6 47 18        movzx       eax,byte ptr [rdi+18h]
  000000000000031A: 3C 04              cmp         al,4
  000000000000031C: 74 22              je          0000000000000340
  000000000000031E: 3C 08              cmp         al,8
  0000000000000320: 75 07              jne         0000000000000329
  0000000000000322: B8 00 01 00 00     mov         eax,100h
  0000000000000327: EB 14              jmp         000000000000033D
  0000000000000329: 3C 0C              cmp         al,0Ch
  000000000000032B: 75 07              jne         0000000000000334
  000000000000032D: B8 00 02 00 00     mov         eax,200h
  0000000000000332: EB 09              jmp         000000000000033D
  0000000000000334: 3C 10              cmp         al,10h
  0000000000000336: 75 08              jne         0000000000000340
  0000000000000338: B8 00 03 00 00     mov         eax,300h
  000000000000033D: 66 0B D8           or          bx,ax
  0000000000000340: 80 7F 16 00        cmp         byte ptr [rdi+16h],0
  0000000000000344: 74 08              je          000000000000034E
  0000000000000346: B8 00 04 00 00     mov         eax,400h
  000000000000034B: 66 0B D8           or          bx,ax
  000000000000034E: 80 7F 17 00        cmp         byte ptr [rdi+17h],0
  0000000000000352: 74 04              je          0000000000000358
  0000000000000354: 66 41 0B DB        or          bx,r11w
  0000000000000358: 0F B6 47 1B        movzx       eax,byte ptr [rdi+1Bh]
  000000000000035C: 3C 04              cmp         al,4
  000000000000035E: 74 20              je          0000000000000380
  0000000000000360: 3C 08              cmp         al,8
  0000000000000362: 75 06              jne         000000000000036A
  0000000000000364: 66 41 0B D9        or          bx,r9w
  0000000000000368: EB 16              jmp         0000000000000380
  000000000000036A: 3C 0C              cmp         al,0Ch
  000000000000036C: 75 06              jne         0000000000000374
  000000000000036E: 66 41 0B D8        or          bx,r8w
  0000000000000372: EB 0C              jmp         0000000000000380
  0000000000000374: 3C 10              cmp         al,10h
  0000000000000376: 75 08              jne         0000000000000380
  0000000000000378: B8 00 30 00 00     mov         eax,3000h
  000000000000037D: 66 0B D8           or          bx,ax
  0000000000000380: 80 7F 19 00        cmp         byte ptr [rdi+19h],0
  0000000000000384: 74 04              je          000000000000038A
  0000000000000386: 66 41 0B DA        or          bx,r10w
  000000000000038A: 80 7F 1A 00        cmp         byte ptr [rdi+1Ah],0
  000000000000038E: 74 03              je          0000000000000393
  0000000000000390: 66 0B D9           or          bx,cx
  0000000000000393: 66 89 5E 14        mov         word ptr [rsi+14h],bx
  0000000000000397: 0F B7 86 32 08 00  movzx       eax,word ptr [rsi+832h]
                    00
  000000000000039E: 66 85 C0           test        ax,ax
  00000000000003A1: 74 05              je          00000000000003A8
  00000000000003A3: 0F B7 C8           movzx       ecx,ax
  00000000000003A6: EB 05              jmp         00000000000003AD
  00000000000003A8: B9 46 00 00 00     mov         ecx,46h
  00000000000003AD: 66 89 4E 20        mov         word ptr [rsi+20h],cx
  00000000000003B1: B8 02 03 00 00     mov         eax,302h
  00000000000003B6: 48 8D 94 24 08 01  lea         rdx,[rsp+108h]
                    00 00
  00000000000003BE: 48 8B CE           mov         rcx,rsi
  00000000000003C1: 66 89 84 24 08 01  mov         word ptr [rsp+108h],ax
                    00 00
  00000000000003C9: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  00000000000003CE: 33 D2              xor         edx,edx
  00000000000003D0: 48 8B CE           mov         rcx,rsi
  00000000000003D3: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  00000000000003D8: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000003DB: 48 8B CE           mov         rcx,rsi
  00000000000003DE: FF 50 08           call        qword ptr [rax+8]
  00000000000003E1: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000003E4: 33 DB              xor         ebx,ebx
  00000000000003E6: 48 8B CE           mov         rcx,rsi
  00000000000003E9: 89 9E 0C 08 00 00  mov         dword ptr [rsi+80Ch],ebx
  00000000000003EF: FF 50 40           call        qword ptr [rax+40h]
  00000000000003F2: 48 8D 4E 08        lea         rcx,[rsi+8]
  00000000000003F6: E8 00 00 00 00     call        ?Write@TEeData@@QEAAHXZ
  00000000000003FB: 85 C0              test        eax,eax
  00000000000003FD: 75 22              jne         0000000000000421
  00000000000003FF: 8D 43 0C           lea         eax,[rbx+0Ch]
  0000000000000402: 4C 8B BC 24 C0 00  mov         r15,qword ptr [rsp+0C0h]
                    00 00
  000000000000040A: 4C 8B AC 24 C8 00  mov         r13,qword ptr [rsp+0C8h]
                    00 00
  0000000000000412: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  0000000000000419: 41 5E              pop         r14
  000000000000041B: 41 5C              pop         r12
  000000000000041D: 5F                 pop         rdi
  000000000000041E: 5E                 pop         rsi
  000000000000041F: 5B                 pop         rbx
  0000000000000420: C3                 ret
  0000000000000421: 48 8D 4E 08        lea         rcx,[rsi+8]
  0000000000000425: E8 00 00 00 00     call        ?Confirm@TEeData@@QEAAHXZ
  000000000000042A: B9 0C 00 00 00     mov         ecx,0Ch
  000000000000042F: 85 C0              test        eax,eax
  0000000000000431: 0F 44 D9           cmove       ebx,ecx
  0000000000000434: 8B C3              mov         eax,ebx
  0000000000000436: EB CA              jmp         0000000000000402
  0000000000000438: B8 06 00 00 00     mov         eax,6
  000000000000043D: EB CB              jmp         000000000000040A
  000000000000043F: B8 06 00 00 00     mov         eax,6
  0000000000000444: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  000000000000044B: 41 5E              pop         r14
  000000000000044D: 41 5C              pop         r12
  000000000000044F: 5F                 pop         rdi
  0000000000000450: 5E                 pop         rsi
  0000000000000451: 5B                 pop         rbx
  0000000000000452: C3                 ret

?Read@TFtEE4232H@@UEAAHXZ (public: virtual int __cdecl TFtEE4232H::Read(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ?Read@TFtE2Data@@UEAAHXZ
  000000000000000E: 85 C0              test        eax,eax
  0000000000000010: 75 06              jne         0000000000000018
  0000000000000012: 48 83 C4 20        add         rsp,20h
  0000000000000016: 5B                 pop         rbx
  0000000000000017: C3                 ret
  0000000000000018: 0F B7 43 20        movzx       eax,word ptr [rbx+20h]
  000000000000001C: B9 EF FF 00 00     mov         ecx,0FFEFh
  0000000000000021: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  0000000000000028: 66 83 E8 56        sub         ax,56h
  000000000000002C: 66 85 C1           test        cx,ax
  000000000000002F: 74 15              je          0000000000000046
  0000000000000031: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],40h
                    40 00 00 00
  000000000000003B: B8 01 00 00 00     mov         eax,1
  0000000000000040: 48 83 C4 20        add         rsp,20h
  0000000000000044: 5B                 pop         rbx
  0000000000000045: C3                 ret
  0000000000000046: 83 AB 34 08 00 00  sub         dword ptr [rbx+834h],0FFFFFF80h
                    80
  000000000000004D: 83 AB 38 08 00 00  sub         dword ptr [rbx+838h],0FFFFFF80h
                    80
  0000000000000054: 83 AB 3C 08 00 00  sub         dword ptr [rbx+83Ch],0FFFFFF80h
                    80
  000000000000005B: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000065: B8 01 00 00 00     mov         eax,1
  000000000000006A: 48 83 C4 20        add         rsp,20h
  000000000000006E: 5B                 pop         rbx
  000000000000006F: C3                 ret

?ReadAndParse@TFtEE4232H@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE4232H::ReadAndParse(void *,char *,char *,char *,char *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 54              push        r12
  0000000000000016: 41 56              push        r14
  0000000000000018: 41 57              push        r15
  000000000000001A: 48 83 EC 60        sub         rsp,60h
  000000000000001E: 45 33 E4           xor         r12d,r12d
  0000000000000021: 49 8B E9           mov         rbp,r9
  0000000000000024: 4D 8B F8           mov         r15,r8
  0000000000000027: 48 8B DA           mov         rbx,rdx
  000000000000002A: 48 8B F9           mov         rdi,rcx
  000000000000002D: 48 85 D2           test        rdx,rdx
  0000000000000030: 0F 84 40 03 00 00  je          0000000000000376
  0000000000000036: 4D 85 C0           test        r8,r8
  0000000000000039: 0F 84 37 03 00 00  je          0000000000000376
  000000000000003F: 4D 85 C9           test        r9,r9
  0000000000000042: 0F 84 2E 03 00 00  je          0000000000000376
  0000000000000048: 48 8B B4 24 A0 00  mov         rsi,qword ptr [rsp+0A0h]
                    00 00
  0000000000000050: 48 85 F6           test        rsi,rsi
  0000000000000053: 0F 84 1D 03 00 00  je          0000000000000376
  0000000000000059: 4C 8B B4 24 A8 00  mov         r14,qword ptr [rsp+0A8h]
                    00 00
  0000000000000061: 4D 85 F6           test        r14,r14
  0000000000000064: 0F 84 0C 03 00 00  je          0000000000000376
  000000000000006A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000006D: FF 10              call        qword ptr [rax]
  000000000000006F: 85 C0              test        eax,eax
  0000000000000071: 0F 84 F4 02 00 00  je          000000000000036B
  0000000000000077: 0F B7 47 20        movzx       eax,word ptr [rdi+20h]
  000000000000007B: 48 8B CF           mov         rcx,rdi
  000000000000007E: 66 89 87 32 08 00  mov         word ptr [rdi+832h],ax
                    00
  0000000000000085: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  000000000000008A: 66 85 C0           test        ax,ax
  000000000000008D: 75 0E              jne         000000000000009D
  000000000000008F: 41 BC 0E 00 00 00  mov         r12d,0Eh
  0000000000000095: 41 8B C4           mov         eax,r12d
  0000000000000098: E9 DE 02 00 00     jmp         000000000000037B
  000000000000009D: B9 FF FF 00 00     mov         ecx,0FFFFh
  00000000000000A2: 66 3B C1           cmp         ax,cx
  00000000000000A5: 75 0E              jne         00000000000000B5
  00000000000000A7: 41 BC 0F 00 00 00  mov         r12d,0Fh
  00000000000000AD: 41 8B C4           mov         eax,r12d
  00000000000000B0: E9 C6 02 00 00     jmp         000000000000037B
  00000000000000B5: 48 8B CF           mov         rcx,rdi
  00000000000000B8: 66 89 43 04        mov         word ptr [rbx+4],ax
  00000000000000BC: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  00000000000000C1: 48 8B CF           mov         rcx,rdi
  00000000000000C4: 66 89 43 06        mov         word ptr [rbx+6],ax
  00000000000000C8: 0F BE 47 12        movsx       eax,byte ptr [rdi+12h]
  00000000000000CC: C1 E8 03           shr         eax,3
  00000000000000CF: 24 01              and         al,1
  00000000000000D1: 88 43 08           mov         byte ptr [rbx+8],al
  00000000000000D4: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  00000000000000D9: 48 8B CF           mov         rcx,rdi
  00000000000000DC: 66 89 43 0A        mov         word ptr [rbx+0Ah],ax
  00000000000000E0: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  00000000000000E5: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000EA: 0F B6 C8           movzx       ecx,al
  00000000000000ED: C0 E8 05           shr         al,5
  00000000000000F0: 24 01              and         al,1
  00000000000000F2: C0 E9 06           shr         cl,6
  00000000000000F5: 88 43 0D           mov         byte ptr [rbx+0Dh],al
  00000000000000F8: 80 E1 01           and         cl,1
  00000000000000FB: 88 4B 0C           mov         byte ptr [rbx+0Ch],cl
  00000000000000FE: 0F BE 47 12        movsx       eax,byte ptr [rdi+12h]
  0000000000000102: 48 8B CF           mov         rcx,rdi
  0000000000000105: C1 E8 02           shr         eax,2
  0000000000000108: 24 01              and         al,1
  000000000000010A: 88 43 0E           mov         byte ptr [rbx+0Eh],al
  000000000000010D: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  0000000000000112: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000117: 4C 2B F8           sub         r15,rax
  000000000000011A: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000011F: 90                 nop
  0000000000000120: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000123: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000127: 42 88 44 39 FF     mov         byte ptr [rcx+r15-1],al
  000000000000012C: 84 C0              test        al,al
  000000000000012E: 75 F0              jne         0000000000000120
  0000000000000130: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000135: 48 8B CF           mov         rcx,rdi
  0000000000000138: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  000000000000013D: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000142: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000147: 48 2B E8           sub         rbp,rax
  000000000000014A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000150: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000153: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000157: 88 44 29 FF        mov         byte ptr [rcx+rbp-1],al
  000000000000015B: 84 C0              test        al,al
  000000000000015D: 75 F1              jne         0000000000000150
  000000000000015F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000164: 48 8B CF           mov         rcx,rdi
  0000000000000167: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  000000000000016C: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000171: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000176: 48 2B F0           sub         rsi,rax
  0000000000000179: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000180: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000183: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000187: 88 44 31 FF        mov         byte ptr [rcx+rsi-1],al
  000000000000018B: 84 C0              test        al,al
  000000000000018D: 75 F1              jne         0000000000000180
  000000000000018F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000194: 48 8B CF           mov         rcx,rdi
  0000000000000197: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000019C: 48 8D 44 24 20     lea         rax,[rsp+20h]
  00000000000001A1: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000001A6: 4C 2B F0           sub         r14,rax
  00000000000001A9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001B0: 0F B6 01           movzx       eax,byte ptr [rcx]
  00000000000001B3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000001B7: 42 88 44 31 FF     mov         byte ptr [rcx+r14-1],al
  00000000000001BC: 84 C0              test        al,al
  00000000000001BE: 75 F0              jne         00000000000001B0
  00000000000001C0: 0F B7 4F 08        movzx       ecx,word ptr [rdi+8]
  00000000000001C4: 0F B6 C1           movzx       eax,cl
  00000000000001C7: C0 E8 03           shr         al,3
  00000000000001CA: 24 01              and         al,1
  00000000000001CC: 88 43 20           mov         byte ptr [rbx+20h],al
  00000000000001CF: 0F B7 C1           movzx       eax,cx
  00000000000001D2: 66 C1 E8 0B        shr         ax,0Bh
  00000000000001D6: 24 01              and         al,1
  00000000000001D8: 88 43 21           mov         byte ptr [rbx+21h],al
  00000000000001DB: 0F B6 C1           movzx       eax,cl
  00000000000001DE: 66 C1 E9 0F        shr         cx,0Fh
  00000000000001E2: C0 E8 07           shr         al,7
  00000000000001E5: 80 E1 01           and         cl,1
  00000000000001E8: 24 01              and         al,1
  00000000000001EA: 88 4B 23           mov         byte ptr [rbx+23h],cl
  00000000000001ED: 88 43 22           mov         byte ptr [rbx+22h],al
  00000000000001F0: 0F B7 4F 12        movzx       ecx,word ptr [rdi+12h]
  00000000000001F4: 0F B7 C1           movzx       eax,cx
  00000000000001F7: 66 C1 E8 0C        shr         ax,0Ch
  00000000000001FB: 24 01              and         al,1
  00000000000001FD: 88 43 1C           mov         byte ptr [rbx+1Ch],al
  0000000000000200: 0F B7 C1           movzx       eax,cx
  0000000000000203: 66 C1 E8 0D        shr         ax,0Dh
  0000000000000207: 24 01              and         al,1
  0000000000000209: 88 43 1D           mov         byte ptr [rbx+1Dh],al
  000000000000020C: 0F B7 C1           movzx       eax,cx
  000000000000020F: 66 C1 E9 0F        shr         cx,0Fh
  0000000000000213: 66 C1 E8 0E        shr         ax,0Eh
  0000000000000217: 80 E1 01           and         cl,1
  000000000000021A: 24 01              and         al,1
  000000000000021C: 88 4B 1F           mov         byte ptr [rbx+1Fh],cl
  000000000000021F: 88 43 1E           mov         byte ptr [rbx+1Eh],al
  0000000000000222: 0F B7 4F 14        movzx       ecx,word ptr [rdi+14h]
  0000000000000226: 0F B7 C1           movzx       eax,cx
  0000000000000229: 66 83 E0 03        and         ax,3
  000000000000022D: 66 83 F8 03        cmp         ax,3
  0000000000000231: 75 06              jne         0000000000000239
  0000000000000233: C6 43 12 10        mov         byte ptr [rbx+12h],10h
  0000000000000237: EB 21              jmp         000000000000025A
  0000000000000239: 66 83 F8 02        cmp         ax,2
  000000000000023D: 75 06              jne         0000000000000245
  000000000000023F: C6 43 12 0C        mov         byte ptr [rbx+12h],0Ch
  0000000000000243: EB 15              jmp         000000000000025A
  0000000000000245: 66 83 F8 01        cmp         ax,1
  0000000000000249: 75 06              jne         0000000000000251
  000000000000024B: C6 43 12 08        mov         byte ptr [rbx+12h],8
  000000000000024F: EB 09              jmp         000000000000025A
  0000000000000251: 66 85 C0           test        ax,ax
  0000000000000254: 75 04              jne         000000000000025A
  0000000000000256: C6 43 12 04        mov         byte ptr [rbx+12h],4
  000000000000025A: 0F B6 C1           movzx       eax,cl
  000000000000025D: C0 E8 02           shr         al,2
  0000000000000260: 24 01              and         al,1
  0000000000000262: 88 43 10           mov         byte ptr [rbx+10h],al
  0000000000000265: 0F B6 C1           movzx       eax,cl
  0000000000000268: C0 E8 03           shr         al,3
  000000000000026B: 24 01              and         al,1
  000000000000026D: 88 43 11           mov         byte ptr [rbx+11h],al
  0000000000000270: 0F B7 C1           movzx       eax,cx
  0000000000000273: 66 83 E0 30        and         ax,30h
  0000000000000277: 66 83 F8 30        cmp         ax,30h
  000000000000027B: 75 06              jne         0000000000000283
  000000000000027D: C6 43 15 10        mov         byte ptr [rbx+15h],10h
  0000000000000281: EB 21              jmp         00000000000002A4
  0000000000000283: 66 83 F8 20        cmp         ax,20h
  0000000000000287: 75 06              jne         000000000000028F
  0000000000000289: C6 43 15 0C        mov         byte ptr [rbx+15h],0Ch
  000000000000028D: EB 15              jmp         00000000000002A4
  000000000000028F: 66 83 F8 10        cmp         ax,10h
  0000000000000293: 75 06              jne         000000000000029B
  0000000000000295: C6 43 15 08        mov         byte ptr [rbx+15h],8
  0000000000000299: EB 09              jmp         00000000000002A4
  000000000000029B: 66 85 C0           test        ax,ax
  000000000000029E: 75 04              jne         00000000000002A4
  00000000000002A0: C6 43 15 04        mov         byte ptr [rbx+15h],4
  00000000000002A4: 0F B6 C1           movzx       eax,cl
  00000000000002A7: BA 00 03 00 00     mov         edx,300h
  00000000000002AC: C0 E8 06           shr         al,6
  00000000000002AF: 24 01              and         al,1
  00000000000002B1: 88 43 13           mov         byte ptr [rbx+13h],al
  00000000000002B4: 0F B6 C1           movzx       eax,cl
  00000000000002B7: C0 E8 07           shr         al,7
  00000000000002BA: 24 01              and         al,1
  00000000000002BC: 88 43 14           mov         byte ptr [rbx+14h],al
  00000000000002BF: 0F B7 C1           movzx       eax,cx
  00000000000002C2: 66 23 C2           and         ax,dx
  00000000000002C5: 66 3B C2           cmp         ax,dx
  00000000000002C8: 75 06              jne         00000000000002D0
  00000000000002CA: C6 43 18 10        mov         byte ptr [rbx+18h],10h
  00000000000002CE: EB 29              jmp         00000000000002F9
  00000000000002D0: BA 00 02 00 00     mov         edx,200h
  00000000000002D5: 66 3B C2           cmp         ax,dx
  00000000000002D8: 75 06              jne         00000000000002E0
  00000000000002DA: C6 43 18 0C        mov         byte ptr [rbx+18h],0Ch
  00000000000002DE: EB 19              jmp         00000000000002F9
  00000000000002E0: BA 00 01 00 00     mov         edx,100h
  00000000000002E5: 66 3B C2           cmp         ax,dx
  00000000000002E8: 75 06              jne         00000000000002F0
  00000000000002EA: C6 43 18 08        mov         byte ptr [rbx+18h],8
  00000000000002EE: EB 09              jmp         00000000000002F9
  00000000000002F0: 66 85 C0           test        ax,ax
  00000000000002F3: 75 04              jne         00000000000002F9
  00000000000002F5: C6 43 18 04        mov         byte ptr [rbx+18h],4
  00000000000002F9: BA 00 30 00 00     mov         edx,3000h
  00000000000002FE: 0F B7 C1           movzx       eax,cx
  0000000000000301: 66 C1 E8 0A        shr         ax,0Ah
  0000000000000305: 24 01              and         al,1
  0000000000000307: 88 43 16           mov         byte ptr [rbx+16h],al
  000000000000030A: 0F B7 C1           movzx       eax,cx
  000000000000030D: 66 C1 E8 0B        shr         ax,0Bh
  0000000000000311: 24 01              and         al,1
  0000000000000313: 88 43 17           mov         byte ptr [rbx+17h],al
  0000000000000316: 0F B7 C1           movzx       eax,cx
  0000000000000319: 66 23 C2           and         ax,dx
  000000000000031C: 66 3B C2           cmp         ax,dx
  000000000000031F: 75 06              jne         0000000000000327
  0000000000000321: C6 43 1B 10        mov         byte ptr [rbx+1Bh],10h
  0000000000000325: EB 29              jmp         0000000000000350
  0000000000000327: BA 00 20 00 00     mov         edx,2000h
  000000000000032C: 66 3B C2           cmp         ax,dx
  000000000000032F: 75 06              jne         0000000000000337
  0000000000000331: C6 43 1B 0C        mov         byte ptr [rbx+1Bh],0Ch
  0000000000000335: EB 19              jmp         0000000000000350
  0000000000000337: BA 00 10 00 00     mov         edx,1000h
  000000000000033C: 66 3B C2           cmp         ax,dx
  000000000000033F: 75 06              jne         0000000000000347
  0000000000000341: C6 43 1B 08        mov         byte ptr [rbx+1Bh],8
  0000000000000345: EB 09              jmp         0000000000000350
  0000000000000347: 66 85 C0           test        ax,ax
  000000000000034A: 75 04              jne         0000000000000350
  000000000000034C: C6 43 1B 04        mov         byte ptr [rbx+1Bh],4
  0000000000000350: 0F B7 C1           movzx       eax,cx
  0000000000000353: 66 C1 E9 0F        shr         cx,0Fh
  0000000000000357: 66 C1 E8 0E        shr         ax,0Eh
  000000000000035B: 24 01              and         al,1
  000000000000035D: 80 E1 01           and         cl,1
  0000000000000360: 88 43 19           mov         byte ptr [rbx+19h],al
  0000000000000363: 88 4B 1A           mov         byte ptr [rbx+1Ah],cl
  0000000000000366: 41 8B C4           mov         eax,r12d
  0000000000000369: EB 10              jmp         000000000000037B
  000000000000036B: 41 BC 0B 00 00 00  mov         r12d,0Bh
  0000000000000371: 41 8B C4           mov         eax,r12d
  0000000000000374: EB 05              jmp         000000000000037B
  0000000000000376: B8 06 00 00 00     mov         eax,6
  000000000000037B: 4C 8D 5C 24 60     lea         r11,[rsp+60h]
  0000000000000380: 49 8B 5B 20        mov         rbx,qword ptr [r11+20h]
  0000000000000384: 49 8B 6B 28        mov         rbp,qword ptr [r11+28h]
  0000000000000388: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  000000000000038C: 49 8B 7B 38        mov         rdi,qword ptr [r11+38h]
  0000000000000390: 49 8B E3           mov         rsp,r11
  0000000000000393: 41 5F              pop         r15
  0000000000000395: 41 5E              pop         r14
  0000000000000397: 41 5C              pop         r12
  0000000000000399: C3                 ret

?ReadAndParse@TFtEE4232H@@UEAAKPEAX@Z (public: virtual unsigned long __cdecl TFtEE4232H::ReadAndParse(void *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 60        sub         rsp,60h
  000000000000000A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000D: 48 8B DA           mov         rbx,rdx
  0000000000000010: 48 8B F9           mov         rdi,rcx
  0000000000000013: FF 10              call        qword ptr [rax]
  0000000000000015: 85 C0              test        eax,eax
  0000000000000017: 75 10              jne         0000000000000029
  0000000000000019: B8 0B 00 00 00     mov         eax,0Bh
  000000000000001E: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  0000000000000023: 48 83 C4 60        add         rsp,60h
  0000000000000027: 5F                 pop         rdi
  0000000000000028: C3                 ret
  0000000000000029: 48 8B CF           mov         rcx,rdi
  000000000000002C: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  0000000000000031: 66 85 C0           test        ax,ax
  0000000000000034: 75 10              jne         0000000000000046
  0000000000000036: B8 0E 00 00 00     mov         eax,0Eh
  000000000000003B: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  0000000000000040: 48 83 C4 60        add         rsp,60h
  0000000000000044: 5F                 pop         rdi
  0000000000000045: C3                 ret
  0000000000000046: B9 FF FF 00 00     mov         ecx,0FFFFh
  000000000000004B: 66 3B C1           cmp         ax,cx
  000000000000004E: 75 10              jne         0000000000000060
  0000000000000050: B8 0F 00 00 00     mov         eax,0Fh
  0000000000000055: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  000000000000005A: 48 83 C4 60        add         rsp,60h
  000000000000005E: 5F                 pop         rdi
  000000000000005F: C3                 ret
  0000000000000060: 48 8B CF           mov         rcx,rdi
  0000000000000063: 48 89 74 24 70     mov         qword ptr [rsp+70h],rsi
  0000000000000068: 66 89 43 0C        mov         word ptr [rbx+0Ch],ax
  000000000000006C: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  0000000000000071: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000076: 48 8B CF           mov         rcx,rdi
  0000000000000079: 66 89 43 0E        mov         word ptr [rbx+0Eh],ax
  000000000000007D: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  0000000000000082: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  0000000000000086: 48 85 C9           test        rcx,rcx
  0000000000000089: 74 17              je          00000000000000A2
  000000000000008B: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000090: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000093: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000097: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000009B: 88 41 FF           mov         byte ptr [rcx-1],al
  000000000000009E: 84 C0              test        al,al
  00000000000000A0: 75 EE              jne         0000000000000090
  00000000000000A2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000A7: 48 8B CF           mov         rcx,rdi
  00000000000000AA: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000AF: 48 8B 4B 18        mov         rcx,qword ptr [rbx+18h]
  00000000000000B3: 48 85 C9           test        rcx,rcx
  00000000000000B6: 74 1A              je          00000000000000D2
  00000000000000B8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000BD: 0F 1F 00           nop         dword ptr [rax]
  00000000000000C0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000C3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000C7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000CB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000CE: 84 C0              test        al,al
  00000000000000D0: 75 EE              jne         00000000000000C0
  00000000000000D2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000D7: 48 8B CF           mov         rcx,rdi
  00000000000000DA: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000DF: 48 8B 4B 20        mov         rcx,qword ptr [rbx+20h]
  00000000000000E3: 48 85 C9           test        rcx,rcx
  00000000000000E6: 74 1A              je          0000000000000102
  00000000000000E8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000ED: 0F 1F 00           nop         dword ptr [rax]
  00000000000000F0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000F3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000F7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000FB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000FE: 84 C0              test        al,al
  0000000000000100: 75 EE              jne         00000000000000F0
  0000000000000102: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000107: 48 8B CF           mov         rcx,rdi
  000000000000010A: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000010F: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  0000000000000113: 48 85 C9           test        rcx,rcx
  0000000000000116: 74 1A              je          0000000000000132
  0000000000000118: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  000000000000011D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000120: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000123: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000127: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000012B: 88 41 FF           mov         byte ptr [rcx-1],al
  000000000000012E: 84 C0              test        al,al
  0000000000000130: 75 EE              jne         0000000000000120
  0000000000000132: 48 8B CF           mov         rcx,rdi
  0000000000000135: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  000000000000013A: 48 8B CF           mov         rcx,rdi
  000000000000013D: 66 89 43 30        mov         word ptr [rbx+30h],ax
  0000000000000141: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QEAAGXZ
  0000000000000146: 33 F6              xor         esi,esi
  0000000000000148: 8B CE              mov         ecx,esi
  000000000000014A: 66 85 C0           test        ax,ax
  000000000000014D: 0F 94 C1           sete        cl
  0000000000000150: 66 89 4B 32        mov         word ptr [rbx+32h],cx
  0000000000000154: 48 8B CF           mov         rcx,rdi
  0000000000000157: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  000000000000015C: 48 89 73 38        mov         qword ptr [rbx+38h],rsi
  0000000000000160: 89 73 40           mov         dword ptr [rbx+40h],esi
  0000000000000163: 0F B6 C8           movzx       ecx,al
  0000000000000166: C0 E8 05           shr         al,5
  0000000000000169: 48 89 73 48        mov         qword ptr [rbx+48h],rsi
  000000000000016D: 24 01              and         al,1
  000000000000016F: C0 E9 06           shr         cl,6
  0000000000000172: 48 89 73 50        mov         qword ptr [rbx+50h],rsi
  0000000000000176: 0F B6 C0           movzx       eax,al
  0000000000000179: 80 E1 01           and         cl,1
  000000000000017C: 66 89 73 45        mov         word ptr [rbx+45h],si
  0000000000000180: 66 89 43 36        mov         word ptr [rbx+36h],ax
  0000000000000184: 0F B6 C9           movzx       ecx,cl
  0000000000000187: 40 88 73 47        mov         byte ptr [rbx+47h],sil
  000000000000018B: 66 89 4B 34        mov         word ptr [rbx+34h],cx
  000000000000018F: 40 88 73 44        mov         byte ptr [rbx+44h],sil
  0000000000000193: 89 73 65           mov         dword ptr [rbx+65h],esi
  0000000000000196: 48 89 73 58        mov         qword ptr [rbx+58h],rsi
  000000000000019A: 89 73 60           mov         dword ptr [rbx+60h],esi
  000000000000019D: 40 88 73 64        mov         byte ptr [rbx+64h],sil
  00000000000001A1: 48 89 73 75        mov         qword ptr [rbx+75h],rsi
  00000000000001A5: 66 89 73 6A        mov         word ptr [rbx+6Ah],si
  00000000000001A9: 40 88 73 69        mov         byte ptr [rbx+69h],sil
  00000000000001AD: 66 89 73 6D        mov         word ptr [rbx+6Dh],si
  00000000000001B1: 40 88 73 6C        mov         byte ptr [rbx+6Ch],sil
  00000000000001B5: 66 89 73 70        mov         word ptr [rbx+70h],si
  00000000000001B9: 40 88 73 6F        mov         byte ptr [rbx+6Fh],sil
  00000000000001BD: 66 89 73 73        mov         word ptr [rbx+73h],si
  00000000000001C1: 40 88 73 72        mov         byte ptr [rbx+72h],sil
  00000000000001C5: 0F B7 4F 08        movzx       ecx,word ptr [rdi+8]
  00000000000001C9: 0F B6 C1           movzx       eax,cl
  00000000000001CC: C0 E8 03           shr         al,3
  00000000000001CF: 24 01              and         al,1
  00000000000001D1: 88 83 90 00 00 00  mov         byte ptr [rbx+90h],al
  00000000000001D7: 0F B7 C1           movzx       eax,cx
  00000000000001DA: 66 C1 E8 0B        shr         ax,0Bh
  00000000000001DE: 24 01              and         al,1
  00000000000001E0: 88 83 91 00 00 00  mov         byte ptr [rbx+91h],al
  00000000000001E6: 0F B6 C1           movzx       eax,cl
  00000000000001E9: 66 C1 E9 0F        shr         cx,0Fh
  00000000000001ED: C0 E8 07           shr         al,7
  00000000000001F0: 80 E1 01           and         cl,1
  00000000000001F3: 24 01              and         al,1
  00000000000001F5: 88 8B 93 00 00 00  mov         byte ptr [rbx+93h],cl
  00000000000001FB: 88 83 92 00 00 00  mov         byte ptr [rbx+92h],al
  0000000000000201: 0F B7 4F 12        movzx       ecx,word ptr [rdi+12h]
  0000000000000205: 0F B6 C1           movzx       eax,cl
  0000000000000208: C0 E8 02           shr         al,2
  000000000000020B: 24 01              and         al,1
  000000000000020D: 88 43 7E           mov         byte ptr [rbx+7Eh],al
  0000000000000210: 0F B6 C1           movzx       eax,cl
  0000000000000213: C0 E8 03           shr         al,3
  0000000000000216: 24 01              and         al,1
  0000000000000218: 88 43 7F           mov         byte ptr [rbx+7Fh],al
  000000000000021B: 0F B7 C1           movzx       eax,cx
  000000000000021E: 66 C1 E8 0C        shr         ax,0Ch
  0000000000000222: 24 01              and         al,1
  0000000000000224: 88 83 8C 00 00 00  mov         byte ptr [rbx+8Ch],al
  000000000000022A: 0F B7 C1           movzx       eax,cx
  000000000000022D: 66 C1 E8 0D        shr         ax,0Dh
  0000000000000231: 24 01              and         al,1
  0000000000000233: 88 83 8D 00 00 00  mov         byte ptr [rbx+8Dh],al
  0000000000000239: 0F B7 C1           movzx       eax,cx
  000000000000023C: 66 C1 E9 0F        shr         cx,0Fh
  0000000000000240: 66 C1 E8 0E        shr         ax,0Eh
  0000000000000244: 24 01              and         al,1
  0000000000000246: 80 E1 01           and         cl,1
  0000000000000249: 88 8B 8F 00 00 00  mov         byte ptr [rbx+8Fh],cl
  000000000000024F: 88 83 8E 00 00 00  mov         byte ptr [rbx+8Eh],al
  0000000000000255: 0F B7 4F 14        movzx       ecx,word ptr [rdi+14h]
  0000000000000259: 8D 56 04           lea         edx,[rsi+4]
  000000000000025C: 44 8D 4E 08        lea         r9d,[rsi+8]
  0000000000000260: 48 8B 74 24 70     mov         rsi,qword ptr [rsp+70h]
  0000000000000265: 0F B6 C1           movzx       eax,cl
  0000000000000268: 24 03              and         al,3
  000000000000026A: 3C 03              cmp         al,3
  000000000000026C: 75 09              jne         0000000000000277
  000000000000026E: C6 83 82 00 00 00  mov         byte ptr [rbx+82h],10h
                    10
  0000000000000275: EB 1D              jmp         0000000000000294
  0000000000000277: F6 C1 02           test        cl,2
  000000000000027A: 74 09              je          0000000000000285
  000000000000027C: C6 83 82 00 00 00  mov         byte ptr [rbx+82h],0Ch
                    0C
  0000000000000283: EB 0F              jmp         0000000000000294
  0000000000000285: F6 C1 01           test        cl,1
  0000000000000288: 8B C2              mov         eax,edx
  000000000000028A: 41 0F 45 C1        cmovne      eax,r9d
  000000000000028E: 88 83 82 00 00 00  mov         byte ptr [rbx+82h],al
  0000000000000294: 0F B6 C1           movzx       eax,cl
  0000000000000297: C0 E8 02           shr         al,2
  000000000000029A: 24 01              and         al,1
  000000000000029C: 88 83 80 00 00 00  mov         byte ptr [rbx+80h],al
  00000000000002A2: 0F B6 C1           movzx       eax,cl
  00000000000002A5: C0 E8 03           shr         al,3
  00000000000002A8: 24 01              and         al,1
  00000000000002AA: 88 83 81 00 00 00  mov         byte ptr [rbx+81h],al
  00000000000002B0: 0F B6 C1           movzx       eax,cl
  00000000000002B3: 24 30              and         al,30h
  00000000000002B5: 3C 30              cmp         al,30h
  00000000000002B7: 75 09              jne         00000000000002C2
  00000000000002B9: C6 83 85 00 00 00  mov         byte ptr [rbx+85h],10h
                    10
  00000000000002C0: EB 1D              jmp         00000000000002DF
  00000000000002C2: F6 C1 20           test        cl,20h
  00000000000002C5: 74 09              je          00000000000002D0
  00000000000002C7: C6 83 85 00 00 00  mov         byte ptr [rbx+85h],0Ch
                    0C
  00000000000002CE: EB 0F              jmp         00000000000002DF
  00000000000002D0: F6 C1 10           test        cl,10h
  00000000000002D3: 8B C2              mov         eax,edx
  00000000000002D5: 41 0F 45 C1        cmovne      eax,r9d
  00000000000002D9: 88 83 85 00 00 00  mov         byte ptr [rbx+85h],al
  00000000000002DF: 0F B6 C1           movzx       eax,cl
  00000000000002E2: 41 B8 00 03 00 00  mov         r8d,300h
  00000000000002E8: C0 E8 06           shr         al,6
  00000000000002EB: 24 01              and         al,1
  00000000000002ED: 88 83 83 00 00 00  mov         byte ptr [rbx+83h],al
  00000000000002F3: 0F B6 C1           movzx       eax,cl
  00000000000002F6: C0 E8 07           shr         al,7
  00000000000002F9: 24 01              and         al,1
  00000000000002FB: 88 83 84 00 00 00  mov         byte ptr [rbx+84h],al
  0000000000000301: 0F B7 C1           movzx       eax,cx
  0000000000000304: 66 41 23 C0        and         ax,r8w
  0000000000000308: 66 41 3B C0        cmp         ax,r8w
  000000000000030C: 75 09              jne         0000000000000317
  000000000000030E: C6 83 88 00 00 00  mov         byte ptr [rbx+88h],10h
                    10
  0000000000000315: EB 27              jmp         000000000000033E
  0000000000000317: B8 00 02 00 00     mov         eax,200h
  000000000000031C: 66 85 C8           test        ax,cx
  000000000000031F: 74 09              je          000000000000032A
  0000000000000321: C6 83 88 00 00 00  mov         byte ptr [rbx+88h],0Ch
                    0C
  0000000000000328: EB 14              jmp         000000000000033E
  000000000000032A: B8 00 01 00 00     mov         eax,100h
  000000000000032F: 66 85 C8           test        ax,cx
  0000000000000332: 8B C2              mov         eax,edx
  0000000000000334: 41 0F 45 C1        cmovne      eax,r9d
  0000000000000338: 88 83 88 00 00 00  mov         byte ptr [rbx+88h],al
  000000000000033E: 41 B8 00 30 00 00  mov         r8d,3000h
  0000000000000344: 0F B7 C1           movzx       eax,cx
  0000000000000347: 66 C1 E8 0A        shr         ax,0Ah
  000000000000034B: 24 01              and         al,1
  000000000000034D: 88 83 86 00 00 00  mov         byte ptr [rbx+86h],al
  0000000000000353: 0F B7 C1           movzx       eax,cx
  0000000000000356: 66 C1 E8 0B        shr         ax,0Bh
  000000000000035A: 24 01              and         al,1
  000000000000035C: 88 83 87 00 00 00  mov         byte ptr [rbx+87h],al
  0000000000000362: 0F B7 C1           movzx       eax,cx
  0000000000000365: 66 41 23 C0        and         ax,r8w
  0000000000000369: 66 41 3B C0        cmp         ax,r8w
  000000000000036D: 75 09              jne         0000000000000378
  000000000000036F: C6 83 8B 00 00 00  mov         byte ptr [rbx+8Bh],10h
                    10
  0000000000000376: EB 25              jmp         000000000000039D
  0000000000000378: B8 00 20 00 00     mov         eax,2000h
  000000000000037D: 66 85 C8           test        ax,cx
  0000000000000380: 74 09              je          000000000000038B
  0000000000000382: C6 83 8B 00 00 00  mov         byte ptr [rbx+8Bh],0Ch
                    0C
  0000000000000389: EB 12              jmp         000000000000039D
  000000000000038B: B8 00 10 00 00     mov         eax,1000h
  0000000000000390: 66 85 C8           test        ax,cx
  0000000000000393: 41 0F 45 D1        cmovne      edx,r9d
  0000000000000397: 88 93 8B 00 00 00  mov         byte ptr [rbx+8Bh],dl
  000000000000039D: 0F B7 C1           movzx       eax,cx
  00000000000003A0: 66 C1 E9 0F        shr         cx,0Fh
  00000000000003A4: 66 C1 E8 0E        shr         ax,0Eh
  00000000000003A8: 80 E1 01           and         cl,1
  00000000000003AB: 24 01              and         al,1
  00000000000003AD: 88 83 89 00 00 00  mov         byte ptr [rbx+89h],al
  00000000000003B3: 88 8B 8A 00 00 00  mov         byte ptr [rbx+8Ah],cl
  00000000000003B9: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  00000000000003BE: 33 C0              xor         eax,eax
  00000000000003C0: 48 83 C4 60        add         rsp,60h
  00000000000003C4: 5F                 pop         rdi
  00000000000003C5: C3                 ret

?SetRomType@TFtEE4232H@@UEAAXXZ (public: virtual void __cdecl TFtEE4232H::SetRomType(void)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B D9           mov         rbx,rcx
  0000000000000017: 33 ED              xor         ebp,ebp
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: 66 89 6C 24 30     mov         word ptr [rsp+30h],bp
  0000000000000022: E8 00 00 00 00     call        ?Erase@TEeData@@QEAAHXZ
  0000000000000027: BE C0 00 00 00     mov         esi,0C0h
  000000000000002C: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000030: 44 8B C6           mov         r8d,esi
  0000000000000033: 8B D6              mov         edx,esi
  0000000000000035: E8 00 00 00 00     call        ?WriteWord@TEeData@@QEAAHKG@Z
  000000000000003A: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  000000000000003F: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000043: 33 D2              xor         edx,edx
  0000000000000045: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  000000000000004A: 66 39 74 24 30     cmp         word ptr [rsp+30h],si
  000000000000004F: 75 0E              jne         000000000000005F
  0000000000000051: B8 46 00 00 00     mov         eax,46h
  0000000000000056: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  000000000000005D: EB 68              jmp         00000000000000C7
  000000000000005F: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  0000000000000064: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000068: BA 40 00 00 00     mov         edx,40h
  000000000000006D: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  0000000000000072: 66 39 74 24 30     cmp         word ptr [rsp+30h],si
  0000000000000077: 75 18              jne         0000000000000091
  0000000000000079: B8 56 00 00 00     mov         eax,56h
  000000000000007E: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000088: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  000000000000008F: EB 4A              jmp         00000000000000DB
  0000000000000091: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  0000000000000096: 48 8D 4B 08        lea         rcx,[rbx+8]
  000000000000009A: 8B D6              mov         edx,esi
  000000000000009C: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  00000000000000A1: 66 39 74 24 30     cmp         word ptr [rsp+30h],si
  00000000000000A6: 75 18              jne         00000000000000C0
  00000000000000A8: B8 66 00 00 00     mov         eax,66h
  00000000000000AD: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  00000000000000B7: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  00000000000000BE: EB 1B              jmp         00000000000000DB
  00000000000000C0: 66 89 AB 32 08 00  mov         word ptr [rbx+832h],bp
                    00
  00000000000000C7: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],40h
                    40 00 00 00
  00000000000000D1: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  00000000000000DB: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000000E0: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  00000000000000E5: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  00000000000000EA: 48 83 C4 20        add         rsp,20h
  00000000000000EE: 5F                 pop         rdi
  00000000000000EF: C3                 ret

??0TFtEE232R@@QEAA@PEAUft_private_vars@@@Z (public: __cdecl TFtEE232R::TFtEE232R(struct ft_private_vars *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B DA           mov         rbx,rdx
  000000000000000D: 48 8B F9           mov         rdi,rcx
  0000000000000010: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAUft_private_vars@@@Z
  0000000000000015: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE232R@@6B@]
                    00
  000000000000001C: 48 89 9F 48 08 00  mov         qword ptr [rdi+848h],rbx
                    00
  0000000000000023: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000028: 48 89 07           mov         qword ptr [rdi],rax
  000000000000002B: C7 87 40 08 00 00  mov         dword ptr [rdi+840h],7Eh
                    7E 00 00 00
  0000000000000035: 48 8B C7           mov         rax,rdi
  0000000000000038: 48 83 C4 20        add         rsp,20h
  000000000000003C: 5F                 pop         rdi
  000000000000003D: C3                 ret

??0TFtEE232R@@QEAA@PEAX@Z (public: __cdecl TFtEE232R::TFtEE232R(void *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAX@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE232R@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: 48 8B C3           mov         rax,rbx
  000000000000001B: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??0TFtEE232R@@QEAA@XZ (public: __cdecl TFtEE232R::TFtEE232R(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@XZ
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE232R@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: 48 8B C3           mov         rax,rbx
  000000000000001B: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

?GetChipID@TFtEE232R@@QEAAKPEAK@Z (public: unsigned long __cdecl TFtEE232R::GetChipID(unsigned long *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 59 08        lea         rbx,[rcx+8]
  000000000000000E: 48 8B FA           mov         rdi,rdx
  0000000000000011: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  0000000000000016: 48 8B CB           mov         rcx,rbx
  0000000000000019: BA 43 00 00 00     mov         edx,43h
  000000000000001E: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  0000000000000023: 85 C0              test        eax,eax
  0000000000000025: 74 34              je          000000000000005B
  0000000000000027: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  000000000000002C: BA 44 00 00 00     mov         edx,44h
  0000000000000031: 48 8B CB           mov         rcx,rbx
  0000000000000034: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  0000000000000039: 85 C0              test        eax,eax
  000000000000003B: 74 1E              je          000000000000005B
  000000000000003D: 0F B7 44 24 40     movzx       eax,word ptr [rsp+40h]
  0000000000000042: 0F B7 4C 24 30     movzx       ecx,word ptr [rsp+30h]
  0000000000000047: C1 E1 10           shl         ecx,10h
  000000000000004A: 0B C8              or          ecx,eax
  000000000000004C: 33 C0              xor         eax,eax
  000000000000004E: 89 0F              mov         dword ptr [rdi],ecx
  0000000000000050: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  0000000000000055: 48 83 C4 20        add         rsp,20h
  0000000000000059: 5F                 pop         rdi
  000000000000005A: C3                 ret
  000000000000005B: B8 0B 00 00 00     mov         eax,0Bh
  0000000000000060: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  0000000000000065: 48 83 C4 20        add         rsp,20h
  0000000000000069: 5F                 pop         rdi
  000000000000006A: C3                 ret

?GetChipType@TFtEE232R@@QEAAKPEAK@Z (public: unsigned long __cdecl TFtEE232R::GetChipType(unsigned long *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B DA           mov         rbx,rdx
  0000000000000009: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  000000000000000E: 48 83 C1 08        add         rcx,8
  0000000000000012: BA 42 00 00 00     mov         edx,42h
  0000000000000017: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  000000000000001C: 85 C0              test        eax,eax
  000000000000001E: 74 0F              je          000000000000002F
  0000000000000020: 0F B7 44 24 30     movzx       eax,word ptr [rsp+30h]
  0000000000000025: 89 03              mov         dword ptr [rbx],eax
  0000000000000027: 33 C0              xor         eax,eax
  0000000000000029: 48 83 C4 20        add         rsp,20h
  000000000000002D: 5B                 pop         rbx
  000000000000002E: C3                 ret
  000000000000002F: B8 0B 00 00 00     mov         eax,0Bh
  0000000000000034: 48 83 C4 20        add         rsp,20h
  0000000000000038: 5B                 pop         rbx
  0000000000000039: C3                 ret

?Init@TFtEE232R@@UEAAXPEAX@Z (public: virtual void __cdecl TFtEE232R::Init(void *)):
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 48 89 6C 24 20     mov         qword ptr [rsp+20h],rbp
  000000000000000A: 56                 push        rsi
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 56              push        r14
  000000000000000E: 48 83 EC 20        sub         rsp,20h
  0000000000000012: 48 8B 2A           mov         rbp,qword ptr [rdx]
  0000000000000015: 4C 8B 72 08        mov         r14,qword ptr [rdx+8]
  0000000000000019: 48 8B FA           mov         rdi,rdx
  000000000000001C: 48 8B D9           mov         rbx,rcx
  000000000000001F: 33 D2              xor         edx,edx
  0000000000000021: 41 B8 00 08 00 00  mov         r8d,800h
  0000000000000027: 48 83 C1 08        add         rcx,8
  000000000000002B: E8 00 00 00 00     call        memset
  0000000000000030: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  0000000000000035: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000039: BA 42 00 00 00     mov         edx,42h
  000000000000003E: C6 43 08 00        mov         byte ptr [rbx+8],0
  0000000000000042: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  0000000000000047: 85 C0              test        eax,eax
  0000000000000049: 74 14              je          000000000000005F
  000000000000004B: 0F B7 44 24 40     movzx       eax,word ptr [rsp+40h]
  0000000000000050: A8 01              test        al,1
  0000000000000052: 74 0B              je          000000000000005F
  0000000000000054: 3D FF FF 00 00     cmp         eax,0FFFFh
  0000000000000059: 74 04              je          000000000000005F
  000000000000005B: 80 4B 08 01        or          byte ptr [rbx+8],1
  000000000000005F: 80 7F 18 00        cmp         byte ptr [rdi+18h],0
  0000000000000063: 74 04              je          0000000000000069
  0000000000000065: 80 4B 08 02        or          byte ptr [rbx+8],2
  0000000000000069: 80 7F 19 00        cmp         byte ptr [rdi+19h],0
  000000000000006D: 74 04              je          0000000000000073
  000000000000006F: 80 4B 08 04        or          byte ptr [rbx+8],4
  0000000000000073: 80 7F 2A 00        cmp         byte ptr [rdi+2Ah],0
  0000000000000077: 74 04              je          000000000000007D
  0000000000000079: 80 4B 08 08        or          byte ptr [rbx+8],8
  000000000000007D: 0F B6 47 1A        movzx       eax,byte ptr [rdi+1Ah]
  0000000000000081: C6 43 12 00        mov         byte ptr [rbx+12h],0
  0000000000000085: C7 43 0A 03 04 01  mov         dword ptr [rbx+0Ah],60010403h
                    60
  000000000000008C: 88 43 09           mov         byte ptr [rbx+9],al
  000000000000008F: 0F B6 43 12        movzx       eax,byte ptr [rbx+12h]
  0000000000000093: C7 43 0E 00 06 A0  mov         dword ptr [rbx+0Eh],2DA00600h
                    2D
  000000000000009A: 80 7F 1B 00        cmp         byte ptr [rdi+1Bh],0
  000000000000009E: B9 04 00 00 00     mov         ecx,4
  00000000000000A3: 0F 45 C1           cmovne      eax,ecx
  00000000000000A6: 88 43 12           mov         byte ptr [rbx+12h],al
  00000000000000A9: 80 7F 1C 00        cmp         byte ptr [rdi+1Ch],0
  00000000000000AD: 74 04              je          00000000000000B3
  00000000000000AF: 80 4B 12 08        or          byte ptr [rbx+12h],8
  00000000000000B3: C6 43 13 00        mov         byte ptr [rbx+13h],0
  00000000000000B7: 80 7F 1D 00        cmp         byte ptr [rdi+1Dh],0
  00000000000000BB: 0F B6 43 13        movzx       eax,byte ptr [rbx+13h]
  00000000000000BF: B9 01 00 00 00     mov         ecx,1
  00000000000000C4: 0F 45 C1           cmovne      eax,ecx
  00000000000000C7: 88 43 13           mov         byte ptr [rbx+13h],al
  00000000000000CA: 80 7F 1E 00        cmp         byte ptr [rdi+1Eh],0
  00000000000000CE: 74 04              je          00000000000000D4
  00000000000000D0: 80 4B 13 02        or          byte ptr [rbx+13h],2
  00000000000000D4: 80 7F 1F 00        cmp         byte ptr [rdi+1Fh],0
  00000000000000D8: 74 04              je          00000000000000DE
  00000000000000DA: 80 4B 13 04        or          byte ptr [rbx+13h],4
  00000000000000DE: 80 7F 20 00        cmp         byte ptr [rdi+20h],0
  00000000000000E2: 74 04              je          00000000000000E8
  00000000000000E4: 80 4B 13 08        or          byte ptr [rbx+13h],8
  00000000000000E8: 80 7F 21 00        cmp         byte ptr [rdi+21h],0
  00000000000000EC: 74 04              je          00000000000000F2
  00000000000000EE: 80 4B 13 10        or          byte ptr [rbx+13h],10h
  00000000000000F2: 80 7F 22 00        cmp         byte ptr [rdi+22h],0
  00000000000000F6: 74 04              je          00000000000000FC
  00000000000000F8: 80 4B 13 20        or          byte ptr [rbx+13h],20h
  00000000000000FC: 80 7F 23 00        cmp         byte ptr [rdi+23h],0
  0000000000000100: 74 04              je          0000000000000106
  0000000000000102: 80 4B 13 40        or          byte ptr [rbx+13h],40h
  0000000000000106: 80 7F 24 00        cmp         byte ptr [rdi+24h],0
  000000000000010A: 74 04              je          0000000000000110
  000000000000010C: 80 4B 13 80        or          byte ptr [rbx+13h],80h
  0000000000000110: B8 00 02 00 00     mov         eax,200h
  0000000000000115: 48 83 C9 FF        or          rcx,0FFFFFFFFFFFFFFFFh
  0000000000000119: 66 89 43 14        mov         word ptr [rbx+14h],ax
  000000000000011D: C6 43 16 18        mov         byte ptr [rbx+16h],18h
  0000000000000121: 48 8B C1           mov         rax,rcx
  0000000000000124: 48 FF C0           inc         rax
  0000000000000127: 80 3C 28 00        cmp         byte ptr [rax+rbp],0
  000000000000012B: 75 F7              jne         0000000000000124
  000000000000012D: FE C0              inc         al
  000000000000012F: 02 C0              add         al,al
  0000000000000131: 88 43 17           mov         byte ptr [rbx+17h],al
  0000000000000134: 04 18              add         al,18h
  0000000000000136: 88 43 18           mov         byte ptr [rbx+18h],al
  0000000000000139: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000140: 48 FF C1           inc         rcx
  0000000000000143: 41 80 3C 0E 00     cmp         byte ptr [r14+rcx],0
  0000000000000148: 75 F6              jne         0000000000000140
  000000000000014A: FE C1              inc         cl
  000000000000014C: 48 8D 53 20        lea         rdx,[rbx+20h]
  0000000000000150: 4C 8B C5           mov         r8,rbp
  0000000000000153: 02 C9              add         cl,cl
  0000000000000155: C6 43 1B 02        mov         byte ptr [rbx+1Bh],2
  0000000000000159: 88 4B 19           mov         byte ptr [rbx+19h],cl
  000000000000015C: 02 C8              add         cl,al
  000000000000015E: 88 4B 1A           mov         byte ptr [rbx+1Ah],cl
  0000000000000161: 48 8B CB           mov         rcx,rbx
  0000000000000164: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000169: 48 0F BE 43 18     movsx       rax,byte ptr [rbx+18h]
  000000000000016E: 48 8D 53 08        lea         rdx,[rbx+8]
  0000000000000172: 48 03 D0           add         rdx,rax
  0000000000000175: 4D 8B C6           mov         r8,r14
  0000000000000178: 48 8B CB           mov         rcx,rbx
  000000000000017B: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000180: 48 0F BE 43 1A     movsx       rax,byte ptr [rbx+1Ah]
  0000000000000185: 48 8D 53 08        lea         rdx,[rbx+8]
  0000000000000189: 4C 8D 05 00 00 00  lea         r8,[??_C@_00CNPNBAHC@?$AA@]
                    00
  0000000000000190: 48 03 D0           add         rdx,rax
  0000000000000193: 48 8B CB           mov         rcx,rbx
  0000000000000196: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  000000000000019B: 0F BE 4B 16        movsx       ecx,byte ptr [rbx+16h]
  000000000000019F: 0F BE 53 18        movsx       edx,byte ptr [rbx+18h]
  00000000000001A3: 44 0F BE 43 1A     movsx       r8d,byte ptr [rbx+1Ah]
  00000000000001A8: 89 8B 34 08 00 00  mov         dword ptr [rbx+834h],ecx
  00000000000001AE: 89 93 38 08 00 00  mov         dword ptr [rbx+838h],edx
  00000000000001B4: 44 89 83 3C 08 00  mov         dword ptr [rbx+83Ch],r8d
                    00
  00000000000001BB: 80 C9 80           or          cl,80h
  00000000000001BE: 80 CA 80           or          dl,80h
  00000000000001C1: 88 4B 16           mov         byte ptr [rbx+16h],cl
  00000000000001C4: 88 53 18           mov         byte ptr [rbx+18h],dl
  00000000000001C7: 41 80 C8 80        or          r8b,80h
  00000000000001CB: 44 88 43 1A        mov         byte ptr [rbx+1Ah],r8b
  00000000000001CF: 0F B6 4F 25        movzx       ecx,byte ptr [rdi+25h]
  00000000000001D3: 48 8D 54 24 48     lea         rdx,[rsp+48h]
  00000000000001D8: 88 4B 1C           mov         byte ptr [rbx+1Ch],cl
  00000000000001DB: 0F B6 47 26        movzx       eax,byte ptr [rdi+26h]
  00000000000001DF: C0 E0 04           shl         al,4
  00000000000001E2: 0A C1              or          al,cl
  00000000000001E4: 88 43 1C           mov         byte ptr [rbx+1Ch],al
  00000000000001E7: 0F B6 4F 27        movzx       ecx,byte ptr [rdi+27h]
  00000000000001EB: 88 4B 1D           mov         byte ptr [rbx+1Dh],cl
  00000000000001EE: 0F B6 47 28        movzx       eax,byte ptr [rdi+28h]
  00000000000001F2: C0 E0 04           shl         al,4
  00000000000001F5: 0A C1              or          al,cl
  00000000000001F7: 48 8B CB           mov         rcx,rbx
  00000000000001FA: 88 43 1D           mov         byte ptr [rbx+1Dh],al
  00000000000001FD: 0F B6 47 29        movzx       eax,byte ptr [rdi+29h]
  0000000000000201: 88 43 1E           mov         byte ptr [rbx+1Eh],al
  0000000000000204: B8 02 03 00 00     mov         eax,302h
  0000000000000209: 66 89 44 24 48     mov         word ptr [rsp+48h],ax
  000000000000020E: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  0000000000000213: 33 D2              xor         edx,edx
  0000000000000215: 48 8B CB           mov         rcx,rbx
  0000000000000218: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  000000000000021D: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000220: 48 8B CB           mov         rcx,rbx
  0000000000000223: FF 50 08           call        qword ptr [rax+8]
  0000000000000226: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  000000000000022B: C7 83 0C 08 00 00  mov         dword ptr [rbx+80Ch],0
                    00 00 00 00
  0000000000000235: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  000000000000023A: 48 83 C4 20        add         rsp,20h
  000000000000023E: 41 5E              pop         r14
  0000000000000240: 5F                 pop         rdi
  0000000000000241: 5E                 pop         rsi
  0000000000000242: C3                 ret

?MoveStrings@TFtEE232R@@UEAAXXZ (public: virtual void __cdecl TFtEE232R::MoveStrings(void)):
  0000000000000000: C2 00 00           ret         0

?Program@TFtEE232R@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE232R::Program(void *,char *,char *,char *,char *)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 53                 push        rbx
  0000000000000004: 57                 push        rdi
  0000000000000005: 41 54              push        r12
  0000000000000007: 41 55              push        r13
  0000000000000009: 48 81 EC D8 00 00  sub         rsp,0D8h
                    00
  0000000000000010: 4D 8B E9           mov         r13,r9
  0000000000000013: 4D 8B E0           mov         r12,r8
  0000000000000016: 48 8B FA           mov         rdi,rdx
  0000000000000019: 48 8B D9           mov         rbx,rcx
  000000000000001C: 4D 85 C0           test        r8,r8
  000000000000001F: 0F 84 D2 03 00 00  je          00000000000003F7
  0000000000000025: 4D 85 C9           test        r9,r9
  0000000000000028: 0F 84 C9 03 00 00  je          00000000000003F7
  000000000000002E: 4C 89 78 C8        mov         qword ptr [rax-38h],r15
  0000000000000032: 4C 8B BC 24 20 01  mov         r15,qword ptr [rsp+120h]
                    00 00
  000000000000003A: 4D 85 FF           test        r15,r15
  000000000000003D: 0F 84 AD 03 00 00  je          00000000000003F0
  0000000000000043: 66 83 7A 04 00     cmp         word ptr [rdx+4],0
  0000000000000048: 0F 84 A2 03 00 00  je          00000000000003F0
  000000000000004E: 66 83 7A 06 00     cmp         word ptr [rdx+6],0
  0000000000000053: 0F 84 97 03 00 00  je          00000000000003F0
  0000000000000059: 80 7A 1A 0C        cmp         byte ptr [rdx+1Ah],0Ch
  000000000000005D: 0F 87 8D 03 00 00  ja          00000000000003F0
  0000000000000063: 80 7A 1B 0C        cmp         byte ptr [rdx+1Bh],0Ch
  0000000000000067: 0F 87 83 03 00 00  ja          00000000000003F0
  000000000000006D: 80 7A 1C 0C        cmp         byte ptr [rdx+1Ch],0Ch
  0000000000000071: 0F 87 79 03 00 00  ja          00000000000003F0
  0000000000000077: 80 7A 1D 0C        cmp         byte ptr [rdx+1Dh],0Ch
  000000000000007B: 0F 87 6F 03 00 00  ja          00000000000003F0
  0000000000000081: 80 7A 1E 0C        cmp         byte ptr [rdx+1Eh],0Ch
  0000000000000085: 0F 87 65 03 00 00  ja          00000000000003F0
  000000000000008B: 48 89 68 08        mov         qword ptr [rax+8],rbp
  000000000000008F: 48 89 70 D8        mov         qword ptr [rax-28h],rsi
  0000000000000093: 33 D2              xor         edx,edx
  0000000000000095: 41 B8 00 08 00 00  mov         r8d,800h
  000000000000009B: 48 83 C1 08        add         rcx,8
  000000000000009F: 4C 89 70 D0        mov         qword ptr [rax-30h],r14
  00000000000000A3: E8 00 00 00 00     call        memset
  00000000000000A8: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000AB: 48 8B CB           mov         rcx,rbx
  00000000000000AE: FF 50 40           call        qword ptr [rax+40h]
  00000000000000B1: 48 8B AC 24 28 01  mov         rbp,qword ptr [rsp+128h]
                    00 00
  00000000000000B9: B8 00 06 00 00     mov         eax,600h
  00000000000000BE: 48 83 CE FF        or          rsi,0FFFFFFFFFFFFFFFFh
  00000000000000C2: 66 89 43 0E        mov         word ptr [rbx+0Eh],ax
  00000000000000C6: 48 85 ED           test        rbp,rbp
  00000000000000C9: 74 13              je          00000000000000DE
  00000000000000CB: 48 8B C6           mov         rax,rsi
  00000000000000CE: 66 90              xchg        ax,ax
  00000000000000D0: 48 FF C0           inc         rax
  00000000000000D3: 80 3C 28 00        cmp         byte ptr [rax+rbp],0
  00000000000000D7: 75 F7              jne         00000000000000D0
  00000000000000D9: 48 85 C0           test        rax,rax
  00000000000000DC: 75 3F              jne         000000000000011D
  00000000000000DE: 0F B7 47 06        movzx       eax,word ptr [rdi+6]
  00000000000000E2: 25 03 00 00 80     and         eax,80000003h
  00000000000000E7: 7D 07              jge         00000000000000F0
  00000000000000E9: FF C8              dec         eax
  00000000000000EB: 83 C8 FC           or          eax,0FFFFFFFCh
  00000000000000EE: FF C0              inc         eax
  00000000000000F0: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  00000000000000F5: 44 0F B7 C0        movzx       r8d,ax
  00000000000000F9: 49 8B D5           mov         rdx,r13
  00000000000000FC: E8 00 00 00 00     call        ??0TSerialNumber@@QEAA@PEADG@Z
  0000000000000101: 4C 8D 84 24 10 01  lea         r8,[rsp+110h]
                    00 00
  0000000000000109: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  000000000000010E: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  0000000000000113: E8 00 00 00 00     call        ?Get@TSerialNumber@@QEAAHPEADPEAH@Z
  0000000000000118: 48 8D 6C 24 40     lea         rbp,[rsp+40h]
  000000000000011D: 0F B7 57 04        movzx       edx,word ptr [rdi+4]
  0000000000000121: 48 8B CB           mov         rcx,rbx
  0000000000000124: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QEAAXG@Z
  0000000000000129: 0F B7 57 06        movzx       edx,word ptr [rdi+6]
  000000000000012D: 48 8B CB           mov         rcx,rbx
  0000000000000130: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QEAAXG@Z
  0000000000000135: 80 7F 08 00        cmp         byte ptr [rdi+8],0
  0000000000000139: 74 04              je          000000000000013F
  000000000000013B: 80 4B 12 08        or          byte ptr [rbx+12h],8
  000000000000013F: 0F B7 57 0A        movzx       edx,word ptr [rdi+0Ah]
  0000000000000143: 48 8B CB           mov         rcx,rbx
  0000000000000146: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QEAAXH@Z
  000000000000014B: 80 7F 0C 00        cmp         byte ptr [rdi+0Ch],0
  000000000000014F: B1 80              mov         cl,80h
  0000000000000151: 0F B6 C1           movzx       eax,cl
  0000000000000154: B9 C0 00 00 00     mov         ecx,0C0h
  0000000000000159: 0F 45 C1           cmovne      eax,ecx
  000000000000015C: 80 7F 0D 00        cmp         byte ptr [rdi+0Dh],0
  0000000000000160: 74 02              je          0000000000000164
  0000000000000162: 0C 20              or          al,20h
  0000000000000164: 0F B6 D0           movzx       edx,al
  0000000000000167: 48 8B CB           mov         rcx,rbx
  000000000000016A: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QEAAXE@Z
  000000000000016F: 80 7F 0E 00        cmp         byte ptr [rdi+0Eh],0
  0000000000000173: 74 04              je          0000000000000179
  0000000000000175: 80 4B 12 04        or          byte ptr [rbx+12h],4
  0000000000000179: C6 43 16 18        mov         byte ptr [rbx+16h],18h
  000000000000017D: 48 8B C6           mov         rax,rsi
  0000000000000180: 48 FF C0           inc         rax
  0000000000000183: 41 80 3C 04 00     cmp         byte ptr [r12+rax],0
  0000000000000188: 75 F6              jne         0000000000000180
  000000000000018A: FE C0              inc         al
  000000000000018C: 48 8B CE           mov         rcx,rsi
  000000000000018F: 02 C0              add         al,al
  0000000000000191: 88 43 17           mov         byte ptr [rbx+17h],al
  0000000000000194: 04 18              add         al,18h
  0000000000000196: 88 43 18           mov         byte ptr [rbx+18h],al
  0000000000000199: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001A0: 48 FF C1           inc         rcx
  00000000000001A3: 41 80 3C 0F 00     cmp         byte ptr [r15+rcx],0
  00000000000001A8: 75 F6              jne         00000000000001A0
  00000000000001AA: FE C1              inc         cl
  00000000000001AC: 02 C9              add         cl,cl
  00000000000001AE: 88 4B 19           mov         byte ptr [rbx+19h],cl
  00000000000001B1: 02 C8              add         cl,al
  00000000000001B3: 88 4B 1A           mov         byte ptr [rbx+1Ah],cl
  00000000000001B6: 48 FF C6           inc         rsi
  00000000000001B9: 80 3C 2E 00        cmp         byte ptr [rsi+rbp],0
  00000000000001BD: 75 F7              jne         00000000000001B6
  00000000000001BF: 40 FE C6           inc         sil
  00000000000001C2: 48 8D 53 20        lea         rdx,[rbx+20h]
  00000000000001C6: 4D 8B C4           mov         r8,r12
  00000000000001C9: 40 02 F6           add         sil,sil
  00000000000001CC: 48 8B CB           mov         rcx,rbx
  00000000000001CF: 40 88 73 1B        mov         byte ptr [rbx+1Bh],sil
  00000000000001D3: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001D8: 0F B6 43 18        movzx       eax,byte ptr [rbx+18h]
  00000000000001DC: 48 8D 53 08        lea         rdx,[rbx+8]
  00000000000001E0: 4D 8B C7           mov         r8,r15
  00000000000001E3: 48 8B CB           mov         rcx,rbx
  00000000000001E6: 48 03 D0           add         rdx,rax
  00000000000001E9: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001EE: 0F B6 43 1A        movzx       eax,byte ptr [rbx+1Ah]
  00000000000001F2: 48 8D 53 08        lea         rdx,[rbx+8]
  00000000000001F6: 48 03 D0           add         rdx,rax
  00000000000001F9: 4C 8B C5           mov         r8,rbp
  00000000000001FC: 48 8B CB           mov         rcx,rbx
  00000000000001FF: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000204: 0F BE 43 16        movsx       eax,byte ptr [rbx+16h]
  0000000000000208: 48 8B CB           mov         rcx,rbx
  000000000000020B: 89 83 34 08 00 00  mov         dword ptr [rbx+834h],eax
  0000000000000211: 0F BE 43 18        movsx       eax,byte ptr [rbx+18h]
  0000000000000215: 89 83 38 08 00 00  mov         dword ptr [rbx+838h],eax
  000000000000021B: 0F BE 43 1A        movsx       eax,byte ptr [rbx+1Ah]
  000000000000021F: 89 83 3C 08 00 00  mov         dword ptr [rbx+83Ch],eax
  0000000000000225: 80 4B 16 80        or          byte ptr [rbx+16h],80h
  0000000000000229: 80 4B 18 80        or          byte ptr [rbx+18h],80h
  000000000000022D: 80 4B 1A 80        or          byte ptr [rbx+1Ah],80h
  0000000000000231: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000234: FF 50 48           call        qword ptr [rax+48h]
  0000000000000237: 80 7F 11 00        cmp         byte ptr [rdi+11h],0
  000000000000023B: 48 8B B4 24 D0 00  mov         rsi,qword ptr [rsp+0D0h]
                    00 00
  0000000000000243: 48 8B AC 24 00 01  mov         rbp,qword ptr [rsp+100h]
                    00 00
  000000000000024B: B8 00 40 00 00     mov         eax,4000h
  0000000000000250: 74 05              je          0000000000000257
  0000000000000252: B8 02 40 00 00     mov         eax,4002h
  0000000000000257: 80 7F 10 00        cmp         byte ptr [rdi+10h],0
  000000000000025B: 74 04              je          0000000000000261
  000000000000025D: 66 83 C8 04        or          ax,4
  0000000000000261: 80 7F 1F 00        cmp         byte ptr [rdi+1Fh],0
  0000000000000265: 75 04              jne         000000000000026B
  0000000000000267: 66 83 C8 08        or          ax,8
  000000000000026B: 4C 8D 84 24 10 01  lea         r8,[rsp+110h]
                    00 00
  0000000000000273: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000277: BA 42 00 00 00     mov         edx,42h
  000000000000027C: 66 89 43 08        mov         word ptr [rbx+8],ax
  0000000000000280: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  0000000000000285: 85 C0              test        eax,eax
  0000000000000287: 74 17              je          00000000000002A0
  0000000000000289: 0F B7 84 24 10 01  movzx       eax,word ptr [rsp+110h]
                    00 00
  0000000000000291: A8 01              test        al,1
  0000000000000293: 74 0B              je          00000000000002A0
  0000000000000295: 3D FF FF 00 00     cmp         eax,0FFFFh
  000000000000029A: 74 04              je          00000000000002A0
  000000000000029C: 80 4B 08 01        or          byte ptr [rbx+8],1
  00000000000002A0: C6 43 13 00        mov         byte ptr [rbx+13h],0
  00000000000002A4: 80 7F 12 00        cmp         byte ptr [rdi+12h],0
  00000000000002A8: 0F B6 43 13        movzx       eax,byte ptr [rbx+13h]
  00000000000002AC: B9 01 00 00 00     mov         ecx,1
  00000000000002B1: 0F 45 C1           cmovne      eax,ecx
  00000000000002B4: 88 43 13           mov         byte ptr [rbx+13h],al
  00000000000002B7: 80 7F 13 00        cmp         byte ptr [rdi+13h],0
  00000000000002BB: 74 04              je          00000000000002C1
  00000000000002BD: 80 4B 13 02        or          byte ptr [rbx+13h],2
  00000000000002C1: 80 7F 14 00        cmp         byte ptr [rdi+14h],0
  00000000000002C5: 74 04              je          00000000000002CB
  00000000000002C7: 80 4B 13 04        or          byte ptr [rbx+13h],4
  00000000000002CB: 80 7F 15 00        cmp         byte ptr [rdi+15h],0
  00000000000002CF: 74 04              je          00000000000002D5
  00000000000002D1: 80 4B 13 08        or          byte ptr [rbx+13h],8
  00000000000002D5: 80 7F 16 00        cmp         byte ptr [rdi+16h],0
  00000000000002D9: 74 04              je          00000000000002DF
  00000000000002DB: 80 4B 13 10        or          byte ptr [rbx+13h],10h
  00000000000002DF: 80 7F 17 00        cmp         byte ptr [rdi+17h],0
  00000000000002E3: 74 04              je          00000000000002E9
  00000000000002E5: 80 4B 13 20        or          byte ptr [rbx+13h],20h
  00000000000002E9: 80 7F 18 00        cmp         byte ptr [rdi+18h],0
  00000000000002ED: 74 04              je          00000000000002F3
  00000000000002EF: 80 4B 13 40        or          byte ptr [rbx+13h],40h
  00000000000002F3: 80 7F 19 00        cmp         byte ptr [rdi+19h],0
  00000000000002F7: 74 04              je          00000000000002FD
  00000000000002F9: 80 4B 13 80        or          byte ptr [rbx+13h],80h
  00000000000002FD: B8 00 02 00 00     mov         eax,200h
  0000000000000302: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000307: 66 89 43 14        mov         word ptr [rbx+14h],ax
  000000000000030B: 0F B6 4F 1A        movzx       ecx,byte ptr [rdi+1Ah]
  000000000000030F: 88 4B 1C           mov         byte ptr [rbx+1Ch],cl
  0000000000000312: 0F B6 47 1B        movzx       eax,byte ptr [rdi+1Bh]
  0000000000000316: C0 E0 04           shl         al,4
  0000000000000319: 0A C1              or          al,cl
  000000000000031B: 88 43 1C           mov         byte ptr [rbx+1Ch],al
  000000000000031E: 0F B6 4F 1C        movzx       ecx,byte ptr [rdi+1Ch]
  0000000000000322: 88 4B 1D           mov         byte ptr [rbx+1Dh],cl
  0000000000000325: 0F B6 47 1D        movzx       eax,byte ptr [rdi+1Dh]
  0000000000000329: C0 E0 04           shl         al,4
  000000000000032C: 0A C1              or          al,cl
  000000000000032E: 48 8B CB           mov         rcx,rbx
  0000000000000331: 88 43 1D           mov         byte ptr [rbx+1Dh],al
  0000000000000334: 0F B6 47 1E        movzx       eax,byte ptr [rdi+1Eh]
  0000000000000338: 88 43 1E           mov         byte ptr [rbx+1Eh],al
  000000000000033B: B8 02 03 00 00     mov         eax,302h
  0000000000000340: 66 89 44 24 20     mov         word ptr [rsp+20h],ax
  0000000000000345: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  000000000000034A: 33 D2              xor         edx,edx
  000000000000034C: 48 8B CB           mov         rcx,rbx
  000000000000034F: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  0000000000000354: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000357: 48 8B CB           mov         rcx,rbx
  000000000000035A: FF 50 08           call        qword ptr [rax+8]
  000000000000035D: 48 8B 8B 48 08 00  mov         rcx,qword ptr [rbx+848h]
                    00
  0000000000000364: 48 8D 94 24 08 01  lea         rdx,[rsp+108h]
                    00 00
  000000000000036C: C7 83 0C 08 00 00  mov         dword ptr [rbx+80Ch],0
                    00 00 00 00
  0000000000000376: E8 00 00 00 00     call        FT_GetLatencyTimer
  000000000000037B: 48 8B 8B 48 08 00  mov         rcx,qword ptr [rbx+848h]
                    00
  0000000000000382: B2 77              mov         dl,77h
  0000000000000384: E8 00 00 00 00     call        FT_SetLatencyTimer
  0000000000000389: 48 8D 4B 08        lea         rcx,[rbx+8]
  000000000000038D: E8 00 00 00 00     call        ?Erase@TEeData@@QEAAHXZ
  0000000000000392: 85 C0              test        eax,eax
  0000000000000394: 75 23              jne         00000000000003B9
  0000000000000396: B8 0D 00 00 00     mov         eax,0Dh
  000000000000039B: 4C 8B B4 24 C8 00  mov         r14,qword ptr [rsp+0C8h]
                    00 00
  00000000000003A3: 4C 8B BC 24 C0 00  mov         r15,qword ptr [rsp+0C0h]
                    00 00
  00000000000003AB: 48 81 C4 D8 00 00  add         rsp,0D8h
                    00
  00000000000003B2: 41 5D              pop         r13
  00000000000003B4: 41 5C              pop         r12
  00000000000003B6: 5F                 pop         rdi
  00000000000003B7: 5B                 pop         rbx
  00000000000003B8: C3                 ret
  00000000000003B9: 48 8D 4B 08        lea         rcx,[rbx+8]
  00000000000003BD: E8 00 00 00 00     call        ?Write@TEeData@@QEAAHXZ
  00000000000003C2: 85 C0              test        eax,eax
  00000000000003C4: 74 0D              je          00000000000003D3
  00000000000003C6: 48 8D 4B 08        lea         rcx,[rbx+8]
  00000000000003CA: E8 00 00 00 00     call        ?Confirm@TEeData@@QEAAHXZ
  00000000000003CF: 85 C0              test        eax,eax
  00000000000003D1: 75 07              jne         00000000000003DA
  00000000000003D3: B8 0C 00 00 00     mov         eax,0Ch
  00000000000003D8: EB C1              jmp         000000000000039B
  00000000000003DA: 0F B6 94 24 08 01  movzx       edx,byte ptr [rsp+108h]
                    00 00
  00000000000003E2: 48 8B 8B 48 08 00  mov         rcx,qword ptr [rbx+848h]
                    00
  00000000000003E9: E8 00 00 00 00     call        FT_SetLatencyTimer
  00000000000003EE: EB AB              jmp         000000000000039B
  00000000000003F0: B8 06 00 00 00     mov         eax,6
  00000000000003F5: EB AC              jmp         00000000000003A3
  00000000000003F7: B8 06 00 00 00     mov         eax,6
  00000000000003FC: 48 81 C4 D8 00 00  add         rsp,0D8h
                    00
  0000000000000403: 41 5D              pop         r13
  0000000000000405: 41 5C              pop         r12
  0000000000000407: 5F                 pop         rdi
  0000000000000408: 5B                 pop         rbx
  0000000000000409: C3                 ret

?ReadAndParse@TFtEE232R@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE232R::ReadAndParse(void *,char *,char *,char *,char *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 54              push        r12
  0000000000000016: 41 56              push        r14
  0000000000000018: 41 57              push        r15
  000000000000001A: 48 83 EC 60        sub         rsp,60h
  000000000000001E: 45 33 E4           xor         r12d,r12d
  0000000000000021: 49 8B E9           mov         rbp,r9
  0000000000000024: 4D 8B F0           mov         r14,r8
  0000000000000027: 4C 8B FA           mov         r15,rdx
  000000000000002A: 48 8B D9           mov         rbx,rcx
  000000000000002D: 48 85 D2           test        rdx,rdx
  0000000000000030: 0F 84 5B 02 00 00  je          0000000000000291
  0000000000000036: 4D 85 C0           test        r8,r8
  0000000000000039: 0F 84 52 02 00 00  je          0000000000000291
  000000000000003F: 4D 85 C9           test        r9,r9
  0000000000000042: 0F 84 49 02 00 00  je          0000000000000291
  0000000000000048: 48 8B BC 24 A0 00  mov         rdi,qword ptr [rsp+0A0h]
                    00 00
  0000000000000050: 48 85 FF           test        rdi,rdi
  0000000000000053: 0F 84 38 02 00 00  je          0000000000000291
  0000000000000059: 48 8B B4 24 A8 00  mov         rsi,qword ptr [rsp+0A8h]
                    00 00
  0000000000000061: 48 85 F6           test        rsi,rsi
  0000000000000064: 0F 84 27 02 00 00  je          0000000000000291
  000000000000006A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000006D: FF 10              call        qword ptr [rax]
  000000000000006F: 85 C0              test        eax,eax
  0000000000000071: 0F 84 0F 02 00 00  je          0000000000000286
  0000000000000077: 48 8B CB           mov         rcx,rbx
  000000000000007A: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  000000000000007F: 66 85 C0           test        ax,ax
  0000000000000082: 75 0E              jne         0000000000000092
  0000000000000084: 41 BC 0E 00 00 00  mov         r12d,0Eh
  000000000000008A: 41 8B C4           mov         eax,r12d
  000000000000008D: E9 04 02 00 00     jmp         0000000000000296
  0000000000000092: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000000000000097: 66 3B C1           cmp         ax,cx
  000000000000009A: 75 0E              jne         00000000000000AA
  000000000000009C: 41 BC 0F 00 00 00  mov         r12d,0Fh
  00000000000000A2: 41 8B C4           mov         eax,r12d
  00000000000000A5: E9 EC 01 00 00     jmp         0000000000000296
  00000000000000AA: 48 8B CB           mov         rcx,rbx
  00000000000000AD: 66 41 89 47 04     mov         word ptr [r15+4],ax
  00000000000000B2: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  00000000000000B7: 48 8B CB           mov         rcx,rbx
  00000000000000BA: 66 41 89 47 06     mov         word ptr [r15+6],ax
  00000000000000BF: 0F BE 43 12        movsx       eax,byte ptr [rbx+12h]
  00000000000000C3: C1 E8 03           shr         eax,3
  00000000000000C6: 24 01              and         al,1
  00000000000000C8: 41 88 47 08        mov         byte ptr [r15+8],al
  00000000000000CC: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  00000000000000D1: 48 8B CB           mov         rcx,rbx
  00000000000000D4: 66 41 89 47 0A     mov         word ptr [r15+0Ah],ax
  00000000000000D9: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  00000000000000DE: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000E3: 0F B6 C8           movzx       ecx,al
  00000000000000E6: C0 E8 05           shr         al,5
  00000000000000E9: 24 01              and         al,1
  00000000000000EB: C0 E9 06           shr         cl,6
  00000000000000EE: 41 88 47 0D        mov         byte ptr [r15+0Dh],al
  00000000000000F2: 80 E1 01           and         cl,1
  00000000000000F5: 41 88 4F 0C        mov         byte ptr [r15+0Ch],cl
  00000000000000F9: 0F BE 43 12        movsx       eax,byte ptr [rbx+12h]
  00000000000000FD: 48 8B CB           mov         rcx,rbx
  0000000000000100: C1 E8 02           shr         eax,2
  0000000000000103: 24 01              and         al,1
  0000000000000105: 41 88 47 0E        mov         byte ptr [r15+0Eh],al
  0000000000000109: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  000000000000010E: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000113: 4C 2B F0           sub         r14,rax
  0000000000000116: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000011B: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  0000000000000120: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000123: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000127: 42 88 44 31 FF     mov         byte ptr [rcx+r14-1],al
  000000000000012C: 84 C0              test        al,al
  000000000000012E: 75 F0              jne         0000000000000120
  0000000000000130: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000135: 48 8B CB           mov         rcx,rbx
  0000000000000138: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  000000000000013D: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000142: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000147: 48 2B E8           sub         rbp,rax
  000000000000014A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000150: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000153: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000157: 88 44 29 FF        mov         byte ptr [rcx+rbp-1],al
  000000000000015B: 84 C0              test        al,al
  000000000000015D: 75 F1              jne         0000000000000150
  000000000000015F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000164: 48 8B CB           mov         rcx,rbx
  0000000000000167: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  000000000000016C: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000171: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000176: 48 2B F8           sub         rdi,rax
  0000000000000179: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000180: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000183: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000187: 88 44 39 FF        mov         byte ptr [rcx+rdi-1],al
  000000000000018B: 84 C0              test        al,al
  000000000000018D: 75 F1              jne         0000000000000180
  000000000000018F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000194: 48 8B CB           mov         rcx,rbx
  0000000000000197: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000019C: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000001A1: 48 8D 44 24 20     lea         rax,[rsp+20h]
  00000000000001A6: 48 2B F1           sub         rsi,rcx
  00000000000001A9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001B0: 0F B6 08           movzx       ecx,byte ptr [rax]
  00000000000001B3: 48 8D 40 01        lea         rax,[rax+1]
  00000000000001B7: 88 4C 30 FF        mov         byte ptr [rax+rsi-1],cl
  00000000000001BB: 84 C9              test        cl,cl
  00000000000001BD: 75 F1              jne         00000000000001B0
  00000000000001BF: 0F BE 43 08        movsx       eax,byte ptr [rbx+8]
  00000000000001C3: D1 E8              shr         eax,1
  00000000000001C5: 24 01              and         al,1
  00000000000001C7: 41 88 47 11        mov         byte ptr [r15+11h],al
  00000000000001CB: 0F BE 43 08        movsx       eax,byte ptr [rbx+8]
  00000000000001CF: C1 E8 02           shr         eax,2
  00000000000001D2: 24 01              and         al,1
  00000000000001D4: 41 88 47 10        mov         byte ptr [r15+10h],al
  00000000000001D8: 0F BE 43 08        movsx       eax,byte ptr [rbx+8]
  00000000000001DC: C1 E8 03           shr         eax,3
  00000000000001DF: F6 D0              not         al
  00000000000001E1: 24 01              and         al,1
  00000000000001E3: 41 88 47 1F        mov         byte ptr [r15+1Fh],al
  00000000000001E7: 0F B6 43 13        movzx       eax,byte ptr [rbx+13h]
  00000000000001EB: 24 01              and         al,1
  00000000000001ED: 41 88 47 12        mov         byte ptr [r15+12h],al
  00000000000001F1: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  00000000000001F5: D1 E8              shr         eax,1
  00000000000001F7: 24 01              and         al,1
  00000000000001F9: 41 88 47 13        mov         byte ptr [r15+13h],al
  00000000000001FD: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  0000000000000201: C1 E8 02           shr         eax,2
  0000000000000204: 24 01              and         al,1
  0000000000000206: 41 88 47 14        mov         byte ptr [r15+14h],al
  000000000000020A: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  000000000000020E: C1 E8 03           shr         eax,3
  0000000000000211: 24 01              and         al,1
  0000000000000213: 41 88 47 15        mov         byte ptr [r15+15h],al
  0000000000000217: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  000000000000021B: C1 E8 04           shr         eax,4
  000000000000021E: 24 01              and         al,1
  0000000000000220: 41 88 47 16        mov         byte ptr [r15+16h],al
  0000000000000224: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  0000000000000228: C1 E8 05           shr         eax,5
  000000000000022B: 24 01              and         al,1
  000000000000022D: 41 88 47 17        mov         byte ptr [r15+17h],al
  0000000000000231: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  0000000000000235: C1 E8 06           shr         eax,6
  0000000000000238: 24 01              and         al,1
  000000000000023A: 41 88 47 18        mov         byte ptr [r15+18h],al
  000000000000023E: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  0000000000000242: C1 E8 07           shr         eax,7
  0000000000000245: 24 01              and         al,1
  0000000000000247: 41 88 47 19        mov         byte ptr [r15+19h],al
  000000000000024B: 0F B6 43 1C        movzx       eax,byte ptr [rbx+1Ch]
  000000000000024F: 24 0F              and         al,0Fh
  0000000000000251: 41 88 47 1A        mov         byte ptr [r15+1Ah],al
  0000000000000255: 0F B6 43 1C        movzx       eax,byte ptr [rbx+1Ch]
  0000000000000259: C0 F8 04           sar         al,4
  000000000000025C: 24 0F              and         al,0Fh
  000000000000025E: 41 88 47 1B        mov         byte ptr [r15+1Bh],al
  0000000000000262: 0F B6 43 1D        movzx       eax,byte ptr [rbx+1Dh]
  0000000000000266: 24 0F              and         al,0Fh
  0000000000000268: 41 88 47 1C        mov         byte ptr [r15+1Ch],al
  000000000000026C: 0F B6 43 1D        movzx       eax,byte ptr [rbx+1Dh]
  0000000000000270: C0 F8 04           sar         al,4
  0000000000000273: 24 0F              and         al,0Fh
  0000000000000275: 41 88 47 1D        mov         byte ptr [r15+1Dh],al
  0000000000000279: 0F B6 43 1E        movzx       eax,byte ptr [rbx+1Eh]
  000000000000027D: 41 88 47 1E        mov         byte ptr [r15+1Eh],al
  0000000000000281: 41 8B C4           mov         eax,r12d
  0000000000000284: EB 10              jmp         0000000000000296
  0000000000000286: 41 BC 0B 00 00 00  mov         r12d,0Bh
  000000000000028C: 41 8B C4           mov         eax,r12d
  000000000000028F: EB 05              jmp         0000000000000296
  0000000000000291: B8 06 00 00 00     mov         eax,6
  0000000000000296: 4C 8D 5C 24 60     lea         r11,[rsp+60h]
  000000000000029B: 49 8B 5B 20        mov         rbx,qword ptr [r11+20h]
  000000000000029F: 49 8B 6B 28        mov         rbp,qword ptr [r11+28h]
  00000000000002A3: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  00000000000002A7: 49 8B 7B 38        mov         rdi,qword ptr [r11+38h]
  00000000000002AB: 49 8B E3           mov         rsp,r11
  00000000000002AE: 41 5F              pop         r15
  00000000000002B0: 41 5E              pop         r14
  00000000000002B2: 41 5C              pop         r12
  00000000000002B4: C3                 ret

?ReadAndParse@TFtEE232R@@UEAAKPEAX@Z (public: virtual unsigned long __cdecl TFtEE232R::ReadAndParse(void *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 60        sub         rsp,60h
  000000000000000F: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000012: 48 8B FA           mov         rdi,rdx
  0000000000000015: 48 8B D9           mov         rbx,rcx
  0000000000000018: 33 F6              xor         esi,esi
  000000000000001A: FF 10              call        qword ptr [rax]
  000000000000001C: 85 C0              test        eax,eax
  000000000000001E: 0F 84 97 02 00 00  je          00000000000002BB
  0000000000000024: 48 8B CB           mov         rcx,rbx
  0000000000000027: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  000000000000002C: 66 85 C0           test        ax,ax
  000000000000002F: 75 13              jne         0000000000000044
  0000000000000031: 8D 46 0E           lea         eax,[rsi+0Eh]
  0000000000000034: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  0000000000000039: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  000000000000003E: 48 83 C4 60        add         rsp,60h
  0000000000000042: 5F                 pop         rdi
  0000000000000043: C3                 ret
  0000000000000044: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000000000000049: 66 3B C1           cmp         ax,cx
  000000000000004C: 75 15              jne         0000000000000063
  000000000000004E: B8 0F 00 00 00     mov         eax,0Fh
  0000000000000053: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  0000000000000058: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  000000000000005D: 48 83 C4 60        add         rsp,60h
  0000000000000061: 5F                 pop         rdi
  0000000000000062: C3                 ret
  0000000000000063: 48 8B CB           mov         rcx,rbx
  0000000000000066: 66 89 47 0C        mov         word ptr [rdi+0Ch],ax
  000000000000006A: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  000000000000006F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000074: 48 8B CB           mov         rcx,rbx
  0000000000000077: 66 89 47 0E        mov         word ptr [rdi+0Eh],ax
  000000000000007B: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  0000000000000080: 48 8B 4F 10        mov         rcx,qword ptr [rdi+10h]
  0000000000000084: 48 85 C9           test        rcx,rcx
  0000000000000087: 74 19              je          00000000000000A2
  0000000000000089: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  000000000000008E: 66 90              xchg        ax,ax
  0000000000000090: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000093: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000097: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000009B: 88 41 FF           mov         byte ptr [rcx-1],al
  000000000000009E: 84 C0              test        al,al
  00000000000000A0: 75 EE              jne         0000000000000090
  00000000000000A2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000A7: 48 8B CB           mov         rcx,rbx
  00000000000000AA: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000AF: 48 8B 4F 18        mov         rcx,qword ptr [rdi+18h]
  00000000000000B3: 48 85 C9           test        rcx,rcx
  00000000000000B6: 74 1A              je          00000000000000D2
  00000000000000B8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000BD: 0F 1F 00           nop         dword ptr [rax]
  00000000000000C0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000C3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000C7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000CB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000CE: 84 C0              test        al,al
  00000000000000D0: 75 EE              jne         00000000000000C0
  00000000000000D2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000D7: 48 8B CB           mov         rcx,rbx
  00000000000000DA: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000DF: 48 8B 4F 20        mov         rcx,qword ptr [rdi+20h]
  00000000000000E3: 48 85 C9           test        rcx,rcx
  00000000000000E6: 74 1A              je          0000000000000102
  00000000000000E8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000ED: 0F 1F 00           nop         dword ptr [rax]
  00000000000000F0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000F3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000F7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000FB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000FE: 84 C0              test        al,al
  0000000000000100: 75 EE              jne         00000000000000F0
  0000000000000102: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000107: 48 8B CB           mov         rcx,rbx
  000000000000010A: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000010F: 48 8B 47 28        mov         rax,qword ptr [rdi+28h]
  0000000000000113: 48 85 C0           test        rax,rax
  0000000000000116: 74 1A              je          0000000000000132
  0000000000000118: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  000000000000011D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000120: 0F B6 0A           movzx       ecx,byte ptr [rdx]
  0000000000000123: 48 8D 40 01        lea         rax,[rax+1]
  0000000000000127: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000012B: 88 48 FF           mov         byte ptr [rax-1],cl
  000000000000012E: 84 C9              test        cl,cl
  0000000000000130: 75 EE              jne         0000000000000120
  0000000000000132: 48 8B CB           mov         rcx,rbx
  0000000000000135: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  000000000000013A: 48 8B CB           mov         rcx,rbx
  000000000000013D: 66 89 47 30        mov         word ptr [rdi+30h],ax
  0000000000000141: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QEAAGXZ
  0000000000000146: 8B CE              mov         ecx,esi
  0000000000000148: 66 85 C0           test        ax,ax
  000000000000014B: 0F 94 C1           sete        cl
  000000000000014E: 66 89 4F 32        mov         word ptr [rdi+32h],cx
  0000000000000152: 48 8B CB           mov         rcx,rbx
  0000000000000155: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  000000000000015A: 0F B6 C8           movzx       ecx,al
  000000000000015D: C0 E8 05           shr         al,5
  0000000000000160: C0 E9 06           shr         cl,6
  0000000000000163: 24 01              and         al,1
  0000000000000165: 80 E1 01           and         cl,1
  0000000000000168: 0F B6 C0           movzx       eax,al
  000000000000016B: 0F B6 C9           movzx       ecx,cl
  000000000000016E: 66 89 47 36        mov         word ptr [rdi+36h],ax
  0000000000000172: 66 89 4F 34        mov         word ptr [rdi+34h],cx
  0000000000000176: 48 8B CB           mov         rcx,rbx
  0000000000000179: E8 00 00 00 00     call        ?GetRev4@TFtE2Data@@QEAA_NXZ
  000000000000017E: 48 8B CB           mov         rcx,rbx
  0000000000000181: 88 47 38           mov         byte ptr [rdi+38h],al
  0000000000000184: E8 00 00 00 00     call        ?GetIsoIn@TFtE2Data@@QEAA_NXZ
  0000000000000189: 48 8B CB           mov         rcx,rbx
  000000000000018C: 88 47 39           mov         byte ptr [rdi+39h],al
  000000000000018F: E8 00 00 00 00     call        ?GetIsoOut@TFtE2Data@@QEAA_NXZ
  0000000000000194: 48 8B CB           mov         rcx,rbx
  0000000000000197: 88 47 3A           mov         byte ptr [rdi+3Ah],al
  000000000000019A: E8 00 00 00 00     call        ?GetPullDownEnable@TFtE2Data@@QEAA_NXZ
  000000000000019F: 48 8B CB           mov         rcx,rbx
  00000000000001A2: 88 47 3B           mov         byte ptr [rdi+3Bh],al
  00000000000001A5: E8 00 00 00 00     call        ?GetSerialNumberEnable@TFtE2Data@@QEAA_NXZ
  00000000000001AA: 48 8B CB           mov         rcx,rbx
  00000000000001AD: 88 47 3C           mov         byte ptr [rdi+3Ch],al
  00000000000001B0: E8 00 00 00 00     call        ?GetUSBVersionEnable@TFtE2Data@@QEAA_NXZ
  00000000000001B5: 48 8B CB           mov         rcx,rbx
  00000000000001B8: 88 47 3D           mov         byte ptr [rdi+3Dh],al
  00000000000001BB: E8 00 00 00 00     call        ?GetUSBVersion@TFtE2Data@@QEAAGXZ
  00000000000001C0: 40 88 77 40        mov         byte ptr [rdi+40h],sil
  00000000000001C4: 66 89 47 3E        mov         word ptr [rdi+3Eh],ax
  00000000000001C8: 48 89 77 48        mov         qword ptr [rdi+48h],rsi
  00000000000001CC: 89 77 50           mov         dword ptr [rdi+50h],esi
  00000000000001CF: 66 89 77 45        mov         word ptr [rdi+45h],si
  00000000000001D3: 40 88 77 47        mov         byte ptr [rdi+47h],sil
  00000000000001D7: 0F BE 43 08        movsx       eax,byte ptr [rbx+8]
  00000000000001DB: D1 E8              shr         eax,1
  00000000000001DD: 24 01              and         al,1
  00000000000001DF: 88 47 54           mov         byte ptr [rdi+54h],al
  00000000000001E2: 0F BE 43 08        movsx       eax,byte ptr [rbx+8]
  00000000000001E6: C1 E8 02           shr         eax,2
  00000000000001E9: 24 01              and         al,1
  00000000000001EB: 88 47 55           mov         byte ptr [rdi+55h],al
  00000000000001EE: 0F BE 43 08        movsx       eax,byte ptr [rbx+8]
  00000000000001F2: C1 E8 03           shr         eax,3
  00000000000001F5: 24 01              and         al,1
  00000000000001F7: 88 47 66           mov         byte ptr [rdi+66h],al
  00000000000001FA: 0F B6 43 09        movzx       eax,byte ptr [rbx+9]
  00000000000001FE: 88 47 56           mov         byte ptr [rdi+56h],al
  0000000000000201: 0F BE 43 12        movsx       eax,byte ptr [rbx+12h]
  0000000000000205: C1 E8 02           shr         eax,2
  0000000000000208: 24 01              and         al,1
  000000000000020A: 88 47 57           mov         byte ptr [rdi+57h],al
  000000000000020D: 0F BE 43 12        movsx       eax,byte ptr [rbx+12h]
  0000000000000211: C1 E8 03           shr         eax,3
  0000000000000214: 24 01              and         al,1
  0000000000000216: 88 47 58           mov         byte ptr [rdi+58h],al
  0000000000000219: 0F B6 43 13        movzx       eax,byte ptr [rbx+13h]
  000000000000021D: 24 01              and         al,1
  000000000000021F: 88 47 59           mov         byte ptr [rdi+59h],al
  0000000000000222: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  0000000000000226: D1 E8              shr         eax,1
  0000000000000228: 24 01              and         al,1
  000000000000022A: 88 47 5A           mov         byte ptr [rdi+5Ah],al
  000000000000022D: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  0000000000000231: C1 E8 02           shr         eax,2
  0000000000000234: 24 01              and         al,1
  0000000000000236: 88 47 5B           mov         byte ptr [rdi+5Bh],al
  0000000000000239: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  000000000000023D: C1 E8 03           shr         eax,3
  0000000000000240: 24 01              and         al,1
  0000000000000242: 88 47 5C           mov         byte ptr [rdi+5Ch],al
  0000000000000245: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  0000000000000249: C1 E8 04           shr         eax,4
  000000000000024C: 24 01              and         al,1
  000000000000024E: 88 47 5D           mov         byte ptr [rdi+5Dh],al
  0000000000000251: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  0000000000000255: C1 E8 05           shr         eax,5
  0000000000000258: 24 01              and         al,1
  000000000000025A: 88 47 5E           mov         byte ptr [rdi+5Eh],al
  000000000000025D: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  0000000000000261: C1 E8 06           shr         eax,6
  0000000000000264: 24 01              and         al,1
  0000000000000266: 88 47 5F           mov         byte ptr [rdi+5Fh],al
  0000000000000269: 0F BE 43 13        movsx       eax,byte ptr [rbx+13h]
  000000000000026D: C1 E8 07           shr         eax,7
  0000000000000270: 24 01              and         al,1
  0000000000000272: 88 47 60           mov         byte ptr [rdi+60h],al
  0000000000000275: 0F B6 43 1C        movzx       eax,byte ptr [rbx+1Ch]
  0000000000000279: 24 0F              and         al,0Fh
  000000000000027B: 88 47 61           mov         byte ptr [rdi+61h],al
  000000000000027E: 0F B6 4B 1C        movzx       ecx,byte ptr [rbx+1Ch]
  0000000000000282: 8B C6              mov         eax,esi
  0000000000000284: C0 F9 04           sar         cl,4
  0000000000000287: 80 E1 0F           and         cl,0Fh
  000000000000028A: 88 4F 62           mov         byte ptr [rdi+62h],cl
  000000000000028D: 0F B6 4B 1D        movzx       ecx,byte ptr [rbx+1Dh]
  0000000000000291: 80 E1 0F           and         cl,0Fh
  0000000000000294: 88 4F 63           mov         byte ptr [rdi+63h],cl
  0000000000000297: 0F B6 4B 1D        movzx       ecx,byte ptr [rbx+1Dh]
  000000000000029B: C0 F9 04           sar         cl,4
  000000000000029E: 80 E1 0F           and         cl,0Fh
  00000000000002A1: 88 4F 64           mov         byte ptr [rdi+64h],cl
  00000000000002A4: 0F B6 4B 1E        movzx       ecx,byte ptr [rbx+1Eh]
  00000000000002A8: 88 4F 65           mov         byte ptr [rdi+65h],cl
  00000000000002AB: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  00000000000002B0: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  00000000000002B5: 48 83 C4 60        add         rsp,60h
  00000000000002B9: 5F                 pop         rdi
  00000000000002BA: C3                 ret
  00000000000002BB: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  00000000000002C0: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  00000000000002C5: B8 0B 00 00 00     mov         eax,0Bh
  00000000000002CA: 48 83 C4 60        add         rsp,60h
  00000000000002CE: 5F                 pop         rdi
  00000000000002CF: C3                 ret

?SetRomType@TFtEE232R@@UEAAXXZ (public: virtual void __cdecl TFtEE232R::SetRomType(void)):
  0000000000000000: B8 46 00 00 00     mov         eax,46h
  0000000000000005: 66 89 81 32 08 00  mov         word ptr [rcx+0000000000000832h],ax
                    00
  000000000000000C: C3                 ret

??0TFtEE232H@@QEAA@PEAUft_private_vars@@@Z (public: __cdecl TFtEE232H::TFtEE232H(struct ft_private_vars *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAUft_private_vars@@@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE232H@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

??0TFtEE232H@@QEAA@PEAX@Z (public: __cdecl TFtEE232H::TFtEE232H(void *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAX@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE232H@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

??0TFtEE232H@@QEAA@XZ (public: __cdecl TFtEE232H::TFtEE232H(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@XZ
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE232H@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

?AddUserArea@TFtEE232H@@UEAAHPEAEK@Z (public: virtual int __cdecl TFtEE232H::AddUserArea(unsigned char *,unsigned long)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 20        sub         rsp,20h
  000000000000001A: B8 60 00 00 00     mov         eax,60h
  000000000000001F: 41 8B E8           mov         ebp,r8d
  0000000000000022: 41 8B D8           mov         ebx,r8d
  0000000000000025: 44 3B C0           cmp         r8d,eax
  0000000000000028: 48 8B FA           mov         rdi,rdx
  000000000000002B: 48 8B F1           mov         rsi,rcx
  000000000000002E: 0F 47 E8           cmova       ebp,eax
  0000000000000031: 44 8B C5           mov         r8d,ebp
  0000000000000034: E8 00 00 00 00     call        ?AddUserArea@TFtE2Data@@UEAAHPEAEK@Z
  0000000000000039: 44 8B F0           mov         r14d,eax
  000000000000003C: 85 C0              test        eax,eax
  000000000000003E: 74 28              je          0000000000000068
  0000000000000040: 2B DD              sub         ebx,ebp
  0000000000000042: 74 24              je          0000000000000068
  0000000000000044: 48 8B CE           mov         rcx,rsi
  0000000000000047: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  000000000000004C: 66 03 C0           add         ax,ax
  000000000000004F: 48 83 C7 60        add         rdi,60h
  0000000000000053: 0F B6 0F           movzx       ecx,byte ptr [rdi]
  0000000000000056: 0F B7 D0           movzx       edx,ax
  0000000000000059: 66 FF C0           inc         ax
  000000000000005C: 48 8D 7F 01        lea         rdi,[rdi+1]
  0000000000000060: 88 4C 32 08        mov         byte ptr [rdx+rsi+8],cl
  0000000000000064: FF CB              dec         ebx
  0000000000000066: 75 EB              jne         0000000000000053
  0000000000000068: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000006B: 48 8B CE           mov         rcx,rsi
  000000000000006E: FF 50 08           call        qword ptr [rax+8]
  0000000000000071: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000076: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000007B: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000080: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  0000000000000085: 41 8B C6           mov         eax,r14d
  0000000000000088: 48 83 C4 20        add         rsp,20h
  000000000000008C: 41 5E              pop         r14
  000000000000008E: C3                 ret

?Erase@TFtEE232H@@QEAAHXZ (public: int __cdecl TFtEE232H::Erase(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000007: FF 50 40           call        qword ptr [rax+40h]
  000000000000000A: B8 01 00 00 00     mov         eax,1
  000000000000000F: 48 83 C4 28        add         rsp,28h
  0000000000000013: C3                 ret

?GetUserArea@TFtEE232H@@UEAAXPEAEKPEAK@Z (public: virtual void __cdecl TFtEE232H::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 56                 push        rsi
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 56              push        r14
  000000000000000E: 48 83 EC 20        sub         rsp,20h
  0000000000000012: B8 60 00 00 00     mov         eax,60h
  0000000000000017: 41 8B E8           mov         ebp,r8d
  000000000000001A: 4D 8B F1           mov         r14,r9
  000000000000001D: 44 3B C0           cmp         r8d,eax
  0000000000000020: 41 8B F8           mov         edi,r8d
  0000000000000023: 4C 8D 4C 24 50     lea         r9,[rsp+50h]
  0000000000000028: 0F 47 E8           cmova       ebp,eax
  000000000000002B: 48 8B DA           mov         rbx,rdx
  000000000000002E: 48 8B F1           mov         rsi,rcx
  0000000000000031: 44 8B C5           mov         r8d,ebp
  0000000000000034: E8 00 00 00 00     call        ?GetUserArea@TFtE2Data@@UEAAXPEAEKPEAK@Z
  0000000000000039: 8B 44 24 50        mov         eax,dword ptr [rsp+50h]
  000000000000003D: 41 89 06           mov         dword ptr [r14],eax
  0000000000000040: 3B C5              cmp         eax,ebp
  0000000000000042: 75 36              jne         000000000000007A
  0000000000000044: 2B FD              sub         edi,ebp
  0000000000000046: 74 32              je          000000000000007A
  0000000000000048: 48 8B CE           mov         rcx,rsi
  000000000000004B: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  0000000000000050: 44 8B C7           mov         r8d,edi
  0000000000000053: 66 03 C0           add         ax,ax
  0000000000000056: 48 83 C3 60        add         rbx,60h
  000000000000005A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000060: 0F B7 C8           movzx       ecx,ax
  0000000000000063: 66 FF C0           inc         ax
  0000000000000066: 48 8D 5B 01        lea         rbx,[rbx+1]
  000000000000006A: 0F B6 54 31 08     movzx       edx,byte ptr [rcx+rsi+8]
  000000000000006F: 88 53 FF           mov         byte ptr [rbx-1],dl
  0000000000000072: 41 FF C8           dec         r8d
  0000000000000075: 75 E9              jne         0000000000000060
  0000000000000077: 41 01 3E           add         dword ptr [r14],edi
  000000000000007A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000007F: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  0000000000000084: 48 83 C4 20        add         rsp,20h
  0000000000000088: 41 5E              pop         r14
  000000000000008A: 5F                 pop         rdi
  000000000000008B: 5E                 pop         rsi
  000000000000008C: C3                 ret

?GetUserAreaOffset@TFtEE232H@@UEAAGXZ (public: virtual unsigned short __cdecl TFtEE232H::GetUserAreaOffset(void)):
  0000000000000000: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+832h]
                    00
  0000000000000007: 66 83 F8 56        cmp         ax,56h
  000000000000000B: 74 14              je          0000000000000021
  000000000000000D: 66 83 F8 66        cmp         ax,66h
  0000000000000011: 74 0E              je          0000000000000021
  0000000000000013: BA 31 52 00 00     mov         edx,5231h
  0000000000000018: 66 3B C2           cmp         ax,dx
  000000000000001B: 0F 85 00 00 00 00  jne         ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  0000000000000021: B8 10 00 00 00     mov         eax,10h
  0000000000000026: C3                 ret

?GetUserAreaSize@TFtEE232H@@UEAAGXZ (public: virtual unsigned short __cdecl TFtEE232H::GetUserAreaSize(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+832h]
                    00
  000000000000000B: 66 83 F8 56        cmp         ax,56h
  000000000000000F: 74 19              je          000000000000002A
  0000000000000011: 66 83 F8 66        cmp         ax,66h
  0000000000000015: 74 13              je          000000000000002A
  0000000000000017: BA 31 52 00 00     mov         edx,5231h
  000000000000001C: 66 3B C2           cmp         ax,dx
  000000000000001F: 74 09              je          000000000000002A
  0000000000000021: 48 83 C4 28        add         rsp,28h
  0000000000000025: E9 00 00 00 00     jmp         ?GetUserAreaSize@TFtE2Data@@UEAAGXZ
  000000000000002A: E8 00 00 00 00     call        ?GetUserAreaSize@TFtE2Data@@UEAAGXZ
  000000000000002F: 83 C0 30           add         eax,30h
  0000000000000032: 48 83 C4 28        add         rsp,28h
  0000000000000036: C3                 ret

?Init@TFtEE232H@@UEAAXPEAX@Z (public: virtual void __cdecl TFtEE232H::Init(void *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 20        sub         rsp,20h
  000000000000001C: 4C 8B 22           mov         r12,qword ptr [rdx]
  000000000000001F: 4C 8B 6A 08        mov         r13,qword ptr [rdx+8]
  0000000000000023: 33 C0              xor         eax,eax
  0000000000000025: 48 8B FA           mov         rdi,rdx
  0000000000000028: 4C 8B F1           mov         r14,rcx
  000000000000002B: 0F B7 E8           movzx       ebp,ax
  000000000000002E: 44 0F B7 F8        movzx       r15d,ax
  0000000000000032: 0F B7 F0           movzx       esi,ax
  0000000000000035: 8D 50 02           lea         edx,[rax+2]
  0000000000000038: 8D 48 04           lea         ecx,[rax+4]
  000000000000003B: 38 47 2A           cmp         byte ptr [rdi+2Ah],al
  000000000000003E: 74 05              je          0000000000000045
  0000000000000040: 8D 68 01           lea         ebp,[rax+1]
  0000000000000043: EB 1E              jmp         0000000000000063
  0000000000000045: 38 47 2B           cmp         byte ptr [rdi+2Bh],al
  0000000000000048: 74 05              je          000000000000004F
  000000000000004A: 0F B7 EA           movzx       ebp,dx
  000000000000004D: EB 14              jmp         0000000000000063
  000000000000004F: 38 47 2C           cmp         byte ptr [rdi+2Ch],al
  0000000000000052: 74 05              je          0000000000000059
  0000000000000054: 0F B7 E9           movzx       ebp,cx
  0000000000000057: EB 0A              jmp         0000000000000063
  0000000000000059: 38 47 2D           cmp         byte ptr [rdi+2Dh],al
  000000000000005C: 74 05              je          0000000000000063
  000000000000005E: BD 08 00 00 00     mov         ebp,8
  0000000000000063: 38 47 31           cmp         byte ptr [rdi+31h],al
  0000000000000066: 74 04              je          000000000000006C
  0000000000000068: 66 83 CD 10        or          bp,10h
  000000000000006C: 38 47 2E           cmp         byte ptr [rdi+2Eh],al
  000000000000006F: 74 08              je          0000000000000079
  0000000000000071: B8 00 01 00 00     mov         eax,100h
  0000000000000076: 66 0B E8           or          bp,ax
  0000000000000079: 80 7F 2F 00        cmp         byte ptr [rdi+2Fh],0
  000000000000007D: 74 08              je          0000000000000087
  000000000000007F: B8 00 02 00 00     mov         eax,200h
  0000000000000084: 66 0B E8           or          bp,ax
  0000000000000087: 80 7F 30 00        cmp         byte ptr [rdi+30h],0
  000000000000008B: 74 08              je          0000000000000095
  000000000000008D: B8 00 04 00 00     mov         eax,400h
  0000000000000092: 66 0B E8           or          bp,ax
  0000000000000095: 80 7F 32 00        cmp         byte ptr [rdi+32h],0
  0000000000000099: 74 08              je          00000000000000A3
  000000000000009B: B8 00 80 00 00     mov         eax,8000h
  00000000000000A0: 66 0B E8           or          bp,ax
  00000000000000A3: 80 7F 18 00        cmp         byte ptr [rdi+18h],0
  00000000000000A7: 74 03              je          00000000000000AC
  00000000000000A9: 44 8B F9           mov         r15d,ecx
  00000000000000AC: 80 7F 19 00        cmp         byte ptr [rdi+19h],0
  00000000000000B0: 74 05              je          00000000000000B7
  00000000000000B2: 66 41 83 CF 08     or          r15w,8
  00000000000000B7: 0F B6 47 1C        movzx       eax,byte ptr [rdi+1Ch]
  00000000000000BB: 3A C1              cmp         al,cl
  00000000000000BD: 74 1D              je          00000000000000DC
  00000000000000BF: 3C 08              cmp         al,8
  00000000000000C1: 75 07              jne         00000000000000CA
  00000000000000C3: BE 01 00 00 00     mov         esi,1
  00000000000000C8: EB 12              jmp         00000000000000DC
  00000000000000CA: 3C 0C              cmp         al,0Ch
  00000000000000CC: 75 05              jne         00000000000000D3
  00000000000000CE: 0F B7 F2           movzx       esi,dx
  00000000000000D1: EB 09              jmp         00000000000000DC
  00000000000000D3: 3C 10              cmp         al,10h
  00000000000000D5: 75 05              jne         00000000000000DC
  00000000000000D7: BE 03 00 00 00     mov         esi,3
  00000000000000DC: 80 7F 1A 00        cmp         byte ptr [rdi+1Ah],0
  00000000000000E0: 74 03              je          00000000000000E5
  00000000000000E2: 66 0B F1           or          si,cx
  00000000000000E5: 80 7F 1B 00        cmp         byte ptr [rdi+1Bh],0
  00000000000000E9: 74 04              je          00000000000000EF
  00000000000000EB: 66 83 CE 08        or          si,8
  00000000000000EF: 0F B6 47 1F        movzx       eax,byte ptr [rdi+1Fh]
  00000000000000F3: 3A C1              cmp         al,cl
  00000000000000F5: 74 1C              je          0000000000000113
  00000000000000F7: 3C 08              cmp         al,8
  00000000000000F9: 75 06              jne         0000000000000101
  00000000000000FB: 66 83 CE 10        or          si,10h
  00000000000000FF: EB 12              jmp         0000000000000113
  0000000000000101: 3C 0C              cmp         al,0Ch
  0000000000000103: 75 06              jne         000000000000010B
  0000000000000105: 66 83 CE 20        or          si,20h
  0000000000000109: EB 08              jmp         0000000000000113
  000000000000010B: 3C 10              cmp         al,10h
  000000000000010D: 75 04              jne         0000000000000113
  000000000000010F: 66 83 CE 30        or          si,30h
  0000000000000113: 80 7F 1D 00        cmp         byte ptr [rdi+1Dh],0
  0000000000000117: 74 04              je          000000000000011D
  0000000000000119: 66 83 CE 40        or          si,40h
  000000000000011D: 80 7F 1E 00        cmp         byte ptr [rdi+1Eh],0
  0000000000000121: 74 08              je          000000000000012B
  0000000000000123: B8 80 00 00 00     mov         eax,80h
  0000000000000128: 66 0B F0           or          si,ax
  000000000000012B: 49 8D 4E 08        lea         rcx,[r14+8]
  000000000000012F: 33 D2              xor         edx,edx
  0000000000000131: 41 B8 00 08 00 00  mov         r8d,800h
  0000000000000137: E8 00 00 00 00     call        memset
  000000000000013C: 48 83 C9 FF        or          rcx,0FFFFFFFFFFFFFFFFh
  0000000000000140: 66 41 89 6E 08     mov         word ptr [r14+8],bp
  0000000000000145: 48 8B C1           mov         rax,rcx
  0000000000000148: 41 C7 46 0A 03 04  mov         dword ptr [r14+0Ah],60100403h
                    10 60
  0000000000000150: 41 C7 46 0E 00 09  mov         dword ptr [r14+0Eh],64A00900h
                    A0 64
  0000000000000158: 66 45 89 7E 12     mov         word ptr [r14+12h],r15w
  000000000000015D: 66 41 89 76 14     mov         word ptr [r14+14h],si
  0000000000000162: 41 C6 46 16 20     mov         byte ptr [r14+16h],20h
  0000000000000167: 66 0F 1F 84 00 00  nop         word ptr [rax+rax]
                    00 00 00
  0000000000000170: 48 FF C0           inc         rax
  0000000000000173: 41 80 3C 04 00     cmp         byte ptr [r12+rax],0
  0000000000000178: 75 F6              jne         0000000000000170
  000000000000017A: FE C0              inc         al
  000000000000017C: 02 C0              add         al,al
  000000000000017E: 41 88 46 17        mov         byte ptr [r14+17h],al
  0000000000000182: 04 20              add         al,20h
  0000000000000184: 41 88 46 18        mov         byte ptr [r14+18h],al
  0000000000000188: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000190: 48 FF C1           inc         rcx
  0000000000000193: 41 80 7C 0D 00 00  cmp         byte ptr [r13+rcx],0
  0000000000000199: 75 F5              jne         0000000000000190
  000000000000019B: 41 C6 46 1B 02     mov         byte ptr [r14+1Bh],2
  00000000000001A0: FE C1              inc         cl
  00000000000001A2: 02 C9              add         cl,cl
  00000000000001A4: 41 88 4E 19        mov         byte ptr [r14+19h],cl
  00000000000001A8: 02 C8              add         cl,al
  00000000000001AA: 41 88 4E 1A        mov         byte ptr [r14+1Ah],cl
  00000000000001AE: 0F B6 4F 20        movzx       ecx,byte ptr [rdi+20h]
  00000000000001B2: 41 88 4E 20        mov         byte ptr [r14+20h],cl
  00000000000001B6: 0F B6 47 21        movzx       eax,byte ptr [rdi+21h]
  00000000000001BA: C0 E0 04           shl         al,4
  00000000000001BD: 0A C1              or          al,cl
  00000000000001BF: 41 88 46 20        mov         byte ptr [r14+20h],al
  00000000000001C3: 0F B6 4F 22        movzx       ecx,byte ptr [rdi+22h]
  00000000000001C7: 41 88 4E 21        mov         byte ptr [r14+21h],cl
  00000000000001CB: 0F B6 47 23        movzx       eax,byte ptr [rdi+23h]
  00000000000001CF: C0 E0 04           shl         al,4
  00000000000001D2: 0A C1              or          al,cl
  00000000000001D4: 41 88 46 21        mov         byte ptr [r14+21h],al
  00000000000001D8: 0F B6 4F 24        movzx       ecx,byte ptr [rdi+24h]
  00000000000001DC: 41 88 4E 22        mov         byte ptr [r14+22h],cl
  00000000000001E0: 0F B6 47 25        movzx       eax,byte ptr [rdi+25h]
  00000000000001E4: C0 E0 04           shl         al,4
  00000000000001E7: 0A C1              or          al,cl
  00000000000001E9: 41 88 46 22        mov         byte ptr [r14+22h],al
  00000000000001ED: 0F B6 4F 26        movzx       ecx,byte ptr [rdi+26h]
  00000000000001F1: 41 88 4E 23        mov         byte ptr [r14+23h],cl
  00000000000001F5: 0F B6 47 27        movzx       eax,byte ptr [rdi+27h]
  00000000000001F9: C0 E0 04           shl         al,4
  00000000000001FC: 0A C1              or          al,cl
  00000000000001FE: 41 88 46 23        mov         byte ptr [r14+23h],al
  0000000000000202: 0F B6 4F 28        movzx       ecx,byte ptr [rdi+28h]
  0000000000000206: 41 88 4E 24        mov         byte ptr [r14+24h],cl
  000000000000020A: 0F B6 47 29        movzx       eax,byte ptr [rdi+29h]
  000000000000020E: C0 E0 04           shl         al,4
  0000000000000211: 0A C1              or          al,cl
  0000000000000213: 41 88 46 24        mov         byte ptr [r14+24h],al
  0000000000000217: 41 0F B7 86 32 08  movzx       eax,word ptr [r14+832h]
                    00 00
  000000000000021F: 66 85 C0           test        ax,ax
  0000000000000222: 75 05              jne         0000000000000229
  0000000000000224: B8 56 00 00 00     mov         eax,56h
  0000000000000229: 49 8D 56 28        lea         rdx,[r14+28h]
  000000000000022D: 4D 8B C4           mov         r8,r12
  0000000000000230: 49 8B CE           mov         rcx,r14
  0000000000000233: 66 41 89 46 26     mov         word ptr [r14+26h],ax
  0000000000000238: 41 C6 86 92 00 00  mov         byte ptr [r14+92h],48h
                    00 48
  0000000000000240: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000245: 49 0F BE 46 18     movsx       rax,byte ptr [r14+18h]
  000000000000024A: 49 8D 56 08        lea         rdx,[r14+8]
  000000000000024E: 4D 8B C5           mov         r8,r13
  0000000000000251: 48 03 D0           add         rdx,rax
  0000000000000254: 49 8B CE           mov         rcx,r14
  0000000000000257: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  000000000000025C: 49 0F BE 46 1A     movsx       rax,byte ptr [r14+1Ah]
  0000000000000261: 49 8D 56 08        lea         rdx,[r14+8]
  0000000000000265: 4C 8D 05 00 00 00  lea         r8,[??_C@_00CNPNBAHC@?$AA@]
                    00
  000000000000026C: 48 03 D0           add         rdx,rax
  000000000000026F: 49 8B CE           mov         rcx,r14
  0000000000000272: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000277: 41 0F BE 56 18     movsx       edx,byte ptr [r14+18h]
  000000000000027C: 41 0F BE 4E 16     movsx       ecx,byte ptr [r14+16h]
  0000000000000281: 45 0F BE 46 1A     movsx       r8d,byte ptr [r14+1Ah]
  0000000000000286: 41 89 96 38 08 00  mov         dword ptr [r14+838h],edx
                    00
  000000000000028D: 80 CA 80           or          dl,80h
  0000000000000290: 41 89 8E 34 08 00  mov         dword ptr [r14+834h],ecx
                    00
  0000000000000297: 80 C9 80           or          cl,80h
  000000000000029A: 41 88 56 18        mov         byte ptr [r14+18h],dl
  000000000000029E: 45 89 86 3C 08 00  mov         dword ptr [r14+83Ch],r8d
                    00
  00000000000002A5: B8 02 03 00 00     mov         eax,302h
  00000000000002AA: 41 88 4E 16        mov         byte ptr [r14+16h],cl
  00000000000002AE: 41 80 C8 80        or          r8b,80h
  00000000000002B2: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  00000000000002B7: 49 8B CE           mov         rcx,r14
  00000000000002BA: 45 88 46 1A        mov         byte ptr [r14+1Ah],r8b
  00000000000002BE: 66 89 44 24 50     mov         word ptr [rsp+50h],ax
  00000000000002C3: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  00000000000002C8: 33 D2              xor         edx,edx
  00000000000002CA: 49 8B CE           mov         rcx,r14
  00000000000002CD: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  00000000000002D2: 49 8B 06           mov         rax,qword ptr [r14]
  00000000000002D5: 49 8B CE           mov         rcx,r14
  00000000000002D8: FF 50 08           call        qword ptr [rax+8]
  00000000000002DB: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  00000000000002E0: 48 8B 6C 24 60     mov         rbp,qword ptr [rsp+60h]
  00000000000002E5: 48 8B 74 24 68     mov         rsi,qword ptr [rsp+68h]
  00000000000002EA: 41 C7 86 0C 08 00  mov         dword ptr [r14+80Ch],0
                    00 00 00 00 00
  00000000000002F5: 48 83 C4 20        add         rsp,20h
  00000000000002F9: 41 5F              pop         r15
  00000000000002FB: 41 5E              pop         r14
  00000000000002FD: 41 5D              pop         r13
  00000000000002FF: 41 5C              pop         r12
  0000000000000301: 5F                 pop         rdi
  0000000000000302: C3                 ret

?MoveStrings@TFtEE232H@@UEAAXXZ (public: virtual void __cdecl TFtEE232H::MoveStrings(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+0000000000000832h]
                    00
  000000000000000B: 4C 8B D9           mov         r11,rcx
  000000000000000E: 66 83 F8 56        cmp         ax,56h
  0000000000000012: 74 14              je          0000000000000028
  0000000000000014: 66 83 F8 66        cmp         ax,66h
  0000000000000018: 74 0E              je          0000000000000028
  000000000000001A: B9 31 52 00 00     mov         ecx,5231h
  000000000000001F: 66 3B C1           cmp         ax,cx
  0000000000000022: 0F 85 8F 00 00 00  jne         00000000000000B7
  0000000000000028: 49 8D 43 28        lea         rax,[r11+28h]
  000000000000002C: 49 8D 8B 88 00 00  lea         rcx,[r11+0000000000000088h]
                    00
  0000000000000033: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000038: 33 DB              xor         ebx,ebx
  000000000000003A: 4C 8B C1           mov         r8,rcx
  000000000000003D: 4C 8D 90 80 00 00  lea         r10,[rax+0000000000000080h]
                    00
  0000000000000044: 4C 2B C0           sub         r8,rax
  0000000000000047: 44 8B CB           mov         r9d,ebx
  000000000000004A: 48 8B D0           mov         rdx,rax
  000000000000004D: 49 FF C0           inc         r8
  0000000000000050: 49 D1 E8           shr         r8,1
  0000000000000053: 48 3B C1           cmp         rax,rcx
  0000000000000056: 4C 0F 47 C3        cmova       r8,rbx
  000000000000005A: 4D 85 C0           test        r8,r8
  000000000000005D: 74 26              je          0000000000000085
  000000000000005F: 4C 2B D0           sub         r10,rax
  0000000000000062: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000066: 66 66 0F 1F 84 00  nop         word ptr [rax+rax+0000000000000000h]
                    00 00 00 00
  0000000000000070: 0F B7 0A           movzx       ecx,word ptr [rdx]
  0000000000000073: 49 FF C1           inc         r9
  0000000000000076: 48 8D 52 02        lea         rdx,[rdx+2]
  000000000000007A: 66 41 89 4C 12 FE  mov         word ptr [r10+rdx-2],cx
  0000000000000080: 4D 3B C8           cmp         r9,r8
  0000000000000083: 72 EB              jb          0000000000000070
  0000000000000085: 48 8B CB           mov         rcx,rbx
  0000000000000088: 4D 85 C0           test        r8,r8
  000000000000008B: 74 12              je          000000000000009F
  000000000000008D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000090: 48 FF C1           inc         rcx
  0000000000000093: 66 89 18           mov         word ptr [rax],bx
  0000000000000096: 48 8D 40 02        lea         rax,[rax+2]
  000000000000009A: 49 3B C8           cmp         rcx,r8
  000000000000009D: 72 F1              jb          0000000000000090
  000000000000009F: 49 8B 03           mov         rax,qword ptr [r11]
  00000000000000A2: 49 8B CB           mov         rcx,r11
  00000000000000A5: 48 8B 5C 24 20     mov         rbx,qword ptr [rsp+20h]
  00000000000000AA: 48 83 C4 28        add         rsp,28h
  00000000000000AE: 48 FF 60 08        jmp         qword ptr [rax+8]
  00000000000000B2: 48 8B 5C 24 20     mov         rbx,qword ptr [rsp+20h]
  00000000000000B7: 48 83 C4 28        add         rsp,28h
  00000000000000BB: C3                 ret

?Program@TFtEE232H@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE232H::Program(void *,char *,char *,char *,char *)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 4C 89 40 18        mov         qword ptr [rax+18h],r8
  0000000000000007: 53                 push        rbx
  0000000000000008: 55                 push        rbp
  0000000000000009: 56                 push        rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 41 54              push        r12
  000000000000000D: 48 81 EC D0 00 00  sub         rsp,0D0h
                    00
  0000000000000014: 48 8B F9           mov         rdi,rcx
  0000000000000017: 33 C9              xor         ecx,ecx
  0000000000000019: 4D 8B E1           mov         r12,r9
  000000000000001C: 48 8B DA           mov         rbx,rdx
  000000000000001F: 0F B7 E9           movzx       ebp,cx
  0000000000000022: 0F B7 F1           movzx       esi,cx
  0000000000000025: 4D 85 C0           test        r8,r8
  0000000000000028: 0F 84 54 04 00 00  je          0000000000000482
  000000000000002E: 4D 85 C9           test        r9,r9
  0000000000000031: 0F 84 4B 04 00 00  je          0000000000000482
  0000000000000037: 4C 89 68 08        mov         qword ptr [rax+8],r13
  000000000000003B: 4C 8B AC 24 20 01  mov         r13,qword ptr [rsp+120h]
                    00 00
  0000000000000043: 4D 85 ED           test        r13,r13
  0000000000000046: 0F 84 2F 04 00 00  je          000000000000047B
  000000000000004C: 66 39 4A 04        cmp         word ptr [rdx+4],cx
  0000000000000050: 0F 84 25 04 00 00  je          000000000000047B
  0000000000000056: 66 39 4A 06        cmp         word ptr [rdx+6],cx
  000000000000005A: 0F 84 1B 04 00 00  je          000000000000047B
  0000000000000060: 80 7A 16 0C        cmp         byte ptr [rdx+16h],0Ch
  0000000000000064: 0F 87 11 04 00 00  ja          000000000000047B
  000000000000006A: 80 7A 17 0C        cmp         byte ptr [rdx+17h],0Ch
  000000000000006E: 0F 87 07 04 00 00  ja          000000000000047B
  0000000000000074: 80 7A 18 0C        cmp         byte ptr [rdx+18h],0Ch
  0000000000000078: 0F 87 FD 03 00 00  ja          000000000000047B
  000000000000007E: 80 7A 19 0C        cmp         byte ptr [rdx+19h],0Ch
  0000000000000082: 0F 87 F3 03 00 00  ja          000000000000047B
  0000000000000088: 80 7A 1A 0C        cmp         byte ptr [rdx+1Ah],0Ch
  000000000000008C: 0F 87 E9 03 00 00  ja          000000000000047B
  0000000000000092: 80 7A 1B 0C        cmp         byte ptr [rdx+1Bh],0Ch
  0000000000000096: 0F 87 DF 03 00 00  ja          000000000000047B
  000000000000009C: 80 7A 1C 0C        cmp         byte ptr [rdx+1Ch],0Ch
  00000000000000A0: 0F 87 D5 03 00 00  ja          000000000000047B
  00000000000000A6: 80 7A 1D 0C        cmp         byte ptr [rdx+1Dh],0Ch
  00000000000000AA: 0F 87 CB 03 00 00  ja          000000000000047B
  00000000000000B0: 80 7A 1E 0C        cmp         byte ptr [rdx+1Eh],0Ch
  00000000000000B4: 0F 87 C1 03 00 00  ja          000000000000047B
  00000000000000BA: 80 7A 1F 0C        cmp         byte ptr [rdx+1Fh],0Ch
  00000000000000BE: 0F 87 B7 03 00 00  ja          000000000000047B
  00000000000000C4: 4C 89 70 D0        mov         qword ptr [rax-30h],r14
  00000000000000C8: 48 8D 4F 08        lea         rcx,[rdi+8]
  00000000000000CC: 33 D2              xor         edx,edx
  00000000000000CE: 41 B8 00 08 00 00  mov         r8d,800h
  00000000000000D4: 4C 89 78 C8        mov         qword ptr [rax-38h],r15
  00000000000000D8: E8 00 00 00 00     call        memset
  00000000000000DD: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000E0: 48 8B CF           mov         rcx,rdi
  00000000000000E3: FF 50 40           call        qword ptr [rax+40h]
  00000000000000E6: 4C 8B BC 24 28 01  mov         r15,qword ptr [rsp+128h]
                    00 00
  00000000000000EE: B8 00 09 00 00     mov         eax,900h
  00000000000000F3: 49 83 CE FF        or          r14,0FFFFFFFFFFFFFFFFh
  00000000000000F7: 66 89 47 0E        mov         word ptr [rdi+0Eh],ax
  00000000000000FB: 4D 85 FF           test        r15,r15
  00000000000000FE: 74 12              je          0000000000000112
  0000000000000100: 49 8B C6           mov         rax,r14
  0000000000000103: 48 FF C0           inc         rax
  0000000000000106: 41 80 3C 07 00     cmp         byte ptr [r15+rax],0
  000000000000010B: 75 F6              jne         0000000000000103
  000000000000010D: 48 85 C0           test        rax,rax
  0000000000000110: 75 3C              jne         000000000000014E
  0000000000000112: 0F B7 43 06        movzx       eax,word ptr [rbx+6]
  0000000000000116: 25 03 00 00 80     and         eax,80000003h
  000000000000011B: 7D 07              jge         0000000000000124
  000000000000011D: FF C8              dec         eax
  000000000000011F: 83 C8 FC           or          eax,0FFFFFFFCh
  0000000000000122: FF C0              inc         eax
  0000000000000124: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  0000000000000129: 44 0F B7 C0        movzx       r8d,ax
  000000000000012D: 49 8B D4           mov         rdx,r12
  0000000000000130: E8 00 00 00 00     call        ??0TSerialNumber@@QEAA@PEADG@Z
  0000000000000135: 4C 8D 44 24 20     lea         r8,[rsp+20h]
  000000000000013A: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  000000000000013F: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  0000000000000144: E8 00 00 00 00     call        ?Get@TSerialNumber@@QEAAHPEADPEAH@Z
  0000000000000149: 4C 8D 7C 24 40     lea         r15,[rsp+40h]
  000000000000014E: 0F B7 53 04        movzx       edx,word ptr [rbx+4]
  0000000000000152: 48 8B CF           mov         rcx,rdi
  0000000000000155: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QEAAXG@Z
  000000000000015A: 0F B7 53 06        movzx       edx,word ptr [rbx+6]
  000000000000015E: 48 8B CF           mov         rcx,rdi
  0000000000000161: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QEAAXG@Z
  0000000000000166: 80 7B 08 00        cmp         byte ptr [rbx+8],0
  000000000000016A: 74 04              je          0000000000000170
  000000000000016C: 80 4F 12 08        or          byte ptr [rdi+12h],8
  0000000000000170: 0F B7 53 0A        movzx       edx,word ptr [rbx+0Ah]
  0000000000000174: 48 8B CF           mov         rcx,rdi
  0000000000000177: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QEAAXH@Z
  000000000000017C: 80 7B 0C 00        cmp         byte ptr [rbx+0Ch],0
  0000000000000180: B1 80              mov         cl,80h
  0000000000000182: 0F B6 C1           movzx       eax,cl
  0000000000000185: B9 C0 00 00 00     mov         ecx,0C0h
  000000000000018A: 0F 45 C1           cmovne      eax,ecx
  000000000000018D: 80 7B 0D 00        cmp         byte ptr [rbx+0Dh],0
  0000000000000191: 74 02              je          0000000000000195
  0000000000000193: 0C 20              or          al,20h
  0000000000000195: 0F B6 D0           movzx       edx,al
  0000000000000198: 48 8B CF           mov         rcx,rdi
  000000000000019B: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QEAAXE@Z
  00000000000001A0: 80 7B 0E 00        cmp         byte ptr [rbx+0Eh],0
  00000000000001A4: 74 04              je          00000000000001AA
  00000000000001A6: 80 4F 12 04        or          byte ptr [rdi+12h],4
  00000000000001AA: 4C 8B 84 24 10 01  mov         r8,qword ptr [rsp+110h]
                    00 00
  00000000000001B2: C6 47 16 20        mov         byte ptr [rdi+16h],20h
  00000000000001B6: 49 8B C6           mov         rax,r14
  00000000000001B9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001C0: 48 FF C0           inc         rax
  00000000000001C3: 41 80 3C 00 00     cmp         byte ptr [r8+rax],0
  00000000000001C8: 75 F6              jne         00000000000001C0
  00000000000001CA: FE C0              inc         al
  00000000000001CC: 49 8B CE           mov         rcx,r14
  00000000000001CF: 02 C0              add         al,al
  00000000000001D1: 88 47 17           mov         byte ptr [rdi+17h],al
  00000000000001D4: 04 20              add         al,20h
  00000000000001D6: 88 47 18           mov         byte ptr [rdi+18h],al
  00000000000001D9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001E0: 48 FF C1           inc         rcx
  00000000000001E3: 41 80 7C 0D 00 00  cmp         byte ptr [r13+rcx],0
  00000000000001E9: 75 F5              jne         00000000000001E0
  00000000000001EB: FE C1              inc         cl
  00000000000001ED: 02 C9              add         cl,cl
  00000000000001EF: 02 C1              add         al,cl
  00000000000001F1: 88 4F 19           mov         byte ptr [rdi+19h],cl
  00000000000001F4: 88 47 1A           mov         byte ptr [rdi+1Ah],al
  00000000000001F7: 66 0F 1F 84 00 00  nop         word ptr [rax+rax]
                    00 00 00
  0000000000000200: 49 FF C6           inc         r14
  0000000000000203: 43 80 3C 37 00     cmp         byte ptr [r15+r14],0
  0000000000000208: 75 F6              jne         0000000000000200
  000000000000020A: 41 FE C6           inc         r14b
  000000000000020D: 48 8D 57 28        lea         rdx,[rdi+28h]
  0000000000000211: 48 8B CF           mov         rcx,rdi
  0000000000000214: 45 02 F6           add         r14b,r14b
  0000000000000217: 44 88 77 1B        mov         byte ptr [rdi+1Bh],r14b
  000000000000021B: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000220: 0F B6 47 18        movzx       eax,byte ptr [rdi+18h]
  0000000000000224: 48 8D 57 08        lea         rdx,[rdi+8]
  0000000000000228: 4D 8B C5           mov         r8,r13
  000000000000022B: 48 8B CF           mov         rcx,rdi
  000000000000022E: 48 03 D0           add         rdx,rax
  0000000000000231: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000236: 0F B6 47 1A        movzx       eax,byte ptr [rdi+1Ah]
  000000000000023A: 48 8D 57 08        lea         rdx,[rdi+8]
  000000000000023E: 48 03 D0           add         rdx,rax
  0000000000000241: 4D 8B C7           mov         r8,r15
  0000000000000244: 48 8B CF           mov         rcx,rdi
  0000000000000247: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  000000000000024C: 0F BE 47 16        movsx       eax,byte ptr [rdi+16h]
  0000000000000250: 48 8B CF           mov         rcx,rdi
  0000000000000253: 89 87 34 08 00 00  mov         dword ptr [rdi+834h],eax
  0000000000000259: 0F BE 47 18        movsx       eax,byte ptr [rdi+18h]
  000000000000025D: 89 87 38 08 00 00  mov         dword ptr [rdi+838h],eax
  0000000000000263: 0F BE 47 1A        movsx       eax,byte ptr [rdi+1Ah]
  0000000000000267: 89 87 3C 08 00 00  mov         dword ptr [rdi+83Ch],eax
  000000000000026D: 80 4F 16 80        or          byte ptr [rdi+16h],80h
  0000000000000271: 80 4F 18 80        or          byte ptr [rdi+18h],80h
  0000000000000275: 80 4F 1A 80        or          byte ptr [rdi+1Ah],80h
  0000000000000279: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000027C: FF 50 48           call        qword ptr [rax+48h]
  000000000000027F: 80 7B 23 00        cmp         byte ptr [rbx+23h],0
  0000000000000283: 4C 8B BC 24 C0 00  mov         r15,qword ptr [rsp+0C0h]
                    00 00
  000000000000028B: 74 07              je          0000000000000294
  000000000000028D: BD 01 00 00 00     mov         ebp,1
  0000000000000292: EB 25              jmp         00000000000002B9
  0000000000000294: 80 7B 24 00        cmp         byte ptr [rbx+24h],0
  0000000000000298: 74 07              je          00000000000002A1
  000000000000029A: BD 02 00 00 00     mov         ebp,2
  000000000000029F: EB 18              jmp         00000000000002B9
  00000000000002A1: 80 7B 25 00        cmp         byte ptr [rbx+25h],0
  00000000000002A5: 74 07              je          00000000000002AE
  00000000000002A7: BD 04 00 00 00     mov         ebp,4
  00000000000002AC: EB 0B              jmp         00000000000002B9
  00000000000002AE: 80 7B 26 00        cmp         byte ptr [rbx+26h],0
  00000000000002B2: 74 05              je          00000000000002B9
  00000000000002B4: BD 08 00 00 00     mov         ebp,8
  00000000000002B9: 80 7B 28 01        cmp         byte ptr [rbx+28h],1
  00000000000002BD: 75 04              jne         00000000000002C3
  00000000000002BF: 66 83 CD 10        or          bp,10h
  00000000000002C3: 80 7B 20 00        cmp         byte ptr [rbx+20h],0
  00000000000002C7: 74 08              je          00000000000002D1
  00000000000002C9: B8 00 01 00 00     mov         eax,100h
  00000000000002CE: 66 0B E8           or          bp,ax
  00000000000002D1: 80 7B 21 00        cmp         byte ptr [rbx+21h],0
  00000000000002D5: 74 08              je          00000000000002DF
  00000000000002D7: B8 00 02 00 00     mov         eax,200h
  00000000000002DC: 66 0B E8           or          bp,ax
  00000000000002DF: 80 7B 22 00        cmp         byte ptr [rbx+22h],0
  00000000000002E3: 74 08              je          00000000000002ED
  00000000000002E5: B8 00 04 00 00     mov         eax,400h
  00000000000002EA: 66 0B E8           or          bp,ax
  00000000000002ED: 80 7B 27 00        cmp         byte ptr [rbx+27h],0
  00000000000002F1: 74 08              je          00000000000002FB
  00000000000002F3: B8 00 80 00 00     mov         eax,8000h
  00000000000002F8: 66 0B E8           or          bp,ax
  00000000000002FB: 66 89 6F 08        mov         word ptr [rdi+8],bp
  00000000000002FF: 0F B6 43 15        movzx       eax,byte ptr [rbx+15h]
  0000000000000303: 3C 04              cmp         al,4
  0000000000000305: 74 1F              je          0000000000000326
  0000000000000307: 3C 08              cmp         al,8
  0000000000000309: 75 07              jne         0000000000000312
  000000000000030B: BE 10 00 00 00     mov         esi,10h
  0000000000000310: EB 14              jmp         0000000000000326
  0000000000000312: 3C 0C              cmp         al,0Ch
  0000000000000314: 75 07              jne         000000000000031D
  0000000000000316: BE 20 00 00 00     mov         esi,20h
  000000000000031B: EB 09              jmp         0000000000000326
  000000000000031D: 3C 10              cmp         al,10h
  000000000000031F: 75 05              jne         0000000000000326
  0000000000000321: BE 30 00 00 00     mov         esi,30h
  0000000000000326: 80 7B 13 00        cmp         byte ptr [rbx+13h],0
  000000000000032A: 74 04              je          0000000000000330
  000000000000032C: 66 83 CE 40        or          si,40h
  0000000000000330: 80 7B 14 00        cmp         byte ptr [rbx+14h],0
  0000000000000334: 74 08              je          000000000000033E
  0000000000000336: B8 80 00 00 00     mov         eax,80h
  000000000000033B: 66 0B F0           or          si,ax
  000000000000033E: 0F B6 43 12        movzx       eax,byte ptr [rbx+12h]
  0000000000000342: 3C 04              cmp         al,4
  0000000000000344: 74 1C              je          0000000000000362
  0000000000000346: 3C 08              cmp         al,8
  0000000000000348: 75 06              jne         0000000000000350
  000000000000034A: 66 83 CE 01        or          si,1
  000000000000034E: EB 12              jmp         0000000000000362
  0000000000000350: 3C 0C              cmp         al,0Ch
  0000000000000352: 75 06              jne         000000000000035A
  0000000000000354: 66 83 CE 02        or          si,2
  0000000000000358: EB 08              jmp         0000000000000362
  000000000000035A: 3C 10              cmp         al,10h
  000000000000035C: 75 04              jne         0000000000000362
  000000000000035E: 66 83 CE 03        or          si,3
  0000000000000362: 80 7B 10 00        cmp         byte ptr [rbx+10h],0
  0000000000000366: 74 04              je          000000000000036C
  0000000000000368: 66 83 CE 04        or          si,4
  000000000000036C: 80 7B 11 00        cmp         byte ptr [rbx+11h],0
  0000000000000370: 74 04              je          0000000000000376
  0000000000000372: 66 83 CE 08        or          si,8
  0000000000000376: 66 89 77 14        mov         word ptr [rdi+14h],si
  000000000000037A: 0F B6 4B 16        movzx       ecx,byte ptr [rbx+16h]
  000000000000037E: 88 4F 20           mov         byte ptr [rdi+20h],cl
  0000000000000381: 0F B6 43 17        movzx       eax,byte ptr [rbx+17h]
  0000000000000385: C0 E0 04           shl         al,4
  0000000000000388: 0A C1              or          al,cl
  000000000000038A: 88 47 20           mov         byte ptr [rdi+20h],al
  000000000000038D: 0F B6 4B 18        movzx       ecx,byte ptr [rbx+18h]
  0000000000000391: 88 4F 21           mov         byte ptr [rdi+21h],cl
  0000000000000394: 0F B6 43 19        movzx       eax,byte ptr [rbx+19h]
  0000000000000398: C0 E0 04           shl         al,4
  000000000000039B: 0A C1              or          al,cl
  000000000000039D: 88 47 21           mov         byte ptr [rdi+21h],al
  00000000000003A0: 0F B6 4B 1A        movzx       ecx,byte ptr [rbx+1Ah]
  00000000000003A4: 88 4F 22           mov         byte ptr [rdi+22h],cl
  00000000000003A7: 0F B6 43 1B        movzx       eax,byte ptr [rbx+1Bh]
  00000000000003AB: C0 E0 04           shl         al,4
  00000000000003AE: 0A C1              or          al,cl
  00000000000003B0: 88 47 22           mov         byte ptr [rdi+22h],al
  00000000000003B3: 0F B6 4B 1C        movzx       ecx,byte ptr [rbx+1Ch]
  00000000000003B7: 88 4F 23           mov         byte ptr [rdi+23h],cl
  00000000000003BA: 0F B6 43 1D        movzx       eax,byte ptr [rbx+1Dh]
  00000000000003BE: C0 E0 04           shl         al,4
  00000000000003C1: 0A C1              or          al,cl
  00000000000003C3: 88 47 23           mov         byte ptr [rdi+23h],al
  00000000000003C6: 0F B6 4B 1E        movzx       ecx,byte ptr [rbx+1Eh]
  00000000000003CA: 88 4F 24           mov         byte ptr [rdi+24h],cl
  00000000000003CD: 0F B6 43 1F        movzx       eax,byte ptr [rbx+1Fh]
  00000000000003D1: C0 E0 04           shl         al,4
  00000000000003D4: 0A C1              or          al,cl
  00000000000003D6: 88 47 24           mov         byte ptr [rdi+24h],al
  00000000000003D9: 0F B7 87 32 08 00  movzx       eax,word ptr [rdi+832h]
                    00
  00000000000003E0: 66 85 C0           test        ax,ax
  00000000000003E3: 75 05              jne         00000000000003EA
  00000000000003E5: B8 56 00 00 00     mov         eax,56h
  00000000000003EA: 66 89 47 26        mov         word ptr [rdi+26h],ax
  00000000000003EE: B8 02 03 00 00     mov         eax,302h
  00000000000003F3: 48 8D 94 24 08 01  lea         rdx,[rsp+108h]
                    00 00
  00000000000003FB: 48 8B CF           mov         rcx,rdi
  00000000000003FE: C6 87 92 00 00 00  mov         byte ptr [rdi+92h],48h
                    48
  0000000000000405: 66 89 84 24 08 01  mov         word ptr [rsp+108h],ax
                    00 00
  000000000000040D: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  0000000000000412: 33 D2              xor         edx,edx
  0000000000000414: 48 8B CF           mov         rcx,rdi
  0000000000000417: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  000000000000041C: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000041F: 48 8B CF           mov         rcx,rdi
  0000000000000422: FF 50 08           call        qword ptr [rax+8]
  0000000000000425: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000428: 33 DB              xor         ebx,ebx
  000000000000042A: 48 8B CF           mov         rcx,rdi
  000000000000042D: 89 9F 0C 08 00 00  mov         dword ptr [rdi+80Ch],ebx
  0000000000000433: FF 50 40           call        qword ptr [rax+40h]
  0000000000000436: 48 8D 4F 08        lea         rcx,[rdi+8]
  000000000000043A: E8 00 00 00 00     call        ?Write@TEeData@@QEAAHXZ
  000000000000043F: 85 C0              test        eax,eax
  0000000000000441: 75 21              jne         0000000000000464
  0000000000000443: 8D 43 0C           lea         eax,[rbx+0Ch]
  0000000000000446: 4C 8B B4 24 C8 00  mov         r14,qword ptr [rsp+0C8h]
                    00 00
  000000000000044E: 4C 8B AC 24 00 01  mov         r13,qword ptr [rsp+100h]
                    00 00
  0000000000000456: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  000000000000045D: 41 5C              pop         r12
  000000000000045F: 5F                 pop         rdi
  0000000000000460: 5E                 pop         rsi
  0000000000000461: 5D                 pop         rbp
  0000000000000462: 5B                 pop         rbx
  0000000000000463: C3                 ret
  0000000000000464: 48 8D 4F 08        lea         rcx,[rdi+8]
  0000000000000468: E8 00 00 00 00     call        ?Confirm@TEeData@@QEAAHXZ
  000000000000046D: B9 0C 00 00 00     mov         ecx,0Ch
  0000000000000472: 85 C0              test        eax,eax
  0000000000000474: 0F 44 D9           cmove       ebx,ecx
  0000000000000477: 8B C3              mov         eax,ebx
  0000000000000479: EB CB              jmp         0000000000000446
  000000000000047B: B8 06 00 00 00     mov         eax,6
  0000000000000480: EB CC              jmp         000000000000044E
  0000000000000482: B8 06 00 00 00     mov         eax,6
  0000000000000487: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  000000000000048E: 41 5C              pop         r12
  0000000000000490: 5F                 pop         rdi
  0000000000000491: 5E                 pop         rsi
  0000000000000492: 5D                 pop         rbp
  0000000000000493: 5B                 pop         rbx
  0000000000000494: C3                 ret

?Read@TFtEE232H@@UEAAHXZ (public: virtual int __cdecl TFtEE232H::Read(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ?Read@TFtE2Data@@UEAAHXZ
  000000000000000E: 85 C0              test        eax,eax
  0000000000000010: 75 06              jne         0000000000000018
  0000000000000012: 48 83 C4 20        add         rsp,20h
  0000000000000016: 5B                 pop         rbx
  0000000000000017: C3                 ret
  0000000000000018: 0F B7 43 26        movzx       eax,word ptr [rbx+26h]
  000000000000001C: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  0000000000000023: 66 83 F8 56        cmp         ax,56h
  0000000000000027: 74 25              je          000000000000004E
  0000000000000029: 66 83 F8 66        cmp         ax,66h
  000000000000002D: 74 1F              je          000000000000004E
  000000000000002F: B9 31 52 00 00     mov         ecx,5231h
  0000000000000034: 66 3B C1           cmp         ax,cx
  0000000000000037: 74 15              je          000000000000004E
  0000000000000039: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],40h
                    40 00 00 00
  0000000000000043: B8 01 00 00 00     mov         eax,1
  0000000000000048: 48 83 C4 20        add         rsp,20h
  000000000000004C: 5B                 pop         rbx
  000000000000004D: C3                 ret
  000000000000004E: 83 AB 34 08 00 00  sub         dword ptr [rbx+834h],0FFFFFF80h
                    80
  0000000000000055: 83 AB 38 08 00 00  sub         dword ptr [rbx+838h],0FFFFFF80h
                    80
  000000000000005C: 83 AB 3C 08 00 00  sub         dword ptr [rbx+83Ch],0FFFFFF80h
                    80
  0000000000000063: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  000000000000006D: B8 01 00 00 00     mov         eax,1
  0000000000000072: 48 83 C4 20        add         rsp,20h
  0000000000000076: 5B                 pop         rbx
  0000000000000077: C3                 ret

?ReadAndParse@TFtEE232H@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE232H::ReadAndParse(void *,char *,char *,char *,char *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 54              push        r12
  0000000000000016: 41 56              push        r14
  0000000000000018: 41 57              push        r15
  000000000000001A: 48 83 EC 60        sub         rsp,60h
  000000000000001E: 45 33 E4           xor         r12d,r12d
  0000000000000021: 4D 8B F1           mov         r14,r9
  0000000000000024: 4D 8B F8           mov         r15,r8
  0000000000000027: 48 8B DA           mov         rbx,rdx
  000000000000002A: 48 8B F9           mov         rdi,rcx
  000000000000002D: 48 85 D2           test        rdx,rdx
  0000000000000030: 0F 84 FD 02 00 00  je          0000000000000333
  0000000000000036: 4D 85 C0           test        r8,r8
  0000000000000039: 0F 84 F4 02 00 00  je          0000000000000333
  000000000000003F: 4D 85 C9           test        r9,r9
  0000000000000042: 0F 84 EB 02 00 00  je          0000000000000333
  0000000000000048: 48 8B B4 24 A0 00  mov         rsi,qword ptr [rsp+0A0h]
                    00 00
  0000000000000050: 48 85 F6           test        rsi,rsi
  0000000000000053: 0F 84 DA 02 00 00  je          0000000000000333
  0000000000000059: 48 8B AC 24 A8 00  mov         rbp,qword ptr [rsp+0A8h]
                    00 00
  0000000000000061: 48 85 ED           test        rbp,rbp
  0000000000000064: 0F 84 C9 02 00 00  je          0000000000000333
  000000000000006A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000006D: FF 10              call        qword ptr [rax]
  000000000000006F: 85 C0              test        eax,eax
  0000000000000071: 0F 84 B1 02 00 00  je          0000000000000328
  0000000000000077: 0F B7 47 26        movzx       eax,word ptr [rdi+26h]
  000000000000007B: 48 8B CF           mov         rcx,rdi
  000000000000007E: 66 89 87 32 08 00  mov         word ptr [rdi+832h],ax
                    00
  0000000000000085: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  000000000000008A: 66 85 C0           test        ax,ax
  000000000000008D: 75 0E              jne         000000000000009D
  000000000000008F: 41 BC 0E 00 00 00  mov         r12d,0Eh
  0000000000000095: 41 8B C4           mov         eax,r12d
  0000000000000098: E9 9B 02 00 00     jmp         0000000000000338
  000000000000009D: B9 FF FF 00 00     mov         ecx,0FFFFh
  00000000000000A2: 66 3B C1           cmp         ax,cx
  00000000000000A5: 75 0E              jne         00000000000000B5
  00000000000000A7: 41 BC 0F 00 00 00  mov         r12d,0Fh
  00000000000000AD: 41 8B C4           mov         eax,r12d
  00000000000000B0: E9 83 02 00 00     jmp         0000000000000338
  00000000000000B5: 48 8B CF           mov         rcx,rdi
  00000000000000B8: 66 89 43 04        mov         word ptr [rbx+4],ax
  00000000000000BC: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  00000000000000C1: 48 8B CF           mov         rcx,rdi
  00000000000000C4: 66 89 43 06        mov         word ptr [rbx+6],ax
  00000000000000C8: 0F BE 47 12        movsx       eax,byte ptr [rdi+12h]
  00000000000000CC: C1 E8 03           shr         eax,3
  00000000000000CF: 24 01              and         al,1
  00000000000000D1: 88 43 08           mov         byte ptr [rbx+8],al
  00000000000000D4: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  00000000000000D9: 48 8B CF           mov         rcx,rdi
  00000000000000DC: 66 89 43 0A        mov         word ptr [rbx+0Ah],ax
  00000000000000E0: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  00000000000000E5: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000EA: 0F B6 C8           movzx       ecx,al
  00000000000000ED: C0 E8 05           shr         al,5
  00000000000000F0: 24 01              and         al,1
  00000000000000F2: C0 E9 06           shr         cl,6
  00000000000000F5: 88 43 0D           mov         byte ptr [rbx+0Dh],al
  00000000000000F8: 80 E1 01           and         cl,1
  00000000000000FB: 88 4B 0C           mov         byte ptr [rbx+0Ch],cl
  00000000000000FE: 0F BE 47 12        movsx       eax,byte ptr [rdi+12h]
  0000000000000102: 48 8B CF           mov         rcx,rdi
  0000000000000105: C1 E8 02           shr         eax,2
  0000000000000108: 24 01              and         al,1
  000000000000010A: 88 43 0E           mov         byte ptr [rbx+0Eh],al
  000000000000010D: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  0000000000000112: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000117: 4C 2B F8           sub         r15,rax
  000000000000011A: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000011F: 90                 nop
  0000000000000120: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000123: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000127: 41 88 44 0F FF     mov         byte ptr [r15+rcx-1],al
  000000000000012C: 84 C0              test        al,al
  000000000000012E: 75 F0              jne         0000000000000120
  0000000000000130: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000135: 48 8B CF           mov         rcx,rdi
  0000000000000138: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  000000000000013D: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000142: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000147: 4C 2B F0           sub         r14,rax
  000000000000014A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000150: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000153: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000157: 41 88 44 0E FF     mov         byte ptr [r14+rcx-1],al
  000000000000015C: 84 C0              test        al,al
  000000000000015E: 75 F0              jne         0000000000000150
  0000000000000160: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000165: 48 8B CF           mov         rcx,rdi
  0000000000000168: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  000000000000016D: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000172: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000177: 48 2B F0           sub         rsi,rax
  000000000000017A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000180: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000183: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000187: 88 44 0E FF        mov         byte ptr [rsi+rcx-1],al
  000000000000018B: 84 C0              test        al,al
  000000000000018D: 75 F1              jne         0000000000000180
  000000000000018F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000194: 48 8B CF           mov         rcx,rdi
  0000000000000197: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000019C: 48 8D 44 24 20     lea         rax,[rsp+20h]
  00000000000001A1: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000001A6: 48 2B E8           sub         rbp,rax
  00000000000001A9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001B0: 0F B6 01           movzx       eax,byte ptr [rcx]
  00000000000001B3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000001B7: 88 44 29 FF        mov         byte ptr [rcx+rbp-1],al
  00000000000001BB: 84 C0              test        al,al
  00000000000001BD: 75 F1              jne         00000000000001B0
  00000000000001BF: 0F B7 4F 08        movzx       ecx,word ptr [rdi+8]
  00000000000001C3: 0F B6 C1           movzx       eax,cl
  00000000000001C6: 24 01              and         al,1
  00000000000001C8: 88 43 23           mov         byte ptr [rbx+23h],al
  00000000000001CB: 0F B6 C1           movzx       eax,cl
  00000000000001CE: D0 E8              shr         al,1
  00000000000001D0: 24 01              and         al,1
  00000000000001D2: 88 43 24           mov         byte ptr [rbx+24h],al
  00000000000001D5: 0F B6 C1           movzx       eax,cl
  00000000000001D8: C0 E8 02           shr         al,2
  00000000000001DB: 24 01              and         al,1
  00000000000001DD: 88 43 25           mov         byte ptr [rbx+25h],al
  00000000000001E0: 0F B6 C1           movzx       eax,cl
  00000000000001E3: C0 E8 03           shr         al,3
  00000000000001E6: 24 01              and         al,1
  00000000000001E8: 88 43 26           mov         byte ptr [rbx+26h],al
  00000000000001EB: 0F B7 C1           movzx       eax,cx
  00000000000001EE: 66 C1 E8 08        shr         ax,8
  00000000000001F2: 24 01              and         al,1
  00000000000001F4: 88 43 20           mov         byte ptr [rbx+20h],al
  00000000000001F7: 0F B7 C1           movzx       eax,cx
  00000000000001FA: 66 C1 E8 09        shr         ax,9
  00000000000001FE: 24 01              and         al,1
  0000000000000200: 88 43 21           mov         byte ptr [rbx+21h],al
  0000000000000203: 0F B7 C1           movzx       eax,cx
  0000000000000206: 66 C1 E8 0A        shr         ax,0Ah
  000000000000020A: 24 01              and         al,1
  000000000000020C: 88 43 22           mov         byte ptr [rbx+22h],al
  000000000000020F: 0F B6 C1           movzx       eax,cl
  0000000000000212: 66 C1 E9 0F        shr         cx,0Fh
  0000000000000216: C0 E8 04           shr         al,4
  0000000000000219: 80 E1 01           and         cl,1
  000000000000021C: 24 01              and         al,1
  000000000000021E: 88 4B 27           mov         byte ptr [rbx+27h],cl
  0000000000000221: 88 43 28           mov         byte ptr [rbx+28h],al
  0000000000000224: 0F B7 4F 14        movzx       ecx,word ptr [rdi+14h]
  0000000000000228: 0F B7 C1           movzx       eax,cx
  000000000000022B: 66 83 E0 30        and         ax,30h
  000000000000022F: 66 83 F8 30        cmp         ax,30h
  0000000000000233: 75 06              jne         000000000000023B
  0000000000000235: C6 43 15 10        mov         byte ptr [rbx+15h],10h
  0000000000000239: EB 21              jmp         000000000000025C
  000000000000023B: 66 83 F8 20        cmp         ax,20h
  000000000000023F: 75 06              jne         0000000000000247
  0000000000000241: C6 43 15 0C        mov         byte ptr [rbx+15h],0Ch
  0000000000000245: EB 15              jmp         000000000000025C
  0000000000000247: 66 83 F8 10        cmp         ax,10h
  000000000000024B: 75 06              jne         0000000000000253
  000000000000024D: C6 43 15 08        mov         byte ptr [rbx+15h],8
  0000000000000251: EB 09              jmp         000000000000025C
  0000000000000253: 66 85 C0           test        ax,ax
  0000000000000256: 75 04              jne         000000000000025C
  0000000000000258: C6 43 15 04        mov         byte ptr [rbx+15h],4
  000000000000025C: 0F B6 C1           movzx       eax,cl
  000000000000025F: C0 E8 06           shr         al,6
  0000000000000262: 24 01              and         al,1
  0000000000000264: 88 43 13           mov         byte ptr [rbx+13h],al
  0000000000000267: 0F B6 C1           movzx       eax,cl
  000000000000026A: C0 E8 07           shr         al,7
  000000000000026D: 24 01              and         al,1
  000000000000026F: 88 43 14           mov         byte ptr [rbx+14h],al
  0000000000000272: 0F B7 C1           movzx       eax,cx
  0000000000000275: 66 83 E0 03        and         ax,3
  0000000000000279: 66 83 F8 03        cmp         ax,3
  000000000000027D: 75 06              jne         0000000000000285
  000000000000027F: C6 43 12 10        mov         byte ptr [rbx+12h],10h
  0000000000000283: EB 21              jmp         00000000000002A6
  0000000000000285: 66 83 F8 02        cmp         ax,2
  0000000000000289: 75 06              jne         0000000000000291
  000000000000028B: C6 43 12 0C        mov         byte ptr [rbx+12h],0Ch
  000000000000028F: EB 15              jmp         00000000000002A6
  0000000000000291: 66 83 F8 01        cmp         ax,1
  0000000000000295: 75 06              jne         000000000000029D
  0000000000000297: C6 43 12 08        mov         byte ptr [rbx+12h],8
  000000000000029B: EB 09              jmp         00000000000002A6
  000000000000029D: 66 85 C0           test        ax,ax
  00000000000002A0: 75 04              jne         00000000000002A6
  00000000000002A2: C6 43 12 04        mov         byte ptr [rbx+12h],4
  00000000000002A6: 0F B6 C1           movzx       eax,cl
  00000000000002A9: C0 E9 03           shr         cl,3
  00000000000002AC: C0 E8 02           shr         al,2
  00000000000002AF: 80 E1 01           and         cl,1
  00000000000002B2: 24 01              and         al,1
  00000000000002B4: 88 4B 11           mov         byte ptr [rbx+11h],cl
  00000000000002B7: 88 43 10           mov         byte ptr [rbx+10h],al
  00000000000002BA: 0F B6 47 20        movzx       eax,byte ptr [rdi+20h]
  00000000000002BE: 24 0F              and         al,0Fh
  00000000000002C0: 88 43 16           mov         byte ptr [rbx+16h],al
  00000000000002C3: 0F B6 47 20        movzx       eax,byte ptr [rdi+20h]
  00000000000002C7: C0 F8 04           sar         al,4
  00000000000002CA: 24 0F              and         al,0Fh
  00000000000002CC: 88 43 17           mov         byte ptr [rbx+17h],al
  00000000000002CF: 0F B6 47 21        movzx       eax,byte ptr [rdi+21h]
  00000000000002D3: 24 0F              and         al,0Fh
  00000000000002D5: 88 43 18           mov         byte ptr [rbx+18h],al
  00000000000002D8: 0F B6 47 21        movzx       eax,byte ptr [rdi+21h]
  00000000000002DC: C0 F8 04           sar         al,4
  00000000000002DF: 24 0F              and         al,0Fh
  00000000000002E1: 88 43 19           mov         byte ptr [rbx+19h],al
  00000000000002E4: 0F B6 47 22        movzx       eax,byte ptr [rdi+22h]
  00000000000002E8: 24 0F              and         al,0Fh
  00000000000002EA: 88 43 1A           mov         byte ptr [rbx+1Ah],al
  00000000000002ED: 0F B6 47 22        movzx       eax,byte ptr [rdi+22h]
  00000000000002F1: C0 F8 04           sar         al,4
  00000000000002F4: 24 0F              and         al,0Fh
  00000000000002F6: 88 43 1B           mov         byte ptr [rbx+1Bh],al
  00000000000002F9: 0F B6 47 23        movzx       eax,byte ptr [rdi+23h]
  00000000000002FD: 24 0F              and         al,0Fh
  00000000000002FF: 88 43 1C           mov         byte ptr [rbx+1Ch],al
  0000000000000302: 0F B6 47 23        movzx       eax,byte ptr [rdi+23h]
  0000000000000306: C0 F8 04           sar         al,4
  0000000000000309: 24 0F              and         al,0Fh
  000000000000030B: 88 43 1D           mov         byte ptr [rbx+1Dh],al
  000000000000030E: 0F B6 47 24        movzx       eax,byte ptr [rdi+24h]
  0000000000000312: 24 0F              and         al,0Fh
  0000000000000314: 88 43 1E           mov         byte ptr [rbx+1Eh],al
  0000000000000317: 0F B6 47 24        movzx       eax,byte ptr [rdi+24h]
  000000000000031B: C0 F8 04           sar         al,4
  000000000000031E: 24 0F              and         al,0Fh
  0000000000000320: 88 43 1F           mov         byte ptr [rbx+1Fh],al
  0000000000000323: 41 8B C4           mov         eax,r12d
  0000000000000326: EB 10              jmp         0000000000000338
  0000000000000328: 41 BC 0B 00 00 00  mov         r12d,0Bh
  000000000000032E: 41 8B C4           mov         eax,r12d
  0000000000000331: EB 05              jmp         0000000000000338
  0000000000000333: B8 06 00 00 00     mov         eax,6
  0000000000000338: 4C 8D 5C 24 60     lea         r11,[rsp+60h]
  000000000000033D: 49 8B 5B 20        mov         rbx,qword ptr [r11+20h]
  0000000000000341: 49 8B 6B 28        mov         rbp,qword ptr [r11+28h]
  0000000000000345: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  0000000000000349: 49 8B 7B 38        mov         rdi,qword ptr [r11+38h]
  000000000000034D: 49 8B E3           mov         rsp,r11
  0000000000000350: 41 5F              pop         r15
  0000000000000352: 41 5E              pop         r14
  0000000000000354: 41 5C              pop         r12
  0000000000000356: C3                 ret

?ReadAndParse@TFtEE232H@@UEAAKPEAX@Z (public: virtual unsigned long __cdecl TFtEE232H::ReadAndParse(void *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 60        sub         rsp,60h
  000000000000000A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000D: 48 8B DA           mov         rbx,rdx
  0000000000000010: 48 8B F9           mov         rdi,rcx
  0000000000000013: FF 10              call        qword ptr [rax]
  0000000000000015: 85 C0              test        eax,eax
  0000000000000017: 75 10              jne         0000000000000029
  0000000000000019: B8 0B 00 00 00     mov         eax,0Bh
  000000000000001E: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  0000000000000023: 48 83 C4 60        add         rsp,60h
  0000000000000027: 5F                 pop         rdi
  0000000000000028: C3                 ret
  0000000000000029: 0F B7 47 26        movzx       eax,word ptr [rdi+26h]
  000000000000002D: 48 8B CF           mov         rcx,rdi
  0000000000000030: 66 89 87 32 08 00  mov         word ptr [rdi+832h],ax
                    00
  0000000000000037: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  000000000000003C: 66 85 C0           test        ax,ax
  000000000000003F: 75 10              jne         0000000000000051
  0000000000000041: B8 0E 00 00 00     mov         eax,0Eh
  0000000000000046: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  000000000000004B: 48 83 C4 60        add         rsp,60h
  000000000000004F: 5F                 pop         rdi
  0000000000000050: C3                 ret
  0000000000000051: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000000000000056: 66 3B C1           cmp         ax,cx
  0000000000000059: 75 10              jne         000000000000006B
  000000000000005B: B8 0F 00 00 00     mov         eax,0Fh
  0000000000000060: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  0000000000000065: 48 83 C4 60        add         rsp,60h
  0000000000000069: 5F                 pop         rdi
  000000000000006A: C3                 ret
  000000000000006B: 48 8B CF           mov         rcx,rdi
  000000000000006E: 48 89 74 24 70     mov         qword ptr [rsp+70h],rsi
  0000000000000073: 66 89 43 0C        mov         word ptr [rbx+0Ch],ax
  0000000000000077: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  000000000000007C: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000081: 48 8B CF           mov         rcx,rdi
  0000000000000084: 66 89 43 0E        mov         word ptr [rbx+0Eh],ax
  0000000000000088: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  000000000000008D: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  0000000000000091: 48 85 C9           test        rcx,rcx
  0000000000000094: 74 1C              je          00000000000000B2
  0000000000000096: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  000000000000009B: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  00000000000000A0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000A3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000A7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000AB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000AE: 84 C0              test        al,al
  00000000000000B0: 75 EE              jne         00000000000000A0
  00000000000000B2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000B7: 48 8B CF           mov         rcx,rdi
  00000000000000BA: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000BF: 48 8B 4B 18        mov         rcx,qword ptr [rbx+18h]
  00000000000000C3: 48 85 C9           test        rcx,rcx
  00000000000000C6: 74 1A              je          00000000000000E2
  00000000000000C8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000CD: 0F 1F 00           nop         dword ptr [rax]
  00000000000000D0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000D3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000D7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000DB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000DE: 84 C0              test        al,al
  00000000000000E0: 75 EE              jne         00000000000000D0
  00000000000000E2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000E7: 48 8B CF           mov         rcx,rdi
  00000000000000EA: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000EF: 48 8B 4B 20        mov         rcx,qword ptr [rbx+20h]
  00000000000000F3: 48 85 C9           test        rcx,rcx
  00000000000000F6: 74 1A              je          0000000000000112
  00000000000000F8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000FD: 0F 1F 00           nop         dword ptr [rax]
  0000000000000100: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000103: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000107: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000010B: 88 41 FF           mov         byte ptr [rcx-1],al
  000000000000010E: 84 C0              test        al,al
  0000000000000110: 75 EE              jne         0000000000000100
  0000000000000112: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000117: 48 8B CF           mov         rcx,rdi
  000000000000011A: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000011F: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  0000000000000123: 48 85 C9           test        rcx,rcx
  0000000000000126: 74 1A              je          0000000000000142
  0000000000000128: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  000000000000012D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000130: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000133: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000137: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000013B: 88 41 FF           mov         byte ptr [rcx-1],al
  000000000000013E: 84 C0              test        al,al
  0000000000000140: 75 EE              jne         0000000000000130
  0000000000000142: 48 8B CF           mov         rcx,rdi
  0000000000000145: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  000000000000014A: 48 8B CF           mov         rcx,rdi
  000000000000014D: 66 89 43 30        mov         word ptr [rbx+30h],ax
  0000000000000151: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QEAAGXZ
  0000000000000156: 33 F6              xor         esi,esi
  0000000000000158: 8B CE              mov         ecx,esi
  000000000000015A: 66 85 C0           test        ax,ax
  000000000000015D: 0F 94 C1           sete        cl
  0000000000000160: 66 89 4B 32        mov         word ptr [rbx+32h],cx
  0000000000000164: 48 8B CF           mov         rcx,rdi
  0000000000000167: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  000000000000016C: 48 89 73 38        mov         qword ptr [rbx+38h],rsi
  0000000000000170: 89 73 40           mov         dword ptr [rbx+40h],esi
  0000000000000173: 0F B6 C8           movzx       ecx,al
  0000000000000176: C0 E8 05           shr         al,5
  0000000000000179: 48 89 73 48        mov         qword ptr [rbx+48h],rsi
  000000000000017D: 24 01              and         al,1
  000000000000017F: 48 89 73 50        mov         qword ptr [rbx+50h],rsi
  0000000000000183: 66 89 73 45        mov         word ptr [rbx+45h],si
  0000000000000187: 0F B6 C0           movzx       eax,al
  000000000000018A: 40 88 73 47        mov         byte ptr [rbx+47h],sil
  000000000000018E: 40 88 73 44        mov         byte ptr [rbx+44h],sil
  0000000000000192: 66 89 43 36        mov         word ptr [rbx+36h],ax
  0000000000000196: 89 73 65           mov         dword ptr [rbx+65h],esi
  0000000000000199: 48 89 73 58        mov         qword ptr [rbx+58h],rsi
  000000000000019D: 89 73 60           mov         dword ptr [rbx+60h],esi
  00000000000001A0: 40 88 73 64        mov         byte ptr [rbx+64h],sil
  00000000000001A4: 48 89 73 75        mov         qword ptr [rbx+75h],rsi
  00000000000001A8: 66 89 73 6A        mov         word ptr [rbx+6Ah],si
  00000000000001AC: 40 88 73 69        mov         byte ptr [rbx+69h],sil
  00000000000001B0: 66 89 73 6D        mov         word ptr [rbx+6Dh],si
  00000000000001B4: 40 88 73 6C        mov         byte ptr [rbx+6Ch],sil
  00000000000001B8: 66 89 73 70        mov         word ptr [rbx+70h],si
  00000000000001BC: 40 88 73 6F        mov         byte ptr [rbx+6Fh],sil
  00000000000001C0: 66 89 73 73        mov         word ptr [rbx+73h],si
  00000000000001C4: 40 88 73 72        mov         byte ptr [rbx+72h],sil
  00000000000001C8: 48 89 B3 8C 00 00  mov         qword ptr [rbx+8Ch],rsi
                    00
  00000000000001CF: 66 89 73 7E        mov         word ptr [rbx+7Eh],si
  00000000000001D3: 66 89 B3 81 00 00  mov         word ptr [rbx+81h],si
                    00
  00000000000001DA: 40 88 B3 80 00 00  mov         byte ptr [rbx+80h],sil
                    00
  00000000000001E1: 66 89 B3 84 00 00  mov         word ptr [rbx+84h],si
                    00
  00000000000001E8: 40 88 B3 83 00 00  mov         byte ptr [rbx+83h],sil
                    00
  00000000000001EF: 66 89 B3 87 00 00  mov         word ptr [rbx+87h],si
                    00
  00000000000001F6: 40 88 B3 86 00 00  mov         byte ptr [rbx+86h],sil
                    00
  00000000000001FD: C0 E9 06           shr         cl,6
  0000000000000200: 80 E1 01           and         cl,1
  0000000000000203: 0F B6 C9           movzx       ecx,cl
  0000000000000206: 66 89 4B 34        mov         word ptr [rbx+34h],cx
  000000000000020A: 66 89 B3 8A 00 00  mov         word ptr [rbx+8Ah],si
                    00
  0000000000000211: 40 88 B3 89 00 00  mov         byte ptr [rbx+89h],sil
                    00
  0000000000000218: 0F B7 4F 08        movzx       ecx,word ptr [rdi+8]
  000000000000021C: 0F B6 C1           movzx       eax,cl
  000000000000021F: 24 01              and         al,1
  0000000000000221: 88 83 A6 00 00 00  mov         byte ptr [rbx+0A6h],al
  0000000000000227: 0F B6 C1           movzx       eax,cl
  000000000000022A: D0 E8              shr         al,1
  000000000000022C: 24 01              and         al,1
  000000000000022E: 88 83 A7 00 00 00  mov         byte ptr [rbx+0A7h],al
  0000000000000234: 0F B6 C1           movzx       eax,cl
  0000000000000237: C0 E8 02           shr         al,2
  000000000000023A: 24 01              and         al,1
  000000000000023C: 88 83 A8 00 00 00  mov         byte ptr [rbx+0A8h],al
  0000000000000242: 0F B6 C1           movzx       eax,cl
  0000000000000245: C0 E8 03           shr         al,3
  0000000000000248: 24 01              and         al,1
  000000000000024A: 88 83 A9 00 00 00  mov         byte ptr [rbx+0A9h],al
  0000000000000250: 0F B7 C1           movzx       eax,cx
  0000000000000253: 66 C1 E8 08        shr         ax,8
  0000000000000257: 24 01              and         al,1
  0000000000000259: 88 83 AA 00 00 00  mov         byte ptr [rbx+0AAh],al
  000000000000025F: 0F B7 C1           movzx       eax,cx
  0000000000000262: 66 C1 E8 09        shr         ax,9
  0000000000000266: 24 01              and         al,1
  0000000000000268: 88 83 AB 00 00 00  mov         byte ptr [rbx+0ABh],al
  000000000000026E: 0F B7 C1           movzx       eax,cx
  0000000000000271: 66 C1 E8 0A        shr         ax,0Ah
  0000000000000275: 24 01              and         al,1
  0000000000000277: 88 83 AC 00 00 00  mov         byte ptr [rbx+0ACh],al
  000000000000027D: 0F B6 C1           movzx       eax,cl
  0000000000000280: C0 E8 04           shr         al,4
  0000000000000283: 24 01              and         al,1
  0000000000000285: 66 C1 E9 0F        shr         cx,0Fh
  0000000000000289: 8D 56 04           lea         edx,[rsi+4]
  000000000000028C: 88 83 AD 00 00 00  mov         byte ptr [rbx+0ADh],al
  0000000000000292: 80 E1 01           and         cl,1
  0000000000000295: 44 8D 46 08        lea         r8d,[rsi+8]
  0000000000000299: 48 8B 74 24 70     mov         rsi,qword ptr [rsp+70h]
  000000000000029E: 88 8B AE 00 00 00  mov         byte ptr [rbx+0AEh],cl
  00000000000002A4: 0F B7 4F 12        movzx       ecx,word ptr [rdi+12h]
  00000000000002A8: 0F B6 C1           movzx       eax,cl
  00000000000002AB: C0 E9 03           shr         cl,3
  00000000000002AE: C0 E8 02           shr         al,2
  00000000000002B1: 80 E1 01           and         cl,1
  00000000000002B4: 24 01              and         al,1
  00000000000002B6: 88 83 94 00 00 00  mov         byte ptr [rbx+94h],al
  00000000000002BC: 88 8B 95 00 00 00  mov         byte ptr [rbx+95h],cl
  00000000000002C2: 0F B7 4F 14        movzx       ecx,word ptr [rdi+14h]
  00000000000002C6: 0F B6 C1           movzx       eax,cl
  00000000000002C9: 24 03              and         al,3
  00000000000002CB: 3C 03              cmp         al,3
  00000000000002CD: 75 09              jne         00000000000002D8
  00000000000002CF: C6 83 98 00 00 00  mov         byte ptr [rbx+98h],10h
                    10
  00000000000002D6: EB 1D              jmp         00000000000002F5
  00000000000002D8: F6 C1 02           test        cl,2
  00000000000002DB: 74 09              je          00000000000002E6
  00000000000002DD: C6 83 98 00 00 00  mov         byte ptr [rbx+98h],0Ch
                    0C
  00000000000002E4: EB 0F              jmp         00000000000002F5
  00000000000002E6: F6 C1 01           test        cl,1
  00000000000002E9: 8B C2              mov         eax,edx
  00000000000002EB: 41 0F 45 C0        cmovne      eax,r8d
  00000000000002EF: 88 83 98 00 00 00  mov         byte ptr [rbx+98h],al
  00000000000002F5: 0F B6 C1           movzx       eax,cl
  00000000000002F8: C0 E8 02           shr         al,2
  00000000000002FB: 24 01              and         al,1
  00000000000002FD: 88 83 96 00 00 00  mov         byte ptr [rbx+96h],al
  0000000000000303: 0F B6 C1           movzx       eax,cl
  0000000000000306: C0 E8 03           shr         al,3
  0000000000000309: 24 01              and         al,1
  000000000000030B: 88 83 97 00 00 00  mov         byte ptr [rbx+97h],al
  0000000000000311: 0F B6 C1           movzx       eax,cl
  0000000000000314: 24 30              and         al,30h
  0000000000000316: 3C 30              cmp         al,30h
  0000000000000318: 75 09              jne         0000000000000323
  000000000000031A: C6 83 9B 00 00 00  mov         byte ptr [rbx+9Bh],10h
                    10
  0000000000000321: EB 1B              jmp         000000000000033E
  0000000000000323: F6 C1 20           test        cl,20h
  0000000000000326: 74 09              je          0000000000000331
  0000000000000328: C6 83 9B 00 00 00  mov         byte ptr [rbx+9Bh],0Ch
                    0C
  000000000000032F: EB 0D              jmp         000000000000033E
  0000000000000331: F6 C1 10           test        cl,10h
  0000000000000334: 41 0F 45 D0        cmovne      edx,r8d
  0000000000000338: 88 93 9B 00 00 00  mov         byte ptr [rbx+9Bh],dl
  000000000000033E: 0F B6 C1           movzx       eax,cl
  0000000000000341: C0 E9 07           shr         cl,7
  0000000000000344: C0 E8 06           shr         al,6
  0000000000000347: 80 E1 01           and         cl,1
  000000000000034A: 24 01              and         al,1
  000000000000034C: 88 83 99 00 00 00  mov         byte ptr [rbx+99h],al
  0000000000000352: 88 8B 9A 00 00 00  mov         byte ptr [rbx+9Ah],cl
  0000000000000358: 0F B6 47 20        movzx       eax,byte ptr [rdi+20h]
  000000000000035C: 24 0F              and         al,0Fh
  000000000000035E: 88 83 9C 00 00 00  mov         byte ptr [rbx+9Ch],al
  0000000000000364: 0F B6 47 20        movzx       eax,byte ptr [rdi+20h]
  0000000000000368: C0 F8 04           sar         al,4
  000000000000036B: 24 0F              and         al,0Fh
  000000000000036D: 88 83 9D 00 00 00  mov         byte ptr [rbx+9Dh],al
  0000000000000373: 0F B6 47 21        movzx       eax,byte ptr [rdi+21h]
  0000000000000377: 24 0F              and         al,0Fh
  0000000000000379: 88 83 9E 00 00 00  mov         byte ptr [rbx+9Eh],al
  000000000000037F: 0F B6 47 21        movzx       eax,byte ptr [rdi+21h]
  0000000000000383: C0 F8 04           sar         al,4
  0000000000000386: 24 0F              and         al,0Fh
  0000000000000388: 88 83 9F 00 00 00  mov         byte ptr [rbx+9Fh],al
  000000000000038E: 0F B6 47 22        movzx       eax,byte ptr [rdi+22h]
  0000000000000392: 24 0F              and         al,0Fh
  0000000000000394: 88 83 A0 00 00 00  mov         byte ptr [rbx+0A0h],al
  000000000000039A: 0F B6 47 22        movzx       eax,byte ptr [rdi+22h]
  000000000000039E: C0 F8 04           sar         al,4
  00000000000003A1: 24 0F              and         al,0Fh
  00000000000003A3: 88 83 A1 00 00 00  mov         byte ptr [rbx+0A1h],al
  00000000000003A9: 0F B6 47 23        movzx       eax,byte ptr [rdi+23h]
  00000000000003AD: 24 0F              and         al,0Fh
  00000000000003AF: 88 83 A2 00 00 00  mov         byte ptr [rbx+0A2h],al
  00000000000003B5: 0F B6 47 23        movzx       eax,byte ptr [rdi+23h]
  00000000000003B9: C0 F8 04           sar         al,4
  00000000000003BC: 24 0F              and         al,0Fh
  00000000000003BE: 88 83 A3 00 00 00  mov         byte ptr [rbx+0A3h],al
  00000000000003C4: 0F B6 47 24        movzx       eax,byte ptr [rdi+24h]
  00000000000003C8: 24 0F              and         al,0Fh
  00000000000003CA: 88 83 A4 00 00 00  mov         byte ptr [rbx+0A4h],al
  00000000000003D0: 0F B6 47 24        movzx       eax,byte ptr [rdi+24h]
  00000000000003D4: C0 F8 04           sar         al,4
  00000000000003D7: 24 0F              and         al,0Fh
  00000000000003D9: 88 83 A5 00 00 00  mov         byte ptr [rbx+0A5h],al
  00000000000003DF: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  00000000000003E4: 33 C0              xor         eax,eax
  00000000000003E6: 48 83 C4 60        add         rsp,60h
  00000000000003EA: 5F                 pop         rdi
  00000000000003EB: C3                 ret

?SetRomType@TFtEE232H@@UEAAXXZ (public: virtual void __cdecl TFtEE232H::SetRomType(void)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B D9           mov         rbx,rcx
  0000000000000017: 33 ED              xor         ebp,ebp
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: 66 89 6C 24 30     mov         word ptr [rsp+30h],bp
  0000000000000022: E8 00 00 00 00     call        ?Erase@TEeData@@QEAAHXZ
  0000000000000027: BE C0 00 00 00     mov         esi,0C0h
  000000000000002C: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000030: 44 8B C6           mov         r8d,esi
  0000000000000033: 8B D6              mov         edx,esi
  0000000000000035: E8 00 00 00 00     call        ?WriteWord@TEeData@@QEAAHKG@Z
  000000000000003A: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  000000000000003F: 8D 55 40           lea         edx,[rbp+40h]
  0000000000000042: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000046: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  000000000000004B: 66 39 74 24 30     cmp         word ptr [rsp+30h],si
  0000000000000050: 75 0E              jne         0000000000000060
  0000000000000052: B8 56 00 00 00     mov         eax,56h
  0000000000000057: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  000000000000005E: EB 36              jmp         0000000000000096
  0000000000000060: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  0000000000000065: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000069: 8B D6              mov         edx,esi
  000000000000006B: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  0000000000000070: 66 39 74 24 30     cmp         word ptr [rsp+30h],si
  0000000000000075: 75 0E              jne         0000000000000085
  0000000000000077: B8 66 00 00 00     mov         eax,66h
  000000000000007C: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  0000000000000083: EB 11              jmp         0000000000000096
  0000000000000085: 66 89 AB 32 08 00  mov         word ptr [rbx+832h],bp
                    00
  000000000000008C: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  0000000000000096: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  000000000000009B: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  00000000000000A0: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  00000000000000AA: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000000AF: 48 83 C4 20        add         rsp,20h
  00000000000000B3: 5F                 pop         rdi
  00000000000000B4: C3                 ret

??0TFtEE232@@QEAA@PEAUft_private_vars@@@Z (public: __cdecl TFtEE232::TFtEE232(struct ft_private_vars *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAUft_private_vars@@@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE232@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: 48 8B C3           mov         rax,rbx
  000000000000001B: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??0TFtEE232@@QEAA@PEAX@Z (public: __cdecl TFtEE232::TFtEE232(void *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAX@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE232@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: 48 8B C3           mov         rax,rbx
  000000000000001B: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??0TFtEE232@@QEAA@XZ (public: __cdecl TFtEE232::TFtEE232(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@XZ
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE232@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: 48 8B C3           mov         rax,rbx
  000000000000001B: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

?Init@TFtEE232@@UEAAXPEAX@Z (public: virtual void __cdecl TFtEE232::Init(void *)):
  0000000000000000: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 54              push        r12
  000000000000000A: 41 55              push        r13
  000000000000000C: 41 56              push        r14
  000000000000000E: 41 57              push        r15
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 0F B6 42 1C        movzx       eax,byte ptr [rdx+1Ch]
  0000000000000018: 4C 8B 3A           mov         r15,qword ptr [rdx]
  000000000000001B: 4C 8B 62 08        mov         r12,qword ptr [rdx+8]
  000000000000001F: 0F B6 72 18        movzx       esi,byte ptr [rdx+18h]
  0000000000000023: 0F B6 6A 19        movzx       ebp,byte ptr [rdx+19h]
  0000000000000027: 44 0F B6 72 1A     movzx       r14d,byte ptr [rdx+1Ah]
  000000000000002C: 44 0F B6 6A 1B     movzx       r13d,byte ptr [rdx+1Bh]
  0000000000000031: 88 44 24 60        mov         byte ptr [rsp+60h],al
  0000000000000035: 0F B6 42 1D        movzx       eax,byte ptr [rdx+1Dh]
  0000000000000039: 88 44 24 68        mov         byte ptr [rsp+68h],al
  000000000000003D: 0F B7 42 1E        movzx       eax,word ptr [rdx+1Eh]
  0000000000000041: 48 8B D9           mov         rbx,rcx
  0000000000000044: 33 D2              xor         edx,edx
  0000000000000046: 41 B8 00 08 00 00  mov         r8d,800h
  000000000000004C: 48 83 C1 08        add         rcx,8
  0000000000000050: 66 89 44 24 70     mov         word ptr [rsp+70h],ax
  0000000000000055: E8 00 00 00 00     call        memset
  000000000000005A: 40 84 F6           test        sil,sil
  000000000000005D: B9 02 00 00 00     mov         ecx,2
  0000000000000062: C6 43 12 00        mov         byte ptr [rbx+12h],0
  0000000000000066: B8 04 00 00 00     mov         eax,4
  000000000000006B: 0F 44 C1           cmove       eax,ecx
  000000000000006E: 40 84 ED           test        bpl,bpl
  0000000000000071: B9 01 00 00 00     mov         ecx,1
  0000000000000076: 88 43 0F           mov         byte ptr [rbx+0Fh],al
  0000000000000079: 0F B6 43 12        movzx       eax,byte ptr [rbx+12h]
  000000000000007D: C7 43 08 00 00 03  mov         dword ptr [rbx+8],4030000h
                    04
  0000000000000084: 0F 45 C1           cmovne      eax,ecx
  0000000000000087: 66 C7 43 0C 01 60  mov         word ptr [rbx+0Ch],6001h
  000000000000008D: C6 43 0E 00        mov         byte ptr [rbx+0Eh],0
  0000000000000091: 66 C7 43 10 A0 2D  mov         word ptr [rbx+10h],2DA0h
  0000000000000097: 88 43 12           mov         byte ptr [rbx+12h],al
  000000000000009A: 45 84 F6           test        r14b,r14b
  000000000000009D: 74 04              je          00000000000000A3
  000000000000009F: 80 4B 12 02        or          byte ptr [rbx+12h],2
  00000000000000A3: 45 84 ED           test        r13b,r13b
  00000000000000A6: 74 04              je          00000000000000AC
  00000000000000A8: 80 4B 12 04        or          byte ptr [rbx+12h],4
  00000000000000AC: 80 7C 24 60 00     cmp         byte ptr [rsp+60h],0
  00000000000000B1: 74 04              je          00000000000000B7
  00000000000000B3: 80 4B 12 08        or          byte ptr [rbx+12h],8
  00000000000000B7: 80 7C 24 68 00     cmp         byte ptr [rsp+68h],0
  00000000000000BC: 74 04              je          00000000000000C2
  00000000000000BE: 80 4B 12 10        or          byte ptr [rbx+12h],10h
  00000000000000C2: 0F B7 44 24 70     movzx       eax,word ptr [rsp+70h]
  00000000000000C7: 48 83 C9 FF        or          rcx,0FFFFFFFFFFFFFFFFh
  00000000000000CB: C7 43 13 00 00 00  mov         dword ptr [rbx+13h],14000000h
                    14
  00000000000000D2: 66 89 43 14        mov         word ptr [rbx+14h],ax
  00000000000000D6: 48 8B C1           mov         rax,rcx
  00000000000000D9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000000E0: 48 FF C0           inc         rax
  00000000000000E3: 41 80 3C 07 00     cmp         byte ptr [r15+rax],0
  00000000000000E8: 75 F6              jne         00000000000000E0
  00000000000000EA: FE C0              inc         al
  00000000000000EC: 02 C0              add         al,al
  00000000000000EE: 88 43 17           mov         byte ptr [rbx+17h],al
  00000000000000F1: 04 14              add         al,14h
  00000000000000F3: 88 43 18           mov         byte ptr [rbx+18h],al
  00000000000000F6: 48 FF C1           inc         rcx
  00000000000000F9: 41 80 3C 0C 00     cmp         byte ptr [r12+rcx],0
  00000000000000FE: 75 F6              jne         00000000000000F6
  0000000000000100: FE C1              inc         cl
  0000000000000102: 48 8D 53 1C        lea         rdx,[rbx+1Ch]
  0000000000000106: 4D 8B C7           mov         r8,r15
  0000000000000109: 02 C9              add         cl,cl
  000000000000010B: C6 43 1B 02        mov         byte ptr [rbx+1Bh],2
  000000000000010F: 02 C1              add         al,cl
  0000000000000111: 88 4B 19           mov         byte ptr [rbx+19h],cl
  0000000000000114: 48 8B CB           mov         rcx,rbx
  0000000000000117: 88 43 1A           mov         byte ptr [rbx+1Ah],al
  000000000000011A: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  000000000000011F: 48 0F BE 43 18     movsx       rax,byte ptr [rbx+18h]
  0000000000000124: 48 8D 53 08        lea         rdx,[rbx+8]
  0000000000000128: 4D 8B C4           mov         r8,r12
  000000000000012B: 48 8B CB           mov         rcx,rbx
  000000000000012E: 48 03 D0           add         rdx,rax
  0000000000000131: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000136: 48 0F BE 43 1A     movsx       rax,byte ptr [rbx+1Ah]
  000000000000013B: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000013F: 4C 8D 05 00 00 00  lea         r8,[??_C@_00CNPNBAHC@?$AA@]
                    00
  0000000000000146: 48 03 D0           add         rdx,rax
  0000000000000149: 48 8B CB           mov         rcx,rbx
  000000000000014C: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000151: 0F BE 53 18        movsx       edx,byte ptr [rbx+18h]
  0000000000000155: 0F BE 4B 16        movsx       ecx,byte ptr [rbx+16h]
  0000000000000159: 44 0F BE 43 1A     movsx       r8d,byte ptr [rbx+1Ah]
  000000000000015E: 89 93 38 08 00 00  mov         dword ptr [rbx+838h],edx
  0000000000000164: 80 CA 80           or          dl,80h
  0000000000000167: 89 8B 34 08 00 00  mov         dword ptr [rbx+834h],ecx
  000000000000016D: 80 C9 80           or          cl,80h
  0000000000000170: 88 53 18           mov         byte ptr [rbx+18h],dl
  0000000000000173: 44 89 83 3C 08 00  mov         dword ptr [rbx+83Ch],r8d
                    00
  000000000000017A: B8 02 03 00 00     mov         eax,302h
  000000000000017F: 88 4B 16           mov         byte ptr [rbx+16h],cl
  0000000000000182: 41 80 C8 80        or          r8b,80h
  0000000000000186: 48 8D 54 24 60     lea         rdx,[rsp+60h]
  000000000000018B: 48 8B CB           mov         rcx,rbx
  000000000000018E: 44 88 43 1A        mov         byte ptr [rbx+1Ah],r8b
  0000000000000192: 66 89 44 24 60     mov         word ptr [rsp+60h],ax
  0000000000000197: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  000000000000019C: 33 D2              xor         edx,edx
  000000000000019E: 48 8B CB           mov         rcx,rbx
  00000000000001A1: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  00000000000001A6: BA 03 04 00 00     mov         edx,403h
  00000000000001AB: 48 8B CB           mov         rcx,rbx
  00000000000001AE: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QEAAXG@Z
  00000000000001B3: BA 01 60 00 00     mov         edx,6001h
  00000000000001B8: 48 8B CB           mov         rcx,rbx
  00000000000001BB: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QEAAXG@Z
  00000000000001C0: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000001C3: 48 8B CB           mov         rcx,rbx
  00000000000001C6: FF 50 08           call        qword ptr [rax+8]
  00000000000001C9: C7 83 0C 08 00 00  mov         dword ptr [rbx+80Ch],0
                    00 00 00 00
  00000000000001D3: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  00000000000001D8: 48 83 C4 20        add         rsp,20h
  00000000000001DC: 41 5F              pop         r15
  00000000000001DE: 41 5E              pop         r14
  00000000000001E0: 41 5D              pop         r13
  00000000000001E2: 41 5C              pop         r12
  00000000000001E4: 5F                 pop         rdi
  00000000000001E5: 5E                 pop         rsi
  00000000000001E6: 5D                 pop         rbp
  00000000000001E7: C3                 ret

?MoveStrings@TFtEE232@@UEAAXXZ (public: virtual void __cdecl TFtEE232::MoveStrings(void)):
  0000000000000000: C2 00 00           ret         0

?Program@TFtEE232@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE232::Program(void *,char *,char *,char *,char *)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 53                 push        rbx
  0000000000000004: 56                 push        rsi
  0000000000000005: 41 54              push        r12
  0000000000000007: 41 57              push        r15
  0000000000000009: 48 81 EC D8 00 00  sub         rsp,0D8h
                    00
  0000000000000010: 4D 8B E1           mov         r12,r9
  0000000000000013: 4D 8B F8           mov         r15,r8
  0000000000000016: 48 8B F2           mov         rsi,rdx
  0000000000000019: 48 8B D9           mov         rbx,rcx
  000000000000001C: 4D 85 C0           test        r8,r8
  000000000000001F: 0F 84 93 02 00 00  je          00000000000002B8
  0000000000000025: 4D 85 C9           test        r9,r9
  0000000000000028: 0F 84 8A 02 00 00  je          00000000000002B8
  000000000000002E: 4C 89 70 C8        mov         qword ptr [rax-38h],r14
  0000000000000032: 4C 8B B4 24 20 01  mov         r14,qword ptr [rsp+120h]
                    00 00
  000000000000003A: 4D 85 F6           test        r14,r14
  000000000000003D: 0F 84 6E 02 00 00  je          00000000000002B1
  0000000000000043: 66 83 7A 04 00     cmp         word ptr [rdx+4],0
  0000000000000048: 0F 84 63 02 00 00  je          00000000000002B1
  000000000000004E: 66 83 7A 06 00     cmp         word ptr [rdx+6],0
  0000000000000053: 0F 84 58 02 00 00  je          00000000000002B1
  0000000000000059: 48 89 68 08        mov         qword ptr [rax+8],rbp
  000000000000005D: 48 89 78 D8        mov         qword ptr [rax-28h],rdi
  0000000000000061: 33 D2              xor         edx,edx
  0000000000000063: 41 B8 00 08 00 00  mov         r8d,800h
  0000000000000069: 48 83 C1 08        add         rcx,8
  000000000000006D: 4C 89 68 D0        mov         qword ptr [rax-30h],r13
  0000000000000071: E8 00 00 00 00     call        memset
  0000000000000076: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000079: 48 8B CB           mov         rcx,rbx
  000000000000007C: FF 50 40           call        qword ptr [rax+40h]
  000000000000007F: 48 8B AC 24 28 01  mov         rbp,qword ptr [rsp+128h]
                    00 00
  0000000000000087: B8 00 04 00 00     mov         eax,400h
  000000000000008C: 48 83 CF FF        or          rdi,0FFFFFFFFFFFFFFFFh
  0000000000000090: 66 89 43 0E        mov         word ptr [rbx+0Eh],ax
  0000000000000094: 48 85 ED           test        rbp,rbp
  0000000000000097: 74 15              je          00000000000000AE
  0000000000000099: 48 8B C7           mov         rax,rdi
  000000000000009C: 0F 1F 40 00        nop         dword ptr [rax]
  00000000000000A0: 48 FF C0           inc         rax
  00000000000000A3: 80 3C 28 00        cmp         byte ptr [rax+rbp],0
  00000000000000A7: 75 F7              jne         00000000000000A0
  00000000000000A9: 48 85 C0           test        rax,rax
  00000000000000AC: 75 3F              jne         00000000000000ED
  00000000000000AE: 0F B7 46 06        movzx       eax,word ptr [rsi+6]
  00000000000000B2: 25 03 00 00 80     and         eax,80000003h
  00000000000000B7: 7D 07              jge         00000000000000C0
  00000000000000B9: FF C8              dec         eax
  00000000000000BB: 83 C8 FC           or          eax,0FFFFFFFCh
  00000000000000BE: FF C0              inc         eax
  00000000000000C0: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000000C5: 44 0F B7 C0        movzx       r8d,ax
  00000000000000C9: 49 8B D4           mov         rdx,r12
  00000000000000CC: E8 00 00 00 00     call        ??0TSerialNumber@@QEAA@PEADG@Z
  00000000000000D1: 4C 8D 84 24 10 01  lea         r8,[rsp+110h]
                    00 00
  00000000000000D9: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  00000000000000DE: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000000E3: E8 00 00 00 00     call        ?Get@TSerialNumber@@QEAAHPEADPEAH@Z
  00000000000000E8: 48 8D 6C 24 40     lea         rbp,[rsp+40h]
  00000000000000ED: 0F B7 56 04        movzx       edx,word ptr [rsi+4]
  00000000000000F1: 48 8B CB           mov         rcx,rbx
  00000000000000F4: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QEAAXG@Z
  00000000000000F9: 0F B7 56 06        movzx       edx,word ptr [rsi+6]
  00000000000000FD: 48 8B CB           mov         rcx,rbx
  0000000000000100: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QEAAXG@Z
  0000000000000105: 80 7E 08 00        cmp         byte ptr [rsi+8],0
  0000000000000109: 74 04              je          000000000000010F
  000000000000010B: 80 4B 12 08        or          byte ptr [rbx+12h],8
  000000000000010F: 0F B7 56 0A        movzx       edx,word ptr [rsi+0Ah]
  0000000000000113: 48 8B CB           mov         rcx,rbx
  0000000000000116: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QEAAXH@Z
  000000000000011B: 80 7E 0C 00        cmp         byte ptr [rsi+0Ch],0
  000000000000011F: B1 80              mov         cl,80h
  0000000000000121: 0F B6 C1           movzx       eax,cl
  0000000000000124: B9 C0 00 00 00     mov         ecx,0C0h
  0000000000000129: 0F 45 C1           cmovne      eax,ecx
  000000000000012C: 80 7E 0D 00        cmp         byte ptr [rsi+0Dh],0
  0000000000000130: 74 02              je          0000000000000134
  0000000000000132: 0C 20              or          al,20h
  0000000000000134: 0F B6 D0           movzx       edx,al
  0000000000000137: 48 8B CB           mov         rcx,rbx
  000000000000013A: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QEAAXE@Z
  000000000000013F: 80 7E 0E 00        cmp         byte ptr [rsi+0Eh],0
  0000000000000143: 74 04              je          0000000000000149
  0000000000000145: 80 4B 12 04        or          byte ptr [rbx+12h],4
  0000000000000149: C6 43 16 14        mov         byte ptr [rbx+16h],14h
  000000000000014D: 48 8B C7           mov         rax,rdi
  0000000000000150: 48 FF C0           inc         rax
  0000000000000153: 41 80 3C 07 00     cmp         byte ptr [r15+rax],0
  0000000000000158: 75 F6              jne         0000000000000150
  000000000000015A: FE C0              inc         al
  000000000000015C: 48 8B CF           mov         rcx,rdi
  000000000000015F: 02 C0              add         al,al
  0000000000000161: 88 43 17           mov         byte ptr [rbx+17h],al
  0000000000000164: 04 14              add         al,14h
  0000000000000166: 88 43 18           mov         byte ptr [rbx+18h],al
  0000000000000169: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000170: 48 FF C1           inc         rcx
  0000000000000173: 41 80 3C 0E 00     cmp         byte ptr [r14+rcx],0
  0000000000000178: 75 F6              jne         0000000000000170
  000000000000017A: FE C1              inc         cl
  000000000000017C: 02 C9              add         cl,cl
  000000000000017E: 02 C1              add         al,cl
  0000000000000180: 88 4B 19           mov         byte ptr [rbx+19h],cl
  0000000000000183: 88 43 1A           mov         byte ptr [rbx+1Ah],al
  0000000000000186: 48 FF C7           inc         rdi
  0000000000000189: 80 3C 2F 00        cmp         byte ptr [rdi+rbp],0
  000000000000018D: 75 F7              jne         0000000000000186
  000000000000018F: 40 FE C7           inc         dil
  0000000000000192: 48 8D 53 1C        lea         rdx,[rbx+1Ch]
  0000000000000196: 4D 8B C7           mov         r8,r15
  0000000000000199: 40 02 FF           add         dil,dil
  000000000000019C: 48 8B CB           mov         rcx,rbx
  000000000000019F: 40 88 7B 1B        mov         byte ptr [rbx+1Bh],dil
  00000000000001A3: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001A8: 0F B6 43 18        movzx       eax,byte ptr [rbx+18h]
  00000000000001AC: 48 8D 53 08        lea         rdx,[rbx+8]
  00000000000001B0: 4D 8B C6           mov         r8,r14
  00000000000001B3: 48 8B CB           mov         rcx,rbx
  00000000000001B6: 48 03 D0           add         rdx,rax
  00000000000001B9: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001BE: 0F B6 43 1A        movzx       eax,byte ptr [rbx+1Ah]
  00000000000001C2: 48 8D 53 08        lea         rdx,[rbx+8]
  00000000000001C6: 48 03 D0           add         rdx,rax
  00000000000001C9: 4C 8B C5           mov         r8,rbp
  00000000000001CC: 48 8B CB           mov         rcx,rbx
  00000000000001CF: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001D4: 0F BE 43 16        movsx       eax,byte ptr [rbx+16h]
  00000000000001D8: 48 8B CB           mov         rcx,rbx
  00000000000001DB: 89 83 34 08 00 00  mov         dword ptr [rbx+834h],eax
  00000000000001E1: 0F BE 43 18        movsx       eax,byte ptr [rbx+18h]
  00000000000001E5: 89 83 38 08 00 00  mov         dword ptr [rbx+838h],eax
  00000000000001EB: 0F BE 43 1A        movsx       eax,byte ptr [rbx+1Ah]
  00000000000001EF: 89 83 3C 08 00 00  mov         dword ptr [rbx+83Ch],eax
  00000000000001F5: 80 4B 16 80        or          byte ptr [rbx+16h],80h
  00000000000001F9: 80 4B 18 80        or          byte ptr [rbx+18h],80h
  00000000000001FD: 80 4B 1A 80        or          byte ptr [rbx+1Ah],80h
  0000000000000201: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000204: FF 50 48           call        qword ptr [rax+48h]
  0000000000000207: B8 00 02 00 00     mov         eax,200h
  000000000000020C: 48 8D 94 24 08 01  lea         rdx,[rsp+108h]
                    00 00
  0000000000000214: 66 89 43 14        mov         word ptr [rbx+14h],ax
  0000000000000218: B8 02 03 00 00     mov         eax,302h
  000000000000021D: 48 8B CB           mov         rcx,rbx
  0000000000000220: 66 89 84 24 08 01  mov         word ptr [rsp+108h],ax
                    00 00
  0000000000000228: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  000000000000022D: 33 D2              xor         edx,edx
  000000000000022F: 48 8B CB           mov         rcx,rbx
  0000000000000232: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  0000000000000237: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000023A: 48 8B CB           mov         rcx,rbx
  000000000000023D: FF 50 08           call        qword ptr [rax+8]
  0000000000000240: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000244: 33 FF              xor         edi,edi
  0000000000000246: 89 BB 0C 08 00 00  mov         dword ptr [rbx+80Ch],edi
  000000000000024C: E8 00 00 00 00     call        ?Erase@TEeData@@QEAAHXZ
  0000000000000251: 48 8B AC 24 00 01  mov         rbp,qword ptr [rsp+100h]
                    00 00
  0000000000000259: 85 C0              test        eax,eax
  000000000000025B: 75 29              jne         0000000000000286
  000000000000025D: 8D 47 0D           lea         eax,[rdi+0Dh]
  0000000000000260: 4C 8B AC 24 C8 00  mov         r13,qword ptr [rsp+0C8h]
                    00 00
  0000000000000268: 48 8B BC 24 D0 00  mov         rdi,qword ptr [rsp+0D0h]
                    00 00
  0000000000000270: 4C 8B B4 24 C0 00  mov         r14,qword ptr [rsp+0C0h]
                    00 00
  0000000000000278: 48 81 C4 D8 00 00  add         rsp,0D8h
                    00
  000000000000027F: 41 5F              pop         r15
  0000000000000281: 41 5C              pop         r12
  0000000000000283: 5E                 pop         rsi
  0000000000000284: 5B                 pop         rbx
  0000000000000285: C3                 ret
  0000000000000286: 48 8D 4B 08        lea         rcx,[rbx+8]
  000000000000028A: E8 00 00 00 00     call        ?Write@TEeData@@QEAAHXZ
  000000000000028F: 85 C0              test        eax,eax
  0000000000000291: 75 07              jne         000000000000029A
  0000000000000293: B8 0C 00 00 00     mov         eax,0Ch
  0000000000000298: EB C6              jmp         0000000000000260
  000000000000029A: 48 8D 4B 08        lea         rcx,[rbx+8]
  000000000000029E: E8 00 00 00 00     call        ?Confirm@TEeData@@QEAAHXZ
  00000000000002A3: B9 0C 00 00 00     mov         ecx,0Ch
  00000000000002A8: 85 C0              test        eax,eax
  00000000000002AA: 0F 44 F9           cmove       edi,ecx
  00000000000002AD: 8B C7              mov         eax,edi
  00000000000002AF: EB AF              jmp         0000000000000260
  00000000000002B1: B8 06 00 00 00     mov         eax,6
  00000000000002B6: EB B8              jmp         0000000000000270
  00000000000002B8: B8 06 00 00 00     mov         eax,6
  00000000000002BD: 48 81 C4 D8 00 00  add         rsp,0D8h
                    00
  00000000000002C4: 41 5F              pop         r15
  00000000000002C6: 41 5C              pop         r12
  00000000000002C8: 5E                 pop         rsi
  00000000000002C9: 5B                 pop         rbx
  00000000000002CA: C3                 ret

?ReadAndParse@TFtEE232@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE232::ReadAndParse(void *,char *,char *,char *,char *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 55              push        r13
  0000000000000016: 41 56              push        r14
  0000000000000018: 41 57              push        r15
  000000000000001A: 48 83 EC 60        sub         rsp,60h
  000000000000001E: 33 ED              xor         ebp,ebp
  0000000000000020: 49 8B F1           mov         rsi,r9
  0000000000000023: 4D 8B F8           mov         r15,r8
  0000000000000026: 4C 8B EA           mov         r13,rdx
  0000000000000029: 4C 8B F1           mov         r14,rcx
  000000000000002C: 48 85 D2           test        rdx,rdx
  000000000000002F: 0F 84 97 01 00 00  je          00000000000001CC
  0000000000000035: 4D 85 C0           test        r8,r8
  0000000000000038: 0F 84 8E 01 00 00  je          00000000000001CC
  000000000000003E: 4D 85 C9           test        r9,r9
  0000000000000041: 0F 84 85 01 00 00  je          00000000000001CC
  0000000000000047: 48 8B BC 24 A0 00  mov         rdi,qword ptr [rsp+0A0h]
                    00 00
  000000000000004F: 48 85 FF           test        rdi,rdi
  0000000000000052: 0F 84 74 01 00 00  je          00000000000001CC
  0000000000000058: 48 8B 9C 24 A8 00  mov         rbx,qword ptr [rsp+0A8h]
                    00 00
  0000000000000060: 48 85 DB           test        rbx,rbx
  0000000000000063: 0F 84 63 01 00 00  je          00000000000001CC
  0000000000000069: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000006C: FF 10              call        qword ptr [rax]
  000000000000006E: 85 C0              test        eax,eax
  0000000000000070: 0F 84 4D 01 00 00  je          00000000000001C3
  0000000000000076: 49 8B CE           mov         rcx,r14
  0000000000000079: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  000000000000007E: 66 85 C0           test        ax,ax
  0000000000000081: 75 0C              jne         000000000000008F
  0000000000000083: BD 0E 00 00 00     mov         ebp,0Eh
  0000000000000088: 8B C5              mov         eax,ebp
  000000000000008A: E9 42 01 00 00     jmp         00000000000001D1
  000000000000008F: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000000000000094: 66 3B C1           cmp         ax,cx
  0000000000000097: 75 0C              jne         00000000000000A5
  0000000000000099: BD 0F 00 00 00     mov         ebp,0Fh
  000000000000009E: 8B C5              mov         eax,ebp
  00000000000000A0: E9 2C 01 00 00     jmp         00000000000001D1
  00000000000000A5: 49 8B CE           mov         rcx,r14
  00000000000000A8: 66 41 89 45 04     mov         word ptr [r13+4],ax
  00000000000000AD: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  00000000000000B2: 49 8B CE           mov         rcx,r14
  00000000000000B5: 66 41 89 45 06     mov         word ptr [r13+6],ax
  00000000000000BA: 41 0F BE 46 12     movsx       eax,byte ptr [r14+12h]
  00000000000000BF: C1 E8 03           shr         eax,3
  00000000000000C2: 24 01              and         al,1
  00000000000000C4: 41 88 45 08        mov         byte ptr [r13+8],al
  00000000000000C8: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  00000000000000CD: 49 8B CE           mov         rcx,r14
  00000000000000D0: 66 41 89 45 0A     mov         word ptr [r13+0Ah],ax
  00000000000000D5: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  00000000000000DA: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000DF: 0F B6 C8           movzx       ecx,al
  00000000000000E2: C0 E8 05           shr         al,5
  00000000000000E5: 24 01              and         al,1
  00000000000000E7: C0 E9 06           shr         cl,6
  00000000000000EA: 41 88 45 0D        mov         byte ptr [r13+0Dh],al
  00000000000000EE: 80 E1 01           and         cl,1
  00000000000000F1: 41 88 4D 0C        mov         byte ptr [r13+0Ch],cl
  00000000000000F5: 41 0F BE 46 12     movsx       eax,byte ptr [r14+12h]
  00000000000000FA: 49 8B CE           mov         rcx,r14
  00000000000000FD: C1 E8 02           shr         eax,2
  0000000000000100: 24 01              and         al,1
  0000000000000102: 41 88 45 0E        mov         byte ptr [r13+0Eh],al
  0000000000000106: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  000000000000010B: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000110: 4C 2B F8           sub         r15,rax
  0000000000000113: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000118: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000120: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000123: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000127: 41 88 44 0F FF     mov         byte ptr [r15+rcx-1],al
  000000000000012C: 84 C0              test        al,al
  000000000000012E: 75 F0              jne         0000000000000120
  0000000000000130: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000135: 49 8B CE           mov         rcx,r14
  0000000000000138: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  000000000000013D: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000142: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000147: 48 2B F0           sub         rsi,rax
  000000000000014A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000150: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000153: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000157: 88 44 0E FF        mov         byte ptr [rsi+rcx-1],al
  000000000000015B: 84 C0              test        al,al
  000000000000015D: 75 F1              jne         0000000000000150
  000000000000015F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000164: 49 8B CE           mov         rcx,r14
  0000000000000167: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  000000000000016C: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000171: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000176: 48 2B F8           sub         rdi,rax
  0000000000000179: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000180: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000183: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000187: 88 44 0F FF        mov         byte ptr [rdi+rcx-1],al
  000000000000018B: 84 C0              test        al,al
  000000000000018D: 75 F1              jne         0000000000000180
  000000000000018F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000194: 49 8B CE           mov         rcx,r14
  0000000000000197: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000019C: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000001A1: 48 8D 44 24 20     lea         rax,[rsp+20h]
  00000000000001A6: 48 2B D9           sub         rbx,rcx
  00000000000001A9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001B0: 0F B6 08           movzx       ecx,byte ptr [rax]
  00000000000001B3: 48 8D 40 01        lea         rax,[rax+1]
  00000000000001B7: 88 4C 03 FF        mov         byte ptr [rbx+rax-1],cl
  00000000000001BB: 84 C9              test        cl,cl
  00000000000001BD: 75 F1              jne         00000000000001B0
  00000000000001BF: 8B C5              mov         eax,ebp
  00000000000001C1: EB 0E              jmp         00000000000001D1
  00000000000001C3: BD 0B 00 00 00     mov         ebp,0Bh
  00000000000001C8: 8B C5              mov         eax,ebp
  00000000000001CA: EB 05              jmp         00000000000001D1
  00000000000001CC: B8 06 00 00 00     mov         eax,6
  00000000000001D1: 4C 8D 5C 24 60     lea         r11,[rsp+60h]
  00000000000001D6: 49 8B 5B 20        mov         rbx,qword ptr [r11+20h]
  00000000000001DA: 49 8B 6B 28        mov         rbp,qword ptr [r11+28h]
  00000000000001DE: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  00000000000001E2: 49 8B 7B 38        mov         rdi,qword ptr [r11+38h]
  00000000000001E6: 49 8B E3           mov         rsp,r11
  00000000000001E9: 41 5F              pop         r15
  00000000000001EB: 41 5E              pop         r14
  00000000000001ED: 41 5D              pop         r13
  00000000000001EF: C3                 ret

?ReadAndParse@TFtEE232@@UEAAKPEAX@Z (public: virtual unsigned long __cdecl TFtEE232::ReadAndParse(void *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 60        sub         rsp,60h
  000000000000000F: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000012: 48 8B FA           mov         rdi,rdx
  0000000000000015: 48 8B D9           mov         rbx,rcx
  0000000000000018: 33 F6              xor         esi,esi
  000000000000001A: FF 10              call        qword ptr [rax]
  000000000000001C: 85 C0              test        eax,eax
  000000000000001E: 0F 84 C5 01 00 00  je          00000000000001E9
  0000000000000024: 48 8B CB           mov         rcx,rbx
  0000000000000027: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  000000000000002C: 66 85 C0           test        ax,ax
  000000000000002F: 75 13              jne         0000000000000044
  0000000000000031: 8D 46 0E           lea         eax,[rsi+0Eh]
  0000000000000034: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  0000000000000039: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  000000000000003E: 48 83 C4 60        add         rsp,60h
  0000000000000042: 5F                 pop         rdi
  0000000000000043: C3                 ret
  0000000000000044: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000000000000049: 66 3B C1           cmp         ax,cx
  000000000000004C: 75 15              jne         0000000000000063
  000000000000004E: B8 0F 00 00 00     mov         eax,0Fh
  0000000000000053: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  0000000000000058: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  000000000000005D: 48 83 C4 60        add         rsp,60h
  0000000000000061: 5F                 pop         rdi
  0000000000000062: C3                 ret
  0000000000000063: 48 8B CB           mov         rcx,rbx
  0000000000000066: 66 89 47 0C        mov         word ptr [rdi+0Ch],ax
  000000000000006A: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  000000000000006F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000074: 48 8B CB           mov         rcx,rbx
  0000000000000077: 66 89 47 0E        mov         word ptr [rdi+0Eh],ax
  000000000000007B: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  0000000000000080: 48 8B 4F 10        mov         rcx,qword ptr [rdi+10h]
  0000000000000084: 48 85 C9           test        rcx,rcx
  0000000000000087: 74 19              je          00000000000000A2
  0000000000000089: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  000000000000008E: 66 90              xchg        ax,ax
  0000000000000090: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000093: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000097: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000009B: 88 41 FF           mov         byte ptr [rcx-1],al
  000000000000009E: 84 C0              test        al,al
  00000000000000A0: 75 EE              jne         0000000000000090
  00000000000000A2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000A7: 48 8B CB           mov         rcx,rbx
  00000000000000AA: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000AF: 48 8B 4F 18        mov         rcx,qword ptr [rdi+18h]
  00000000000000B3: 48 85 C9           test        rcx,rcx
  00000000000000B6: 74 1A              je          00000000000000D2
  00000000000000B8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000BD: 0F 1F 00           nop         dword ptr [rax]
  00000000000000C0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000C3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000C7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000CB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000CE: 84 C0              test        al,al
  00000000000000D0: 75 EE              jne         00000000000000C0
  00000000000000D2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000D7: 48 8B CB           mov         rcx,rbx
  00000000000000DA: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000DF: 48 8B 4F 20        mov         rcx,qword ptr [rdi+20h]
  00000000000000E3: 48 85 C9           test        rcx,rcx
  00000000000000E6: 74 1A              je          0000000000000102
  00000000000000E8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000ED: 0F 1F 00           nop         dword ptr [rax]
  00000000000000F0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000F3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000F7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000FB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000FE: 84 C0              test        al,al
  0000000000000100: 75 EE              jne         00000000000000F0
  0000000000000102: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000107: 48 8B CB           mov         rcx,rbx
  000000000000010A: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000010F: 48 8B 47 28        mov         rax,qword ptr [rdi+28h]
  0000000000000113: 48 85 C0           test        rax,rax
  0000000000000116: 74 1A              je          0000000000000132
  0000000000000118: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  000000000000011D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000120: 0F B6 0A           movzx       ecx,byte ptr [rdx]
  0000000000000123: 48 8D 40 01        lea         rax,[rax+1]
  0000000000000127: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000012B: 88 48 FF           mov         byte ptr [rax-1],cl
  000000000000012E: 84 C9              test        cl,cl
  0000000000000130: 75 EE              jne         0000000000000120
  0000000000000132: 48 8B CB           mov         rcx,rbx
  0000000000000135: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  000000000000013A: 48 8B CB           mov         rcx,rbx
  000000000000013D: 66 89 47 30        mov         word ptr [rdi+30h],ax
  0000000000000141: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QEAAGXZ
  0000000000000146: 8B CE              mov         ecx,esi
  0000000000000148: 66 85 C0           test        ax,ax
  000000000000014B: 0F 94 C1           sete        cl
  000000000000014E: 66 89 4F 32        mov         word ptr [rdi+32h],cx
  0000000000000152: 48 8B CB           mov         rcx,rbx
  0000000000000155: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  000000000000015A: 0F B6 C8           movzx       ecx,al
  000000000000015D: C0 E8 05           shr         al,5
  0000000000000160: C0 E9 06           shr         cl,6
  0000000000000163: 24 01              and         al,1
  0000000000000165: 80 E1 01           and         cl,1
  0000000000000168: 0F B6 C0           movzx       eax,al
  000000000000016B: 0F B6 C9           movzx       ecx,cl
  000000000000016E: 66 89 47 36        mov         word ptr [rdi+36h],ax
  0000000000000172: 66 89 4F 34        mov         word ptr [rdi+34h],cx
  0000000000000176: 48 8B CB           mov         rcx,rbx
  0000000000000179: E8 00 00 00 00     call        ?GetRev4@TFtE2Data@@QEAA_NXZ
  000000000000017E: 48 8B CB           mov         rcx,rbx
  0000000000000181: 88 47 38           mov         byte ptr [rdi+38h],al
  0000000000000184: E8 00 00 00 00     call        ?GetIsoIn@TFtE2Data@@QEAA_NXZ
  0000000000000189: 48 8B CB           mov         rcx,rbx
  000000000000018C: 88 47 39           mov         byte ptr [rdi+39h],al
  000000000000018F: E8 00 00 00 00     call        ?GetIsoOut@TFtE2Data@@QEAA_NXZ
  0000000000000194: 48 8B CB           mov         rcx,rbx
  0000000000000197: 88 47 3A           mov         byte ptr [rdi+3Ah],al
  000000000000019A: E8 00 00 00 00     call        ?GetPullDownEnable@TFtE2Data@@QEAA_NXZ
  000000000000019F: 48 8B CB           mov         rcx,rbx
  00000000000001A2: 88 47 3B           mov         byte ptr [rdi+3Bh],al
  00000000000001A5: E8 00 00 00 00     call        ?GetSerialNumberEnable@TFtE2Data@@QEAA_NXZ
  00000000000001AA: 48 8B CB           mov         rcx,rbx
  00000000000001AD: 88 47 3C           mov         byte ptr [rdi+3Ch],al
  00000000000001B0: E8 00 00 00 00     call        ?GetUSBVersionEnable@TFtE2Data@@QEAA_NXZ
  00000000000001B5: 48 8B CB           mov         rcx,rbx
  00000000000001B8: 88 47 3D           mov         byte ptr [rdi+3Dh],al
  00000000000001BB: E8 00 00 00 00     call        ?GetUSBVersion@TFtE2Data@@QEAAGXZ
  00000000000001C0: 40 88 77 40        mov         byte ptr [rdi+40h],sil
  00000000000001C4: 66 89 47 3E        mov         word ptr [rdi+3Eh],ax
  00000000000001C8: 48 89 77 48        mov         qword ptr [rdi+48h],rsi
  00000000000001CC: 89 77 50           mov         dword ptr [rdi+50h],esi
  00000000000001CF: 8B C6              mov         eax,esi
  00000000000001D1: 66 89 77 45        mov         word ptr [rdi+45h],si
  00000000000001D5: 40 88 77 47        mov         byte ptr [rdi+47h],sil
  00000000000001D9: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  00000000000001DE: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  00000000000001E3: 48 83 C4 60        add         rsp,60h
  00000000000001E7: 5F                 pop         rdi
  00000000000001E8: C3                 ret
  00000000000001E9: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  00000000000001EE: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  00000000000001F3: B8 0B 00 00 00     mov         eax,0Bh
  00000000000001F8: 48 83 C4 60        add         rsp,60h
  00000000000001FC: 5F                 pop         rdi
  00000000000001FD: C3                 ret

?SetRomType@TFtEE232@@UEAAXXZ (public: virtual void __cdecl TFtEE232::SetRomType(void)):
  0000000000000000: B8 46 00 00 00     mov         eax,46h
  0000000000000005: 66 89 81 32 08 00  mov         word ptr [rcx+0000000000000832h],ax
                    00
  000000000000000C: C3                 ret

??0TFtEE2232H@@QEAA@PEAUft_private_vars@@@Z (public: __cdecl TFtEE2232H::TFtEE2232H(struct ft_private_vars *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAUft_private_vars@@@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE2232H@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

??0TFtEE2232H@@QEAA@PEAX@Z (public: __cdecl TFtEE2232H::TFtEE2232H(void *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAX@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE2232H@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

??0TFtEE2232H@@QEAA@XZ (public: __cdecl TFtEE2232H::TFtEE2232H(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@XZ
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE2232H@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

?AddUserArea@TFtEE2232H@@UEAAHPEAEK@Z (public: virtual int __cdecl TFtEE2232H::AddUserArea(unsigned char *,unsigned long)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 83 EC 20        sub         rsp,20h
  0000000000000018: 41 8B E8           mov         ebp,r8d
  000000000000001B: 41 BF 80 00 00 00  mov         r15d,80h
  0000000000000021: 41 8B D8           mov         ebx,r8d
  0000000000000024: 45 3B C7           cmp         r8d,r15d
  0000000000000027: 48 8B FA           mov         rdi,rdx
  000000000000002A: 48 8B F1           mov         rsi,rcx
  000000000000002D: 41 0F 47 EF        cmova       ebp,r15d
  0000000000000031: 44 8B C5           mov         r8d,ebp
  0000000000000034: E8 00 00 00 00     call        ?AddUserArea@TFtE2Data@@UEAAHPEAEK@Z
  0000000000000039: 44 8B F0           mov         r14d,eax
  000000000000003C: 85 C0              test        eax,eax
  000000000000003E: 74 27              je          0000000000000067
  0000000000000040: 2B DD              sub         ebx,ebp
  0000000000000042: 74 23              je          0000000000000067
  0000000000000044: 48 8B CE           mov         rcx,rsi
  0000000000000047: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  000000000000004C: 66 03 C0           add         ax,ax
  000000000000004F: 49 03 FF           add         rdi,r15
  0000000000000052: 0F B6 0F           movzx       ecx,byte ptr [rdi]
  0000000000000055: 0F B7 D0           movzx       edx,ax
  0000000000000058: 66 FF C0           inc         ax
  000000000000005B: 48 8D 7F 01        lea         rdi,[rdi+1]
  000000000000005F: 88 4C 32 08        mov         byte ptr [rdx+rsi+8],cl
  0000000000000063: FF CB              dec         ebx
  0000000000000065: 75 EB              jne         0000000000000052
  0000000000000067: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000006A: 48 8B CE           mov         rcx,rsi
  000000000000006D: FF 50 08           call        qword ptr [rax+8]
  0000000000000070: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000075: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000007A: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  000000000000007F: 41 8B C6           mov         eax,r14d
  0000000000000082: 48 83 C4 20        add         rsp,20h
  0000000000000086: 41 5F              pop         r15
  0000000000000088: 41 5E              pop         r14
  000000000000008A: 5F                 pop         rdi
  000000000000008B: C3                 ret

?Erase@TFtEE2232H@@QEAAHXZ (public: int __cdecl TFtEE2232H::Erase(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000007: FF 50 40           call        qword ptr [rax+40h]
  000000000000000A: B8 01 00 00 00     mov         eax,1
  000000000000000F: 48 83 C4 28        add         rsp,28h
  0000000000000013: C3                 ret

?GetUserArea@TFtEE2232H@@UEAAXPEAEKPEAK@Z (public: virtual void __cdecl TFtEE2232H::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 83 EC 20        sub         rsp,20h
  0000000000000018: 41 8B E8           mov         ebp,r8d
  000000000000001B: 41 BF 80 00 00 00  mov         r15d,80h
  0000000000000021: 4D 8B F1           mov         r14,r9
  0000000000000024: 45 3B C7           cmp         r8d,r15d
  0000000000000027: 41 8B F8           mov         edi,r8d
  000000000000002A: 4C 8D 4C 24 50     lea         r9,[rsp+50h]
  000000000000002F: 41 0F 47 EF        cmova       ebp,r15d
  0000000000000033: 48 8B DA           mov         rbx,rdx
  0000000000000036: 48 8B F1           mov         rsi,rcx
  0000000000000039: 44 8B C5           mov         r8d,ebp
  000000000000003C: E8 00 00 00 00     call        ?GetUserArea@TFtE2Data@@UEAAXPEAEKPEAK@Z
  0000000000000041: 8B 44 24 50        mov         eax,dword ptr [rsp+50h]
  0000000000000045: 41 89 06           mov         dword ptr [r14],eax
  0000000000000048: 3B C5              cmp         eax,ebp
  000000000000004A: 75 2F              jne         000000000000007B
  000000000000004C: 2B FD              sub         edi,ebp
  000000000000004E: 74 2B              je          000000000000007B
  0000000000000050: 48 8B CE           mov         rcx,rsi
  0000000000000053: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  0000000000000058: 44 8B C7           mov         r8d,edi
  000000000000005B: 66 03 C0           add         ax,ax
  000000000000005E: 49 03 DF           add         rbx,r15
  0000000000000061: 0F B7 C8           movzx       ecx,ax
  0000000000000064: 66 FF C0           inc         ax
  0000000000000067: 48 8D 5B 01        lea         rbx,[rbx+1]
  000000000000006B: 0F B6 54 31 08     movzx       edx,byte ptr [rcx+rsi+8]
  0000000000000070: 88 53 FF           mov         byte ptr [rbx-1],dl
  0000000000000073: 41 FF C8           dec         r8d
  0000000000000076: 75 E9              jne         0000000000000061
  0000000000000078: 41 01 3E           add         dword ptr [r14],edi
  000000000000007B: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000080: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  0000000000000085: 48 8B 74 24 58     mov         rsi,qword ptr [rsp+58h]
  000000000000008A: 48 83 C4 20        add         rsp,20h
  000000000000008E: 41 5F              pop         r15
  0000000000000090: 41 5E              pop         r14
  0000000000000092: 5F                 pop         rdi
  0000000000000093: C3                 ret

?GetUserAreaOffset@TFtEE2232H@@UEAAGXZ (public: virtual unsigned short __cdecl TFtEE2232H::GetUserAreaOffset(void)):
  0000000000000000: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+832h]
                    00
  0000000000000007: BA EF FF 00 00     mov         edx,0FFEFh
  000000000000000C: 66 83 E8 56        sub         ax,56h
  0000000000000010: 66 85 C2           test        dx,ax
  0000000000000013: 0F 85 00 00 00 00  jne         ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  0000000000000019: B8 0D 00 00 00     mov         eax,0Dh
  000000000000001E: C3                 ret

?GetUserAreaSize@TFtEE2232H@@UEAAGXZ (public: virtual unsigned short __cdecl TFtEE2232H::GetUserAreaSize(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+832h]
                    00
  000000000000000B: BA EF FF 00 00     mov         edx,0FFEFh
  0000000000000010: 66 83 E8 56        sub         ax,56h
  0000000000000014: 66 85 C2           test        dx,ax
  0000000000000017: 74 09              je          0000000000000022
  0000000000000019: 48 83 C4 28        add         rsp,28h
  000000000000001D: E9 00 00 00 00     jmp         ?GetUserAreaSize@TFtE2Data@@UEAAGXZ
  0000000000000022: E8 00 00 00 00     call        ?GetUserAreaSize@TFtE2Data@@UEAAGXZ
  0000000000000027: 83 C0 40           add         eax,40h
  000000000000002A: 48 83 C4 28        add         rsp,28h
  000000000000002E: C3                 ret

?Init@TFtEE2232H@@UEAAXPEAX@Z (public: virtual void __cdecl TFtEE2232H::Init(void *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 20        sub         rsp,20h
  000000000000001C: 48 8B 2A           mov         rbp,qword ptr [rdx]
  000000000000001F: 4C 8B 62 08        mov         r12,qword ptr [rdx+8]
  0000000000000023: 45 33 ED           xor         r13d,r13d
  0000000000000026: 41 0F B7 DD        movzx       ebx,r13w
  000000000000002A: 4C 8B F1           mov         r14,rcx
  000000000000002D: 41 0F B7 F5        movzx       esi,r13w
  0000000000000031: 45 0F B7 FD        movzx       r15d,r13w
  0000000000000035: 38 5A 26           cmp         byte ptr [rdx+26h],bl
  0000000000000038: 74 04              je          000000000000003E
  000000000000003A: 41 8D 75 01        lea         esi,[r13+1]
  000000000000003E: 44 38 6A 27        cmp         byte ptr [rdx+27h],r13b
  0000000000000042: 74 04              je          0000000000000048
  0000000000000044: 66 83 CE 02        or          si,2
  0000000000000048: 44 38 6A 28        cmp         byte ptr [rdx+28h],r13b
  000000000000004C: 74 04              je          0000000000000052
  000000000000004E: 66 83 CE 04        or          si,4
  0000000000000052: 44 38 6A 29        cmp         byte ptr [rdx+29h],r13b
  0000000000000056: 74 04              je          000000000000005C
  0000000000000058: 66 83 CE 08        or          si,8
  000000000000005C: B9 00 01 00 00     mov         ecx,100h
  0000000000000061: 44 38 6A 2A        cmp         byte ptr [rdx+2Ah],r13b
  0000000000000065: 74 03              je          000000000000006A
  0000000000000067: 66 0B F1           or          si,cx
  000000000000006A: 41 B9 00 02 00 00  mov         r9d,200h
  0000000000000070: 44 38 6A 2B        cmp         byte ptr [rdx+2Bh],r13b
  0000000000000074: 74 04              je          000000000000007A
  0000000000000076: 66 41 0B F1        or          si,r9w
  000000000000007A: 41 BA 00 04 00 00  mov         r10d,400h
  0000000000000080: 44 38 6A 2C        cmp         byte ptr [rdx+2Ch],r13b
  0000000000000084: 74 04              je          000000000000008A
  0000000000000086: 66 41 0B F2        or          si,r10w
  000000000000008A: 41 B8 00 08 00 00  mov         r8d,800h
  0000000000000090: 44 38 6A 2D        cmp         byte ptr [rdx+2Dh],r13b
  0000000000000094: 74 04              je          000000000000009A
  0000000000000096: 66 41 0B F0        or          si,r8w
  000000000000009A: 41 BB 00 80 00 00  mov         r11d,8000h
  00000000000000A0: 44 38 6A 2E        cmp         byte ptr [rdx+2Eh],r13b
  00000000000000A4: 74 04              je          00000000000000AA
  00000000000000A6: 66 41 0B F3        or          si,r11w
  00000000000000AA: 44 38 6A 18        cmp         byte ptr [rdx+18h],r13b
  00000000000000AE: 74 06              je          00000000000000B6
  00000000000000B0: 41 BF 04 00 00 00  mov         r15d,4
  00000000000000B6: 44 38 6A 19        cmp         byte ptr [rdx+19h],r13b
  00000000000000BA: 74 05              je          00000000000000C1
  00000000000000BC: 66 41 83 CF 08     or          r15w,8
  00000000000000C1: 0F B6 42 1C        movzx       eax,byte ptr [rdx+1Ch]
  00000000000000C5: 3C 04              cmp         al,4
  00000000000000C7: 74 1F              je          00000000000000E8
  00000000000000C9: 3C 08              cmp         al,8
  00000000000000CB: 75 07              jne         00000000000000D4
  00000000000000CD: BB 01 00 00 00     mov         ebx,1
  00000000000000D2: EB 14              jmp         00000000000000E8
  00000000000000D4: 3C 0C              cmp         al,0Ch
  00000000000000D6: 75 07              jne         00000000000000DF
  00000000000000D8: BB 02 00 00 00     mov         ebx,2
  00000000000000DD: EB 09              jmp         00000000000000E8
  00000000000000DF: 3C 10              cmp         al,10h
  00000000000000E1: 75 05              jne         00000000000000E8
  00000000000000E3: BB 03 00 00 00     mov         ebx,3
  00000000000000E8: 44 38 6A 1A        cmp         byte ptr [rdx+1Ah],r13b
  00000000000000EC: 74 04              je          00000000000000F2
  00000000000000EE: 66 83 CB 04        or          bx,4
  00000000000000F2: 44 38 6A 1B        cmp         byte ptr [rdx+1Bh],r13b
  00000000000000F6: 74 04              je          00000000000000FC
  00000000000000F8: 66 83 CB 08        or          bx,8
  00000000000000FC: 0F B6 42 1F        movzx       eax,byte ptr [rdx+1Fh]
  0000000000000100: 3C 04              cmp         al,4
  0000000000000102: 74 1C              je          0000000000000120
  0000000000000104: 3C 08              cmp         al,8
  0000000000000106: 75 06              jne         000000000000010E
  0000000000000108: 66 83 CB 10        or          bx,10h
  000000000000010C: EB 12              jmp         0000000000000120
  000000000000010E: 3C 0C              cmp         al,0Ch
  0000000000000110: 75 06              jne         0000000000000118
  0000000000000112: 66 83 CB 20        or          bx,20h
  0000000000000116: EB 08              jmp         0000000000000120
  0000000000000118: 3C 10              cmp         al,10h
  000000000000011A: 75 04              jne         0000000000000120
  000000000000011C: 66 83 CB 30        or          bx,30h
  0000000000000120: 44 38 6A 1D        cmp         byte ptr [rdx+1Dh],r13b
  0000000000000124: 74 04              je          000000000000012A
  0000000000000126: 66 83 CB 40        or          bx,40h
  000000000000012A: 44 38 6A 1E        cmp         byte ptr [rdx+1Eh],r13b
  000000000000012E: 74 08              je          0000000000000138
  0000000000000130: B8 80 00 00 00     mov         eax,80h
  0000000000000135: 66 0B D8           or          bx,ax
  0000000000000138: 0F B6 42 22        movzx       eax,byte ptr [rdx+22h]
  000000000000013C: 3C 04              cmp         al,4
  000000000000013E: 74 1F              je          000000000000015F
  0000000000000140: 3C 08              cmp         al,8
  0000000000000142: 75 05              jne         0000000000000149
  0000000000000144: 66 0B D9           or          bx,cx
  0000000000000147: EB 16              jmp         000000000000015F
  0000000000000149: 3C 0C              cmp         al,0Ch
  000000000000014B: 75 06              jne         0000000000000153
  000000000000014D: 66 41 0B D9        or          bx,r9w
  0000000000000151: EB 0C              jmp         000000000000015F
  0000000000000153: 3C 10              cmp         al,10h
  0000000000000155: 75 08              jne         000000000000015F
  0000000000000157: B8 00 03 00 00     mov         eax,300h
  000000000000015C: 66 0B D8           or          bx,ax
  000000000000015F: 44 38 6A 20        cmp         byte ptr [rdx+20h],r13b
  0000000000000163: 74 04              je          0000000000000169
  0000000000000165: 66 41 0B DA        or          bx,r10w
  0000000000000169: 44 38 6A 21        cmp         byte ptr [rdx+21h],r13b
  000000000000016D: 74 04              je          0000000000000173
  000000000000016F: 66 41 0B D8        or          bx,r8w
  0000000000000173: 0F B6 42 25        movzx       eax,byte ptr [rdx+25h]
  0000000000000177: 3C 04              cmp         al,4
  0000000000000179: 74 22              je          000000000000019D
  000000000000017B: 3C 08              cmp         al,8
  000000000000017D: 75 07              jne         0000000000000186
  000000000000017F: B8 00 10 00 00     mov         eax,1000h
  0000000000000184: EB 14              jmp         000000000000019A
  0000000000000186: 3C 0C              cmp         al,0Ch
  0000000000000188: 75 07              jne         0000000000000191
  000000000000018A: B8 00 20 00 00     mov         eax,2000h
  000000000000018F: EB 09              jmp         000000000000019A
  0000000000000191: 3C 10              cmp         al,10h
  0000000000000193: 75 08              jne         000000000000019D
  0000000000000195: B8 00 30 00 00     mov         eax,3000h
  000000000000019A: 66 0B D8           or          bx,ax
  000000000000019D: 44 38 6A 23        cmp         byte ptr [rdx+23h],r13b
  00000000000001A1: 74 08              je          00000000000001AB
  00000000000001A3: B8 00 40 00 00     mov         eax,4000h
  00000000000001A8: 66 0B D8           or          bx,ax
  00000000000001AB: 44 38 6A 24        cmp         byte ptr [rdx+24h],r13b
  00000000000001AF: 74 04              je          00000000000001B5
  00000000000001B1: 66 41 0B DB        or          bx,r11w
  00000000000001B5: 49 8D 4E 08        lea         rcx,[r14+8]
  00000000000001B9: 33 D2              xor         edx,edx
  00000000000001BB: E8 00 00 00 00     call        memset
  00000000000001C0: 48 83 C8 FF        or          rax,0FFFFFFFFFFFFFFFFh
  00000000000001C4: 66 41 89 76 08     mov         word ptr [r14+8],si
  00000000000001C9: 48 8B C8           mov         rcx,rax
  00000000000001CC: 41 C7 46 0A 03 04  mov         dword ptr [r14+0Ah],60100403h
                    10 60
  00000000000001D4: 41 C7 46 0E 00 07  mov         dword ptr [r14+0Eh],64A00700h
                    A0 64
  00000000000001DC: 66 45 89 7E 12     mov         word ptr [r14+12h],r15w
  00000000000001E1: 66 41 89 5E 14     mov         word ptr [r14+14h],bx
  00000000000001E6: 41 C6 46 16 1A     mov         byte ptr [r14+16h],1Ah
  00000000000001EB: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  00000000000001F0: 48 FF C1           inc         rcx
  00000000000001F3: 44 38 2C 29        cmp         byte ptr [rcx+rbp],r13b
  00000000000001F7: 75 F7              jne         00000000000001F0
  00000000000001F9: FE C1              inc         cl
  00000000000001FB: 02 C9              add         cl,cl
  00000000000001FD: 41 88 4E 17        mov         byte ptr [r14+17h],cl
  0000000000000201: 80 C1 1A           add         cl,1Ah
  0000000000000204: 41 88 4E 18        mov         byte ptr [r14+18h],cl
  0000000000000208: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000210: 48 FF C0           inc         rax
  0000000000000213: 45 38 2C 04        cmp         byte ptr [r12+rax],r13b
  0000000000000217: 75 F7              jne         0000000000000210
  0000000000000219: FE C0              inc         al
  000000000000021B: 41 C6 46 1B 02     mov         byte ptr [r14+1Bh],2
  0000000000000220: 02 C0              add         al,al
  0000000000000222: 41 88 46 19        mov         byte ptr [r14+19h],al
  0000000000000226: 02 C1              add         al,cl
  0000000000000228: 41 88 46 1A        mov         byte ptr [r14+1Ah],al
  000000000000022C: 41 0F B7 86 32 08  movzx       eax,word ptr [r14+832h]
                    00 00
  0000000000000234: 66 85 C0           test        ax,ax
  0000000000000237: 74 05              je          000000000000023E
  0000000000000239: 0F B7 C8           movzx       ecx,ax
  000000000000023C: EB 05              jmp         0000000000000243
  000000000000023E: B9 46 00 00 00     mov         ecx,46h
  0000000000000243: 66 41 89 4E 20     mov         word ptr [r14+20h],cx
  0000000000000248: 49 8D 56 22        lea         rdx,[r14+22h]
  000000000000024C: 4C 8B C5           mov         r8,rbp
  000000000000024F: 49 8B CE           mov         rcx,r14
  0000000000000252: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000257: 49 0F BE 46 18     movsx       rax,byte ptr [r14+18h]
  000000000000025C: 49 8D 56 08        lea         rdx,[r14+8]
  0000000000000260: 48 03 D0           add         rdx,rax
  0000000000000263: 4D 8B C4           mov         r8,r12
  0000000000000266: 49 8B CE           mov         rcx,r14
  0000000000000269: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  000000000000026E: 49 0F BE 46 1A     movsx       rax,byte ptr [r14+1Ah]
  0000000000000273: 49 8D 56 08        lea         rdx,[r14+8]
  0000000000000277: 4C 8D 05 00 00 00  lea         r8,[??_C@_00CNPNBAHC@?$AA@]
                    00
  000000000000027E: 48 03 D0           add         rdx,rax
  0000000000000281: 49 8B CE           mov         rcx,r14
  0000000000000284: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  0000000000000289: 41 0F BE 56 18     movsx       edx,byte ptr [r14+18h]
  000000000000028E: 41 0F BE 4E 16     movsx       ecx,byte ptr [r14+16h]
  0000000000000293: 45 0F BE 46 1A     movsx       r8d,byte ptr [r14+1Ah]
  0000000000000298: 41 89 96 38 08 00  mov         dword ptr [r14+838h],edx
                    00
  000000000000029F: 80 CA 80           or          dl,80h
  00000000000002A2: 41 89 8E 34 08 00  mov         dword ptr [r14+834h],ecx
                    00
  00000000000002A9: 80 C9 80           or          cl,80h
  00000000000002AC: 41 88 56 18        mov         byte ptr [r14+18h],dl
  00000000000002B0: 45 89 86 3C 08 00  mov         dword ptr [r14+83Ch],r8d
                    00
  00000000000002B7: B8 02 03 00 00     mov         eax,302h
  00000000000002BC: 41 88 4E 16        mov         byte ptr [r14+16h],cl
  00000000000002C0: 41 80 C8 80        or          r8b,80h
  00000000000002C4: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  00000000000002C9: 49 8B CE           mov         rcx,r14
  00000000000002CC: 45 88 46 1A        mov         byte ptr [r14+1Ah],r8b
  00000000000002D0: 66 89 44 24 50     mov         word ptr [rsp+50h],ax
  00000000000002D5: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  00000000000002DA: 33 D2              xor         edx,edx
  00000000000002DC: 49 8B CE           mov         rcx,r14
  00000000000002DF: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  00000000000002E4: 49 8B 06           mov         rax,qword ptr [r14]
  00000000000002E7: 49 8B CE           mov         rcx,r14
  00000000000002EA: FF 50 08           call        qword ptr [rax+8]
  00000000000002ED: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  00000000000002F2: 48 8B 6C 24 60     mov         rbp,qword ptr [rsp+60h]
  00000000000002F7: 48 8B 74 24 68     mov         rsi,qword ptr [rsp+68h]
  00000000000002FC: 45 89 AE 0C 08 00  mov         dword ptr [r14+80Ch],r13d
                    00
  0000000000000303: 48 83 C4 20        add         rsp,20h
  0000000000000307: 41 5F              pop         r15
  0000000000000309: 41 5E              pop         r14
  000000000000030B: 41 5D              pop         r13
  000000000000030D: 41 5C              pop         r12
  000000000000030F: 5F                 pop         rdi
  0000000000000310: C3                 ret

?MoveStrings@TFtEE2232H@@UEAAXXZ (public: virtual void __cdecl TFtEE2232H::MoveStrings(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+0000000000000832h]
                    00
  000000000000000B: 4C 8B D9           mov         r11,rcx
  000000000000000E: B9 EF FF 00 00     mov         ecx,0FFEFh
  0000000000000013: 66 83 E8 56        sub         ax,56h
  0000000000000017: 66 85 C1           test        cx,ax
  000000000000001A: 0F 85 87 00 00 00  jne         00000000000000A7
  0000000000000020: 49 8D 43 22        lea         rax,[r11+22h]
  0000000000000024: 49 8D 93 88 00 00  lea         rdx,[r11+0000000000000088h]
                    00
  000000000000002B: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000030: 33 DB              xor         ebx,ebx
  0000000000000032: 4C 8B C2           mov         r8,rdx
  0000000000000035: 4C 8D 90 80 00 00  lea         r10,[rax+0000000000000080h]
                    00
  000000000000003C: 4C 2B C0           sub         r8,rax
  000000000000003F: 44 8B CB           mov         r9d,ebx
  0000000000000042: 49 FF C0           inc         r8
  0000000000000045: 49 D1 E8           shr         r8,1
  0000000000000048: 48 3B C2           cmp         rax,rdx
  000000000000004B: 48 8B D0           mov         rdx,rax
  000000000000004E: 4C 0F 47 C3        cmova       r8,rbx
  0000000000000052: 4D 85 C0           test        r8,r8
  0000000000000055: 74 1E              je          0000000000000075
  0000000000000057: 4C 2B D0           sub         r10,rax
  000000000000005A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000060: 0F B7 0A           movzx       ecx,word ptr [rdx]
  0000000000000063: 49 FF C1           inc         r9
  0000000000000066: 48 8D 52 02        lea         rdx,[rdx+2]
  000000000000006A: 66 41 89 4C 12 FE  mov         word ptr [r10+rdx-2],cx
  0000000000000070: 4D 3B C8           cmp         r9,r8
  0000000000000073: 72 EB              jb          0000000000000060
  0000000000000075: 48 8B CB           mov         rcx,rbx
  0000000000000078: 4D 85 C0           test        r8,r8
  000000000000007B: 74 12              je          000000000000008F
  000000000000007D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000080: 48 FF C1           inc         rcx
  0000000000000083: 66 89 18           mov         word ptr [rax],bx
  0000000000000086: 48 8D 40 02        lea         rax,[rax+2]
  000000000000008A: 49 3B C8           cmp         rcx,r8
  000000000000008D: 72 F1              jb          0000000000000080
  000000000000008F: 49 8B 03           mov         rax,qword ptr [r11]
  0000000000000092: 49 8B CB           mov         rcx,r11
  0000000000000095: 48 8B 5C 24 20     mov         rbx,qword ptr [rsp+20h]
  000000000000009A: 48 83 C4 28        add         rsp,28h
  000000000000009E: 48 FF 60 08        jmp         qword ptr [rax+8]
  00000000000000A2: 48 8B 5C 24 20     mov         rbx,qword ptr [rsp+20h]
  00000000000000A7: 48 83 C4 28        add         rsp,28h
  00000000000000AB: C3                 ret

?Program@TFtEE2232H@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE2232H::Program(void *,char *,char *,char *,char *)):
  0000000000000000: 4C 8B DC           mov         r11,rsp
  0000000000000003: 4D 89 4B 20        mov         qword ptr [r11+20h],r9
  0000000000000007: 53                 push        rbx
  0000000000000008: 55                 push        rbp
  0000000000000009: 56                 push        rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 41 55              push        r13
  000000000000000D: 48 81 EC D0 00 00  sub         rsp,0D0h
                    00
  0000000000000014: 48 8B F1           mov         rsi,rcx
  0000000000000017: 33 C9              xor         ecx,ecx
  0000000000000019: 49 8B C1           mov         rax,r9
  000000000000001C: 4D 8B E8           mov         r13,r8
  000000000000001F: 48 8B FA           mov         rdi,rdx
  0000000000000022: 0F B7 E9           movzx       ebp,cx
  0000000000000025: 0F B7 D9           movzx       ebx,cx
  0000000000000028: 4D 85 C0           test        r8,r8
  000000000000002B: 0F 84 06 04 00 00  je          0000000000000437
  0000000000000031: 48 85 C0           test        rax,rax
  0000000000000034: 0F 84 FD 03 00 00  je          0000000000000437
  000000000000003A: 4D 89 63 08        mov         qword ptr [r11+8],r12
  000000000000003E: 4C 8B A4 24 20 01  mov         r12,qword ptr [rsp+120h]
                    00 00
  0000000000000046: 4D 85 E4           test        r12,r12
  0000000000000049: 0F 84 E1 03 00 00  je          0000000000000430
  000000000000004F: 66 39 4A 04        cmp         word ptr [rdx+4],cx
  0000000000000053: 0F 84 D7 03 00 00  je          0000000000000430
  0000000000000059: 66 39 4A 06        cmp         word ptr [rdx+6],cx
  000000000000005D: 0F 84 CD 03 00 00  je          0000000000000430
  0000000000000063: 4D 89 73 D0        mov         qword ptr [r11-30h],r14
  0000000000000067: 48 8D 4E 08        lea         rcx,[rsi+8]
  000000000000006B: 33 D2              xor         edx,edx
  000000000000006D: 41 B8 00 08 00 00  mov         r8d,800h
  0000000000000073: 4D 89 7B C8        mov         qword ptr [r11-38h],r15
  0000000000000077: E8 00 00 00 00     call        memset
  000000000000007C: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000007F: 48 8B CE           mov         rcx,rsi
  0000000000000082: FF 50 40           call        qword ptr [rax+40h]
  0000000000000085: 4C 8B BC 24 28 01  mov         r15,qword ptr [rsp+128h]
                    00 00
  000000000000008D: B8 00 07 00 00     mov         eax,700h
  0000000000000092: 49 83 CE FF        or          r14,0FFFFFFFFFFFFFFFFh
  0000000000000096: 66 89 46 0E        mov         word ptr [rsi+0Eh],ax
  000000000000009A: 4D 85 FF           test        r15,r15
  000000000000009D: 74 12              je          00000000000000B1
  000000000000009F: 49 8B C6           mov         rax,r14
  00000000000000A2: 48 FF C0           inc         rax
  00000000000000A5: 41 80 3C 07 00     cmp         byte ptr [r15+rax],0
  00000000000000AA: 75 F6              jne         00000000000000A2
  00000000000000AC: 48 85 C0           test        rax,rax
  00000000000000AF: 75 44              jne         00000000000000F5
  00000000000000B1: 0F B7 47 06        movzx       eax,word ptr [rdi+6]
  00000000000000B5: 25 03 00 00 80     and         eax,80000003h
  00000000000000BA: 7D 07              jge         00000000000000C3
  00000000000000BC: FF C8              dec         eax
  00000000000000BE: 83 C8 FC           or          eax,0FFFFFFFCh
  00000000000000C1: FF C0              inc         eax
  00000000000000C3: 48 8B 94 24 18 01  mov         rdx,qword ptr [rsp+118h]
                    00 00
  00000000000000CB: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000000D0: 44 0F B7 C0        movzx       r8d,ax
  00000000000000D4: E8 00 00 00 00     call        ??0TSerialNumber@@QEAA@PEADG@Z
  00000000000000D9: 4C 8D 84 24 10 01  lea         r8,[rsp+110h]
                    00 00
  00000000000000E1: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  00000000000000E6: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000000EB: E8 00 00 00 00     call        ?Get@TSerialNumber@@QEAAHPEADPEAH@Z
  00000000000000F0: 4C 8D 7C 24 40     lea         r15,[rsp+40h]
  00000000000000F5: 0F B7 57 04        movzx       edx,word ptr [rdi+4]
  00000000000000F9: 48 8B CE           mov         rcx,rsi
  00000000000000FC: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QEAAXG@Z
  0000000000000101: 0F B7 57 06        movzx       edx,word ptr [rdi+6]
  0000000000000105: 48 8B CE           mov         rcx,rsi
  0000000000000108: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QEAAXG@Z
  000000000000010D: 80 7F 08 00        cmp         byte ptr [rdi+8],0
  0000000000000111: 74 04              je          0000000000000117
  0000000000000113: 80 4E 12 08        or          byte ptr [rsi+12h],8
  0000000000000117: 0F B7 57 0A        movzx       edx,word ptr [rdi+0Ah]
  000000000000011B: 48 8B CE           mov         rcx,rsi
  000000000000011E: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QEAAXH@Z
  0000000000000123: 80 7F 0C 00        cmp         byte ptr [rdi+0Ch],0
  0000000000000127: B1 80              mov         cl,80h
  0000000000000129: 0F B6 C1           movzx       eax,cl
  000000000000012C: B9 C0 00 00 00     mov         ecx,0C0h
  0000000000000131: 0F 45 C1           cmovne      eax,ecx
  0000000000000134: 80 7F 0D 00        cmp         byte ptr [rdi+0Dh],0
  0000000000000138: 74 02              je          000000000000013C
  000000000000013A: 0C 20              or          al,20h
  000000000000013C: 0F B6 D0           movzx       edx,al
  000000000000013F: 48 8B CE           mov         rcx,rsi
  0000000000000142: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QEAAXE@Z
  0000000000000147: 80 7F 0E 00        cmp         byte ptr [rdi+0Eh],0
  000000000000014B: 74 04              je          0000000000000151
  000000000000014D: 80 4E 12 04        or          byte ptr [rsi+12h],4
  0000000000000151: C6 46 16 1A        mov         byte ptr [rsi+16h],1Ah
  0000000000000155: 49 8B C6           mov         rax,r14
  0000000000000158: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000160: 48 FF C0           inc         rax
  0000000000000163: 41 80 7C 05 00 00  cmp         byte ptr [r13+rax],0
  0000000000000169: 75 F5              jne         0000000000000160
  000000000000016B: FE C0              inc         al
  000000000000016D: 49 8B CE           mov         rcx,r14
  0000000000000170: 02 C0              add         al,al
  0000000000000172: 88 46 17           mov         byte ptr [rsi+17h],al
  0000000000000175: 04 1A              add         al,1Ah
  0000000000000177: 88 46 18           mov         byte ptr [rsi+18h],al
  000000000000017A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000180: 48 FF C1           inc         rcx
  0000000000000183: 41 80 3C 0C 00     cmp         byte ptr [r12+rcx],0
  0000000000000188: 75 F6              jne         0000000000000180
  000000000000018A: FE C1              inc         cl
  000000000000018C: 02 C9              add         cl,cl
  000000000000018E: 88 4E 19           mov         byte ptr [rsi+19h],cl
  0000000000000191: 02 C8              add         cl,al
  0000000000000193: 88 4E 1A           mov         byte ptr [rsi+1Ah],cl
  0000000000000196: 49 FF C6           inc         r14
  0000000000000199: 43 80 3C 37 00     cmp         byte ptr [r15+r14],0
  000000000000019E: 75 F6              jne         0000000000000196
  00000000000001A0: 41 FE C6           inc         r14b
  00000000000001A3: 48 8D 56 22        lea         rdx,[rsi+22h]
  00000000000001A7: 4D 8B C5           mov         r8,r13
  00000000000001AA: 45 02 F6           add         r14b,r14b
  00000000000001AD: 48 8B CE           mov         rcx,rsi
  00000000000001B0: 44 88 76 1B        mov         byte ptr [rsi+1Bh],r14b
  00000000000001B4: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001B9: 0F B6 46 18        movzx       eax,byte ptr [rsi+18h]
  00000000000001BD: 48 8D 56 08        lea         rdx,[rsi+8]
  00000000000001C1: 4D 8B C4           mov         r8,r12
  00000000000001C4: 48 8B CE           mov         rcx,rsi
  00000000000001C7: 48 03 D0           add         rdx,rax
  00000000000001CA: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001CF: 0F B6 46 1A        movzx       eax,byte ptr [rsi+1Ah]
  00000000000001D3: 48 8D 56 08        lea         rdx,[rsi+8]
  00000000000001D7: 48 03 D0           add         rdx,rax
  00000000000001DA: 4D 8B C7           mov         r8,r15
  00000000000001DD: 48 8B CE           mov         rcx,rsi
  00000000000001E0: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001E5: 0F BE 46 16        movsx       eax,byte ptr [rsi+16h]
  00000000000001E9: 48 8B CE           mov         rcx,rsi
  00000000000001EC: 89 86 34 08 00 00  mov         dword ptr [rsi+834h],eax
  00000000000001F2: 0F BE 46 18        movsx       eax,byte ptr [rsi+18h]
  00000000000001F6: 89 86 38 08 00 00  mov         dword ptr [rsi+838h],eax
  00000000000001FC: 0F BE 46 1A        movsx       eax,byte ptr [rsi+1Ah]
  0000000000000200: 89 86 3C 08 00 00  mov         dword ptr [rsi+83Ch],eax
  0000000000000206: 80 4E 16 80        or          byte ptr [rsi+16h],80h
  000000000000020A: 80 4E 18 80        or          byte ptr [rsi+18h],80h
  000000000000020E: 80 4E 1A 80        or          byte ptr [rsi+1Ah],80h
  0000000000000212: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000215: FF 50 48           call        qword ptr [rax+48h]
  0000000000000218: 80 7F 1C 00        cmp         byte ptr [rdi+1Ch],0
  000000000000021C: 4C 8B BC 24 C0 00  mov         r15,qword ptr [rsp+0C0h]
                    00 00
  0000000000000224: 74 05              je          000000000000022B
  0000000000000226: BD 01 00 00 00     mov         ebp,1
  000000000000022B: 80 7F 1D 00        cmp         byte ptr [rdi+1Dh],0
  000000000000022F: 74 04              je          0000000000000235
  0000000000000231: 66 83 CD 02        or          bp,2
  0000000000000235: 80 7F 1E 00        cmp         byte ptr [rdi+1Eh],0
  0000000000000239: 74 04              je          000000000000023F
  000000000000023B: 66 83 CD 04        or          bp,4
  000000000000023F: 80 7F 23 01        cmp         byte ptr [rdi+23h],1
  0000000000000243: 75 04              jne         0000000000000249
  0000000000000245: 66 83 CD 08        or          bp,8
  0000000000000249: 80 7F 1F 00        cmp         byte ptr [rdi+1Fh],0
  000000000000024D: B9 00 01 00 00     mov         ecx,100h
  0000000000000252: 74 03              je          0000000000000257
  0000000000000254: 66 0B E9           or          bp,cx
  0000000000000257: 80 7F 20 00        cmp         byte ptr [rdi+20h],0
  000000000000025B: BA 00 02 00 00     mov         edx,200h
  0000000000000260: 74 03              je          0000000000000265
  0000000000000262: 66 0B EA           or          bp,dx
  0000000000000265: 80 7F 21 00        cmp         byte ptr [rdi+21h],0
  0000000000000269: 41 B8 00 04 00 00  mov         r8d,400h
  000000000000026F: 74 04              je          0000000000000275
  0000000000000271: 66 41 0B E8        or          bp,r8w
  0000000000000275: 80 7F 24 01        cmp         byte ptr [rdi+24h],1
  0000000000000279: 41 BA 00 08 00 00  mov         r10d,800h
  000000000000027F: 75 04              jne         0000000000000285
  0000000000000281: 66 41 0B EA        or          bp,r10w
  0000000000000285: 80 7F 22 00        cmp         byte ptr [rdi+22h],0
  0000000000000289: 41 B9 00 80 00 00  mov         r9d,8000h
  000000000000028F: 74 04              je          0000000000000295
  0000000000000291: 66 41 0B E9        or          bp,r9w
  0000000000000295: 66 89 6E 08        mov         word ptr [rsi+8],bp
  0000000000000299: 0F B6 47 12        movzx       eax,byte ptr [rdi+12h]
  000000000000029D: 3C 04              cmp         al,4
  000000000000029F: 74 1F              je          00000000000002C0
  00000000000002A1: 3C 08              cmp         al,8
  00000000000002A3: 75 07              jne         00000000000002AC
  00000000000002A5: BB 01 00 00 00     mov         ebx,1
  00000000000002AA: EB 14              jmp         00000000000002C0
  00000000000002AC: 3C 0C              cmp         al,0Ch
  00000000000002AE: 75 07              jne         00000000000002B7
  00000000000002B0: BB 02 00 00 00     mov         ebx,2
  00000000000002B5: EB 09              jmp         00000000000002C0
  00000000000002B7: 3C 10              cmp         al,10h
  00000000000002B9: 75 05              jne         00000000000002C0
  00000000000002BB: BB 03 00 00 00     mov         ebx,3
  00000000000002C0: 80 7F 10 00        cmp         byte ptr [rdi+10h],0
  00000000000002C4: 74 04              je          00000000000002CA
  00000000000002C6: 66 83 CB 04        or          bx,4
  00000000000002CA: 80 7F 11 00        cmp         byte ptr [rdi+11h],0
  00000000000002CE: 74 04              je          00000000000002D4
  00000000000002D0: 66 83 CB 08        or          bx,8
  00000000000002D4: 0F B6 47 15        movzx       eax,byte ptr [rdi+15h]
  00000000000002D8: 3C 04              cmp         al,4
  00000000000002DA: 74 1C              je          00000000000002F8
  00000000000002DC: 3C 08              cmp         al,8
  00000000000002DE: 75 06              jne         00000000000002E6
  00000000000002E0: 66 83 CB 10        or          bx,10h
  00000000000002E4: EB 12              jmp         00000000000002F8
  00000000000002E6: 3C 0C              cmp         al,0Ch
  00000000000002E8: 75 06              jne         00000000000002F0
  00000000000002EA: 66 83 CB 20        or          bx,20h
  00000000000002EE: EB 08              jmp         00000000000002F8
  00000000000002F0: 3C 10              cmp         al,10h
  00000000000002F2: 75 04              jne         00000000000002F8
  00000000000002F4: 66 83 CB 30        or          bx,30h
  00000000000002F8: 80 7F 13 00        cmp         byte ptr [rdi+13h],0
  00000000000002FC: 74 04              je          0000000000000302
  00000000000002FE: 66 83 CB 40        or          bx,40h
  0000000000000302: 80 7F 14 00        cmp         byte ptr [rdi+14h],0
  0000000000000306: 74 08              je          0000000000000310
  0000000000000308: B8 80 00 00 00     mov         eax,80h
  000000000000030D: 66 0B D8           or          bx,ax
  0000000000000310: 0F B6 47 18        movzx       eax,byte ptr [rdi+18h]
  0000000000000314: 3C 04              cmp         al,4
  0000000000000316: 74 1E              je          0000000000000336
  0000000000000318: 3C 08              cmp         al,8
  000000000000031A: 75 05              jne         0000000000000321
  000000000000031C: 66 0B D9           or          bx,cx
  000000000000031F: EB 15              jmp         0000000000000336
  0000000000000321: 3C 0C              cmp         al,0Ch
  0000000000000323: 75 05              jne         000000000000032A
  0000000000000325: 66 0B DA           or          bx,dx
  0000000000000328: EB 0C              jmp         0000000000000336
  000000000000032A: 3C 10              cmp         al,10h
  000000000000032C: 75 08              jne         0000000000000336
  000000000000032E: B8 00 03 00 00     mov         eax,300h
  0000000000000333: 66 0B D8           or          bx,ax
  0000000000000336: 80 7F 16 00        cmp         byte ptr [rdi+16h],0
  000000000000033A: 74 04              je          0000000000000340
  000000000000033C: 66 41 0B D8        or          bx,r8w
  0000000000000340: 80 7F 17 00        cmp         byte ptr [rdi+17h],0
  0000000000000344: 74 04              je          000000000000034A
  0000000000000346: 66 41 0B DA        or          bx,r10w
  000000000000034A: 0F B6 47 1B        movzx       eax,byte ptr [rdi+1Bh]
  000000000000034E: 3C 04              cmp         al,4
  0000000000000350: 74 22              je          0000000000000374
  0000000000000352: 3C 08              cmp         al,8
  0000000000000354: 75 07              jne         000000000000035D
  0000000000000356: B8 00 10 00 00     mov         eax,1000h
  000000000000035B: EB 14              jmp         0000000000000371
  000000000000035D: 3C 0C              cmp         al,0Ch
  000000000000035F: 75 07              jne         0000000000000368
  0000000000000361: B8 00 20 00 00     mov         eax,2000h
  0000000000000366: EB 09              jmp         0000000000000371
  0000000000000368: 3C 10              cmp         al,10h
  000000000000036A: 75 08              jne         0000000000000374
  000000000000036C: B8 00 30 00 00     mov         eax,3000h
  0000000000000371: 66 0B D8           or          bx,ax
  0000000000000374: 80 7F 19 00        cmp         byte ptr [rdi+19h],0
  0000000000000378: 74 08              je          0000000000000382
  000000000000037A: B8 00 40 00 00     mov         eax,4000h
  000000000000037F: 66 0B D8           or          bx,ax
  0000000000000382: 80 7F 1A 00        cmp         byte ptr [rdi+1Ah],0
  0000000000000386: 74 04              je          000000000000038C
  0000000000000388: 66 41 0B D9        or          bx,r9w
  000000000000038C: 66 89 5E 14        mov         word ptr [rsi+14h],bx
  0000000000000390: 0F B7 86 32 08 00  movzx       eax,word ptr [rsi+832h]
                    00
  0000000000000397: 66 85 C0           test        ax,ax
  000000000000039A: 74 05              je          00000000000003A1
  000000000000039C: 0F B7 C8           movzx       ecx,ax
  000000000000039F: EB 05              jmp         00000000000003A6
  00000000000003A1: B9 46 00 00 00     mov         ecx,46h
  00000000000003A6: 66 89 4E 20        mov         word ptr [rsi+20h],cx
  00000000000003AA: B8 02 03 00 00     mov         eax,302h
  00000000000003AF: 48 8D 94 24 08 01  lea         rdx,[rsp+108h]
                    00 00
  00000000000003B7: 48 8B CE           mov         rcx,rsi
  00000000000003BA: 66 89 84 24 08 01  mov         word ptr [rsp+108h],ax
                    00 00
  00000000000003C2: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  00000000000003C7: 33 D2              xor         edx,edx
  00000000000003C9: 48 8B CE           mov         rcx,rsi
  00000000000003CC: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  00000000000003D1: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000003D4: 48 8B CE           mov         rcx,rsi
  00000000000003D7: FF 50 08           call        qword ptr [rax+8]
  00000000000003DA: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000003DD: 33 DB              xor         ebx,ebx
  00000000000003DF: 48 8B CE           mov         rcx,rsi
  00000000000003E2: 89 9E 0C 08 00 00  mov         dword ptr [rsi+80Ch],ebx
  00000000000003E8: FF 50 40           call        qword ptr [rax+40h]
  00000000000003EB: 48 8D 4E 08        lea         rcx,[rsi+8]
  00000000000003EF: E8 00 00 00 00     call        ?Write@TEeData@@QEAAHXZ
  00000000000003F4: 85 C0              test        eax,eax
  00000000000003F6: 75 21              jne         0000000000000419
  00000000000003F8: 8D 43 0C           lea         eax,[rbx+0Ch]
  00000000000003FB: 4C 8B B4 24 C8 00  mov         r14,qword ptr [rsp+0C8h]
                    00 00
  0000000000000403: 4C 8B A4 24 00 01  mov         r12,qword ptr [rsp+100h]
                    00 00
  000000000000040B: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  0000000000000412: 41 5D              pop         r13
  0000000000000414: 5F                 pop         rdi
  0000000000000415: 5E                 pop         rsi
  0000000000000416: 5D                 pop         rbp
  0000000000000417: 5B                 pop         rbx
  0000000000000418: C3                 ret
  0000000000000419: 48 8D 4E 08        lea         rcx,[rsi+8]
  000000000000041D: E8 00 00 00 00     call        ?Confirm@TEeData@@QEAAHXZ
  0000000000000422: B9 0C 00 00 00     mov         ecx,0Ch
  0000000000000427: 85 C0              test        eax,eax
  0000000000000429: 0F 44 D9           cmove       ebx,ecx
  000000000000042C: 8B C3              mov         eax,ebx
  000000000000042E: EB CB              jmp         00000000000003FB
  0000000000000430: B8 06 00 00 00     mov         eax,6
  0000000000000435: EB CC              jmp         0000000000000403
  0000000000000437: B8 06 00 00 00     mov         eax,6
  000000000000043C: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  0000000000000443: 41 5D              pop         r13
  0000000000000445: 5F                 pop         rdi
  0000000000000446: 5E                 pop         rsi
  0000000000000447: 5D                 pop         rbp
  0000000000000448: 5B                 pop         rbx
  0000000000000449: C3                 ret

?Read@TFtEE2232H@@UEAAHXZ (public: virtual int __cdecl TFtEE2232H::Read(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ?Read@TFtE2Data@@UEAAHXZ
  000000000000000E: 85 C0              test        eax,eax
  0000000000000010: 75 06              jne         0000000000000018
  0000000000000012: 48 83 C4 20        add         rsp,20h
  0000000000000016: 5B                 pop         rbx
  0000000000000017: C3                 ret
  0000000000000018: 0F B7 43 20        movzx       eax,word ptr [rbx+20h]
  000000000000001C: B9 EF FF 00 00     mov         ecx,0FFEFh
  0000000000000021: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  0000000000000028: 66 83 E8 56        sub         ax,56h
  000000000000002C: 66 85 C1           test        cx,ax
  000000000000002F: 74 15              je          0000000000000046
  0000000000000031: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],40h
                    40 00 00 00
  000000000000003B: B8 01 00 00 00     mov         eax,1
  0000000000000040: 48 83 C4 20        add         rsp,20h
  0000000000000044: 5B                 pop         rbx
  0000000000000045: C3                 ret
  0000000000000046: 83 AB 34 08 00 00  sub         dword ptr [rbx+834h],0FFFFFF80h
                    80
  000000000000004D: 83 AB 38 08 00 00  sub         dword ptr [rbx+838h],0FFFFFF80h
                    80
  0000000000000054: 83 AB 3C 08 00 00  sub         dword ptr [rbx+83Ch],0FFFFFF80h
                    80
  000000000000005B: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000065: B8 01 00 00 00     mov         eax,1
  000000000000006A: 48 83 C4 20        add         rsp,20h
  000000000000006E: 5B                 pop         rbx
  000000000000006F: C3                 ret

?ReadAndParse@TFtEE2232H@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE2232H::ReadAndParse(void *,char *,char *,char *,char *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 54              push        r12
  0000000000000016: 41 56              push        r14
  0000000000000018: 41 57              push        r15
  000000000000001A: 48 83 EC 60        sub         rsp,60h
  000000000000001E: 45 33 E4           xor         r12d,r12d
  0000000000000021: 49 8B E9           mov         rbp,r9
  0000000000000024: 4D 8B F8           mov         r15,r8
  0000000000000027: 48 8B DA           mov         rbx,rdx
  000000000000002A: 4C 8B F1           mov         r14,rcx
  000000000000002D: 48 85 D2           test        rdx,rdx
  0000000000000030: 0F 84 26 03 00 00  je          000000000000035C
  0000000000000036: 4D 85 C0           test        r8,r8
  0000000000000039: 0F 84 1D 03 00 00  je          000000000000035C
  000000000000003F: 4D 85 C9           test        r9,r9
  0000000000000042: 0F 84 14 03 00 00  je          000000000000035C
  0000000000000048: 48 8B BC 24 A0 00  mov         rdi,qword ptr [rsp+0A0h]
                    00 00
  0000000000000050: 48 85 FF           test        rdi,rdi
  0000000000000053: 0F 84 03 03 00 00  je          000000000000035C
  0000000000000059: 48 8B B4 24 A8 00  mov         rsi,qword ptr [rsp+0A8h]
                    00 00
  0000000000000061: 48 85 F6           test        rsi,rsi
  0000000000000064: 0F 84 F2 02 00 00  je          000000000000035C
  000000000000006A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000006D: FF 10              call        qword ptr [rax]
  000000000000006F: 85 C0              test        eax,eax
  0000000000000071: 0F 84 DA 02 00 00  je          0000000000000351
  0000000000000077: 49 8B CE           mov         rcx,r14
  000000000000007A: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  000000000000007F: 66 85 C0           test        ax,ax
  0000000000000082: 75 0E              jne         0000000000000092
  0000000000000084: 41 BC 0E 00 00 00  mov         r12d,0Eh
  000000000000008A: 41 8B C4           mov         eax,r12d
  000000000000008D: E9 CF 02 00 00     jmp         0000000000000361
  0000000000000092: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000000000000097: 66 3B C1           cmp         ax,cx
  000000000000009A: 75 0E              jne         00000000000000AA
  000000000000009C: 41 BC 0F 00 00 00  mov         r12d,0Fh
  00000000000000A2: 41 8B C4           mov         eax,r12d
  00000000000000A5: E9 B7 02 00 00     jmp         0000000000000361
  00000000000000AA: 49 8B CE           mov         rcx,r14
  00000000000000AD: 66 89 43 04        mov         word ptr [rbx+4],ax
  00000000000000B1: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  00000000000000B6: 49 8B CE           mov         rcx,r14
  00000000000000B9: 66 89 43 06        mov         word ptr [rbx+6],ax
  00000000000000BD: 41 0F BE 46 12     movsx       eax,byte ptr [r14+12h]
  00000000000000C2: C1 E8 03           shr         eax,3
  00000000000000C5: 24 01              and         al,1
  00000000000000C7: 88 43 08           mov         byte ptr [rbx+8],al
  00000000000000CA: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  00000000000000CF: 49 8B CE           mov         rcx,r14
  00000000000000D2: 66 89 43 0A        mov         word ptr [rbx+0Ah],ax
  00000000000000D6: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  00000000000000DB: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000E0: 0F B6 C8           movzx       ecx,al
  00000000000000E3: C0 E8 05           shr         al,5
  00000000000000E6: 24 01              and         al,1
  00000000000000E8: C0 E9 06           shr         cl,6
  00000000000000EB: 88 43 0D           mov         byte ptr [rbx+0Dh],al
  00000000000000EE: 80 E1 01           and         cl,1
  00000000000000F1: 88 4B 0C           mov         byte ptr [rbx+0Ch],cl
  00000000000000F4: 41 0F BE 46 12     movsx       eax,byte ptr [r14+12h]
  00000000000000F9: 49 8B CE           mov         rcx,r14
  00000000000000FC: C1 E8 02           shr         eax,2
  00000000000000FF: 24 01              and         al,1
  0000000000000101: 88 43 0E           mov         byte ptr [rbx+0Eh],al
  0000000000000104: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  0000000000000109: 48 8D 44 24 20     lea         rax,[rsp+20h]
  000000000000010E: 4C 2B F8           sub         r15,rax
  0000000000000111: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000116: 66 66 0F 1F 84 00  nop         word ptr [rax+rax]
                    00 00 00 00
  0000000000000120: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000123: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000127: 42 88 44 39 FF     mov         byte ptr [rcx+r15-1],al
  000000000000012C: 84 C0              test        al,al
  000000000000012E: 75 F0              jne         0000000000000120
  0000000000000130: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000135: 49 8B CE           mov         rcx,r14
  0000000000000138: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  000000000000013D: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000142: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000147: 48 2B E8           sub         rbp,rax
  000000000000014A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000150: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000153: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000157: 88 44 29 FF        mov         byte ptr [rcx+rbp-1],al
  000000000000015B: 84 C0              test        al,al
  000000000000015D: 75 F1              jne         0000000000000150
  000000000000015F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000164: 49 8B CE           mov         rcx,r14
  0000000000000167: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  000000000000016C: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000171: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000176: 48 2B F8           sub         rdi,rax
  0000000000000179: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000180: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000183: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000187: 88 44 39 FF        mov         byte ptr [rcx+rdi-1],al
  000000000000018B: 84 C0              test        al,al
  000000000000018D: 75 F1              jne         0000000000000180
  000000000000018F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000194: 49 8B CE           mov         rcx,r14
  0000000000000197: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000019C: 48 8D 44 24 20     lea         rax,[rsp+20h]
  00000000000001A1: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000001A6: 48 2B F0           sub         rsi,rax
  00000000000001A9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001B0: 0F B6 01           movzx       eax,byte ptr [rcx]
  00000000000001B3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000001B7: 88 44 31 FF        mov         byte ptr [rcx+rsi-1],al
  00000000000001BB: 84 C0              test        al,al
  00000000000001BD: 75 F1              jne         00000000000001B0
  00000000000001BF: 41 0F B7 4E 08     movzx       ecx,word ptr [r14+8]
  00000000000001C4: BA 04 00 00 00     mov         edx,4
  00000000000001C9: 0F B6 C1           movzx       eax,cl
  00000000000001CC: 44 8D 4A 04        lea         r9d,[rdx+4]
  00000000000001D0: 24 01              and         al,1
  00000000000001D2: 88 43 1C           mov         byte ptr [rbx+1Ch],al
  00000000000001D5: 0F B6 C1           movzx       eax,cl
  00000000000001D8: D0 E8              shr         al,1
  00000000000001DA: 24 01              and         al,1
  00000000000001DC: 88 43 1D           mov         byte ptr [rbx+1Dh],al
  00000000000001DF: 0F B6 C1           movzx       eax,cl
  00000000000001E2: C0 E8 02           shr         al,2
  00000000000001E5: 24 01              and         al,1
  00000000000001E7: 88 43 1E           mov         byte ptr [rbx+1Eh],al
  00000000000001EA: 0F B6 C1           movzx       eax,cl
  00000000000001ED: C0 E8 03           shr         al,3
  00000000000001F0: 24 01              and         al,1
  00000000000001F2: 88 43 23           mov         byte ptr [rbx+23h],al
  00000000000001F5: 0F B7 C1           movzx       eax,cx
  00000000000001F8: 66 C1 E8 08        shr         ax,8
  00000000000001FC: 24 01              and         al,1
  00000000000001FE: 88 43 1F           mov         byte ptr [rbx+1Fh],al
  0000000000000201: 0F B7 C1           movzx       eax,cx
  0000000000000204: 66 C1 E8 09        shr         ax,9
  0000000000000208: 24 01              and         al,1
  000000000000020A: 88 43 20           mov         byte ptr [rbx+20h],al
  000000000000020D: 0F B7 C1           movzx       eax,cx
  0000000000000210: 66 C1 E8 0A        shr         ax,0Ah
  0000000000000214: 24 01              and         al,1
  0000000000000216: 88 43 21           mov         byte ptr [rbx+21h],al
  0000000000000219: 0F B7 C1           movzx       eax,cx
  000000000000021C: 66 C1 E9 0F        shr         cx,0Fh
  0000000000000220: 66 C1 E8 0B        shr         ax,0Bh
  0000000000000224: 80 E1 01           and         cl,1
  0000000000000227: 24 01              and         al,1
  0000000000000229: 88 4B 22           mov         byte ptr [rbx+22h],cl
  000000000000022C: 88 43 24           mov         byte ptr [rbx+24h],al
  000000000000022F: 41 0F B7 4E 14     movzx       ecx,word ptr [r14+14h]
  0000000000000234: 0F B6 C1           movzx       eax,cl
  0000000000000237: 24 03              and         al,3
  0000000000000239: 3C 03              cmp         al,3
  000000000000023B: 75 06              jne         0000000000000243
  000000000000023D: C6 43 12 10        mov         byte ptr [rbx+12h],10h
  0000000000000241: EB 17              jmp         000000000000025A
  0000000000000243: F6 C1 02           test        cl,2
  0000000000000246: 74 06              je          000000000000024E
  0000000000000248: C6 43 12 0C        mov         byte ptr [rbx+12h],0Ch
  000000000000024C: EB 0C              jmp         000000000000025A
  000000000000024E: F6 C1 01           test        cl,1
  0000000000000251: 8B C2              mov         eax,edx
  0000000000000253: 41 0F 45 C1        cmovne      eax,r9d
  0000000000000257: 88 43 12           mov         byte ptr [rbx+12h],al
  000000000000025A: 0F B6 C1           movzx       eax,cl
  000000000000025D: C0 E8 02           shr         al,2
  0000000000000260: 24 01              and         al,1
  0000000000000262: 88 43 10           mov         byte ptr [rbx+10h],al
  0000000000000265: 0F B6 C1           movzx       eax,cl
  0000000000000268: C0 E8 03           shr         al,3
  000000000000026B: 24 01              and         al,1
  000000000000026D: 88 43 11           mov         byte ptr [rbx+11h],al
  0000000000000270: 0F B6 C1           movzx       eax,cl
  0000000000000273: 24 30              and         al,30h
  0000000000000275: 3C 30              cmp         al,30h
  0000000000000277: 75 06              jne         000000000000027F
  0000000000000279: C6 43 15 10        mov         byte ptr [rbx+15h],10h
  000000000000027D: EB 17              jmp         0000000000000296
  000000000000027F: F6 C1 20           test        cl,20h
  0000000000000282: 74 06              je          000000000000028A
  0000000000000284: C6 43 15 0C        mov         byte ptr [rbx+15h],0Ch
  0000000000000288: EB 0C              jmp         0000000000000296
  000000000000028A: F6 C1 10           test        cl,10h
  000000000000028D: 8B C2              mov         eax,edx
  000000000000028F: 41 0F 45 C1        cmovne      eax,r9d
  0000000000000293: 88 43 15           mov         byte ptr [rbx+15h],al
  0000000000000296: 0F B6 C1           movzx       eax,cl
  0000000000000299: 41 B8 00 03 00 00  mov         r8d,300h
  000000000000029F: C0 E8 06           shr         al,6
  00000000000002A2: 24 01              and         al,1
  00000000000002A4: 88 43 13           mov         byte ptr [rbx+13h],al
  00000000000002A7: 0F B6 C1           movzx       eax,cl
  00000000000002AA: C0 E8 07           shr         al,7
  00000000000002AD: 24 01              and         al,1
  00000000000002AF: 88 43 14           mov         byte ptr [rbx+14h],al
  00000000000002B2: 0F B7 C1           movzx       eax,cx
  00000000000002B5: 66 41 23 C0        and         ax,r8w
  00000000000002B9: 66 41 3B C0        cmp         ax,r8w
  00000000000002BD: 75 06              jne         00000000000002C5
  00000000000002BF: C6 43 18 10        mov         byte ptr [rbx+18h],10h
  00000000000002C3: EB 21              jmp         00000000000002E6
  00000000000002C5: B8 00 02 00 00     mov         eax,200h
  00000000000002CA: 66 85 C8           test        ax,cx
  00000000000002CD: 74 06              je          00000000000002D5
  00000000000002CF: C6 43 18 0C        mov         byte ptr [rbx+18h],0Ch
  00000000000002D3: EB 11              jmp         00000000000002E6
  00000000000002D5: B8 00 01 00 00     mov         eax,100h
  00000000000002DA: 66 85 C8           test        ax,cx
  00000000000002DD: 8B C2              mov         eax,edx
  00000000000002DF: 41 0F 45 C1        cmovne      eax,r9d
  00000000000002E3: 88 43 18           mov         byte ptr [rbx+18h],al
  00000000000002E6: 41 B8 00 30 00 00  mov         r8d,3000h
  00000000000002EC: 0F B7 C1           movzx       eax,cx
  00000000000002EF: 66 C1 E8 0A        shr         ax,0Ah
  00000000000002F3: 24 01              and         al,1
  00000000000002F5: 88 43 16           mov         byte ptr [rbx+16h],al
  00000000000002F8: 0F B7 C1           movzx       eax,cx
  00000000000002FB: 66 C1 E8 0B        shr         ax,0Bh
  00000000000002FF: 24 01              and         al,1
  0000000000000301: 88 43 17           mov         byte ptr [rbx+17h],al
  0000000000000304: 0F B7 C1           movzx       eax,cx
  0000000000000307: 66 41 23 C0        and         ax,r8w
  000000000000030B: 66 41 3B C0        cmp         ax,r8w
  000000000000030F: 75 06              jne         0000000000000317
  0000000000000311: C6 43 1B 10        mov         byte ptr [rbx+1Bh],10h
  0000000000000315: EB 1F              jmp         0000000000000336
  0000000000000317: B8 00 20 00 00     mov         eax,2000h
  000000000000031C: 66 85 C8           test        ax,cx
  000000000000031F: 74 06              je          0000000000000327
  0000000000000321: C6 43 1B 0C        mov         byte ptr [rbx+1Bh],0Ch
  0000000000000325: EB 0F              jmp         0000000000000336
  0000000000000327: B8 00 10 00 00     mov         eax,1000h
  000000000000032C: 66 85 C8           test        ax,cx
  000000000000032F: 41 0F 45 D1        cmovne      edx,r9d
  0000000000000333: 88 53 1B           mov         byte ptr [rbx+1Bh],dl
  0000000000000336: 0F B7 C1           movzx       eax,cx
  0000000000000339: 66 C1 E9 0F        shr         cx,0Fh
  000000000000033D: 66 C1 E8 0E        shr         ax,0Eh
  0000000000000341: 24 01              and         al,1
  0000000000000343: 80 E1 01           and         cl,1
  0000000000000346: 88 43 19           mov         byte ptr [rbx+19h],al
  0000000000000349: 88 4B 1A           mov         byte ptr [rbx+1Ah],cl
  000000000000034C: 41 8B C4           mov         eax,r12d
  000000000000034F: EB 10              jmp         0000000000000361
  0000000000000351: 41 BC 0B 00 00 00  mov         r12d,0Bh
  0000000000000357: 41 8B C4           mov         eax,r12d
  000000000000035A: EB 05              jmp         0000000000000361
  000000000000035C: B8 06 00 00 00     mov         eax,6
  0000000000000361: 4C 8D 5C 24 60     lea         r11,[rsp+60h]
  0000000000000366: 49 8B 5B 20        mov         rbx,qword ptr [r11+20h]
  000000000000036A: 49 8B 6B 28        mov         rbp,qword ptr [r11+28h]
  000000000000036E: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  0000000000000372: 49 8B 7B 38        mov         rdi,qword ptr [r11+38h]
  0000000000000376: 49 8B E3           mov         rsp,r11
  0000000000000379: 41 5F              pop         r15
  000000000000037B: 41 5E              pop         r14
  000000000000037D: 41 5C              pop         r12
  000000000000037F: C3                 ret

?ReadAndParse@TFtEE2232H@@UEAAKPEAX@Z (public: virtual unsigned long __cdecl TFtEE2232H::ReadAndParse(void *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 60        sub         rsp,60h
  000000000000000A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000D: 48 8B DA           mov         rbx,rdx
  0000000000000010: 48 8B F9           mov         rdi,rcx
  0000000000000013: FF 10              call        qword ptr [rax]
  0000000000000015: 85 C0              test        eax,eax
  0000000000000017: 75 10              jne         0000000000000029
  0000000000000019: B8 0B 00 00 00     mov         eax,0Bh
  000000000000001E: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  0000000000000023: 48 83 C4 60        add         rsp,60h
  0000000000000027: 5F                 pop         rdi
  0000000000000028: C3                 ret
  0000000000000029: 48 8B CF           mov         rcx,rdi
  000000000000002C: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  0000000000000031: 66 85 C0           test        ax,ax
  0000000000000034: 75 10              jne         0000000000000046
  0000000000000036: B8 0E 00 00 00     mov         eax,0Eh
  000000000000003B: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  0000000000000040: 48 83 C4 60        add         rsp,60h
  0000000000000044: 5F                 pop         rdi
  0000000000000045: C3                 ret
  0000000000000046: B9 FF FF 00 00     mov         ecx,0FFFFh
  000000000000004B: 66 3B C1           cmp         ax,cx
  000000000000004E: 75 10              jne         0000000000000060
  0000000000000050: B8 0F 00 00 00     mov         eax,0Fh
  0000000000000055: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  000000000000005A: 48 83 C4 60        add         rsp,60h
  000000000000005E: 5F                 pop         rdi
  000000000000005F: C3                 ret
  0000000000000060: 48 8B CF           mov         rcx,rdi
  0000000000000063: 48 89 74 24 70     mov         qword ptr [rsp+70h],rsi
  0000000000000068: 66 89 43 0C        mov         word ptr [rbx+0Ch],ax
  000000000000006C: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  0000000000000071: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000076: 48 8B CF           mov         rcx,rdi
  0000000000000079: 66 89 43 0E        mov         word ptr [rbx+0Eh],ax
  000000000000007D: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  0000000000000082: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  0000000000000086: 48 85 C9           test        rcx,rcx
  0000000000000089: 74 17              je          00000000000000A2
  000000000000008B: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000090: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000093: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000097: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000009B: 88 41 FF           mov         byte ptr [rcx-1],al
  000000000000009E: 84 C0              test        al,al
  00000000000000A0: 75 EE              jne         0000000000000090
  00000000000000A2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000A7: 48 8B CF           mov         rcx,rdi
  00000000000000AA: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000AF: 48 8B 4B 18        mov         rcx,qword ptr [rbx+18h]
  00000000000000B3: 48 85 C9           test        rcx,rcx
  00000000000000B6: 74 1A              je          00000000000000D2
  00000000000000B8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000BD: 0F 1F 00           nop         dword ptr [rax]
  00000000000000C0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000C3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000C7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000CB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000CE: 84 C0              test        al,al
  00000000000000D0: 75 EE              jne         00000000000000C0
  00000000000000D2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000D7: 48 8B CF           mov         rcx,rdi
  00000000000000DA: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000DF: 48 8B 4B 20        mov         rcx,qword ptr [rbx+20h]
  00000000000000E3: 48 85 C9           test        rcx,rcx
  00000000000000E6: 74 1A              je          0000000000000102
  00000000000000E8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000ED: 0F 1F 00           nop         dword ptr [rax]
  00000000000000F0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000F3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000F7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000FB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000FE: 84 C0              test        al,al
  0000000000000100: 75 EE              jne         00000000000000F0
  0000000000000102: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000107: 48 8B CF           mov         rcx,rdi
  000000000000010A: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000010F: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  0000000000000113: 48 85 C9           test        rcx,rcx
  0000000000000116: 74 1A              je          0000000000000132
  0000000000000118: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  000000000000011D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000120: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000123: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000127: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000012B: 88 41 FF           mov         byte ptr [rcx-1],al
  000000000000012E: 84 C0              test        al,al
  0000000000000130: 75 EE              jne         0000000000000120
  0000000000000132: 48 8B CF           mov         rcx,rdi
  0000000000000135: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  000000000000013A: 48 8B CF           mov         rcx,rdi
  000000000000013D: 66 89 43 30        mov         word ptr [rbx+30h],ax
  0000000000000141: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QEAAGXZ
  0000000000000146: 33 F6              xor         esi,esi
  0000000000000148: 8B CE              mov         ecx,esi
  000000000000014A: 66 85 C0           test        ax,ax
  000000000000014D: 0F 94 C1           sete        cl
  0000000000000150: 66 89 4B 32        mov         word ptr [rbx+32h],cx
  0000000000000154: 48 8B CF           mov         rcx,rdi
  0000000000000157: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  000000000000015C: 48 89 73 38        mov         qword ptr [rbx+38h],rsi
  0000000000000160: 89 73 40           mov         dword ptr [rbx+40h],esi
  0000000000000163: 0F B6 C8           movzx       ecx,al
  0000000000000166: C0 E8 05           shr         al,5
  0000000000000169: 48 89 73 48        mov         qword ptr [rbx+48h],rsi
  000000000000016D: 24 01              and         al,1
  000000000000016F: C0 E9 06           shr         cl,6
  0000000000000172: 48 89 73 50        mov         qword ptr [rbx+50h],rsi
  0000000000000176: 0F B6 C0           movzx       eax,al
  0000000000000179: 80 E1 01           and         cl,1
  000000000000017C: 66 89 73 45        mov         word ptr [rbx+45h],si
  0000000000000180: 66 89 43 36        mov         word ptr [rbx+36h],ax
  0000000000000184: 0F B6 C9           movzx       ecx,cl
  0000000000000187: 40 88 73 47        mov         byte ptr [rbx+47h],sil
  000000000000018B: 66 89 4B 34        mov         word ptr [rbx+34h],cx
  000000000000018F: 40 88 73 44        mov         byte ptr [rbx+44h],sil
  0000000000000193: 66 89 73 65        mov         word ptr [rbx+65h],si
  0000000000000197: 48 89 73 58        mov         qword ptr [rbx+58h],rsi
  000000000000019B: 89 73 60           mov         dword ptr [rbx+60h],esi
  000000000000019E: 40 88 73 64        mov         byte ptr [rbx+64h],sil
  00000000000001A2: 0F B7 4F 08        movzx       ecx,word ptr [rdi+8]
  00000000000001A6: 8D 56 04           lea         edx,[rsi+4]
  00000000000001A9: 44 8D 4E 08        lea         r9d,[rsi+8]
  00000000000001AD: 48 8B 74 24 70     mov         rsi,qword ptr [rsp+70h]
  00000000000001B2: 0F B6 C1           movzx       eax,cl
  00000000000001B5: 24 01              and         al,1
  00000000000001B7: 88 43 75           mov         byte ptr [rbx+75h],al
  00000000000001BA: 0F B6 C1           movzx       eax,cl
  00000000000001BD: D0 E8              shr         al,1
  00000000000001BF: 24 01              and         al,1
  00000000000001C1: 88 43 76           mov         byte ptr [rbx+76h],al
  00000000000001C4: 0F B6 C1           movzx       eax,cl
  00000000000001C7: C0 E8 02           shr         al,2
  00000000000001CA: 24 01              and         al,1
  00000000000001CC: 88 43 77           mov         byte ptr [rbx+77h],al
  00000000000001CF: 0F B6 C1           movzx       eax,cl
  00000000000001D2: C0 E8 03           shr         al,3
  00000000000001D5: 24 01              and         al,1
  00000000000001D7: 88 43 78           mov         byte ptr [rbx+78h],al
  00000000000001DA: 0F B7 C1           movzx       eax,cx
  00000000000001DD: 66 C1 E8 08        shr         ax,8
  00000000000001E1: 24 01              and         al,1
  00000000000001E3: 88 43 79           mov         byte ptr [rbx+79h],al
  00000000000001E6: 0F B7 C1           movzx       eax,cx
  00000000000001E9: 66 C1 E8 09        shr         ax,9
  00000000000001ED: 24 01              and         al,1
  00000000000001EF: 88 43 7A           mov         byte ptr [rbx+7Ah],al
  00000000000001F2: 0F B7 C1           movzx       eax,cx
  00000000000001F5: 66 C1 E8 0A        shr         ax,0Ah
  00000000000001F9: 24 01              and         al,1
  00000000000001FB: 88 43 7B           mov         byte ptr [rbx+7Bh],al
  00000000000001FE: 0F B7 C1           movzx       eax,cx
  0000000000000201: 66 C1 E9 0F        shr         cx,0Fh
  0000000000000205: 66 C1 E8 0B        shr         ax,0Bh
  0000000000000209: 80 E1 01           and         cl,1
  000000000000020C: 24 01              and         al,1
  000000000000020E: 88 4B 7D           mov         byte ptr [rbx+7Dh],cl
  0000000000000211: 88 43 7C           mov         byte ptr [rbx+7Ch],al
  0000000000000214: 0F B7 4F 12        movzx       ecx,word ptr [rdi+12h]
  0000000000000218: 0F B6 C1           movzx       eax,cl
  000000000000021B: C0 E9 03           shr         cl,3
  000000000000021E: C0 E8 02           shr         al,2
  0000000000000221: 80 E1 01           and         cl,1
  0000000000000224: 24 01              and         al,1
  0000000000000226: 88 4B 68           mov         byte ptr [rbx+68h],cl
  0000000000000229: 88 43 67           mov         byte ptr [rbx+67h],al
  000000000000022C: 0F B7 4F 14        movzx       ecx,word ptr [rdi+14h]
  0000000000000230: 0F B6 C1           movzx       eax,cl
  0000000000000233: 24 03              and         al,3
  0000000000000235: 3C 03              cmp         al,3
  0000000000000237: 75 06              jne         000000000000023F
  0000000000000239: C6 43 6B 10        mov         byte ptr [rbx+6Bh],10h
  000000000000023D: EB 17              jmp         0000000000000256
  000000000000023F: F6 C1 02           test        cl,2
  0000000000000242: 74 06              je          000000000000024A
  0000000000000244: C6 43 6B 0C        mov         byte ptr [rbx+6Bh],0Ch
  0000000000000248: EB 0C              jmp         0000000000000256
  000000000000024A: F6 C1 01           test        cl,1
  000000000000024D: 8B C2              mov         eax,edx
  000000000000024F: 41 0F 45 C1        cmovne      eax,r9d
  0000000000000253: 88 43 6B           mov         byte ptr [rbx+6Bh],al
  0000000000000256: 0F B6 C1           movzx       eax,cl
  0000000000000259: C0 E8 02           shr         al,2
  000000000000025C: 24 01              and         al,1
  000000000000025E: 88 43 69           mov         byte ptr [rbx+69h],al
  0000000000000261: 0F B6 C1           movzx       eax,cl
  0000000000000264: C0 E8 03           shr         al,3
  0000000000000267: 24 01              and         al,1
  0000000000000269: 88 43 6A           mov         byte ptr [rbx+6Ah],al
  000000000000026C: 0F B6 C1           movzx       eax,cl
  000000000000026F: 24 30              and         al,30h
  0000000000000271: 3C 30              cmp         al,30h
  0000000000000273: 75 06              jne         000000000000027B
  0000000000000275: C6 43 6E 10        mov         byte ptr [rbx+6Eh],10h
  0000000000000279: EB 17              jmp         0000000000000292
  000000000000027B: F6 C1 20           test        cl,20h
  000000000000027E: 74 06              je          0000000000000286
  0000000000000280: C6 43 6E 0C        mov         byte ptr [rbx+6Eh],0Ch
  0000000000000284: EB 0C              jmp         0000000000000292
  0000000000000286: F6 C1 10           test        cl,10h
  0000000000000289: 8B C2              mov         eax,edx
  000000000000028B: 41 0F 45 C1        cmovne      eax,r9d
  000000000000028F: 88 43 6E           mov         byte ptr [rbx+6Eh],al
  0000000000000292: 0F B6 C1           movzx       eax,cl
  0000000000000295: 41 B8 00 03 00 00  mov         r8d,300h
  000000000000029B: C0 E8 06           shr         al,6
  000000000000029E: 24 01              and         al,1
  00000000000002A0: 88 43 6C           mov         byte ptr [rbx+6Ch],al
  00000000000002A3: 0F B6 C1           movzx       eax,cl
  00000000000002A6: C0 E8 07           shr         al,7
  00000000000002A9: 24 01              and         al,1
  00000000000002AB: 88 43 6D           mov         byte ptr [rbx+6Dh],al
  00000000000002AE: 0F B7 C1           movzx       eax,cx
  00000000000002B1: 66 41 23 C0        and         ax,r8w
  00000000000002B5: 66 41 3B C0        cmp         ax,r8w
  00000000000002B9: 75 06              jne         00000000000002C1
  00000000000002BB: C6 43 71 10        mov         byte ptr [rbx+71h],10h
  00000000000002BF: EB 21              jmp         00000000000002E2
  00000000000002C1: B8 00 02 00 00     mov         eax,200h
  00000000000002C6: 66 85 C8           test        ax,cx
  00000000000002C9: 74 06              je          00000000000002D1
  00000000000002CB: C6 43 71 0C        mov         byte ptr [rbx+71h],0Ch
  00000000000002CF: EB 11              jmp         00000000000002E2
  00000000000002D1: B8 00 01 00 00     mov         eax,100h
  00000000000002D6: 66 85 C8           test        ax,cx
  00000000000002D9: 8B C2              mov         eax,edx
  00000000000002DB: 41 0F 45 C1        cmovne      eax,r9d
  00000000000002DF: 88 43 71           mov         byte ptr [rbx+71h],al
  00000000000002E2: 41 B8 00 30 00 00  mov         r8d,3000h
  00000000000002E8: 0F B7 C1           movzx       eax,cx
  00000000000002EB: 66 C1 E8 0A        shr         ax,0Ah
  00000000000002EF: 24 01              and         al,1
  00000000000002F1: 88 43 6F           mov         byte ptr [rbx+6Fh],al
  00000000000002F4: 0F B7 C1           movzx       eax,cx
  00000000000002F7: 66 C1 E8 0B        shr         ax,0Bh
  00000000000002FB: 24 01              and         al,1
  00000000000002FD: 88 43 70           mov         byte ptr [rbx+70h],al
  0000000000000300: 0F B7 C1           movzx       eax,cx
  0000000000000303: 66 41 23 C0        and         ax,r8w
  0000000000000307: 66 41 3B C0        cmp         ax,r8w
  000000000000030B: 75 06              jne         0000000000000313
  000000000000030D: C6 43 74 10        mov         byte ptr [rbx+74h],10h
  0000000000000311: EB 1F              jmp         0000000000000332
  0000000000000313: B8 00 20 00 00     mov         eax,2000h
  0000000000000318: 66 85 C8           test        ax,cx
  000000000000031B: 74 06              je          0000000000000323
  000000000000031D: C6 43 74 0C        mov         byte ptr [rbx+74h],0Ch
  0000000000000321: EB 0F              jmp         0000000000000332
  0000000000000323: B8 00 10 00 00     mov         eax,1000h
  0000000000000328: 66 85 C8           test        ax,cx
  000000000000032B: 41 0F 45 D1        cmovne      edx,r9d
  000000000000032F: 88 53 74           mov         byte ptr [rbx+74h],dl
  0000000000000332: 0F B7 C1           movzx       eax,cx
  0000000000000335: 66 C1 E9 0F        shr         cx,0Fh
  0000000000000339: 66 C1 E8 0E        shr         ax,0Eh
  000000000000033D: 80 E1 01           and         cl,1
  0000000000000340: 24 01              and         al,1
  0000000000000342: 88 4B 73           mov         byte ptr [rbx+73h],cl
  0000000000000345: 88 43 72           mov         byte ptr [rbx+72h],al
  0000000000000348: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  000000000000034D: 33 C0              xor         eax,eax
  000000000000034F: 48 83 C4 60        add         rsp,60h
  0000000000000353: 5F                 pop         rdi
  0000000000000354: C3                 ret

?SetRomType@TFtEE2232H@@UEAAXXZ (public: virtual void __cdecl TFtEE2232H::SetRomType(void)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B D9           mov         rbx,rcx
  0000000000000017: 33 ED              xor         ebp,ebp
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: 66 89 6C 24 30     mov         word ptr [rsp+30h],bp
  0000000000000022: E8 00 00 00 00     call        ?Erase@TEeData@@QEAAHXZ
  0000000000000027: BE C0 00 00 00     mov         esi,0C0h
  000000000000002C: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000030: 44 8B C6           mov         r8d,esi
  0000000000000033: 8B D6              mov         edx,esi
  0000000000000035: E8 00 00 00 00     call        ?WriteWord@TEeData@@QEAAHKG@Z
  000000000000003A: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  000000000000003F: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000043: 33 D2              xor         edx,edx
  0000000000000045: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  000000000000004A: 66 39 74 24 30     cmp         word ptr [rsp+30h],si
  000000000000004F: 75 0E              jne         000000000000005F
  0000000000000051: B8 46 00 00 00     mov         eax,46h
  0000000000000056: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  000000000000005D: EB 68              jmp         00000000000000C7
  000000000000005F: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  0000000000000064: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000068: BA 40 00 00 00     mov         edx,40h
  000000000000006D: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  0000000000000072: 66 39 74 24 30     cmp         word ptr [rsp+30h],si
  0000000000000077: 75 18              jne         0000000000000091
  0000000000000079: B8 56 00 00 00     mov         eax,56h
  000000000000007E: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000088: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  000000000000008F: EB 4A              jmp         00000000000000DB
  0000000000000091: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  0000000000000096: 48 8D 4B 08        lea         rcx,[rbx+8]
  000000000000009A: 8B D6              mov         edx,esi
  000000000000009C: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  00000000000000A1: 66 39 74 24 30     cmp         word ptr [rsp+30h],si
  00000000000000A6: 75 18              jne         00000000000000C0
  00000000000000A8: B8 66 00 00 00     mov         eax,66h
  00000000000000AD: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  00000000000000B7: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  00000000000000BE: EB 1B              jmp         00000000000000DB
  00000000000000C0: 66 89 AB 32 08 00  mov         word ptr [rbx+832h],bp
                    00
  00000000000000C7: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],40h
                    40 00 00 00
  00000000000000D1: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  00000000000000DB: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000000E0: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  00000000000000E5: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  00000000000000EA: 48 83 C4 20        add         rsp,20h
  00000000000000EE: 5F                 pop         rdi
  00000000000000EF: C3                 ret

??0TFtEE2232@@QEAA@PEAUft_private_vars@@@Z (public: __cdecl TFtEE2232::TFtEE2232(struct ft_private_vars *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAUft_private_vars@@@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE2232@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

??0TFtEE2232@@QEAA@PEAX@Z (public: __cdecl TFtEE2232::TFtEE2232(void *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@PEAX@Z
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE2232@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

??0TFtEE2232@@QEAA@XZ (public: __cdecl TFtEE2232::TFtEE2232(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ??0TFtE2Data@@QEAA@XZ
  000000000000000E: 48 8D 05 00 00 00  lea         rax,[??_7TFtEE2232@@6B@]
                    00
  0000000000000015: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000018: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  0000000000000022: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],80h
                    80 00 00 00
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

?AddUserArea@TFtEE2232@@UEAAHPEAEK@Z (public: virtual int __cdecl TFtEE2232::AddUserArea(unsigned char *,unsigned long)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 83 EC 20        sub         rsp,20h
  0000000000000018: 41 8B E8           mov         ebp,r8d
  000000000000001B: 41 BF 80 00 00 00  mov         r15d,80h
  0000000000000021: 41 8B D8           mov         ebx,r8d
  0000000000000024: 45 3B C7           cmp         r8d,r15d
  0000000000000027: 48 8B FA           mov         rdi,rdx
  000000000000002A: 48 8B F1           mov         rsi,rcx
  000000000000002D: 41 0F 47 EF        cmova       ebp,r15d
  0000000000000031: 44 8B C5           mov         r8d,ebp
  0000000000000034: E8 00 00 00 00     call        ?AddUserArea@TFtE2Data@@UEAAHPEAEK@Z
  0000000000000039: 44 8B F0           mov         r14d,eax
  000000000000003C: 85 C0              test        eax,eax
  000000000000003E: 74 27              je          0000000000000067
  0000000000000040: 2B DD              sub         ebx,ebp
  0000000000000042: 74 23              je          0000000000000067
  0000000000000044: 48 8B CE           mov         rcx,rsi
  0000000000000047: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  000000000000004C: 66 03 C0           add         ax,ax
  000000000000004F: 49 03 FF           add         rdi,r15
  0000000000000052: 0F B6 0F           movzx       ecx,byte ptr [rdi]
  0000000000000055: 0F B7 D0           movzx       edx,ax
  0000000000000058: 66 FF C0           inc         ax
  000000000000005B: 48 8D 7F 01        lea         rdi,[rdi+1]
  000000000000005F: 88 4C 32 08        mov         byte ptr [rdx+rsi+8],cl
  0000000000000063: FF CB              dec         ebx
  0000000000000065: 75 EB              jne         0000000000000052
  0000000000000067: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000006A: 48 8B CE           mov         rcx,rsi
  000000000000006D: FF 50 08           call        qword ptr [rax+8]
  0000000000000070: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000075: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000007A: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  000000000000007F: 41 8B C6           mov         eax,r14d
  0000000000000082: 48 83 C4 20        add         rsp,20h
  0000000000000086: 41 5F              pop         r15
  0000000000000088: 41 5E              pop         r14
  000000000000008A: 5F                 pop         rdi
  000000000000008B: C3                 ret

?Erase@TFtEE2232@@QEAAHXZ (public: int __cdecl TFtEE2232::Erase(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000007: FF 50 40           call        qword ptr [rax+40h]
  000000000000000A: B8 01 00 00 00     mov         eax,1
  000000000000000F: 48 83 C4 28        add         rsp,28h
  0000000000000013: C3                 ret

?GetUserArea@TFtEE2232@@UEAAXPEAEKPEAK@Z (public: virtual void __cdecl TFtEE2232::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 83 EC 20        sub         rsp,20h
  0000000000000018: 41 8B E8           mov         ebp,r8d
  000000000000001B: 41 BF 80 00 00 00  mov         r15d,80h
  0000000000000021: 4D 8B F1           mov         r14,r9
  0000000000000024: 45 3B C7           cmp         r8d,r15d
  0000000000000027: 41 8B F8           mov         edi,r8d
  000000000000002A: 4C 8D 4C 24 50     lea         r9,[rsp+50h]
  000000000000002F: 41 0F 47 EF        cmova       ebp,r15d
  0000000000000033: 48 8B DA           mov         rbx,rdx
  0000000000000036: 48 8B F1           mov         rsi,rcx
  0000000000000039: 44 8B C5           mov         r8d,ebp
  000000000000003C: E8 00 00 00 00     call        ?GetUserArea@TFtE2Data@@UEAAXPEAEKPEAK@Z
  0000000000000041: 8B 44 24 50        mov         eax,dword ptr [rsp+50h]
  0000000000000045: 41 89 06           mov         dword ptr [r14],eax
  0000000000000048: 3B C5              cmp         eax,ebp
  000000000000004A: 75 2F              jne         000000000000007B
  000000000000004C: 2B FD              sub         edi,ebp
  000000000000004E: 74 2B              je          000000000000007B
  0000000000000050: 48 8B CE           mov         rcx,rsi
  0000000000000053: E8 00 00 00 00     call        ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  0000000000000058: 44 8B C7           mov         r8d,edi
  000000000000005B: 66 03 C0           add         ax,ax
  000000000000005E: 49 03 DF           add         rbx,r15
  0000000000000061: 0F B7 C8           movzx       ecx,ax
  0000000000000064: 66 FF C0           inc         ax
  0000000000000067: 48 8D 5B 01        lea         rbx,[rbx+1]
  000000000000006B: 0F B6 54 31 08     movzx       edx,byte ptr [rcx+rsi+8]
  0000000000000070: 88 53 FF           mov         byte ptr [rbx-1],dl
  0000000000000073: 41 FF C8           dec         r8d
  0000000000000076: 75 E9              jne         0000000000000061
  0000000000000078: 41 01 3E           add         dword ptr [r14],edi
  000000000000007B: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000080: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  0000000000000085: 48 8B 74 24 58     mov         rsi,qword ptr [rsp+58h]
  000000000000008A: 48 83 C4 20        add         rsp,20h
  000000000000008E: 41 5F              pop         r15
  0000000000000090: 41 5E              pop         r14
  0000000000000092: 5F                 pop         rdi
  0000000000000093: C3                 ret

?GetUserAreaOffset@TFtEE2232@@UEAAGXZ (public: virtual unsigned short __cdecl TFtEE2232::GetUserAreaOffset(void)):
  0000000000000000: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+832h]
                    00
  0000000000000007: BA EF FF 00 00     mov         edx,0FFEFh
  000000000000000C: 66 83 E8 56        sub         ax,56h
  0000000000000010: 66 85 C2           test        dx,ax
  0000000000000013: 0F 85 00 00 00 00  jne         ?GetUserAreaOffset@TFtE2Data@@UEAAGXZ
  0000000000000019: B8 0B 00 00 00     mov         eax,0Bh
  000000000000001E: C3                 ret

?GetUserAreaSize@TFtEE2232@@UEAAGXZ (public: virtual unsigned short __cdecl TFtEE2232::GetUserAreaSize(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+832h]
                    00
  000000000000000B: BA EF FF 00 00     mov         edx,0FFEFh
  0000000000000010: 66 83 E8 56        sub         ax,56h
  0000000000000014: 66 85 C2           test        dx,ax
  0000000000000017: 74 09              je          0000000000000022
  0000000000000019: 48 83 C4 28        add         rsp,28h
  000000000000001D: E9 00 00 00 00     jmp         ?GetUserAreaSize@TFtE2Data@@UEAAGXZ
  0000000000000022: E8 00 00 00 00     call        ?GetUserAreaSize@TFtE2Data@@UEAAGXZ
  0000000000000027: 83 C0 40           add         eax,40h
  000000000000002A: 48 83 C4 28        add         rsp,28h
  000000000000002E: C3                 ret

?Init@TFtEE2232@@UEAAXPEAX@Z (public: virtual void __cdecl TFtEE2232::Init(void *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 20        sub         rsp,20h
  000000000000001C: 4C 8B 3A           mov         r15,qword ptr [rdx]
  000000000000001F: 4C 8B 62 08        mov         r12,qword ptr [rdx+8]
  0000000000000023: 45 33 ED           xor         r13d,r13d
  0000000000000026: 41 0F B7 DD        movzx       ebx,r13w
  000000000000002A: 48 8B F2           mov         rsi,rdx
  000000000000002D: 4C 8B F1           mov         r14,rcx
  0000000000000030: 41 0F B7 ED        movzx       ebp,r13w
  0000000000000034: 38 5A 2A           cmp         byte ptr [rdx+2Ah],bl
  0000000000000037: 74 04              je          000000000000003D
  0000000000000039: 41 8D 5D 10        lea         ebx,[r13+10h]
  000000000000003D: 44 38 6A 2B        cmp         byte ptr [rdx+2Bh],r13b
  0000000000000041: 74 08              je          000000000000004B
  0000000000000043: B8 00 10 00 00     mov         eax,1000h
  0000000000000048: 66 0B D8           or          bx,ax
  000000000000004B: 44 38 6A 2C        cmp         byte ptr [rdx+2Ch],r13b
  000000000000004F: 74 04              je          0000000000000055
  0000000000000051: 66 83 CB 01        or          bx,1
  0000000000000055: 44 38 6A 2D        cmp         byte ptr [rdx+2Dh],r13b
  0000000000000059: 74 04              je          000000000000005F
  000000000000005B: 66 83 CB 02        or          bx,2
  000000000000005F: 44 38 6A 2E        cmp         byte ptr [rdx+2Eh],r13b
  0000000000000063: 74 04              je          0000000000000069
  0000000000000065: 66 83 CB 04        or          bx,4
  0000000000000069: 44 38 6A 2F        cmp         byte ptr [rdx+2Fh],r13b
  000000000000006D: 74 04              je          0000000000000073
  000000000000006F: 66 83 CB 08        or          bx,8
  0000000000000073: 44 38 6A 30        cmp         byte ptr [rdx+30h],r13b
  0000000000000077: 74 08              je          0000000000000081
  0000000000000079: B8 00 01 00 00     mov         eax,100h
  000000000000007E: 66 0B D8           or          bx,ax
  0000000000000081: 44 38 6A 31        cmp         byte ptr [rdx+31h],r13b
  0000000000000085: 74 08              je          000000000000008F
  0000000000000087: B8 00 02 00 00     mov         eax,200h
  000000000000008C: 66 0B D8           or          bx,ax
  000000000000008F: 44 38 6A 32        cmp         byte ptr [rdx+32h],r13b
  0000000000000093: 74 08              je          000000000000009D
  0000000000000095: B8 00 04 00 00     mov         eax,400h
  000000000000009A: 66 0B D8           or          bx,ax
  000000000000009D: 41 B8 00 08 00 00  mov         r8d,800h
  00000000000000A3: 44 38 6A 33        cmp         byte ptr [rdx+33h],r13b
  00000000000000A7: 74 04              je          00000000000000AD
  00000000000000A9: 66 41 0B D8        or          bx,r8w
  00000000000000AD: 44 38 6A 25        cmp         byte ptr [rdx+25h],r13b
  00000000000000B1: 74 05              je          00000000000000B8
  00000000000000B3: BD 04 00 00 00     mov         ebp,4
  00000000000000B8: 44 38 6A 26        cmp         byte ptr [rdx+26h],r13b
  00000000000000BC: 74 04              je          00000000000000C2
  00000000000000BE: 66 83 CD 08        or          bp,8
  00000000000000C2: 44 38 6A 27        cmp         byte ptr [rdx+27h],r13b
  00000000000000C6: 74 04              je          00000000000000CC
  00000000000000C8: 66 83 CD 10        or          bp,10h
  00000000000000CC: 44 38 6A 21        cmp         byte ptr [rdx+21h],r13b
  00000000000000D0: 74 04              je          00000000000000D6
  00000000000000D2: 66 83 CD 01        or          bp,1
  00000000000000D6: 44 38 6A 23        cmp         byte ptr [rdx+23h],r13b
  00000000000000DA: 74 04              je          00000000000000E0
  00000000000000DC: 66 83 CD 02        or          bp,2
  00000000000000E0: 44 38 6A 22        cmp         byte ptr [rdx+22h],r13b
  00000000000000E4: 74 04              je          00000000000000EA
  00000000000000E6: 66 83 CD 20        or          bp,20h
  00000000000000EA: 44 38 6A 24        cmp         byte ptr [rdx+24h],r13b
  00000000000000EE: 74 04              je          00000000000000F4
  00000000000000F0: 66 83 CD 40        or          bp,40h
  00000000000000F4: 33 D2              xor         edx,edx
  00000000000000F6: 48 83 C1 08        add         rcx,8
  00000000000000FA: E8 00 00 00 00     call        memset
  00000000000000FF: 66 41 89 5E 08     mov         word ptr [r14+8],bx
  0000000000000104: 41 C7 46 0A 03 04  mov         dword ptr [r14+0Ah],60100403h
                    10 60
  000000000000010C: 41 C7 46 0E 00 05  mov         dword ptr [r14+0Eh],2DA00500h
                    A0 2D
  0000000000000114: 66 41 89 6E 12     mov         word ptr [r14+12h],bp
  0000000000000119: 0F B7 46 28        movzx       eax,word ptr [rsi+28h]
  000000000000011D: 48 83 C9 FF        or          rcx,0FFFFFFFFFFFFFFFFh
  0000000000000121: 66 41 89 46 14     mov         word ptr [r14+14h],ax
  0000000000000126: 41 C6 46 16 16     mov         byte ptr [r14+16h],16h
  000000000000012B: 48 8B C1           mov         rax,rcx
  000000000000012E: 66 90              xchg        ax,ax
  0000000000000130: 48 FF C0           inc         rax
  0000000000000133: 45 38 2C 07        cmp         byte ptr [r15+rax],r13b
  0000000000000137: 75 F7              jne         0000000000000130
  0000000000000139: FE C0              inc         al
  000000000000013B: 02 C0              add         al,al
  000000000000013D: 41 88 46 17        mov         byte ptr [r14+17h],al
  0000000000000141: 04 16              add         al,16h
  0000000000000143: 41 88 46 18        mov         byte ptr [r14+18h],al
  0000000000000147: 48 FF C1           inc         rcx
  000000000000014A: 45 38 2C 0C        cmp         byte ptr [r12+rcx],r13b
  000000000000014E: 75 F7              jne         0000000000000147
  0000000000000150: FE C1              inc         cl
  0000000000000152: 41 C6 46 1B 02     mov         byte ptr [r14+1Bh],2
  0000000000000157: 02 C9              add         cl,cl
  0000000000000159: 41 88 4E 19        mov         byte ptr [r14+19h],cl
  000000000000015D: 02 C8              add         cl,al
  000000000000015F: 41 0F B7 86 32 08  movzx       eax,word ptr [r14+832h]
                    00 00
  0000000000000167: 41 88 4E 1A        mov         byte ptr [r14+1Ah],cl
  000000000000016B: 66 85 C0           test        ax,ax
  000000000000016E: 74 05              je          0000000000000175
  0000000000000170: 0F B7 C8           movzx       ecx,ax
  0000000000000173: EB 05              jmp         000000000000017A
  0000000000000175: B9 46 00 00 00     mov         ecx,46h
  000000000000017A: 66 41 89 4E 1C     mov         word ptr [r14+1Ch],cx
  000000000000017F: 49 8D 56 1E        lea         rdx,[r14+1Eh]
  0000000000000183: 4D 8B C7           mov         r8,r15
  0000000000000186: 49 8B CE           mov         rcx,r14
  0000000000000189: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  000000000000018E: 49 0F BE 46 18     movsx       rax,byte ptr [r14+18h]
  0000000000000193: 49 8D 56 08        lea         rdx,[r14+8]
  0000000000000197: 48 03 D0           add         rdx,rax
  000000000000019A: 4D 8B C4           mov         r8,r12
  000000000000019D: 49 8B CE           mov         rcx,r14
  00000000000001A0: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001A5: 49 0F BE 46 1A     movsx       rax,byte ptr [r14+1Ah]
  00000000000001AA: 49 8D 56 08        lea         rdx,[r14+8]
  00000000000001AE: 4C 8D 05 00 00 00  lea         r8,[??_C@_00CNPNBAHC@?$AA@]
                    00
  00000000000001B5: 48 03 D0           add         rdx,rax
  00000000000001B8: 49 8B CE           mov         rcx,r14
  00000000000001BB: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001C0: 41 0F BE 56 18     movsx       edx,byte ptr [r14+18h]
  00000000000001C5: 41 0F BE 4E 16     movsx       ecx,byte ptr [r14+16h]
  00000000000001CA: 45 0F BE 46 1A     movsx       r8d,byte ptr [r14+1Ah]
  00000000000001CF: 41 89 96 38 08 00  mov         dword ptr [r14+838h],edx
                    00
  00000000000001D6: 80 CA 80           or          dl,80h
  00000000000001D9: 41 89 8E 34 08 00  mov         dword ptr [r14+834h],ecx
                    00
  00000000000001E0: 80 C9 80           or          cl,80h
  00000000000001E3: 41 88 56 18        mov         byte ptr [r14+18h],dl
  00000000000001E7: 45 89 86 3C 08 00  mov         dword ptr [r14+83Ch],r8d
                    00
  00000000000001EE: B8 02 03 00 00     mov         eax,302h
  00000000000001F3: 41 88 4E 16        mov         byte ptr [r14+16h],cl
  00000000000001F7: 41 80 C8 80        or          r8b,80h
  00000000000001FB: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000200: 49 8B CE           mov         rcx,r14
  0000000000000203: 45 88 46 1A        mov         byte ptr [r14+1Ah],r8b
  0000000000000207: 66 89 44 24 50     mov         word ptr [rsp+50h],ax
  000000000000020C: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  0000000000000211: 33 D2              xor         edx,edx
  0000000000000213: 49 8B CE           mov         rcx,r14
  0000000000000216: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  000000000000021B: 49 8B 06           mov         rax,qword ptr [r14]
  000000000000021E: 49 8B CE           mov         rcx,r14
  0000000000000221: FF 50 08           call        qword ptr [rax+8]
  0000000000000224: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  0000000000000229: 48 8B 6C 24 60     mov         rbp,qword ptr [rsp+60h]
  000000000000022E: 48 8B 74 24 68     mov         rsi,qword ptr [rsp+68h]
  0000000000000233: 45 89 AE 0C 08 00  mov         dword ptr [r14+80Ch],r13d
                    00
  000000000000023A: 48 83 C4 20        add         rsp,20h
  000000000000023E: 41 5F              pop         r15
  0000000000000240: 41 5E              pop         r14
  0000000000000242: 41 5D              pop         r13
  0000000000000244: 41 5C              pop         r12
  0000000000000246: 5F                 pop         rdi
  0000000000000247: C3                 ret

?MoveStrings@TFtEE2232@@UEAAXXZ (public: virtual void __cdecl TFtEE2232::MoveStrings(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 0F B7 81 32 08 00  movzx       eax,word ptr [rcx+0000000000000832h]
                    00
  000000000000000B: 4C 8B D9           mov         r11,rcx
  000000000000000E: B9 EF FF 00 00     mov         ecx,0FFEFh
  0000000000000013: 66 83 E8 56        sub         ax,56h
  0000000000000017: 66 85 C1           test        cx,ax
  000000000000001A: 0F 85 87 00 00 00  jne         00000000000000A7
  0000000000000020: 49 8D 43 1E        lea         rax,[r11+1Eh]
  0000000000000024: 49 8D 93 88 00 00  lea         rdx,[r11+0000000000000088h]
                    00
  000000000000002B: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000030: 33 DB              xor         ebx,ebx
  0000000000000032: 4C 8B C2           mov         r8,rdx
  0000000000000035: 4C 8D 90 80 00 00  lea         r10,[rax+0000000000000080h]
                    00
  000000000000003C: 4C 2B C0           sub         r8,rax
  000000000000003F: 44 8B CB           mov         r9d,ebx
  0000000000000042: 49 FF C0           inc         r8
  0000000000000045: 49 D1 E8           shr         r8,1
  0000000000000048: 48 3B C2           cmp         rax,rdx
  000000000000004B: 48 8B D0           mov         rdx,rax
  000000000000004E: 4C 0F 47 C3        cmova       r8,rbx
  0000000000000052: 4D 85 C0           test        r8,r8
  0000000000000055: 74 1E              je          0000000000000075
  0000000000000057: 4C 2B D0           sub         r10,rax
  000000000000005A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000060: 0F B7 0A           movzx       ecx,word ptr [rdx]
  0000000000000063: 49 FF C1           inc         r9
  0000000000000066: 48 8D 52 02        lea         rdx,[rdx+2]
  000000000000006A: 66 41 89 4C 12 FE  mov         word ptr [r10+rdx-2],cx
  0000000000000070: 4D 3B C8           cmp         r9,r8
  0000000000000073: 72 EB              jb          0000000000000060
  0000000000000075: 48 8B CB           mov         rcx,rbx
  0000000000000078: 4D 85 C0           test        r8,r8
  000000000000007B: 74 12              je          000000000000008F
  000000000000007D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000080: 48 FF C1           inc         rcx
  0000000000000083: 66 89 18           mov         word ptr [rax],bx
  0000000000000086: 48 8D 40 02        lea         rax,[rax+2]
  000000000000008A: 49 3B C8           cmp         rcx,r8
  000000000000008D: 72 F1              jb          0000000000000080
  000000000000008F: 49 8B 03           mov         rax,qword ptr [r11]
  0000000000000092: 49 8B CB           mov         rcx,r11
  0000000000000095: 48 8B 5C 24 20     mov         rbx,qword ptr [rsp+20h]
  000000000000009A: 48 83 C4 28        add         rsp,28h
  000000000000009E: 48 FF 60 08        jmp         qword ptr [rax+8]
  00000000000000A2: 48 8B 5C 24 20     mov         rbx,qword ptr [rsp+20h]
  00000000000000A7: 48 83 C4 28        add         rsp,28h
  00000000000000AB: C3                 ret

?Program@TFtEE2232@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE2232::Program(void *,char *,char *,char *,char *)):
  0000000000000000: 4C 8B DC           mov         r11,rsp
  0000000000000003: 4D 89 4B 20        mov         qword ptr [r11+20h],r9
  0000000000000007: 53                 push        rbx
  0000000000000008: 56                 push        rsi
  0000000000000009: 57                 push        rdi
  000000000000000A: 41 54              push        r12
  000000000000000C: 41 55              push        r13
  000000000000000E: 48 81 EC D0 00 00  sub         rsp,0D0h
                    00
  0000000000000015: 45 33 ED           xor         r13d,r13d
  0000000000000018: 49 8B C1           mov         rax,r9
  000000000000001B: 4D 8B E0           mov         r12,r8
  000000000000001E: 48 8B F2           mov         rsi,rdx
  0000000000000021: 48 8B D9           mov         rbx,rcx
  0000000000000024: 41 0F B7 FD        movzx       edi,r13w
  0000000000000028: 4D 85 C0           test        r8,r8
  000000000000002B: 0F 84 19 03 00 00  je          000000000000034A
  0000000000000031: 48 85 C0           test        rax,rax
  0000000000000034: 0F 84 10 03 00 00  je          000000000000034A
  000000000000003A: 4D 89 7B C8        mov         qword ptr [r11-38h],r15
  000000000000003E: 4C 8B BC 24 20 01  mov         r15,qword ptr [rsp+120h]
                    00 00
  0000000000000046: 4D 85 FF           test        r15,r15
  0000000000000049: 0F 84 F4 02 00 00  je          0000000000000343
  000000000000004F: 66 44 39 6A 04     cmp         word ptr [rdx+4],r13w
  0000000000000054: 0F 84 E9 02 00 00  je          0000000000000343
  000000000000005A: 66 44 39 6A 06     cmp         word ptr [rdx+6],r13w
  000000000000005F: 0F 84 DE 02 00 00  je          0000000000000343
  0000000000000065: 49 89 6B 08        mov         qword ptr [r11+8],rbp
  0000000000000069: 33 D2              xor         edx,edx
  000000000000006B: 41 B8 00 08 00 00  mov         r8d,800h
  0000000000000071: 48 83 C1 08        add         rcx,8
  0000000000000075: 4D 89 73 D0        mov         qword ptr [r11-30h],r14
  0000000000000079: E8 00 00 00 00     call        memset
  000000000000007E: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000081: 48 8B CB           mov         rcx,rbx
  0000000000000084: FF 50 40           call        qword ptr [rax+40h]
  0000000000000087: 4C 8B B4 24 28 01  mov         r14,qword ptr [rsp+128h]
                    00 00
  000000000000008F: B8 00 05 00 00     mov         eax,500h
  0000000000000094: 48 83 CD FF        or          rbp,0FFFFFFFFFFFFFFFFh
  0000000000000098: 66 89 43 0E        mov         word ptr [rbx+0Eh],ax
  000000000000009C: 4D 85 F6           test        r14,r14
  000000000000009F: 74 11              je          00000000000000B2
  00000000000000A1: 48 8B C5           mov         rax,rbp
  00000000000000A4: 48 FF C0           inc         rax
  00000000000000A7: 45 38 2C 06        cmp         byte ptr [r14+rax],r13b
  00000000000000AB: 75 F7              jne         00000000000000A4
  00000000000000AD: 48 85 C0           test        rax,rax
  00000000000000B0: 75 44              jne         00000000000000F6
  00000000000000B2: 0F B7 46 06        movzx       eax,word ptr [rsi+6]
  00000000000000B6: 25 03 00 00 80     and         eax,80000003h
  00000000000000BB: 7D 07              jge         00000000000000C4
  00000000000000BD: FF C8              dec         eax
  00000000000000BF: 83 C8 FC           or          eax,0FFFFFFFCh
  00000000000000C2: FF C0              inc         eax
  00000000000000C4: 48 8B 94 24 18 01  mov         rdx,qword ptr [rsp+118h]
                    00 00
  00000000000000CC: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000000D1: 44 0F B7 C0        movzx       r8d,ax
  00000000000000D5: E8 00 00 00 00     call        ??0TSerialNumber@@QEAA@PEADG@Z
  00000000000000DA: 4C 8D 84 24 10 01  lea         r8,[rsp+110h]
                    00 00
  00000000000000E2: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  00000000000000E7: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000000EC: E8 00 00 00 00     call        ?Get@TSerialNumber@@QEAAHPEADPEAH@Z
  00000000000000F1: 4C 8D 74 24 40     lea         r14,[rsp+40h]
  00000000000000F6: 0F B7 56 04        movzx       edx,word ptr [rsi+4]
  00000000000000FA: 48 8B CB           mov         rcx,rbx
  00000000000000FD: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QEAAXG@Z
  0000000000000102: 0F B7 56 06        movzx       edx,word ptr [rsi+6]
  0000000000000106: 48 8B CB           mov         rcx,rbx
  0000000000000109: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QEAAXG@Z
  000000000000010E: 44 38 6E 08        cmp         byte ptr [rsi+8],r13b
  0000000000000112: 74 04              je          0000000000000118
  0000000000000114: 80 4B 12 08        or          byte ptr [rbx+12h],8
  0000000000000118: 0F B7 56 0A        movzx       edx,word ptr [rsi+0Ah]
  000000000000011C: 48 8B CB           mov         rcx,rbx
  000000000000011F: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QEAAXH@Z
  0000000000000124: 44 38 6E 0C        cmp         byte ptr [rsi+0Ch],r13b
  0000000000000128: B1 80              mov         cl,80h
  000000000000012A: 0F B6 C1           movzx       eax,cl
  000000000000012D: B9 C0 00 00 00     mov         ecx,0C0h
  0000000000000132: 0F 45 C1           cmovne      eax,ecx
  0000000000000135: 44 38 6E 0D        cmp         byte ptr [rsi+0Dh],r13b
  0000000000000139: 74 02              je          000000000000013D
  000000000000013B: 0C 20              or          al,20h
  000000000000013D: 0F B6 D0           movzx       edx,al
  0000000000000140: 48 8B CB           mov         rcx,rbx
  0000000000000143: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QEAAXE@Z
  0000000000000148: 44 38 6E 0E        cmp         byte ptr [rsi+0Eh],r13b
  000000000000014C: 74 04              je          0000000000000152
  000000000000014E: 80 4B 12 04        or          byte ptr [rbx+12h],4
  0000000000000152: C6 43 16 16        mov         byte ptr [rbx+16h],16h
  0000000000000156: 48 8B C5           mov         rax,rbp
  0000000000000159: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000160: 48 FF C0           inc         rax
  0000000000000163: 45 38 2C 04        cmp         byte ptr [r12+rax],r13b
  0000000000000167: 75 F7              jne         0000000000000160
  0000000000000169: FE C0              inc         al
  000000000000016B: 48 8B CD           mov         rcx,rbp
  000000000000016E: 02 C0              add         al,al
  0000000000000170: 88 43 17           mov         byte ptr [rbx+17h],al
  0000000000000173: 04 16              add         al,16h
  0000000000000175: 88 43 18           mov         byte ptr [rbx+18h],al
  0000000000000178: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000180: 48 FF C1           inc         rcx
  0000000000000183: 45 38 2C 0F        cmp         byte ptr [r15+rcx],r13b
  0000000000000187: 75 F7              jne         0000000000000180
  0000000000000189: FE C1              inc         cl
  000000000000018B: 02 C9              add         cl,cl
  000000000000018D: 88 4B 19           mov         byte ptr [rbx+19h],cl
  0000000000000190: 02 C8              add         cl,al
  0000000000000192: 88 4B 1A           mov         byte ptr [rbx+1Ah],cl
  0000000000000195: 48 FF C5           inc         rbp
  0000000000000198: 45 38 2C 2E        cmp         byte ptr [r14+rbp],r13b
  000000000000019C: 75 F7              jne         0000000000000195
  000000000000019E: 40 FE C5           inc         bpl
  00000000000001A1: 48 8D 53 1E        lea         rdx,[rbx+1Eh]
  00000000000001A5: 4D 8B C4           mov         r8,r12
  00000000000001A8: 40 02 ED           add         bpl,bpl
  00000000000001AB: 48 8B CB           mov         rcx,rbx
  00000000000001AE: 40 88 6B 1B        mov         byte ptr [rbx+1Bh],bpl
  00000000000001B2: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001B7: 0F B6 43 18        movzx       eax,byte ptr [rbx+18h]
  00000000000001BB: 48 8D 53 08        lea         rdx,[rbx+8]
  00000000000001BF: 4D 8B C7           mov         r8,r15
  00000000000001C2: 48 8B CB           mov         rcx,rbx
  00000000000001C5: 48 03 D0           add         rdx,rax
  00000000000001C8: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001CD: 0F B6 43 1A        movzx       eax,byte ptr [rbx+1Ah]
  00000000000001D1: 48 8D 53 08        lea         rdx,[rbx+8]
  00000000000001D5: 48 03 D0           add         rdx,rax
  00000000000001D8: 4D 8B C6           mov         r8,r14
  00000000000001DB: 48 8B CB           mov         rcx,rbx
  00000000000001DE: E8 00 00 00 00     call        ?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z
  00000000000001E3: 0F BE 43 16        movsx       eax,byte ptr [rbx+16h]
  00000000000001E7: 48 8B CB           mov         rcx,rbx
  00000000000001EA: 89 83 34 08 00 00  mov         dword ptr [rbx+834h],eax
  00000000000001F0: 0F BE 43 18        movsx       eax,byte ptr [rbx+18h]
  00000000000001F4: 89 83 38 08 00 00  mov         dword ptr [rbx+838h],eax
  00000000000001FA: 0F BE 43 1A        movsx       eax,byte ptr [rbx+1Ah]
  00000000000001FE: 89 83 3C 08 00 00  mov         dword ptr [rbx+83Ch],eax
  0000000000000204: 80 4B 16 80        or          byte ptr [rbx+16h],80h
  0000000000000208: 80 4B 18 80        or          byte ptr [rbx+18h],80h
  000000000000020C: 80 4B 1A 80        or          byte ptr [rbx+1Ah],80h
  0000000000000210: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000213: FF 50 48           call        qword ptr [rax+48h]
  0000000000000216: 4C 8B B4 24 C8 00  mov         r14,qword ptr [rsp+0C8h]
                    00 00
  000000000000021E: 48 8B AC 24 00 01  mov         rbp,qword ptr [rsp+100h]
                    00 00
  0000000000000226: 44 38 6E 10        cmp         byte ptr [rsi+10h],r13b
  000000000000022A: 74 05              je          0000000000000231
  000000000000022C: BF 10 00 00 00     mov         edi,10h
  0000000000000231: 44 38 6E 11        cmp         byte ptr [rsi+11h],r13b
  0000000000000235: 74 08              je          000000000000023F
  0000000000000237: B8 00 10 00 00     mov         eax,1000h
  000000000000023C: 66 0B F8           or          di,ax
  000000000000023F: 44 38 6E 12        cmp         byte ptr [rsi+12h],r13b
  0000000000000243: 74 04              je          0000000000000249
  0000000000000245: 66 83 CF 01        or          di,1
  0000000000000249: 44 38 6E 13        cmp         byte ptr [rsi+13h],r13b
  000000000000024D: 74 04              je          0000000000000253
  000000000000024F: 66 83 CF 02        or          di,2
  0000000000000253: 44 38 6E 14        cmp         byte ptr [rsi+14h],r13b
  0000000000000257: 74 04              je          000000000000025D
  0000000000000259: 66 83 CF 04        or          di,4
  000000000000025D: 44 38 6E 15        cmp         byte ptr [rsi+15h],r13b
  0000000000000261: 74 08              je          000000000000026B
  0000000000000263: B8 00 01 00 00     mov         eax,100h
  0000000000000268: 66 0B F8           or          di,ax
  000000000000026B: B9 00 02 00 00     mov         ecx,200h
  0000000000000270: 44 38 6E 16        cmp         byte ptr [rsi+16h],r13b
  0000000000000274: 74 03              je          0000000000000279
  0000000000000276: 66 0B F9           or          di,cx
  0000000000000279: 44 38 6E 17        cmp         byte ptr [rsi+17h],r13b
  000000000000027D: 74 08              je          0000000000000287
  000000000000027F: B8 00 04 00 00     mov         eax,400h
  0000000000000284: 66 0B F8           or          di,ax
  0000000000000287: 80 7E 18 01        cmp         byte ptr [rsi+18h],1
  000000000000028B: 75 04              jne         0000000000000291
  000000000000028D: 66 83 CF 08        or          di,8
  0000000000000291: 80 7E 19 01        cmp         byte ptr [rsi+19h],1
  0000000000000295: 75 08              jne         000000000000029F
  0000000000000297: B8 00 08 00 00     mov         eax,800h
  000000000000029C: 66 0B F8           or          di,ax
  000000000000029F: 66 89 7B 08        mov         word ptr [rbx+8],di
  00000000000002A3: 66 89 4B 14        mov         word ptr [rbx+14h],cx
  00000000000002A7: 0F B7 83 32 08 00  movzx       eax,word ptr [rbx+832h]
                    00
  00000000000002AE: 66 85 C0           test        ax,ax
  00000000000002B1: 74 05              je          00000000000002B8
  00000000000002B3: 0F B7 C8           movzx       ecx,ax
  00000000000002B6: EB 05              jmp         00000000000002BD
  00000000000002B8: B9 46 00 00 00     mov         ecx,46h
  00000000000002BD: 66 89 4B 1C        mov         word ptr [rbx+1Ch],cx
  00000000000002C1: B8 02 03 00 00     mov         eax,302h
  00000000000002C6: 48 8D 94 24 08 01  lea         rdx,[rsp+108h]
                    00 00
  00000000000002CE: 48 8B CB           mov         rcx,rbx
  00000000000002D1: 66 89 84 24 08 01  mov         word ptr [rsp+108h],ax
                    00 00
  00000000000002D9: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  00000000000002DE: 33 D2              xor         edx,edx
  00000000000002E0: 48 8B CB           mov         rcx,rbx
  00000000000002E3: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  00000000000002E8: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000002EB: 48 8B CB           mov         rcx,rbx
  00000000000002EE: FF 50 08           call        qword ptr [rax+8]
  00000000000002F1: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000002F4: 48 8B CB           mov         rcx,rbx
  00000000000002F7: 44 89 AB 0C 08 00  mov         dword ptr [rbx+80Ch],r13d
                    00
  00000000000002FE: FF 50 40           call        qword ptr [rax+40h]
  0000000000000301: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000305: E8 00 00 00 00     call        ?Write@TEeData@@QEAAHXZ
  000000000000030A: 85 C0              test        eax,eax
  000000000000030C: 75 1C              jne         000000000000032A
  000000000000030E: B8 0C 00 00 00     mov         eax,0Ch
  0000000000000313: 4C 8B BC 24 C0 00  mov         r15,qword ptr [rsp+0C0h]
                    00 00
  000000000000031B: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  0000000000000322: 41 5D              pop         r13
  0000000000000324: 41 5C              pop         r12
  0000000000000326: 5F                 pop         rdi
  0000000000000327: 5E                 pop         rsi
  0000000000000328: 5B                 pop         rbx
  0000000000000329: C3                 ret
  000000000000032A: 48 8D 4B 08        lea         rcx,[rbx+8]
  000000000000032E: E8 00 00 00 00     call        ?Confirm@TEeData@@QEAAHXZ
  0000000000000333: B9 0C 00 00 00     mov         ecx,0Ch
  0000000000000338: 85 C0              test        eax,eax
  000000000000033A: 44 0F 44 E9        cmove       r13d,ecx
  000000000000033E: 41 8B C5           mov         eax,r13d
  0000000000000341: EB D0              jmp         0000000000000313
  0000000000000343: B8 06 00 00 00     mov         eax,6
  0000000000000348: EB C9              jmp         0000000000000313
  000000000000034A: B8 06 00 00 00     mov         eax,6
  000000000000034F: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  0000000000000356: 41 5D              pop         r13
  0000000000000358: 41 5C              pop         r12
  000000000000035A: 5F                 pop         rdi
  000000000000035B: 5E                 pop         rsi
  000000000000035C: 5B                 pop         rbx
  000000000000035D: C3                 ret

?Read@TFtEE2232@@UEAAHXZ (public: virtual int __cdecl TFtEE2232::Read(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ?Read@TFtE2Data@@UEAAHXZ
  000000000000000E: 85 C0              test        eax,eax
  0000000000000010: 75 06              jne         0000000000000018
  0000000000000012: 48 83 C4 20        add         rsp,20h
  0000000000000016: 5B                 pop         rbx
  0000000000000017: C3                 ret
  0000000000000018: 0F B7 43 1C        movzx       eax,word ptr [rbx+1Ch]
  000000000000001C: B9 EF FF 00 00     mov         ecx,0FFEFh
  0000000000000021: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  0000000000000028: 66 83 E8 56        sub         ax,56h
  000000000000002C: 66 85 C1           test        cx,ax
  000000000000002F: 74 15              je          0000000000000046
  0000000000000031: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],40h
                    40 00 00 00
  000000000000003B: B8 01 00 00 00     mov         eax,1
  0000000000000040: 48 83 C4 20        add         rsp,20h
  0000000000000044: 5B                 pop         rbx
  0000000000000045: C3                 ret
  0000000000000046: 83 AB 34 08 00 00  sub         dword ptr [rbx+834h],0FFFFFF80h
                    80
  000000000000004D: 83 AB 38 08 00 00  sub         dword ptr [rbx+838h],0FFFFFF80h
                    80
  0000000000000054: 83 AB 3C 08 00 00  sub         dword ptr [rbx+83Ch],0FFFFFF80h
                    80
  000000000000005B: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000065: B8 01 00 00 00     mov         eax,1
  000000000000006A: 48 83 C4 20        add         rsp,20h
  000000000000006E: 5B                 pop         rbx
  000000000000006F: C3                 ret

?ReadAndParse@TFtEE2232@@QEAAKPEAXPEAD111@Z (public: unsigned long __cdecl TFtEE2232::ReadAndParse(void *,char *,char *,char *,char *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 54              push        r12
  0000000000000016: 41 56              push        r14
  0000000000000018: 41 57              push        r15
  000000000000001A: 48 83 EC 60        sub         rsp,60h
  000000000000001E: 45 33 E4           xor         r12d,r12d
  0000000000000021: 49 8B F1           mov         rsi,r9
  0000000000000024: 4D 8B F8           mov         r15,r8
  0000000000000027: 48 8B EA           mov         rbp,rdx
  000000000000002A: 4C 8B F1           mov         r14,rcx
  000000000000002D: 48 85 D2           test        rdx,rdx
  0000000000000030: 0F 84 0B 02 00 00  je          0000000000000241
  0000000000000036: 4D 85 C0           test        r8,r8
  0000000000000039: 0F 84 02 02 00 00  je          0000000000000241
  000000000000003F: 4D 85 C9           test        r9,r9
  0000000000000042: 0F 84 F9 01 00 00  je          0000000000000241
  0000000000000048: 48 8B 9C 24 A0 00  mov         rbx,qword ptr [rsp+0A0h]
                    00 00
  0000000000000050: 48 85 DB           test        rbx,rbx
  0000000000000053: 0F 84 E8 01 00 00  je          0000000000000241
  0000000000000059: 48 8B BC 24 A8 00  mov         rdi,qword ptr [rsp+0A8h]
                    00 00
  0000000000000061: 48 85 FF           test        rdi,rdi
  0000000000000064: 0F 84 D7 01 00 00  je          0000000000000241
  000000000000006A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000006D: FF 10              call        qword ptr [rax]
  000000000000006F: 85 C0              test        eax,eax
  0000000000000071: 0F 84 BF 01 00 00  je          0000000000000236
  0000000000000077: 49 8B CE           mov         rcx,r14
  000000000000007A: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  000000000000007F: 66 85 C0           test        ax,ax
  0000000000000082: 75 0E              jne         0000000000000092
  0000000000000084: 41 BC 0E 00 00 00  mov         r12d,0Eh
  000000000000008A: 41 8B C4           mov         eax,r12d
  000000000000008D: E9 B4 01 00 00     jmp         0000000000000246
  0000000000000092: B9 FF FF 00 00     mov         ecx,0FFFFh
  0000000000000097: 66 3B C1           cmp         ax,cx
  000000000000009A: 75 0E              jne         00000000000000AA
  000000000000009C: 41 BC 0F 00 00 00  mov         r12d,0Fh
  00000000000000A2: 41 8B C4           mov         eax,r12d
  00000000000000A5: E9 9C 01 00 00     jmp         0000000000000246
  00000000000000AA: 49 8B CE           mov         rcx,r14
  00000000000000AD: 66 89 45 04        mov         word ptr [rbp+4],ax
  00000000000000B1: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  00000000000000B6: 49 8B CE           mov         rcx,r14
  00000000000000B9: 66 89 45 06        mov         word ptr [rbp+6],ax
  00000000000000BD: 41 0F BE 46 12     movsx       eax,byte ptr [r14+12h]
  00000000000000C2: C1 E8 03           shr         eax,3
  00000000000000C5: 24 01              and         al,1
  00000000000000C7: 88 45 08           mov         byte ptr [rbp+8],al
  00000000000000CA: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  00000000000000CF: 49 8B CE           mov         rcx,r14
  00000000000000D2: 66 89 45 0A        mov         word ptr [rbp+0Ah],ax
  00000000000000D6: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  00000000000000DB: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000E0: 0F B6 C8           movzx       ecx,al
  00000000000000E3: C0 E8 05           shr         al,5
  00000000000000E6: 24 01              and         al,1
  00000000000000E8: C0 E9 06           shr         cl,6
  00000000000000EB: 88 45 0D           mov         byte ptr [rbp+0Dh],al
  00000000000000EE: 80 E1 01           and         cl,1
  00000000000000F1: 88 4D 0C           mov         byte ptr [rbp+0Ch],cl
  00000000000000F4: 41 0F BE 46 12     movsx       eax,byte ptr [r14+12h]
  00000000000000F9: 49 8B CE           mov         rcx,r14
  00000000000000FC: C1 E8 02           shr         eax,2
  00000000000000FF: 24 01              and         al,1
  0000000000000101: 88 45 0E           mov         byte ptr [rbp+0Eh],al
  0000000000000104: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  0000000000000109: 48 8D 44 24 20     lea         rax,[rsp+20h]
  000000000000010E: 4C 2B F8           sub         r15,rax
  0000000000000111: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000116: 66 66 0F 1F 84 00  nop         word ptr [rax+rax]
                    00 00 00 00
  0000000000000120: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000123: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000127: 41 88 44 0F FF     mov         byte ptr [r15+rcx-1],al
  000000000000012C: 84 C0              test        al,al
  000000000000012E: 75 F0              jne         0000000000000120
  0000000000000130: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000135: 49 8B CE           mov         rcx,r14
  0000000000000138: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  000000000000013D: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000142: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000147: 48 2B F0           sub         rsi,rax
  000000000000014A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000150: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000153: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000157: 88 44 0E FF        mov         byte ptr [rsi+rcx-1],al
  000000000000015B: 84 C0              test        al,al
  000000000000015D: 75 F1              jne         0000000000000150
  000000000000015F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000164: 49 8B CE           mov         rcx,r14
  0000000000000167: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  000000000000016C: 48 8D 44 24 20     lea         rax,[rsp+20h]
  0000000000000171: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000176: 48 2B D8           sub         rbx,rax
  0000000000000179: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000180: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000183: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000187: 88 44 0B FF        mov         byte ptr [rbx+rcx-1],al
  000000000000018B: 84 C0              test        al,al
  000000000000018D: 75 F1              jne         0000000000000180
  000000000000018F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000194: 49 8B CE           mov         rcx,r14
  0000000000000197: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000019C: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000001A1: 48 8D 44 24 20     lea         rax,[rsp+20h]
  00000000000001A6: 48 2B F9           sub         rdi,rcx
  00000000000001A9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000001B0: 0F B6 08           movzx       ecx,byte ptr [rax]
  00000000000001B3: 48 8D 40 01        lea         rax,[rax+1]
  00000000000001B7: 88 4C 07 FF        mov         byte ptr [rdi+rax-1],cl
  00000000000001BB: 84 C9              test        cl,cl
  00000000000001BD: 75 F1              jne         00000000000001B0
  00000000000001BF: 41 0F B7 4E 08     movzx       ecx,word ptr [r14+8]
  00000000000001C4: 0F B6 C1           movzx       eax,cl
  00000000000001C7: C0 E8 04           shr         al,4
  00000000000001CA: 24 01              and         al,1
  00000000000001CC: 88 45 10           mov         byte ptr [rbp+10h],al
  00000000000001CF: 0F B7 C1           movzx       eax,cx
  00000000000001D2: 66 C1 E8 0C        shr         ax,0Ch
  00000000000001D6: 24 01              and         al,1
  00000000000001D8: 88 45 11           mov         byte ptr [rbp+11h],al
  00000000000001DB: 0F B6 C1           movzx       eax,cl
  00000000000001DE: 24 01              and         al,1
  00000000000001E0: 88 45 12           mov         byte ptr [rbp+12h],al
  00000000000001E3: 0F B6 C1           movzx       eax,cl
  00000000000001E6: D0 E8              shr         al,1
  00000000000001E8: 24 01              and         al,1
  00000000000001EA: 88 45 13           mov         byte ptr [rbp+13h],al
  00000000000001ED: 0F B6 C1           movzx       eax,cl
  00000000000001F0: C0 E8 02           shr         al,2
  00000000000001F3: 24 01              and         al,1
  00000000000001F5: 88 45 14           mov         byte ptr [rbp+14h],al
  00000000000001F8: 0F B7 C1           movzx       eax,cx
  00000000000001FB: 66 C1 E8 08        shr         ax,8
  00000000000001FF: 24 01              and         al,1
  0000000000000201: 88 45 15           mov         byte ptr [rbp+15h],al
  0000000000000204: 0F B7 C1           movzx       eax,cx
  0000000000000207: 66 C1 E8 09        shr         ax,9
  000000000000020B: 24 01              and         al,1
  000000000000020D: 88 45 16           mov         byte ptr [rbp+16h],al
  0000000000000210: 0F B7 C1           movzx       eax,cx
  0000000000000213: 66 C1 E8 0A        shr         ax,0Ah
  0000000000000217: 24 01              and         al,1
  0000000000000219: 88 45 17           mov         byte ptr [rbp+17h],al
  000000000000021C: 0F B6 C1           movzx       eax,cl
  000000000000021F: 66 C1 E9 0B        shr         cx,0Bh
  0000000000000223: C0 E8 03           shr         al,3
  0000000000000226: 24 01              and         al,1
  0000000000000228: 80 E1 01           and         cl,1
  000000000000022B: 88 45 18           mov         byte ptr [rbp+18h],al
  000000000000022E: 88 4D 19           mov         byte ptr [rbp+19h],cl
  0000000000000231: 41 8B C4           mov         eax,r12d
  0000000000000234: EB 10              jmp         0000000000000246
  0000000000000236: 41 BC 0B 00 00 00  mov         r12d,0Bh
  000000000000023C: 41 8B C4           mov         eax,r12d
  000000000000023F: EB 05              jmp         0000000000000246
  0000000000000241: B8 06 00 00 00     mov         eax,6
  0000000000000246: 4C 8D 5C 24 60     lea         r11,[rsp+60h]
  000000000000024B: 49 8B 5B 20        mov         rbx,qword ptr [r11+20h]
  000000000000024F: 49 8B 6B 28        mov         rbp,qword ptr [r11+28h]
  0000000000000253: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  0000000000000257: 49 8B 7B 38        mov         rdi,qword ptr [r11+38h]
  000000000000025B: 49 8B E3           mov         rsp,r11
  000000000000025E: 41 5F              pop         r15
  0000000000000260: 41 5E              pop         r14
  0000000000000262: 41 5C              pop         r12
  0000000000000264: C3                 ret

?ReadAndParse@TFtEE2232@@UEAAKPEAX@Z (public: virtual unsigned long __cdecl TFtEE2232::ReadAndParse(void *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 60        sub         rsp,60h
  000000000000000A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000D: 48 8B FA           mov         rdi,rdx
  0000000000000010: 48 8B D9           mov         rbx,rcx
  0000000000000013: FF 10              call        qword ptr [rax]
  0000000000000015: 85 C0              test        eax,eax
  0000000000000017: 75 10              jne         0000000000000029
  0000000000000019: B8 0B 00 00 00     mov         eax,0Bh
  000000000000001E: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  0000000000000023: 48 83 C4 60        add         rsp,60h
  0000000000000027: 5F                 pop         rdi
  0000000000000028: C3                 ret
  0000000000000029: 48 8B CB           mov         rcx,rbx
  000000000000002C: E8 00 00 00 00     call        ?GetVendorId@TFtE2Data@@QEAAGXZ
  0000000000000031: 66 85 C0           test        ax,ax
  0000000000000034: 75 10              jne         0000000000000046
  0000000000000036: B8 0E 00 00 00     mov         eax,0Eh
  000000000000003B: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  0000000000000040: 48 83 C4 60        add         rsp,60h
  0000000000000044: 5F                 pop         rdi
  0000000000000045: C3                 ret
  0000000000000046: B9 FF FF 00 00     mov         ecx,0FFFFh
  000000000000004B: 66 3B C1           cmp         ax,cx
  000000000000004E: 75 10              jne         0000000000000060
  0000000000000050: B8 0F 00 00 00     mov         eax,0Fh
  0000000000000055: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  000000000000005A: 48 83 C4 60        add         rsp,60h
  000000000000005E: 5F                 pop         rdi
  000000000000005F: C3                 ret
  0000000000000060: 48 8B CB           mov         rcx,rbx
  0000000000000063: 48 89 74 24 70     mov         qword ptr [rsp+70h],rsi
  0000000000000068: 66 89 47 0C        mov         word ptr [rdi+0Ch],ax
  000000000000006C: E8 00 00 00 00     call        ?GetProductId@TFtE2Data@@QEAAGXZ
  0000000000000071: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000076: 48 8B CB           mov         rcx,rbx
  0000000000000079: 66 89 47 0E        mov         word ptr [rdi+0Eh],ax
  000000000000007D: E8 00 00 00 00     call        ?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z
  0000000000000082: 48 8B 4F 10        mov         rcx,qword ptr [rdi+10h]
  0000000000000086: 48 85 C9           test        rcx,rcx
  0000000000000089: 74 17              je          00000000000000A2
  000000000000008B: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000090: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000093: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000097: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000009B: 88 41 FF           mov         byte ptr [rcx-1],al
  000000000000009E: 84 C0              test        al,al
  00000000000000A0: 75 EE              jne         0000000000000090
  00000000000000A2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000A7: 48 8B CB           mov         rcx,rbx
  00000000000000AA: E8 00 00 00 00     call        ?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000AF: 48 8B 4F 18        mov         rcx,qword ptr [rdi+18h]
  00000000000000B3: 48 85 C9           test        rcx,rcx
  00000000000000B6: 74 1A              je          00000000000000D2
  00000000000000B8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000BD: 0F 1F 00           nop         dword ptr [rax]
  00000000000000C0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000C3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000C7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000CB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000CE: 84 C0              test        al,al
  00000000000000D0: 75 EE              jne         00000000000000C0
  00000000000000D2: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000D7: 48 8B CB           mov         rcx,rbx
  00000000000000DA: E8 00 00 00 00     call        ?GetProductString@TFtE2Data@@QEAAXPEAD@Z
  00000000000000DF: 48 8B 4F 20        mov         rcx,qword ptr [rdi+20h]
  00000000000000E3: 48 85 C9           test        rcx,rcx
  00000000000000E6: 74 1A              je          0000000000000102
  00000000000000E8: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000ED: 0F 1F 00           nop         dword ptr [rax]
  00000000000000F0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000F3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000000F7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000000FB: 88 41 FF           mov         byte ptr [rcx-1],al
  00000000000000FE: 84 C0              test        al,al
  0000000000000100: 75 EE              jne         00000000000000F0
  0000000000000102: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000107: 48 8B CB           mov         rcx,rbx
  000000000000010A: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  000000000000010F: 48 8B 47 28        mov         rax,qword ptr [rdi+28h]
  0000000000000113: 48 85 C0           test        rax,rax
  0000000000000116: 74 1A              je          0000000000000132
  0000000000000118: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  000000000000011D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000120: 0F B6 0A           movzx       ecx,byte ptr [rdx]
  0000000000000123: 48 8D 40 01        lea         rax,[rax+1]
  0000000000000127: 48 8D 52 01        lea         rdx,[rdx+1]
  000000000000012B: 88 48 FF           mov         byte ptr [rax-1],cl
  000000000000012E: 84 C9              test        cl,cl
  0000000000000130: 75 EE              jne         0000000000000120
  0000000000000132: 48 8B CB           mov         rcx,rbx
  0000000000000135: E8 00 00 00 00     call        ?GetMaxPower@TFtE2Data@@QEAAHXZ
  000000000000013A: 48 8B CB           mov         rcx,rbx
  000000000000013D: 66 89 47 30        mov         word ptr [rdi+30h],ax
  0000000000000141: E8 00 00 00 00     call        ?GetOptions@TFtE2Data@@QEAAGXZ
  0000000000000146: 33 F6              xor         esi,esi
  0000000000000148: 8B CE              mov         ecx,esi
  000000000000014A: 66 85 C0           test        ax,ax
  000000000000014D: 0F 94 C1           sete        cl
  0000000000000150: 66 89 4F 32        mov         word ptr [rdi+32h],cx
  0000000000000154: 48 8B CB           mov         rcx,rbx
  0000000000000157: E8 00 00 00 00     call        ?GetBmAttributes@TFtE2Data@@QEAAEXZ
  000000000000015C: 48 89 77 38        mov         qword ptr [rdi+38h],rsi
  0000000000000160: C6 47 40 01        mov         byte ptr [rdi+40h],1
  0000000000000164: 0F B6 C8           movzx       ecx,al
  0000000000000167: C0 E8 05           shr         al,5
  000000000000016A: 24 01              and         al,1
  000000000000016C: C0 E9 06           shr         cl,6
  000000000000016F: 0F B6 C0           movzx       eax,al
  0000000000000172: 80 E1 01           and         cl,1
  0000000000000175: 66 89 47 36        mov         word ptr [rdi+36h],ax
  0000000000000179: 0F B6 C9           movzx       ecx,cl
  000000000000017C: 66 89 4F 34        mov         word ptr [rdi+34h],cx
  0000000000000180: 0F B7 4B 08        movzx       ecx,word ptr [rbx+8]
  0000000000000184: 0F B6 C1           movzx       eax,cl
  0000000000000187: C0 E8 04           shr         al,4
  000000000000018A: 24 01              and         al,1
  000000000000018C: 88 47 4A           mov         byte ptr [rdi+4Ah],al
  000000000000018F: 0F B7 C1           movzx       eax,cx
  0000000000000192: 66 C1 E8 0C        shr         ax,0Ch
  0000000000000196: 24 01              and         al,1
  0000000000000198: 88 47 4B           mov         byte ptr [rdi+4Bh],al
  000000000000019B: 0F B6 C1           movzx       eax,cl
  000000000000019E: 24 01              and         al,1
  00000000000001A0: 88 47 4C           mov         byte ptr [rdi+4Ch],al
  00000000000001A3: 0F B6 C1           movzx       eax,cl
  00000000000001A6: D0 E8              shr         al,1
  00000000000001A8: 24 01              and         al,1
  00000000000001AA: 88 47 4D           mov         byte ptr [rdi+4Dh],al
  00000000000001AD: 0F B6 C1           movzx       eax,cl
  00000000000001B0: C0 E8 02           shr         al,2
  00000000000001B3: 24 01              and         al,1
  00000000000001B5: 88 47 4E           mov         byte ptr [rdi+4Eh],al
  00000000000001B8: 0F B6 C1           movzx       eax,cl
  00000000000001BB: C0 E8 03           shr         al,3
  00000000000001BE: 24 01              and         al,1
  00000000000001C0: 88 47 4F           mov         byte ptr [rdi+4Fh],al
  00000000000001C3: 0F B7 C1           movzx       eax,cx
  00000000000001C6: 66 C1 E8 08        shr         ax,8
  00000000000001CA: 24 01              and         al,1
  00000000000001CC: 88 47 50           mov         byte ptr [rdi+50h],al
  00000000000001CF: 0F B7 C1           movzx       eax,cx
  00000000000001D2: 66 C1 E8 09        shr         ax,9
  00000000000001D6: 24 01              and         al,1
  00000000000001D8: 88 47 51           mov         byte ptr [rdi+51h],al
  00000000000001DB: 0F B7 C1           movzx       eax,cx
  00000000000001DE: 66 C1 E9 0B        shr         cx,0Bh
  00000000000001E2: 66 C1 E8 0A        shr         ax,0Ah
  00000000000001E6: 80 E1 01           and         cl,1
  00000000000001E9: 24 01              and         al,1
  00000000000001EB: 88 4F 53           mov         byte ptr [rdi+53h],cl
  00000000000001EE: 88 47 52           mov         byte ptr [rdi+52h],al
  00000000000001F1: 0F B7 4B 12        movzx       ecx,word ptr [rbx+12h]
  00000000000001F5: 0F B6 C1           movzx       eax,cl
  00000000000001F8: C0 E8 02           shr         al,2
  00000000000001FB: 24 01              and         al,1
  00000000000001FD: 88 47 45           mov         byte ptr [rdi+45h],al
  0000000000000200: 0F B6 C1           movzx       eax,cl
  0000000000000203: C0 E8 03           shr         al,3
  0000000000000206: 24 01              and         al,1
  0000000000000208: 88 47 46           mov         byte ptr [rdi+46h],al
  000000000000020B: 0F B6 C1           movzx       eax,cl
  000000000000020E: C0 E8 04           shr         al,4
  0000000000000211: 24 01              and         al,1
  0000000000000213: 88 47 47           mov         byte ptr [rdi+47h],al
  0000000000000216: 0F B6 C1           movzx       eax,cl
  0000000000000219: 24 01              and         al,1
  000000000000021B: 88 47 41           mov         byte ptr [rdi+41h],al
  000000000000021E: 0F B6 C1           movzx       eax,cl
  0000000000000221: D0 E8              shr         al,1
  0000000000000223: 24 01              and         al,1
  0000000000000225: 48 8B 74 24 70     mov         rsi,qword ptr [rsp+70h]
  000000000000022A: 88 47 43           mov         byte ptr [rdi+43h],al
  000000000000022D: 0F B6 C1           movzx       eax,cl
  0000000000000230: C0 E8 05           shr         al,5
  0000000000000233: C0 E9 06           shr         cl,6
  0000000000000236: 24 01              and         al,1
  0000000000000238: 80 E1 01           and         cl,1
  000000000000023B: 88 47 42           mov         byte ptr [rdi+42h],al
  000000000000023E: 88 4F 44           mov         byte ptr [rdi+44h],cl
  0000000000000241: 0F B7 43 14        movzx       eax,word ptr [rbx+14h]
  0000000000000245: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  000000000000024A: 66 89 47 48        mov         word ptr [rdi+48h],ax
  000000000000024E: 33 C0              xor         eax,eax
  0000000000000250: 48 83 C4 60        add         rsp,60h
  0000000000000254: 5F                 pop         rdi
  0000000000000255: C3                 ret

?SetRomType@TFtEE2232@@UEAAXXZ (public: virtual void __cdecl TFtEE2232::SetRomType(void)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B D9           mov         rbx,rcx
  0000000000000017: 33 ED              xor         ebp,ebp
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: 66 89 6C 24 30     mov         word ptr [rsp+30h],bp
  0000000000000022: E8 00 00 00 00     call        ?Erase@TEeData@@QEAAHXZ
  0000000000000027: BE C0 00 00 00     mov         esi,0C0h
  000000000000002C: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000030: 44 8B C6           mov         r8d,esi
  0000000000000033: 8B D6              mov         edx,esi
  0000000000000035: E8 00 00 00 00     call        ?WriteWord@TEeData@@QEAAHKG@Z
  000000000000003A: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  000000000000003F: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000043: 33 D2              xor         edx,edx
  0000000000000045: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  000000000000004A: 66 39 74 24 30     cmp         word ptr [rsp+30h],si
  000000000000004F: 75 0E              jne         000000000000005F
  0000000000000051: B8 46 00 00 00     mov         eax,46h
  0000000000000056: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  000000000000005D: EB 68              jmp         00000000000000C7
  000000000000005F: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  0000000000000064: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000068: BA 40 00 00 00     mov         edx,40h
  000000000000006D: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  0000000000000072: 66 39 74 24 30     cmp         word ptr [rsp+30h],si
  0000000000000077: 75 18              jne         0000000000000091
  0000000000000079: B8 56 00 00 00     mov         eax,56h
  000000000000007E: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  0000000000000088: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  000000000000008F: EB 4A              jmp         00000000000000DB
  0000000000000091: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  0000000000000096: 48 8D 4B 08        lea         rcx,[rbx+8]
  000000000000009A: 8B D6              mov         edx,esi
  000000000000009C: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  00000000000000A1: 66 39 74 24 30     cmp         word ptr [rsp+30h],si
  00000000000000A6: 75 18              jne         00000000000000C0
  00000000000000A8: B8 66 00 00 00     mov         eax,66h
  00000000000000AD: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],0FEh
                    FE 00 00 00
  00000000000000B7: 66 89 83 32 08 00  mov         word ptr [rbx+832h],ax
                    00
  00000000000000BE: EB 1B              jmp         00000000000000DB
  00000000000000C0: 66 89 AB 32 08 00  mov         word ptr [rbx+832h],bp
                    00
  00000000000000C7: C7 83 10 08 00 00  mov         dword ptr [rbx+810h],40h
                    40 00 00 00
  00000000000000D1: C7 83 40 08 00 00  mov         dword ptr [rbx+840h],7Eh
                    7E 00 00 00
  00000000000000DB: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000000E0: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  00000000000000E5: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  00000000000000EA: 48 83 C4 20        add         rsp,20h
  00000000000000EE: 5F                 pop         rdi
  00000000000000EF: C3                 ret

??0TFtE2Data@@QEAA@PEAUft_private_vars@@@Z (public: __cdecl TFtE2Data::TFtE2Data(struct ft_private_vars *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 83 C1 08        add         rcx,8
  000000000000000D: E8 00 00 00 00     call        ??0TEeData@@QEAA@PEAUft_private_vars@@@Z
  0000000000000012: 48 8D 05 00 00 00  lea         rax,[??_7TFtE2Data@@6B@]
                    00
  0000000000000019: 48 89 03           mov         qword ptr [rbx],rax
  000000000000001C: 33 C0              xor         eax,eax
  000000000000001E: 89 83 30 08 00 00  mov         dword ptr [rbx+830h],eax
  0000000000000024: 48 8B C3           mov         rax,rbx
  0000000000000027: 48 83 C4 20        add         rsp,20h
  000000000000002B: 5B                 pop         rbx
  000000000000002C: C3                 ret

??0TFtE2Data@@QEAA@PEAX@Z (public: __cdecl TFtE2Data::TFtE2Data(void *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 83 C1 08        add         rcx,8
  000000000000000D: E8 00 00 00 00     call        ??0TEeData@@QEAA@PEAX@Z
  0000000000000012: 48 8D 05 00 00 00  lea         rax,[??_7TFtE2Data@@6B@]
                    00
  0000000000000019: 48 89 03           mov         qword ptr [rbx],rax
  000000000000001C: 33 C0              xor         eax,eax
  000000000000001E: 89 83 30 08 00 00  mov         dword ptr [rbx+830h],eax
  0000000000000024: 48 8B C3           mov         rax,rbx
  0000000000000027: 48 83 C4 20        add         rsp,20h
  000000000000002B: 5B                 pop         rbx
  000000000000002C: C3                 ret

??0TFtE2Data@@QEAA@XZ (public: __cdecl TFtE2Data::TFtE2Data(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 83 C1 08        add         rcx,8
  000000000000000D: E8 00 00 00 00     call        ??0TEeData@@QEAA@XZ
  0000000000000012: 48 8D 05 00 00 00  lea         rax,[??_7TFtE2Data@@6B@]
                    00
  0000000000000019: 48 89 03           mov         qword ptr [rbx],rax
  000000000000001C: 33 C0              xor         eax,eax
  000000000000001E: 89 83 30 08 00 00  mov         dword ptr [rbx+830h],eax
  0000000000000024: 48 8B C3           mov         rax,rbx
  0000000000000027: 48 83 C4 20        add         rsp,20h
  000000000000002B: 5B                 pop         rbx
  000000000000002C: C3                 ret

?AddBmAttributes@TFtE2Data@@QEAAXE@Z (public: void __cdecl TFtE2Data::AddBmAttributes(unsigned char)):
  0000000000000000: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000003: 88 51 10           mov         byte ptr [rcx+10h],dl
  0000000000000006: 48 FF 60 08        jmp         qword ptr [rax+8]

?AddMaxPower@TFtE2Data@@QEAAXH@Z (public: void __cdecl TFtE2Data::AddMaxPower(int)):
  0000000000000000: B8 F4 01 00 00     mov         eax,1F4h
  0000000000000005: 3B D0              cmp         edx,eax
  0000000000000007: 0F 4F D0           cmovg       edx,eax
  000000000000000A: 8B C2              mov         eax,edx
  000000000000000C: 99                 cdq
  000000000000000D: 2B C2              sub         eax,edx
  000000000000000F: D1 F8              sar         eax,1
  0000000000000011: 88 41 11           mov         byte ptr [rcx+11h],al
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 48 FF 60 08        jmp         qword ptr [rax+8]

?AddOemProductId@TFtE2Data@@QEAAXG@Z (public: void __cdecl TFtE2Data::AddOemProductId(unsigned short)):
  0000000000000000: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000003: 66 89 51 0C        mov         word ptr [rcx+0Ch],dx
  0000000000000007: 48 FF 60 08        jmp         qword ptr [rax+8]

?AddOemVendorId@TFtE2Data@@QEAAXG@Z (public: void __cdecl TFtE2Data::AddOemVendorId(unsigned short)):
  0000000000000000: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000003: 66 89 51 0A        mov         word ptr [rcx+0Ah],dx
  0000000000000007: 48 FF 60 08        jmp         qword ptr [rax+8]

?AddOptions@TFtE2Data@@QEAAXG@Z (public: void __cdecl TFtE2Data::AddOptions(unsigned short)):
  0000000000000000: 44 8B 89 3C 08 00  mov         r9d,dword ptr [rcx+000000000000083Ch]
                    00
  0000000000000007: 45 0F BE 44 09 08  movsx       r8d,byte ptr [r9+rcx+8]
  000000000000000D: 45 03 C8           add         r9d,r8d
  0000000000000010: 45 0F BE 44 09 08  movsx       r8d,byte ptr [r9+rcx+8]
  0000000000000016: 45 03 C1           add         r8d,r9d
  0000000000000019: 66 41 89 54 08 08  mov         word ptr [r8+rcx+8],dx
  000000000000001F: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000022: 48 FF 60 08        jmp         qword ptr [rax+8]

?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z (public: int __cdecl TFtE2Data::AddPortNamePrefixDescriptor(unsigned char *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 44 8B 89 3C 08 00  mov         r9d,dword ptr [rcx+83Ch]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 45 0F BE 44 09 08  movsx       r8d,byte ptr [r9+rcx+8]
  0000000000000016: 0F B6 0A           movzx       ecx,byte ptr [rdx]
  0000000000000019: 45 03 C8           add         r9d,r8d
  000000000000001C: 42 8D 04 09        lea         eax,[rcx+r9]
  0000000000000020: 83 F8 7C           cmp         eax,7Ch
  0000000000000023: 76 08              jbe         000000000000002D
  0000000000000025: 33 C0              xor         eax,eax
  0000000000000027: 48 83 C4 20        add         rsp,20h
  000000000000002B: 5B                 pop         rbx
  000000000000002C: C3                 ret
  000000000000002D: 4C 8B C1           mov         r8,rcx
  0000000000000030: 41 8B C1           mov         eax,r9d
  0000000000000033: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000037: 48 03 C8           add         rcx,rax
  000000000000003A: E8 00 00 00 00     call        memcpy
  000000000000003F: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000042: 48 8B CB           mov         rcx,rbx
  0000000000000045: FF 50 08           call        qword ptr [rax+8]
  0000000000000048: B8 01 00 00 00     mov         eax,1
  000000000000004D: 48 83 C4 20        add         rsp,20h
  0000000000000051: 5B                 pop         rbx
  0000000000000052: C3                 ret

?AddSerialStringDescriptor@TFtE2Data@@QEAAXPEAE@Z (public: void __cdecl TFtE2Data::AddSerialStringDescriptor(unsigned char *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 8B 99 3C 08 00 00  mov         ebx,dword ptr [rcx+83Ch]
  0000000000000010: 44 0F B6 02        movzx       r8d,byte ptr [rdx]
  0000000000000014: 48 8B F9           mov         rdi,rcx
  0000000000000017: 48 83 C1 08        add         rcx,8
  000000000000001B: 48 03 CB           add         rcx,rbx
  000000000000001E: E8 00 00 00 00     call        memcpy
  0000000000000023: 0F B6 44 3B 08     movzx       eax,byte ptr [rbx+rdi+8]
  0000000000000028: 48 8B CF           mov         rcx,rdi
  000000000000002B: 88 47 1B           mov         byte ptr [rdi+1Bh],al
  000000000000002E: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000031: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5F                 pop         rdi
  000000000000003B: 48 FF 60 08        jmp         qword ptr [rax+8]

?AddUserArea@TFtE2Data@@UEAAHPEAEK@Z (public: virtual int __cdecl TFtE2Data::AddUserArea(unsigned char *,unsigned long)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000012: 41 8B D8           mov         ebx,r8d
  0000000000000015: 48 8B FA           mov         rdi,rdx
  0000000000000018: 48 8B F1           mov         rsi,rcx
  000000000000001B: FF 50 18           call        qword ptr [rax+18h]
  000000000000001E: 66 03 C0           add         ax,ax
  0000000000000021: 75 12              jne         0000000000000035
  0000000000000023: 33 C0              xor         eax,eax
  0000000000000025: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000002A: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5F                 pop         rdi
  0000000000000034: C3                 ret
  0000000000000035: 0F B7 C0           movzx       eax,ax
  0000000000000038: 3B D8              cmp         ebx,eax
  000000000000003A: 77 E7              ja          0000000000000023
  000000000000003C: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000003F: 48 8B CE           mov         rcx,rsi
  0000000000000042: FF 50 10           call        qword ptr [rax+10h]
  0000000000000045: 66 03 C0           add         ax,ax
  0000000000000048: 85 DB              test        ebx,ebx
  000000000000004A: 74 19              je          0000000000000065
  000000000000004C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000050: 0F B6 0F           movzx       ecx,byte ptr [rdi]
  0000000000000053: 0F B7 D0           movzx       edx,ax
  0000000000000056: 66 FF C0           inc         ax
  0000000000000059: 48 8D 7F 01        lea         rdi,[rdi+1]
  000000000000005D: 88 4C 32 08        mov         byte ptr [rdx+rsi+8],cl
  0000000000000061: FF CB              dec         ebx
  0000000000000063: 75 EB              jne         0000000000000050
  0000000000000065: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000068: 48 8B CE           mov         rcx,rsi
  000000000000006B: FF 50 08           call        qword ptr [rax+8]
  000000000000006E: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000073: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000078: B8 01 00 00 00     mov         eax,1
  000000000000007D: 48 83 C4 20        add         rsp,20h
  0000000000000081: 5F                 pop         rdi
  0000000000000082: C3                 ret

?CheckSerialised@TFtE2Data@@QEAAHKG@Z (public: int __cdecl TFtE2Data::CheckSerialised(unsigned long,unsigned short)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 41 0F B7 D8        movzx       ebx,r8w
  000000000000000A: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  000000000000000F: 48 83 C1 08        add         rcx,8
  0000000000000013: E8 00 00 00 00     call        ?ReadWord@TEeData@@QEAAHKPEAG@Z
  0000000000000018: 85 C0              test        eax,eax
  000000000000001A: 74 12              je          000000000000002E
  000000000000001C: 66 39 5C 24 30     cmp         word ptr [rsp+30h],bx
  0000000000000021: 75 0B              jne         000000000000002E
  0000000000000023: B8 01 00 00 00     mov         eax,1
  0000000000000028: 48 83 C4 20        add         rsp,20h
  000000000000002C: 5B                 pop         rbx
  000000000000002D: C3                 ret
  000000000000002E: 33 C0              xor         eax,eax
  0000000000000030: 48 83 C4 20        add         rsp,20h
  0000000000000034: 5B                 pop         rbx
  0000000000000035: C3                 ret

?DescStrCopyToStr@TFtE2Data@@QEAAXPEAD0@Z (public: void __cdecl TFtE2Data::DescStrCopyToStr(char *,char *)):
  0000000000000000: 41 0F B6 00        movzx       eax,byte ptr [r8]
  0000000000000004: 4C 8B CA           mov         r9,rdx
  0000000000000007: 84 C0              test        al,al
  0000000000000009: 75 03              jne         000000000000000E
  000000000000000B: 88 02              mov         byte ptr [rdx],al
  000000000000000D: C3                 ret
  000000000000000E: 0F BE C0           movsx       eax,al
  0000000000000011: 49 83 C0 02        add         r8,2
  0000000000000015: 99                 cdq
  0000000000000016: 2B C2              sub         eax,edx
  0000000000000018: D1 F8              sar         eax,1
  000000000000001A: FF C8              dec         eax
  000000000000001C: 74 15              je          0000000000000033
  000000000000001E: 66 90              xchg        ax,ax
  0000000000000020: 41 0F B6 08        movzx       ecx,byte ptr [r8]
  0000000000000024: 49 FF C1           inc         r9
  0000000000000027: 4D 8D 40 02        lea         r8,[r8+2]
  000000000000002B: 41 88 49 FF        mov         byte ptr [r9-1],cl
  000000000000002F: FF C8              dec         eax
  0000000000000031: 75 ED              jne         0000000000000020
  0000000000000033: 41 C6 01 00        mov         byte ptr [r9],0
  0000000000000037: C3                 ret

?EraseSerialStringDescriptor@TFtE2Data@@QEAAXXZ (public: void __cdecl TFtE2Data::EraseSerialStringDescriptor(void)):
  0000000000000000: 8B 81 3C 08 00 00  mov         eax,dword ptr [rcx+83Ch]
  0000000000000006: 48 83 C1 08        add         rcx,8
  000000000000000A: 33 D2              xor         edx,edx
  000000000000000C: 48 03 C8           add         rcx,rax
  000000000000000F: 4C 0F BE 01        movsx       r8,byte ptr [rcx]
  0000000000000013: E9 00 00 00 00     jmp         memset

?GetBmAttributes@TFtE2Data@@QEAAEXZ (public: unsigned char __cdecl TFtE2Data::GetBmAttributes(void)):
  0000000000000000: 0F B6 41 10        movzx       eax,byte ptr [rcx+10h]
  0000000000000004: C3                 ret

?GetChecksum@TFtE2Data@@QEAAGXZ (public: unsigned short __cdecl TFtE2Data::GetChecksum(void)):
  0000000000000000: 0F B7 81 30 08 00  movzx       eax,word ptr [rcx+0000000000000830h]
                    00
  0000000000000007: C3                 ret

?GetIsoIn@TFtE2Data@@QEAA_NXZ (public: bool __cdecl TFtE2Data::GetIsoIn(void)):
  0000000000000000: 80 79 0F 04        cmp         byte ptr [rcx+0Fh],4
  0000000000000004: 74 03              je          0000000000000009
  0000000000000006: 32 C0              xor         al,al
  0000000000000008: C3                 ret
  0000000000000009: 0F B6 41 12        movzx       eax,byte ptr [rcx+12h]
  000000000000000D: 24 01              and         al,1
  000000000000000F: C3                 ret

?GetIsoOut@TFtE2Data@@QEAA_NXZ (public: bool __cdecl TFtE2Data::GetIsoOut(void)):
  0000000000000000: 80 79 0F 04        cmp         byte ptr [rcx+0Fh],4
  0000000000000004: 74 03              je          0000000000000009
  0000000000000006: 32 C0              xor         al,al
  0000000000000008: C3                 ret
  0000000000000009: 0F BE 41 12        movsx       eax,byte ptr [rcx+12h]
  000000000000000D: D1 E8              shr         eax,1
  000000000000000F: 24 01              and         al,1
  0000000000000011: C3                 ret

?GetManufacturerIDString@TFtE2Data@@QEAAXPEAD@Z (public: void __cdecl TFtE2Data::GetManufacturerIDString(char *)):
  0000000000000000: 83 B9 0C 08 00 00  cmp         dword ptr [rcx+000000000000080Ch],0
                    00
  0000000000000007: 4C 8B CA           mov         r9,rdx
  000000000000000A: 74 04              je          0000000000000010
  000000000000000C: C6 02 00           mov         byte ptr [rdx],0
  000000000000000F: C3                 ret
  0000000000000010: 8B 81 3C 08 00 00  mov         eax,dword ptr [rcx+000000000000083Ch]
  0000000000000016: 4C 8D 04 08        lea         r8,[rax+rcx]
  000000000000001A: 48 8B CA           mov         rcx,rdx
  000000000000001D: 41 0F B6 40 08     movzx       eax,byte ptr [r8+8]
  0000000000000022: 84 C0              test        al,al
  0000000000000024: 75 07              jne         000000000000002D
  0000000000000026: 88 02              mov         byte ptr [rdx],al
  0000000000000028: 41 88 41 02        mov         byte ptr [r9+2],al
  000000000000002C: C3                 ret
  000000000000002D: 0F BE C0           movsx       eax,al
  0000000000000030: 49 83 C0 0A        add         r8,0Ah
  0000000000000034: 99                 cdq
  0000000000000035: 2B C2              sub         eax,edx
  0000000000000037: D1 F8              sar         eax,1
  0000000000000039: FF C8              dec         eax
  000000000000003B: 74 15              je          0000000000000052
  000000000000003D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000040: 41 0F B6 10        movzx       edx,byte ptr [r8]
  0000000000000044: 48 FF C1           inc         rcx
  0000000000000047: 4D 8D 40 02        lea         r8,[r8+2]
  000000000000004B: 88 51 FF           mov         byte ptr [rcx-1],dl
  000000000000004E: FF C8              dec         eax
  0000000000000050: 75 EE              jne         0000000000000040
  0000000000000052: C6 01 00           mov         byte ptr [rcx],0
  0000000000000055: 41 C6 41 02 00     mov         byte ptr [r9+2],0
  000000000000005A: C3                 ret

?GetManufacturerString@TFtE2Data@@QEAAXPEAD@Z (public: void __cdecl TFtE2Data::GetManufacturerString(char *)):
  0000000000000000: 83 B9 0C 08 00 00  cmp         dword ptr [rcx+000000000000080Ch],0
                    00
  0000000000000007: 4C 8B C2           mov         r8,rdx
  000000000000000A: 74 04              je          0000000000000010
  000000000000000C: C6 02 00           mov         byte ptr [rdx],0
  000000000000000F: C3                 ret
  0000000000000010: 8B 81 34 08 00 00  mov         eax,dword ptr [rcx+0000000000000834h]
  0000000000000016: 0F B6 54 08 08     movzx       edx,byte ptr [rax+rcx+8]
  000000000000001B: 84 D2              test        dl,dl
  000000000000001D: 74 34              je          0000000000000053
  000000000000001F: 4C 8D 49 0A        lea         r9,[rcx+0Ah]
  0000000000000023: 4C 03 C8           add         r9,rax
  0000000000000026: 0F BE C2           movsx       eax,dl
  0000000000000029: 99                 cdq
  000000000000002A: 2B C2              sub         eax,edx
  000000000000002C: D1 F8              sar         eax,1
  000000000000002E: FF C8              dec         eax
  0000000000000030: 74 21              je          0000000000000053
  0000000000000032: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000036: 66 66 0F 1F 84 00  nop         word ptr [rax+rax+0000000000000000h]
                    00 00 00 00
  0000000000000040: 41 0F B6 09        movzx       ecx,byte ptr [r9]
  0000000000000044: 49 FF C0           inc         r8
  0000000000000047: 4D 8D 49 02        lea         r9,[r9+2]
  000000000000004B: 41 88 48 FF        mov         byte ptr [r8-1],cl
  000000000000004F: FF C8              dec         eax
  0000000000000051: 75 ED              jne         0000000000000040
  0000000000000053: 41 C6 00 00        mov         byte ptr [r8],0
  0000000000000057: C3                 ret

?GetMaxPower@TFtE2Data@@QEAAHXZ (public: int __cdecl TFtE2Data::GetMaxPower(void)):
  0000000000000000: 0F B6 41 11        movzx       eax,byte ptr [rcx+11h]
  0000000000000004: 03 C0              add         eax,eax
  0000000000000006: C3                 ret

?GetOptions@TFtE2Data@@QEAAGXZ (public: unsigned short __cdecl TFtE2Data::GetOptions(void)):
  0000000000000000: 44 8B 81 3C 08 00  mov         r8d,dword ptr [rcx+000000000000083Ch]
                    00
  0000000000000007: 41 0F BE 54 08 08  movsx       edx,byte ptr [r8+rcx+8]
  000000000000000D: 44 03 C2           add         r8d,edx
  0000000000000010: 41 0F BE 54 08 08  movsx       edx,byte ptr [r8+rcx+8]
  0000000000000016: 41 03 D0           add         edx,r8d
  0000000000000019: 0F B7 44 0A 08     movzx       eax,word ptr [rdx+rcx+8]
  000000000000001E: C3                 ret

?GetProductId@TFtE2Data@@QEAAGXZ (public: unsigned short __cdecl TFtE2Data::GetProductId(void)):
  0000000000000000: 0F B7 41 0C        movzx       eax,word ptr [rcx+0Ch]
  0000000000000004: C3                 ret

?GetProductString@TFtE2Data@@QEAAXPEAD@Z (public: void __cdecl TFtE2Data::GetProductString(char *)):
  0000000000000000: 83 B9 0C 08 00 00  cmp         dword ptr [rcx+000000000000080Ch],0
                    00
  0000000000000007: 4C 8B C2           mov         r8,rdx
  000000000000000A: 74 04              je          0000000000000010
  000000000000000C: C6 02 00           mov         byte ptr [rdx],0
  000000000000000F: C3                 ret
  0000000000000010: 8B 81 38 08 00 00  mov         eax,dword ptr [rcx+0000000000000838h]
  0000000000000016: 0F B6 54 08 08     movzx       edx,byte ptr [rax+rcx+8]
  000000000000001B: 84 D2              test        dl,dl
  000000000000001D: 74 34              je          0000000000000053
  000000000000001F: 4C 8D 49 0A        lea         r9,[rcx+0Ah]
  0000000000000023: 4C 03 C8           add         r9,rax
  0000000000000026: 0F BE C2           movsx       eax,dl
  0000000000000029: 99                 cdq
  000000000000002A: 2B C2              sub         eax,edx
  000000000000002C: D1 F8              sar         eax,1
  000000000000002E: FF C8              dec         eax
  0000000000000030: 74 21              je          0000000000000053
  0000000000000032: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000036: 66 66 0F 1F 84 00  nop         word ptr [rax+rax+0000000000000000h]
                    00 00 00 00
  0000000000000040: 41 0F B6 09        movzx       ecx,byte ptr [r9]
  0000000000000044: 49 FF C0           inc         r8
  0000000000000047: 4D 8D 49 02        lea         r9,[r9+2]
  000000000000004B: 41 88 48 FF        mov         byte ptr [r8-1],cl
  000000000000004F: FF C8              dec         eax
  0000000000000051: 75 ED              jne         0000000000000040
  0000000000000053: 41 C6 00 00        mov         byte ptr [r8],0
  0000000000000057: C3                 ret

?GetPullDownEnable@TFtE2Data@@QEAA_NXZ (public: bool __cdecl TFtE2Data::GetPullDownEnable(void)):
  0000000000000000: 0F BE 41 12        movsx       eax,byte ptr [rcx+12h]
  0000000000000004: C1 E8 02           shr         eax,2
  0000000000000007: 24 01              and         al,1
  0000000000000009: C3                 ret

?GetRev4@TFtE2Data@@QEAA_NXZ (public: bool __cdecl TFtE2Data::GetRev4(void)):
  0000000000000000: 80 79 0F 04        cmp         byte ptr [rcx+0Fh],4
  0000000000000004: 0F 94 C0           sete        al
  0000000000000007: C3                 ret

?GetSerialNumberEnable@TFtE2Data@@QEAA_NXZ (public: bool __cdecl TFtE2Data::GetSerialNumberEnable(void)):
  0000000000000000: 80 79 0F 04        cmp         byte ptr [rcx+0Fh],4
  0000000000000004: 74 03              je          0000000000000009
  0000000000000006: 32 C0              xor         al,al
  0000000000000008: C3                 ret
  0000000000000009: 0F BE 41 12        movsx       eax,byte ptr [rcx+12h]
  000000000000000D: C1 E8 03           shr         eax,3
  0000000000000010: 24 01              and         al,1
  0000000000000012: C3                 ret

?GetSerialString@TFtE2Data@@QEAAXPEAD@Z (public: void __cdecl TFtE2Data::GetSerialString(char *)):
  0000000000000000: 83 B9 0C 08 00 00  cmp         dword ptr [rcx+000000000000080Ch],0
                    00
  0000000000000007: 4C 8B C2           mov         r8,rdx
  000000000000000A: 74 04              je          0000000000000010
  000000000000000C: C6 02 00           mov         byte ptr [rdx],0
  000000000000000F: C3                 ret
  0000000000000010: 8B 81 3C 08 00 00  mov         eax,dword ptr [rcx+000000000000083Ch]
  0000000000000016: 0F B6 54 08 08     movzx       edx,byte ptr [rax+rcx+8]
  000000000000001B: 84 D2              test        dl,dl
  000000000000001D: 74 34              je          0000000000000053
  000000000000001F: 4C 8D 49 0A        lea         r9,[rcx+0Ah]
  0000000000000023: 4C 03 C8           add         r9,rax
  0000000000000026: 0F BE C2           movsx       eax,dl
  0000000000000029: 99                 cdq
  000000000000002A: 2B C2              sub         eax,edx
  000000000000002C: D1 F8              sar         eax,1
  000000000000002E: FF C8              dec         eax
  0000000000000030: 74 21              je          0000000000000053
  0000000000000032: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000036: 66 66 0F 1F 84 00  nop         word ptr [rax+rax+0000000000000000h]
                    00 00 00 00
  0000000000000040: 41 0F B6 09        movzx       ecx,byte ptr [r9]
  0000000000000044: 49 FF C0           inc         r8
  0000000000000047: 4D 8D 49 02        lea         r9,[r9+2]
  000000000000004B: 41 88 48 FF        mov         byte ptr [r8-1],cl
  000000000000004F: FF C8              dec         eax
  0000000000000051: 75 ED              jne         0000000000000040
  0000000000000053: 41 C6 00 00        mov         byte ptr [r8],0
  0000000000000057: C3                 ret

?GetSerialStringOffset@TFtE2Data@@QEAAIXZ (public: unsigned int __cdecl TFtE2Data::GetSerialStringOffset(void)):
  0000000000000000: 8B 81 3C 08 00 00  mov         eax,dword ptr [rcx+000000000000083Ch]
  0000000000000006: C3                 ret

?GetUSBVersion@TFtE2Data@@QEAAGXZ (public: unsigned short __cdecl TFtE2Data::GetUSBVersion(void)):
  0000000000000000: 80 79 0F 04        cmp         byte ptr [rcx+0Fh],4
  0000000000000004: 74 06              je          000000000000000C
  0000000000000006: B8 10 01 00 00     mov         eax,110h
  000000000000000B: C3                 ret
  000000000000000C: 0F B7 41 14        movzx       eax,word ptr [rcx+14h]
  0000000000000010: C3                 ret

?GetUSBVersionEnable@TFtE2Data@@QEAA_NXZ (public: bool __cdecl TFtE2Data::GetUSBVersionEnable(void)):
  0000000000000000: 80 79 0F 04        cmp         byte ptr [rcx+0Fh],4
  0000000000000004: 74 03              je          0000000000000009
  0000000000000006: 32 C0              xor         al,al
  0000000000000008: C3                 ret
  0000000000000009: 0F BE 41 12        movsx       eax,byte ptr [rcx+12h]
  000000000000000D: C1 E8 04           shr         eax,4
  0000000000000010: 24 01              and         al,1
  0000000000000012: C3                 ret

?GetUserArea@TFtE2Data@@UEAAXPEAEKPEAK@Z (public: virtual void __cdecl TFtE2Data::GetUserArea(unsigned char *,unsigned long,unsigned long *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 48 89 7C 24 18     mov         qword ptr [rsp+18h],rdi
  000000000000000F: 41 56              push        r14
  0000000000000011: 48 83 EC 20        sub         rsp,20h
  0000000000000015: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000018: 4D 8B F1           mov         r14,r9
  000000000000001B: 41 8B D8           mov         ebx,r8d
  000000000000001E: 48 8B FA           mov         rdi,rdx
  0000000000000021: 48 8B F1           mov         rsi,rcx
  0000000000000024: FF 50 18           call        qword ptr [rax+18h]
  0000000000000027: 66 03 C0           add         ax,ax
  000000000000002A: 75 09              jne         0000000000000035
  000000000000002C: 41 C7 06 00 00 00  mov         dword ptr [r14],0
                    00
  0000000000000033: EB 31              jmp         0000000000000066
  0000000000000035: 0F B7 C0           movzx       eax,ax
  0000000000000038: 48 8B CE           mov         rcx,rsi
  000000000000003B: 3B D8              cmp         ebx,eax
  000000000000003D: 0F 47 D8           cmova       ebx,eax
  0000000000000040: 41 89 1E           mov         dword ptr [r14],ebx
  0000000000000043: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000046: FF 50 10           call        qword ptr [rax+10h]
  0000000000000049: 66 03 C0           add         ax,ax
  000000000000004C: 85 DB              test        ebx,ebx
  000000000000004E: 74 16              je          0000000000000066
  0000000000000050: 0F B7 C8           movzx       ecx,ax
  0000000000000053: 66 FF C0           inc         ax
  0000000000000056: 48 8D 7F 01        lea         rdi,[rdi+1]
  000000000000005A: 0F B6 54 31 08     movzx       edx,byte ptr [rcx+rsi+8]
  000000000000005F: 88 57 FF           mov         byte ptr [rdi-1],dl
  0000000000000062: FF CB              dec         ebx
  0000000000000064: 75 EA              jne         0000000000000050
  0000000000000066: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000006B: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000070: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  0000000000000075: 48 83 C4 20        add         rsp,20h
  0000000000000079: 41 5E              pop         r14
  000000000000007B: C3                 ret

?GetUserAreaOffset@TFtE2Data@@UEAAGXZ (public: virtual unsigned short __cdecl TFtE2Data::GetUserAreaOffset(void)):
  0000000000000000: 44 8B 81 3C 08 00  mov         r8d,dword ptr [rcx+000000000000083Ch]
                    00
  0000000000000007: 41 0F BE 54 08 08  movsx       edx,byte ptr [r8+rcx+8]
  000000000000000D: 44 03 C2           add         r8d,edx
  0000000000000010: 41 0F BE 44 08 08  movsx       eax,byte ptr [r8+rcx+8]
  0000000000000016: 83 C0 02           add         eax,2
  0000000000000019: 41 03 C0           add         eax,r8d
  000000000000001C: 3B 81 40 08 00 00  cmp         eax,dword ptr [rcx+0000000000000840h]
  0000000000000022: 73 03              jae         0000000000000027
  0000000000000024: D1 E8              shr         eax,1
  0000000000000026: C3                 ret
  0000000000000027: 33 C0              xor         eax,eax
  0000000000000029: C3                 ret

?GetUserAreaSize@TFtE2Data@@UEAAGXZ (public: virtual unsigned short __cdecl TFtE2Data::GetUserAreaSize(void)):
  0000000000000000: 44 8B 81 3C 08 00  mov         r8d,dword ptr [rcx+000000000000083Ch]
                    00
  0000000000000007: 8B 81 40 08 00 00  mov         eax,dword ptr [rcx+0000000000000840h]
  000000000000000D: 41 0F BE 54 08 08  movsx       edx,byte ptr [r8+rcx+8]
  0000000000000013: 44 03 C2           add         r8d,edx
  0000000000000016: 45 0F BE 4C 08 08  movsx       r9d,byte ptr [r8+rcx+8]
  000000000000001C: 41 83 C1 02        add         r9d,2
  0000000000000020: 45 03 C8           add         r9d,r8d
  0000000000000023: 44 3B C8           cmp         r9d,eax
  0000000000000026: 73 0F              jae         0000000000000037
  0000000000000028: 41 D1 E9           shr         r9d,1
  000000000000002B: 66 45 85 C9        test        r9w,r9w
  000000000000002F: 74 06              je          0000000000000037
  0000000000000031: D1 E8              shr         eax,1
  0000000000000033: 41 2B C1           sub         eax,r9d
  0000000000000036: C3                 ret
  0000000000000037: 33 C0              xor         eax,eax
  0000000000000039: C3                 ret

?GetVendorId@TFtE2Data@@QEAAGXZ (public: unsigned short __cdecl TFtE2Data::GetVendorId(void)):
  0000000000000000: 0F B7 41 0A        movzx       eax,word ptr [rcx+0Ah]
  0000000000000004: C3                 ret

?IsValid@TFtE2Data@@QEAAHXZ (public: int __cdecl TFtE2Data::IsValid(void)):
  0000000000000000: B8 01 00 00 00     mov         eax,1
  0000000000000005: C3                 ret

?Read@TFtE2Data@@UEAAHXZ (public: virtual int __cdecl TFtE2Data::Read(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 83 C1 08        add         rcx,8
  000000000000000D: E8 00 00 00 00     call        ?Read@TEeData@@QEAAHXZ
  0000000000000012: 0F BE 53 16        movsx       edx,byte ptr [rbx+16h]
  0000000000000016: 83 E2 7F           and         edx,7Fh
  0000000000000019: 89 93 34 08 00 00  mov         dword ptr [rbx+834h],edx
  000000000000001F: 0F BE 53 18        movsx       edx,byte ptr [rbx+18h]
  0000000000000023: 83 E2 7F           and         edx,7Fh
  0000000000000026: 89 93 38 08 00 00  mov         dword ptr [rbx+838h],edx
  000000000000002C: 0F BE 53 1A        movsx       edx,byte ptr [rbx+1Ah]
  0000000000000030: 83 E2 7F           and         edx,7Fh
  0000000000000033: 89 93 3C 08 00 00  mov         dword ptr [rbx+83Ch],edx
  0000000000000039: 48 83 C4 20        add         rsp,20h
  000000000000003D: 5B                 pop         rbx
  000000000000003E: C3                 ret

?SetChecksum@TFtE2Data@@UEAAXXZ (public: virtual void __cdecl TFtE2Data::SetChecksum(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 8B 81 40 08 00 00  mov         eax,dword ptr [rcx+0000000000000840h]
  000000000000000B: 45 33 C0           xor         r8d,r8d
  000000000000000E: 48 8D 51 08        lea         rdx,[rcx+8]
  0000000000000012: 48 8D 59 08        lea         rbx,[rcx+8]
  0000000000000016: 41 B9 AA AA 00 00  mov         r9d,0AAAAh
  000000000000001C: 4C 8B D1           mov         r10,rcx
  000000000000001F: 48 03 D8           add         rbx,rax
  0000000000000022: 66 44 89 89 30 08  mov         word ptr [rcx+0000000000000830h],r9w
                    00 00
  000000000000002A: 4C 8B DB           mov         r11,rbx
  000000000000002D: 4C 2B DA           sub         r11,rdx
  0000000000000030: 49 FF C3           inc         r11
  0000000000000033: 49 D1 EB           shr         r11,1
  0000000000000036: 48 3B D3           cmp         rdx,rbx
  0000000000000039: 4D 0F 47 D8        cmova       r11,r8
  000000000000003D: 4D 85 DB           test        r11,r11
  0000000000000040: 74 35              je          0000000000000077
  0000000000000042: 0F B7 0A           movzx       ecx,word ptr [rdx]
  0000000000000045: 49 FF C0           inc         r8
  0000000000000048: 48 8D 52 02        lea         rdx,[rdx+2]
  000000000000004C: 66 41 33 C9        xor         cx,r9w
  0000000000000050: 0F B7 C1           movzx       eax,cx
  0000000000000053: 66 03 C9           add         cx,cx
  0000000000000056: 66 C1 E8 0F        shr         ax,0Fh
  000000000000005A: 66 0B C8           or          cx,ax
  000000000000005D: 44 0F B7 C9        movzx       r9d,cx
  0000000000000061: 66 41 89 8A 30 08  mov         word ptr [r10+0000000000000830h],cx
                    00 00
  0000000000000069: 4D 3B C3           cmp         r8,r11
  000000000000006C: 72 D4              jb          0000000000000042
  000000000000006E: 66 89 0B           mov         word ptr [rbx],cx
  0000000000000071: 48 8B 5C 24 08     mov         rbx,qword ptr [rsp+8]
  0000000000000076: C3                 ret
  0000000000000077: 66 44 89 0B        mov         word ptr [rbx],r9w
  000000000000007B: 48 8B 5C 24 08     mov         rbx,qword ptr [rsp+8]
  0000000000000080: C3                 ret

?StrCopyToDescStr@TFtE2Data@@QEAAXPEAD0@Z (public: void __cdecl TFtE2Data::StrCopyToDescStr(char *,char *)):
  0000000000000000: 48 83 C8 FF        or          rax,0FFFFFFFFFFFFFFFFh
  0000000000000004: 48 FF C0           inc         rax
  0000000000000007: 41 80 3C 00 00     cmp         byte ptr [r8+rax],0
  000000000000000C: 75 F6              jne         0000000000000004
  000000000000000E: 8D 48 01           lea         ecx,[rax+1]
  0000000000000011: C6 42 01 03        mov         byte ptr [rdx+1],3
  0000000000000015: 48 83 C2 02        add         rdx,2
  0000000000000019: 02 C9              add         cl,cl
  000000000000001B: 88 4A FE           mov         byte ptr [rdx-2],cl
  000000000000001E: 85 C0              test        eax,eax
  0000000000000020: 74 22              je          0000000000000044
  0000000000000022: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000026: 66 66 0F 1F 84 00  nop         word ptr [rax+rax+0000000000000000h]
                    00 00 00 00
  0000000000000030: 41 0F BE 08        movsx       ecx,byte ptr [r8]
  0000000000000034: 48 8D 52 02        lea         rdx,[rdx+2]
  0000000000000038: 4D 8D 40 01        lea         r8,[r8+1]
  000000000000003C: 66 89 4A FE        mov         word ptr [rdx-2],cx
  0000000000000040: FF C8              dec         eax
  0000000000000042: 75 EC              jne         0000000000000030
  0000000000000044: C3                 ret

?AddDevice@@YAPEAUft_private_vars@@XZ (struct ft_private_vars * __cdecl AddDevice(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: B9 B0 00 00 00     mov         ecx,0B0h
  000000000000000B: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  0000000000000011: 48 8B D8           mov         rbx,rax
  0000000000000014: 48 85 C0           test        rax,rax
  0000000000000017: 75 06              jne         000000000000001F
  0000000000000019: 48 83 C4 20        add         rsp,20h
  000000000000001D: 5B                 pop         rbx
  000000000000001E: C3                 ret
  000000000000001F: 33 D2              xor         edx,edx
  0000000000000021: 41 B8 B0 00 00 00  mov         r8d,0B0h
  0000000000000027: 48 8B C8           mov         rcx,rax
  000000000000002A: E8 00 00 00 00     call        memset
  000000000000002F: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 03              je          000000000000003E
  000000000000003B: 48 89 03           mov         qword ptr [rbx],rax
  000000000000003E: 48 89 1D 00 00 00  mov         qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA],rbx
                    00
  0000000000000045: 48 8B C3           mov         rax,rbx
  0000000000000048: 48 83 C4 20        add         rsp,20h
  000000000000004C: 5B                 pop         rbx
  000000000000004D: C3                 ret

?CreateDeviceInfoList@@YAKPEAK@Z (unsigned long __cdecl CreateDeviceInfoList(unsigned long *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 41 55              push        r13
  0000000000000005: 48 81 EC A0 00 00  sub         rsp,0A0h
                    00
  000000000000000C: 33 DB              xor         ebx,ebx
  000000000000000E: 4C 8B E9           mov         r13,rcx
  0000000000000011: 8B EB              mov         ebp,ebx
  0000000000000013: 89 9C 24 C0 00 00  mov         dword ptr [rsp+0C0h],ebx
                    00
  000000000000001A: 48 85 C9           test        rcx,rcx
  000000000000001D: 75 0F              jne         000000000000002E
  000000000000001F: 8D 41 06           lea         eax,[rcx+6]
  0000000000000022: 48 81 C4 A0 00 00  add         rsp,0A0h
                    00
  0000000000000029: 41 5D              pop         r13
  000000000000002B: 5D                 pop         rbp
  000000000000002C: 5B                 pop         rbx
  000000000000002D: C3                 ret
  000000000000002E: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?pgAttachedList@@3PEAU_ft_device_list_info_node@@EA]
                    00
  0000000000000035: 4C 89 BC 24 80 00  mov         qword ptr [rsp+80h],r15
                    00 00
  000000000000003D: 48 85 C9           test        rcx,rcx
  0000000000000040: 74 0D              je          000000000000004F
  0000000000000042: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  0000000000000048: 48 89 1D 00 00 00  mov         qword ptr [?pgAttachedList@@3PEAU_ft_device_list_info_node@@EA],rbx
                    00
  000000000000004F: 89 1D 00 00 00 00  mov         dword ptr [?dwNumberOfAttachedDevices@@3KA],ebx
  0000000000000055: 48 8D 0D 00 00 00  lea         rcx,[GUID_CLASS_FT_BULK]
                    00
  000000000000005C: 41 B9 12 00 00 00  mov         r9d,12h
  0000000000000062: 45 33 C0           xor         r8d,r8d
  0000000000000065: 33 D2              xor         edx,edx
  0000000000000067: 4C 89 A4 24 90 00  mov         qword ptr [rsp+90h],r12
                    00 00
  000000000000006F: 41 89 5D 00        mov         dword ptr [r13],ebx
  0000000000000073: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetClassDevsA]
  0000000000000079: 4C 8B F8           mov         r15,rax
  000000000000007C: 48 85 C0           test        rax,rax
  000000000000007F: 75 09              jne         000000000000008A
  0000000000000081: 41 8D 47 02        lea         eax,[r15+2]
  0000000000000085: E9 79 03 00 00     jmp         0000000000000403
  000000000000008A: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  000000000000008E: 75 0A              jne         000000000000009A
  0000000000000090: B8 12 00 00 00     mov         eax,12h
  0000000000000095: E9 69 03 00 00     jmp         0000000000000403
  000000000000009A: 48 8D 44 24 40     lea         rax,[rsp+40h]
  000000000000009F: 4C 8D 05 00 00 00  lea         r8,[GUID_CLASS_FT_BULK]
                    00
  00000000000000A6: 45 33 C9           xor         r9d,r9d
  00000000000000A9: 33 D2              xor         edx,edx
  00000000000000AB: 49 8B CF           mov         rcx,r15
  00000000000000AE: 48 89 B4 24 D8 00  mov         qword ptr [rsp+0D8h],rsi
                    00 00
  00000000000000B6: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000BB: C7 44 24 40 20 00  mov         dword ptr [rsp+40h],20h
                    00 00
  00000000000000C3: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInterfaces]
  00000000000000C9: 85 C0              test        eax,eax
  00000000000000CB: 74 28              je          00000000000000F5
  00000000000000CD: 0F 1F 00           nop         dword ptr [rax]
  00000000000000D0: 48 8D 44 24 40     lea         rax,[rsp+40h]
  00000000000000D5: FF C5              inc         ebp
  00000000000000D7: 4C 8D 05 00 00 00  lea         r8,[GUID_CLASS_FT_BULK]
                    00
  00000000000000DE: 33 D2              xor         edx,edx
  00000000000000E0: 49 8B CF           mov         rcx,r15
  00000000000000E3: 44 8B CD           mov         r9d,ebp
  00000000000000E6: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000EB: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInterfaces]
  00000000000000F1: 85 C0              test        eax,eax
  00000000000000F3: 75 DB              jne         00000000000000D0
  00000000000000F5: 8B C5              mov         eax,ebp
  00000000000000F7: 89 2D 00 00 00 00  mov         dword ptr [?dwNumberOfAttachedDevices@@3KA],ebp
  00000000000000FD: 48 6B C8 68        imul        rcx,rax,68h
  0000000000000101: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  0000000000000107: 48 8B F0           mov         rsi,rax
  000000000000010A: 48 89 05 00 00 00  mov         qword ptr [?pgAttachedList@@3PEAU_ft_device_list_info_node@@EA],rax
                    00
  0000000000000111: 48 85 C0           test        rax,rax
  0000000000000114: 75 11              jne         0000000000000127
  0000000000000116: 49 8B CF           mov         rcx,r15
  0000000000000119: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  000000000000011F: 8D 46 05           lea         eax,[rsi+5]
  0000000000000122: E9 D4 02 00 00     jmp         00000000000003FB
  0000000000000127: 4C 89 B4 24 88 00  mov         qword ptr [rsp+88h],r14
                    00 00
  000000000000012F: 44 8B F3           mov         r14d,ebx
  0000000000000132: 85 ED              test        ebp,ebp
  0000000000000134: 0F 84 AA 02 00 00  je          00000000000003E4
  000000000000013A: 48 89 BC 24 98 00  mov         qword ptr [rsp+98h],rdi
                    00 00
  0000000000000142: 41 BC 02 00 00 00  mov         r12d,2
  0000000000000148: 48 8D 78 10        lea         rdi,[rax+10h]
  000000000000014C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000150: 48 8D 94 24 D0 00  lea         rdx,[rsp+0D0h]
                    00 00
  0000000000000158: 41 8B CE           mov         ecx,r14d
  000000000000015B: E8 00 00 00 00     call        FT_Open
  0000000000000160: 85 C0              test        eax,eax
  0000000000000162: 0F 85 04 01 00 00  jne         000000000000026C
  0000000000000168: 89 1E              mov         dword ptr [rsi],ebx
  000000000000016A: 8B C3              mov         eax,ebx
  000000000000016C: 48 8B 9C 24 D0 00  mov         rbx,qword ptr [rsp+0D0h]
                    00 00
  0000000000000174: 66 83 BB A8 00 00  cmp         word ptr [rbx+0A8h],40h
                    00 40
  000000000000017C: 41 0F 47 C4        cmova       eax,r12d
  0000000000000180: 33 C9              xor         ecx,ecx
  0000000000000182: 89 06              mov         dword ptr [rsi],eax
  0000000000000184: 8B 43 3C           mov         eax,dword ptr [rbx+3Ch]
  0000000000000187: 89 47 F4           mov         dword ptr [rdi-0Ch],eax
  000000000000018A: 8B 43 40           mov         eax,dword ptr [rbx+40h]
  000000000000018D: 89 47 F8           mov         dword ptr [rdi-8],eax
  0000000000000190: 0F 10 43 48        movups      xmm0,xmmword ptr [rbx+48h]
  0000000000000194: 0F 11 07           movups      xmmword ptr [rdi],xmm0
  0000000000000197: 0F 10 43 58        movups      xmm0,xmmword ptr [rbx+58h]
  000000000000019B: 0F 11 47 10        movups      xmmword ptr [rdi+10h],xmm0
  000000000000019F: 0F 10 4B 68        movups      xmm1,xmmword ptr [rbx+68h]
  00000000000001A3: 0F 11 4F 20        movups      xmmword ptr [rdi+20h],xmm1
  00000000000001A7: 0F 10 43 78        movups      xmm0,xmmword ptr [rbx+78h]
  00000000000001AB: 0F 11 47 30        movups      xmmword ptr [rdi+30h],xmm0
  00000000000001AF: 0F 10 8B 88 00 00  movups      xmm1,xmmword ptr [rbx+88h]
                    00
  00000000000001B6: 0F 11 4F 40        movups      xmmword ptr [rdi+40h],xmm1
  00000000000001BA: 48 89 4F 50        mov         qword ptr [rdi+50h],rcx
  00000000000001BE: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  00000000000001C5: 48 85 C0           test        rax,rax
  00000000000001C8: 0F 84 91 00 00 00  je          000000000000025F
  00000000000001CE: 66 90              xchg        ax,ax
  00000000000001D0: 48 3B C3           cmp         rax,rbx
  00000000000001D3: 74 18              je          00000000000001ED
  00000000000001D5: 48 8B 00           mov         rax,qword ptr [rax]
  00000000000001D8: 48 85 C0           test        rax,rax
  00000000000001DB: 75 F3              jne         00000000000001D0
  00000000000001DD: 89 4F FC           mov         dword ptr [rdi-4],ecx
  00000000000001E0: 48 8B CB           mov         rcx,rbx
  00000000000001E3: E8 00 00 00 00     call        FT_Close
  00000000000001E8: E9 E0 00 00 00     jmp         00000000000002CD
  00000000000001ED: 48 8B 43 30        mov         rax,qword ptr [rbx+30h]
  00000000000001F1: 48 89 4C 24 38     mov         qword ptr [rsp+38h],rcx
  00000000000001F6: 48 8D 8C 24 C8 00  lea         rcx,[rsp+0C8h]
                    00 00
  00000000000001FE: 8B 90 A4 00 00 00  mov         edx,dword ptr [rax+0A4h]
  0000000000000204: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  0000000000000209: 48 8D 8C 24 C0 00  lea         rcx,[rsp+0C0h]
                    00 00
  0000000000000211: C7 44 24 28 04 00  mov         dword ptr [rsp+28h],4
                    00 00
  0000000000000219: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  000000000000021E: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  0000000000000222: 4C 8D 84 24 C0 00  lea         r8,[rsp+0C0h]
                    00 00
  000000000000022A: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000230: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000236: B9 04 00 00 00     mov         ecx,4
  000000000000023B: 85 C0              test        eax,eax
  000000000000023D: B8 00 00 00 00     mov         eax,0
  0000000000000242: 0F 45 C8           cmovne      ecx,eax
  0000000000000245: 85 C9              test        ecx,ecx
  0000000000000247: 75 14              jne         000000000000025D
  0000000000000249: 8B 84 24 C0 00 00  mov         eax,dword ptr [rsp+0C0h]
                    00
  0000000000000250: 48 8B CB           mov         rcx,rbx
  0000000000000253: 89 47 FC           mov         dword ptr [rdi-4],eax
  0000000000000256: E8 00 00 00 00     call        FT_Close
  000000000000025B: EB 70              jmp         00000000000002CD
  000000000000025D: 33 C9              xor         ecx,ecx
  000000000000025F: 89 4F FC           mov         dword ptr [rdi-4],ecx
  0000000000000262: 48 8B CB           mov         rcx,rbx
  0000000000000265: E8 00 00 00 00     call        FT_Close
  000000000000026A: EB 61              jmp         00000000000002CD
  000000000000026C: 33 D2              xor         edx,edx
  000000000000026E: 48 8B CE           mov         rcx,rsi
  0000000000000271: 44 8D 42 68        lea         r8d,[rdx+68h]
  0000000000000275: E8 00 00 00 00     call        memset
  000000000000027A: 4C 8D 44 24 60     lea         r8,[rsp+60h]
  000000000000027F: 41 8B D6           mov         edx,r14d
  0000000000000282: 49 8B CF           mov         rcx,r15
  0000000000000285: C7 44 24 60 20 00  mov         dword ptr [rsp+60h],20h
                    00 00
  000000000000028D: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInfo]
  0000000000000293: 85 C0              test        eax,eax
  0000000000000295: 0F 84 3F 01 00 00  je          00000000000003DA
  000000000000029B: 48 8B 1D 00 00 00  mov         rbx,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  00000000000002A2: 48 85 DB           test        rbx,rbx
  00000000000002A5: 74 19              je          00000000000002C0
  00000000000002A7: 8B 44 24 74        mov         eax,dword ptr [rsp+74h]
  00000000000002AB: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  00000000000002B0: 39 83 A0 00 00 00  cmp         dword ptr [rbx+0A0h],eax
  00000000000002B6: 74 33              je          00000000000002EB
  00000000000002B8: 48 8B 1B           mov         rbx,qword ptr [rbx]
  00000000000002BB: 48 85 DB           test        rbx,rbx
  00000000000002BE: 75 F0              jne         00000000000002B0
  00000000000002C0: C7 06 01 00 00 00  mov         dword ptr [rsi],1
  00000000000002C6: C7 47 F4 03 00 00  mov         dword ptr [rdi-0Ch],3
                    00
  00000000000002CD: 41 FF C6           inc         r14d
  00000000000002D0: 48 83 C6 68        add         rsi,68h
  00000000000002D4: 48 83 C7 68        add         rdi,68h
  00000000000002D8: BB 00 00 00 00     mov         ebx,0
  00000000000002DD: 44 3B F5           cmp         r14d,ebp
  00000000000002E0: 0F 82 6A FE FF FF  jb          0000000000000150
  00000000000002E6: E9 F1 00 00 00     jmp         00000000000003DC
  00000000000002EB: 48 85 DB           test        rbx,rbx
  00000000000002EE: 74 D0              je          00000000000002C0
  00000000000002F0: C7 06 01 00 00 00  mov         dword ptr [rsi],1
  00000000000002F6: 8B 43 3C           mov         eax,dword ptr [rbx+3Ch]
  00000000000002F9: 89 47 F4           mov         dword ptr [rdi-0Ch],eax
  00000000000002FC: 8B 43 40           mov         eax,dword ptr [rbx+40h]
  00000000000002FF: 89 47 F8           mov         dword ptr [rdi-8],eax
  0000000000000302: 0F 10 43 48        movups      xmm0,xmmword ptr [rbx+48h]
  0000000000000306: 0F 11 07           movups      xmmword ptr [rdi],xmm0
  0000000000000309: 0F 10 43 58        movups      xmm0,xmmword ptr [rbx+58h]
  000000000000030D: 0F 11 47 10        movups      xmmword ptr [rdi+10h],xmm0
  0000000000000311: 0F 10 4B 68        movups      xmm1,xmmword ptr [rbx+68h]
  0000000000000315: 0F 11 4F 20        movups      xmmword ptr [rdi+20h],xmm1
  0000000000000319: 0F 10 43 78        movups      xmm0,xmmword ptr [rbx+78h]
  000000000000031D: 0F 11 47 30        movups      xmmword ptr [rdi+30h],xmm0
  0000000000000321: 0F 10 8B 88 00 00  movups      xmm1,xmmword ptr [rbx+88h]
                    00
  0000000000000328: 0F 11 4F 40        movups      xmmword ptr [rdi+40h],xmm1
  000000000000032C: 48 8B 8B 98 00 00  mov         rcx,qword ptr [rbx+98h]
                    00
  0000000000000333: 48 89 4F 50        mov         qword ptr [rdi+50h],rcx
  0000000000000337: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000033E: 48 85 C0           test        rax,rax
  0000000000000341: 74 0D              je          0000000000000350
  0000000000000343: 48 3B C1           cmp         rax,rcx
  0000000000000346: 74 23              je          000000000000036B
  0000000000000348: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000034B: 48 85 C0           test        rax,rax
  000000000000034E: 75 F3              jne         0000000000000343
  0000000000000350: 33 C9              xor         ecx,ecx
  0000000000000352: 89 4F FC           mov         dword ptr [rdi-4],ecx
  0000000000000355: 66 83 BB A8 00 00  cmp         word ptr [rbx+0A8h],40h
                    00 40
  000000000000035D: 0F 86 6A FF FF FF  jbe         00000000000002CD
  0000000000000363: 44 09 26           or          dword ptr [rsi],r12d
  0000000000000366: E9 62 FF FF FF     jmp         00000000000002CD
  000000000000036B: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000036F: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000373: 48 C7 44 24 38 00  mov         qword ptr [rsp+38h],0
                    00 00 00
  000000000000037C: 48 8D 94 24 C8 00  lea         rdx,[rsp+0C8h]
                    00 00
  0000000000000384: 4C 8D 84 24 C0 00  lea         r8,[rsp+0C0h]
                    00 00
  000000000000038C: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000392: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000397: 48 8D 94 24 C0 00  lea         rdx,[rsp+0C0h]
                    00 00
  000000000000039F: C7 44 24 28 04 00  mov         dword ptr [rsp+28h],4
                    00 00
  00000000000003A7: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  00000000000003AC: 8B 90 A4 00 00 00  mov         edx,dword ptr [rax+0A4h]
  00000000000003B2: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000003B8: B9 04 00 00 00     mov         ecx,4
  00000000000003BD: 85 C0              test        eax,eax
  00000000000003BF: B8 00 00 00 00     mov         eax,0
  00000000000003C4: 0F 45 C8           cmovne      ecx,eax
  00000000000003C7: 85 C9              test        ecx,ecx
  00000000000003C9: 75 85              jne         0000000000000350
  00000000000003CB: 8B 84 24 C0 00 00  mov         eax,dword ptr [rsp+0C0h]
                    00
  00000000000003D2: 89 47 FC           mov         dword ptr [rdi-4],eax
  00000000000003D5: E9 7B FF FF FF     jmp         0000000000000355
  00000000000003DA: 8B EB              mov         ebp,ebx
  00000000000003DC: 48 8B BC 24 98 00  mov         rdi,qword ptr [rsp+98h]
                    00 00
  00000000000003E4: 49 8B CF           mov         rcx,r15
  00000000000003E7: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  00000000000003ED: 4C 8B B4 24 88 00  mov         r14,qword ptr [rsp+88h]
                    00 00
  00000000000003F5: 41 89 6D 00        mov         dword ptr [r13],ebp
  00000000000003F9: 33 C0              xor         eax,eax
  00000000000003FB: 48 8B B4 24 D8 00  mov         rsi,qword ptr [rsp+0D8h]
                    00 00
  0000000000000403: 4C 8B A4 24 90 00  mov         r12,qword ptr [rsp+90h]
                    00 00
  000000000000040B: 4C 8B BC 24 80 00  mov         r15,qword ptr [rsp+80h]
                    00 00
  0000000000000413: 48 81 C4 A0 00 00  add         rsp,0A0h
                    00
  000000000000041A: 41 5D              pop         r13
  000000000000041C: 5D                 pop         rbp
  000000000000041D: 5B                 pop         rbx
  000000000000041E: C3                 ret

?FT_GetPacketSize@@YAKPEAXPEAG@Z (unsigned long __cdecl FT_GetPacketSize(void *,unsigned short *)):
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000048: C7 44 24 28 02 00  mov         dword ptr [rsp+28h],2
                    00 00
  0000000000000050: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000055: 8B 90 C4 01 00 00  mov         edx,dword ptr [rax+1C4h]
  000000000000005B: 45 33 C0           xor         r8d,r8d
  000000000000005E: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000064: B9 04 00 00 00     mov         ecx,4
  0000000000000069: 85 C0              test        eax,eax
  000000000000006B: 0F 45 CB           cmovne      ecx,ebx
  000000000000006E: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000073: 8B C1              mov         eax,ecx
  0000000000000075: 48 83 C4 48        add         rsp,48h
  0000000000000079: C3                 ret

?FT_W32_OpenFile@@YAPEAXKKKPEAU_SECURITY_ATTRIBUTES@@KKPEAX@Z (void * __cdecl FT_W32_OpenFile(unsigned long,unsigned long,unsigned long,struct _SECURITY_ATTRIBUTES *,unsigned long,unsigned long,void *)):
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000000A: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  000000000000000E: 55                 push        rbp
  000000000000000F: 41 54              push        r12
  0000000000000011: 41 55              push        r13
  0000000000000013: 41 56              push        r14
  0000000000000015: 41 57              push        r15
  0000000000000017: 48 8D 6C 24 E1     lea         rbp,[rsp-1Fh]
  000000000000001C: 48 81 EC 00 01 00  sub         rsp,100h
                    00
  0000000000000023: 45 33 FF           xor         r15d,r15d
  0000000000000026: 4D 8B E1           mov         r12,r9
  0000000000000029: 45 8B E8           mov         r13d,r8d
  000000000000002C: 8B DA              mov         ebx,edx
  000000000000002E: 44 8B F1           mov         r14d,ecx
  0000000000000031: 44 89 7C 24 44     mov         dword ptr [rsp+44h],r15d
  0000000000000036: 41 8B FF           mov         edi,r15d
  0000000000000039: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  000000000000003E: 85 C0              test        eax,eax
  0000000000000040: 75 07              jne         0000000000000049
  0000000000000042: 33 C0              xor         eax,eax
  0000000000000044: E9 8C 02 00 00     jmp         00000000000002D5
  0000000000000049: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  0000000000000050: 83 CA FF           or          edx,0FFFFFFFFh
  0000000000000053: 48 89 B4 24 30 01  mov         qword ptr [rsp+130h],rsi
                    00 00
  000000000000005B: FF 15 00 00 00 00  call        qword ptr [__imp_WaitForSingleObject]
  0000000000000061: 48 8D 0D 00 00 00  lea         rcx,[GUID_CLASS_FT_BULK]
                    00
  0000000000000068: 41 B9 12 00 00 00  mov         r9d,12h
  000000000000006E: 45 33 C0           xor         r8d,r8d
  0000000000000071: 33 D2              xor         edx,edx
  0000000000000073: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetClassDevsA]
  0000000000000079: 48 8B F0           mov         rsi,rax
  000000000000007C: 48 85 C0           test        rax,rax
  000000000000007F: 0F 84 51 01 00 00  je          00000000000001D6
  0000000000000085: 48 8D 44 24 50     lea         rax,[rsp+50h]
  000000000000008A: 4C 8D 05 00 00 00  lea         r8,[GUID_CLASS_FT_BULK]
                    00
  0000000000000091: 45 8B CE           mov         r9d,r14d
  0000000000000094: 33 D2              xor         edx,edx
  0000000000000096: 48 8B CE           mov         rcx,rsi
  0000000000000099: C7 44 24 50 20 00  mov         dword ptr [rsp+50h],20h
                    00 00
  00000000000000A1: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000A6: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInterfaces]
  00000000000000AC: 85 C0              test        eax,eax
  00000000000000AE: 74 76              je          0000000000000126
  00000000000000B0: 48 8D 44 24 44     lea         rax,[rsp+44h]
  00000000000000B5: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  00000000000000BA: 45 33 C9           xor         r9d,r9d
  00000000000000BD: 45 33 C0           xor         r8d,r8d
  00000000000000C0: 48 8B CE           mov         rcx,rsi
  00000000000000C3: 4C 89 7C 24 28     mov         qword ptr [rsp+28h],r15
  00000000000000C8: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000CD: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceInterfaceDetailA]
  00000000000000D3: 8B 5C 24 44        mov         ebx,dword ptr [rsp+44h]
  00000000000000D7: 8B CB              mov         ecx,ebx
  00000000000000D9: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  00000000000000DF: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  00000000000000E4: 44 8B CB           mov         r9d,ebx
  00000000000000E7: 48 8B F8           mov         rdi,rax
  00000000000000EA: C7 00 08 00 00 00  mov         dword ptr [rax],8
  00000000000000F0: 48 8D 44 24 44     lea         rax,[rsp+44h]
  00000000000000F5: 48 8B CE           mov         rcx,rsi
  00000000000000F8: 4C 8B C7           mov         r8,rdi
  00000000000000FB: 4C 89 7C 24 28     mov         qword ptr [rsp+28h],r15
  0000000000000100: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000105: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceInterfaceDetailA]
  000000000000010B: 85 C0              test        eax,eax
  000000000000010D: 75 3A              jne         0000000000000149
  000000000000010F: 48 8B CF           mov         rcx,rdi
  0000000000000112: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  0000000000000118: 48 8B CE           mov         rcx,rsi
  000000000000011B: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  0000000000000121: E9 B0 00 00 00     jmp         00000000000001D6
  0000000000000126: FF 15 00 00 00 00  call        qword ptr [__imp_GetLastError]
  000000000000012C: 3D 03 01 00 00     cmp         eax,103h
  0000000000000131: 74 19              je          000000000000014C
  0000000000000133: 33 C9              xor         ecx,ecx
  0000000000000135: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  000000000000013B: 48 8B CE           mov         rcx,rsi
  000000000000013E: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  0000000000000144: E9 8D 00 00 00     jmp         00000000000001D6
  0000000000000149: 8B 5D 57           mov         ebx,dword ptr [rbp+57h]
  000000000000014C: 4C 8D 45 FF        lea         r8,[rbp-1]
  0000000000000150: 41 8B D6           mov         edx,r14d
  0000000000000153: 48 8B CE           mov         rcx,rsi
  0000000000000156: C7 45 FF 20 00 00  mov         dword ptr [rbp-1],20h
                    00
  000000000000015D: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInfo]
  0000000000000163: 48 8B CE           mov         rcx,rsi
  0000000000000166: 85 C0              test        eax,eax
  0000000000000168: 44 0F 45 7D 13     cmovne      r15d,dword ptr [rbp+13h]
  000000000000016D: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  0000000000000173: 48 85 FF           test        rdi,rdi
  0000000000000176: 74 5E              je          00000000000001D6
  0000000000000178: 83 3D 00 00 00 00  cmp         dword ptr [?gServer2016@@3HA],0
                    00
  000000000000017F: 8B 75 77           mov         esi,dword ptr [rbp+77h]
  0000000000000182: 74 04              je          0000000000000188
  0000000000000184: 0F BA EE 17        bts         esi,17h
  0000000000000188: 48 8B 45 7F        mov         rax,qword ptr [rbp+7Fh]
  000000000000018C: 48 8D 4F 04        lea         rcx,[rdi+4]
  0000000000000190: 4D 8B CC           mov         r9,r12
  0000000000000193: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  0000000000000198: 8B 45 6F           mov         eax,dword ptr [rbp+6Fh]
  000000000000019B: 45 8B C5           mov         r8d,r13d
  000000000000019E: 8B D3              mov         edx,ebx
  00000000000001A0: 89 74 24 28        mov         dword ptr [rsp+28h],esi
  00000000000001A4: 89 44 24 20        mov         dword ptr [rsp+20h],eax
  00000000000001A8: FF 15 00 00 00 00  call        qword ptr [__imp_CreateFileA]
  00000000000001AE: 4C 8B F0           mov         r14,rax
  00000000000001B1: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000001B5: 74 16              je          00000000000001CD
  00000000000001B7: E8 00 00 00 00     call        ?AddDevice@@YAPEAUft_private_vars@@XZ
  00000000000001BC: 48 8B D8           mov         rbx,rax
  00000000000001BF: 48 85 C0           test        rax,rax
  00000000000001C2: 75 26              jne         00000000000001EA
  00000000000001C4: 49 8B CE           mov         rcx,r14
  00000000000001C7: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
  00000000000001CD: 48 8B CF           mov         rcx,rdi
  00000000000001D0: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  00000000000001D6: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  00000000000001DD: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  00000000000001E3: 33 C0              xor         eax,eax
  00000000000001E5: E9 E3 00 00 00     jmp         00000000000002CD
  00000000000001EA: 48 89 78 20        mov         qword ptr [rax+20h],rdi
  00000000000001EE: 4C 89 70 10        mov         qword ptr [rax+10h],r14
  00000000000001F2: 89 70 18           mov         dword ptr [rax+18h],esi
  00000000000001F5: 44 89 B8 A0 00 00  mov         dword ptr [rax+0A0h],r15d
                    00
  00000000000001FC: 48 8D 05 00 00 00  lea         rax,[?Set1Ioctls@@3PAKA]
                    00
  0000000000000203: 33 FF              xor         edi,edi
  0000000000000205: 48 89 43 30        mov         qword ptr [rbx+30h],rax
  0000000000000209: 48 8D 45 AF        lea         rax,[rbp-51h]
  000000000000020D: 4C 8D 4D 9F        lea         r9,[rbp-61h]
  0000000000000211: 4C 8D 45 97        lea         r8,[rbp-69h]
  0000000000000215: 48 8D 54 24 48     lea         rdx,[rsp+48h]
  000000000000021A: 48 8B CB           mov         rcx,rbx
  000000000000021D: 48 89 7C 24 28     mov         qword ptr [rsp+28h],rdi
  0000000000000222: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000227: E8 00 00 00 00     call        FT_GetDeviceInfo
  000000000000022C: 85 C0              test        eax,eax
  000000000000022E: 74 2E              je          000000000000025E
  0000000000000230: 48 8D 05 00 00 00  lea         rax,[?Set2Ioctls@@3PAKA]
                    00
  0000000000000237: 4C 8D 4D 9F        lea         r9,[rbp-61h]
  000000000000023B: 4C 8D 45 97        lea         r8,[rbp-69h]
  000000000000023F: 48 89 43 30        mov         qword ptr [rbx+30h],rax
  0000000000000243: 48 8D 45 AF        lea         rax,[rbp-51h]
  0000000000000247: 48 8D 54 24 48     lea         rdx,[rsp+48h]
  000000000000024C: 48 8B CB           mov         rcx,rbx
  000000000000024F: 48 89 7C 24 28     mov         qword ptr [rsp+28h],rdi
  0000000000000254: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000259: E8 00 00 00 00     call        FT_GetDeviceInfo
  000000000000025E: 8B 44 24 48        mov         eax,dword ptr [rsp+48h]
  0000000000000262: 0F 28 45 9F        movaps      xmm0,xmmword ptr [rbp-61h]
  0000000000000266: 0F 28 4D BF        movaps      xmm1,xmmword ptr [rbp-41h]
  000000000000026A: 89 43 28           mov         dword ptr [rbx+28h],eax
  000000000000026D: 89 43 3C           mov         dword ptr [rbx+3Ch],eax
  0000000000000270: 8B 45 97           mov         eax,dword ptr [rbp-69h]
  0000000000000273: 89 43 40           mov         dword ptr [rbx+40h],eax
  0000000000000276: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  000000000000027B: 48 8B CB           mov         rcx,rbx
  000000000000027E: 0F 11 43 48        movups      xmmword ptr [rbx+48h],xmm0
  0000000000000282: 0F 28 45 AF        movaps      xmm0,xmmword ptr [rbp-51h]
  0000000000000286: 0F 11 43 58        movups      xmmword ptr [rbx+58h],xmm0
  000000000000028A: 0F 28 45 CF        movaps      xmm0,xmmword ptr [rbp-31h]
  000000000000028E: 0F 11 4B 68        movups      xmmword ptr [rbx+68h],xmm1
  0000000000000292: 0F 28 4D DF        movaps      xmm1,xmmword ptr [rbp-21h]
  0000000000000296: 0F 11 43 78        movups      xmmword ptr [rbx+78h],xmm0
  000000000000029A: 0F 11 8B 88 00 00  movups      xmmword ptr [rbx+88h],xmm1
                    00
  00000000000002A1: 48 89 9B 98 00 00  mov         qword ptr [rbx+98h],rbx
                    00
  00000000000002A8: E8 00 00 00 00     call        ?FT_GetPacketSize@@YAKPEAXPEAG@Z
  00000000000002AD: 85 C0              test        eax,eax
  00000000000002AF: 75 0C              jne         00000000000002BD
  00000000000002B1: 0F B7 44 24 40     movzx       eax,word ptr [rsp+40h]
  00000000000002B6: 66 89 83 A8 00 00  mov         word ptr [rbx+0A8h],ax
                    00
  00000000000002BD: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  00000000000002C4: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  00000000000002CA: 48 8B C3           mov         rax,rbx
  00000000000002CD: 48 8B B4 24 30 01  mov         rsi,qword ptr [rsp+130h]
                    00 00
  00000000000002D5: 4C 8D 9C 24 00 01  lea         r11,[rsp+100h]
                    00 00
  00000000000002DD: 49 8B 5B 40        mov         rbx,qword ptr [r11+40h]
  00000000000002E1: 49 8B 7B 48        mov         rdi,qword ptr [r11+48h]
  00000000000002E5: 49 8B E3           mov         rsp,r11
  00000000000002E8: 41 5F              pop         r15
  00000000000002EA: 41 5E              pop         r14
  00000000000002EC: 41 5D              pop         r13
  00000000000002EE: 41 5C              pop         r12
  00000000000002F0: 5D                 pop         rbp
  00000000000002F1: C3                 ret

?FindDevice@@YAPEAUft_private_vars@@K@Z (struct ft_private_vars * __cdecl FindDevice(unsigned long)):
  0000000000000000: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000007: 48 85 C0           test        rax,rax
  000000000000000A: 74 14              je          0000000000000020
  000000000000000C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000010: 39 88 A0 00 00 00  cmp         dword ptr [rax+0A0h],ecx
  0000000000000016: 74 08              je          0000000000000020
  0000000000000018: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001B: 48 85 C0           test        rax,rax
  000000000000001E: 75 F0              jne         0000000000000010
  0000000000000020: C3                 ret

?IsDeviceValid@@YAEPEAUft_private_vars@@@Z (unsigned char __cdecl IsDeviceValid(struct ft_private_vars *)):
  0000000000000000: 48 8B 15 00 00 00  mov         rdx,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000007: 48 85 D2           test        rdx,rdx
  000000000000000A: 74 11              je          000000000000001D
  000000000000000C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000010: 48 3B D1           cmp         rdx,rcx
  0000000000000013: 74 0B              je          0000000000000020
  0000000000000015: 48 8B 12           mov         rdx,qword ptr [rdx]
  0000000000000018: 48 85 D2           test        rdx,rdx
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: 32 C0              xor         al,al
  000000000000001F: C3                 ret
  0000000000000020: B0 01              mov         al,1
  0000000000000022: C3                 ret

?ListClass@@YAKXZ (unsigned long __cdecl ListClass(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 57                 push        rdi
  0000000000000004: 41 54              push        r12
  0000000000000006: 41 56              push        r14
  0000000000000008: 48 81 EC 80 01 00  sub         rsp,180h
                    00
  000000000000000F: 49 83 CC FF        or          r12,0FFFFFFFFFFFFFFFFh
  0000000000000013: BD 10 00 00 00     mov         ebp,10h
  0000000000000018: BF 12 00 00 00     mov         edi,12h
  000000000000001D: 8B C5              mov         eax,ebp
  000000000000001F: 49 8B DC           mov         rbx,r12
  0000000000000022: 48 F7 E5           mul         rax,rbp
  0000000000000025: 49 0F 40 C4        cmovo       rax,r12
  0000000000000029: 48 8B C8           mov         rcx,rax
  000000000000002C: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000031: 4C 8B F0           mov         r14,rax
  0000000000000034: 48 85 C0           test        rax,rax
  0000000000000037: 0F 84 42 02 00 00  je          000000000000027F
  000000000000003D: 48 89 B4 24 B8 01  mov         qword ptr [rsp+1B8h],rsi
                    00 00
  0000000000000045: 4C 89 BC 24 C0 01  mov         qword ptr [rsp+1C0h],r15
                    00 00
  000000000000004D: 45 33 FF           xor         r15d,r15d
  0000000000000050: 4C 8D 8C 24 B0 01  lea         r9,[rsp+1B0h]
                    00 00
  0000000000000058: 48 8D 0D 00 00 00  lea         rcx,[??_C@_03IONNGCBN@USB?$AA@]
                    00
  000000000000005F: 44 8B C5           mov         r8d,ebp
  0000000000000062: 48 8B D0           mov         rdx,rax
  0000000000000065: 4C 89 7C 24 28     mov         qword ptr [rsp+28h],r15
  000000000000006A: 4C 89 7C 24 20     mov         qword ptr [rsp+20h],r15
  000000000000006F: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiClassGuidsFromNameExA]
  0000000000000075: 85 C0              test        eax,eax
  0000000000000077: 75 6C              jne         00000000000000E5
  0000000000000079: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000080: FF 15 00 00 00 00  call        qword ptr [__imp_GetLastError]
  0000000000000086: 83 F8 7A           cmp         eax,7Ah
  0000000000000089: 0F 85 B8 01 00 00  jne         $final$56
  000000000000008F: 49 8B CE           mov         rcx,r14
  0000000000000092: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000097: 8B B4 24 B0 01 00  mov         esi,dword ptr [rsp+1B0h]
                    00
  000000000000009E: 48 8B C5           mov         rax,rbp
  00000000000000A1: 48 F7 E6           mul         rax,rsi
  00000000000000A4: 49 0F 40 C4        cmovo       rax,r12
  00000000000000A8: 48 8B C8           mov         rcx,rax
  00000000000000AB: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000B0: 4C 8B F0           mov         r14,rax
  00000000000000B3: 48 85 C0           test        rax,rax
  00000000000000B6: 0F 84 A2 01 00 00  je          000000000000025E
  00000000000000BC: 4C 8D 8C 24 B0 01  lea         r9,[rsp+1B0h]
                    00 00
  00000000000000C4: 48 8D 0D 00 00 00  lea         rcx,[??_C@_03IONNGCBN@USB?$AA@]
                    00
  00000000000000CB: 44 8B C6           mov         r8d,esi
  00000000000000CE: 48 8B D0           mov         rdx,rax
  00000000000000D1: 4C 89 7C 24 28     mov         qword ptr [rsp+28h],r15
  00000000000000D6: 4C 89 7C 24 20     mov         qword ptr [rsp+20h],r15
  00000000000000DB: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiClassGuidsFromNameExA]
  00000000000000E1: 85 C0              test        eax,eax
  00000000000000E3: 74 9B              je          0000000000000080
  00000000000000E5: 8B 84 24 B0 01 00  mov         eax,dword ptr [rsp+1B0h]
                    00
  00000000000000EC: 85 C0              test        eax,eax
  00000000000000EE: 0F 84 53 01 00 00  je          $final$56
  00000000000000F4: 41 8B F7           mov         esi,r15d
  00000000000000F7: 66 0F 1F 84 00 00  nop         word ptr [rax+rax]
                    00 00 00
  0000000000000100: 4C 89 7C 24 30     mov         qword ptr [rsp+30h],r15
  0000000000000105: 8B EE              mov         ebp,esi
  0000000000000107: 41 B9 02 00 00 00  mov         r9d,2
  000000000000010D: 48 C1 E5 04        shl         rbp,4
  0000000000000111: 45 33 C0           xor         r8d,r8d
  0000000000000114: 33 D2              xor         edx,edx
  0000000000000116: 49 03 EE           add         rbp,r14
  0000000000000119: 4C 89 7C 24 28     mov         qword ptr [rsp+28h],r15
  000000000000011E: 41 8B FF           mov         edi,r15d
  0000000000000121: 48 8B CD           mov         rcx,rbp
  0000000000000124: 4C 89 7C 24 20     mov         qword ptr [rsp+20h],r15
  0000000000000129: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetClassDevsExA]
  000000000000012F: 48 8B D8           mov         rbx,rax
  0000000000000132: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  0000000000000136: 74 32              je          000000000000016A
  0000000000000138: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  000000000000013D: 33 D2              xor         edx,edx
  000000000000013F: 48 8B C8           mov         rcx,rax
  0000000000000142: C7 44 24 40 20 00  mov         dword ptr [rsp+40h],20h
                    00 00
  000000000000014A: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInfo]
  0000000000000150: 85 C0              test        eax,eax
  0000000000000152: 74 16              je          000000000000016A
  0000000000000154: FF C7              inc         edi
  0000000000000156: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  000000000000015B: 48 8B CB           mov         rcx,rbx
  000000000000015E: 8B D7              mov         edx,edi
  0000000000000160: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInfo]
  0000000000000166: 85 C0              test        eax,eax
  0000000000000168: 75 EA              jne         0000000000000154
  000000000000016A: 45 33 C9           xor         r9d,r9d
  000000000000016D: 48 8D 54 24 60     lea         rdx,[rsp+60h]
  0000000000000172: 48 8B CD           mov         rcx,rbp
  0000000000000175: 45 8D 41 20        lea         r8d,[r9+20h]
  0000000000000179: 4C 89 7C 24 28     mov         qword ptr [rsp+28h],r15
  000000000000017E: 4C 89 7C 24 20     mov         qword ptr [rsp+20h],r15
  0000000000000183: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiClassNameFromGuidExA]
  0000000000000189: 85 C0              test        eax,eax
  000000000000018B: 75 16              jne         00000000000001A3
  000000000000018D: 44 8D 40 20        lea         r8d,[rax+20h]
  0000000000000191: 48 8D 15 00 00 00  lea         rdx,[??_C@_01OGPIMHDM@?$DP?$AA@]
                    00
  0000000000000198: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  000000000000019D: FF 15 00 00 00 00  call        qword ptr [__imp_lstrcpynA]
  00000000000001A3: 48 8D 94 24 80 00  lea         rdx,[rsp+80h]
                    00 00
  00000000000001AB: 45 33 C9           xor         r9d,r9d
  00000000000001AE: 41 B8 00 01 00 00  mov         r8d,100h
  00000000000001B4: 48 8B CD           mov         rcx,rbp
  00000000000001B7: 4C 89 7C 24 28     mov         qword ptr [rsp+28h],r15
  00000000000001BC: 4C 89 7C 24 20     mov         qword ptr [rsp+20h],r15
  00000000000001C1: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetClassDescriptionExA]
  00000000000001C7: 85 C0              test        eax,eax
  00000000000001C9: 75 19              jne         00000000000001E4
  00000000000001CB: 48 8D 54 24 60     lea         rdx,[rsp+60h]
  00000000000001D0: 48 8D 8C 24 80 00  lea         rcx,[rsp+80h]
                    00 00
  00000000000001D8: 41 B8 00 01 00 00  mov         r8d,100h
  00000000000001DE: FF 15 00 00 00 00  call        qword ptr [__imp_lstrcpynA]
  00000000000001E4: 85 FF              test        edi,edi
  00000000000001E6: 74 3B              je          0000000000000223
  00000000000001E8: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000001ED: 33 D2              xor         edx,edx
  00000000000001EF: 48 8B CB           mov         rcx,rbx
  00000000000001F2: 41 8B FF           mov         edi,r15d
  00000000000001F5: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInfo]
  00000000000001FB: 85 C0              test        eax,eax
  00000000000001FD: 74 24              je          0000000000000223
  00000000000001FF: 90                 nop
  0000000000000200: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  0000000000000205: 48 8B CB           mov         rcx,rbx
  0000000000000208: E8 00 00 00 00     call        ?Rescan@@YAHPEAXPEAU_SP_DEVINFO_DATA@@@Z
  000000000000020D: FF C7              inc         edi
  000000000000020F: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  0000000000000214: 8B D7              mov         edx,edi
  0000000000000216: 48 8B CB           mov         rcx,rbx
  0000000000000219: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInfo]
  000000000000021F: 85 C0              test        eax,eax
  0000000000000221: 75 DD              jne         0000000000000200
  0000000000000223: 48 83 FB FF        cmp         rbx,0FFFFFFFFFFFFFFFFh
  0000000000000227: 74 0C              je          0000000000000235
  0000000000000229: 48 8B CB           mov         rcx,rbx
  000000000000022C: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  0000000000000232: 49 8B DC           mov         rbx,r12
  0000000000000235: FF C6              inc         esi
  0000000000000237: 3B B4 24 B0 01 00  cmp         esi,dword ptr [rsp+1B0h]
                    00
  000000000000023E: 0F 82 BC FE FF FF  jb          0000000000000100
  0000000000000244: 41 8B FF           mov         edi,r15d
$final$56:
  0000000000000247: 49 8B CE           mov         rcx,r14
  000000000000024A: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  000000000000024F: 48 83 FB FF        cmp         rbx,0FFFFFFFFFFFFFFFFh
  0000000000000253: 74 09              je          000000000000025E
  0000000000000255: 48 8B CB           mov         rcx,rbx
  0000000000000258: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  000000000000025E: 48 8B B4 24 B8 01  mov         rsi,qword ptr [rsp+1B8h]
                    00 00
  0000000000000266: 4C 8B BC 24 C0 01  mov         r15,qword ptr [rsp+1C0h]
                    00 00
  000000000000026E: 8B C7              mov         eax,edi
  0000000000000270: 48 81 C4 80 01 00  add         rsp,180h
                    00
  0000000000000277: 41 5E              pop         r14
  0000000000000279: 41 5C              pop         r12
  000000000000027B: 5F                 pop         rdi
  000000000000027C: 5D                 pop         rbp
  000000000000027D: 5B                 pop         rbx
  000000000000027E: C3                 ret
  000000000000027F: 8B C7              mov         eax,edi
  0000000000000281: 48 81 C4 80 01 00  add         rsp,180h
                    00
  0000000000000288: 41 5E              pop         r14
  000000000000028A: 41 5C              pop         r12
  000000000000028C: 5F                 pop         rdi
  000000000000028D: 5D                 pop         rbp
  000000000000028E: 5B                 pop         rbx
  000000000000028F: C3                 ret

?RemoveDevice@@YAKPEAUft_private_vars@@@Z (unsigned long __cdecl RemoveDevice(struct ft_private_vars *)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 4C 8B C1           mov         r8,rcx
  0000000000000007: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000E: 48 8B D1           mov         rdx,rcx
  0000000000000011: 48 85 C9           test        rcx,rcx
  0000000000000014: 74 10              je          0000000000000026
  0000000000000016: 49 3B C8           cmp         rcx,r8
  0000000000000019: 74 15              je          0000000000000030
  000000000000001B: 48 8B D1           mov         rdx,rcx
  000000000000001E: 48 8B 09           mov         rcx,qword ptr [rcx]
  0000000000000021: 48 85 C9           test        rcx,rcx
  0000000000000024: 75 F0              jne         0000000000000016
  0000000000000026: B8 02 00 00 00     mov         eax,2
  000000000000002B: 48 83 C4 28        add         rsp,28h
  000000000000002F: C3                 ret
  0000000000000030: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000033: 48 3B D1           cmp         rdx,rcx
  0000000000000036: 74 10              je          0000000000000048
  0000000000000038: 48 89 02           mov         qword ptr [rdx],rax
  000000000000003B: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  0000000000000041: 33 C0              xor         eax,eax
  0000000000000043: 48 83 C4 28        add         rsp,28h
  0000000000000047: C3                 ret
  0000000000000048: 48 89 05 00 00 00  mov         qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA],rax
                    00
  000000000000004F: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  0000000000000055: 33 C0              xor         eax,eax
  0000000000000057: 48 83 C4 28        add         rsp,28h
  000000000000005B: C3                 ret

?Rescan@@YAHPEAXPEAU_SP_DEVINFO_DATA@@@Z (int __cdecl Rescan(void *,struct _SP_DEVINFO_DATA *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 81 EC 40 02 00  sub         rsp,240h
                    00
  000000000000000D: 48 8B FA           mov         rdi,rdx
  0000000000000010: 48 8D 94 24 10 01  lea         rdx,[rsp+110h]
                    00 00
  0000000000000018: BB 01 00 00 00     mov         ebx,1
  000000000000001D: C7 84 24 10 01 00  mov         dword ptr [rsp+110h],128h
                    00 28 01 00 00
  0000000000000028: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceInfoListDetailA]
  000000000000002E: 85 C0              test        eax,eax
  0000000000000030: 74 28              je          000000000000005A
  0000000000000032: 48 8B 84 24 28 01  mov         rax,qword ptr [rsp+128h]
                    00 00
  000000000000003A: 8B 4F 14           mov         ecx,dword ptr [rdi+14h]
  000000000000003D: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  0000000000000042: 45 33 C9           xor         r9d,r9d
  0000000000000045: 41 B8 C8 00 00 00  mov         r8d,0C8h
  000000000000004B: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000050: FF 15 00 00 00 00  call        qword ptr [__imp_CM_Get_Device_ID_ExA]
  0000000000000056: 85 C0              test        eax,eax
  0000000000000058: 74 14              je          000000000000006E
  000000000000005A: 48 8D 15 00 00 00  lea         rdx,[??_C@_01OGPIMHDM@?$DP?$AA@]
                    00
  0000000000000061: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000066: FF 15 00 00 00 00  call        qword ptr [__imp_lstrcpyA]
  000000000000006C: 33 DB              xor         ebx,ebx
  000000000000006E: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  0000000000000073: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000078: 41 B8 0D 00 00 00  mov         r8d,0Dh
  000000000000007E: FF 15 00 00 00 00  call        qword ptr [__imp_lstrcpynA]
  0000000000000084: 48 8D 15 00 00 00  lea         rdx,[??_C@_0N@EHFJGMNP@USB?2ROOT_HUB?$AA@]
                    00
  000000000000008B: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000090: FF 15 00 00 00 00  call        qword ptr [__imp_lstrcmpiA]
  0000000000000096: 85 C0              test        eax,eax
  0000000000000098: 75 2F              jne         00000000000000C9
  000000000000009A: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  000000000000009F: 48 8D 8C 24 60 02  lea         rcx,[rsp+260h]
                    00 00
  00000000000000A7: 45 33 C9           xor         r9d,r9d
  00000000000000AA: 45 33 C0           xor         r8d,r8d
  00000000000000AD: FF 15 00 00 00 00  call        qword ptr [__imp_CM_Locate_DevNode_ExA]
  00000000000000B3: 85 C0              test        eax,eax
  00000000000000B5: 75 12              jne         00000000000000C9
  00000000000000B7: 8B 8C 24 60 02 00  mov         ecx,dword ptr [rsp+260h]
                    00
  00000000000000BE: 45 33 C0           xor         r8d,r8d
  00000000000000C1: 33 D2              xor         edx,edx
  00000000000000C3: FF 15 00 00 00 00  call        qword ptr [__imp_CM_Reenumerate_DevNode_Ex]
  00000000000000C9: 8B C3              mov         eax,ebx
  00000000000000CB: 48 8B 9C 24 50 02  mov         rbx,qword ptr [rsp+250h]
                    00 00
  00000000000000D3: 48 81 C4 40 02 00  add         rsp,240h
                    00
  00000000000000DA: 5F                 pop         rdi
  00000000000000DB: C3                 ret

?ResetAttachedList@@YAKXZ (unsigned long __cdecl ResetAttachedList(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?pgAttachedList@@3PEAU_ft_device_list_info_node@@EA]
                    00
  000000000000000B: 48 85 C9           test        rcx,rcx
  000000000000000E: 74 1A              je          000000000000002A
  0000000000000010: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  0000000000000016: 33 C0              xor         eax,eax
  0000000000000018: 48 89 05 00 00 00  mov         qword ptr [?pgAttachedList@@3PEAU_ft_device_list_info_node@@EA],rax
                    00
  000000000000001F: 89 05 00 00 00 00  mov         dword ptr [?dwNumberOfAttachedDevices@@3KA],eax
  0000000000000025: 48 83 C4 28        add         rsp,28h
  0000000000000029: C3                 ret
  000000000000002A: 33 C0              xor         eax,eax
  000000000000002C: 89 05 00 00 00 00  mov         dword ptr [?dwNumberOfAttachedDevices@@3KA],eax
  0000000000000032: 48 83 C4 28        add         rsp,28h
  0000000000000036: C3                 ret

?finaliseGlobals@@YAXXZ (void __cdecl finaliseGlobals(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtDevListLock@@3PEAXEA]
                    00
  000000000000000B: 48 85 C9           test        rcx,rcx
  000000000000000E: 74 06              je          0000000000000016
  0000000000000010: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
  0000000000000016: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  000000000000001D: 48 85 C9           test        rcx,rcx
  0000000000000020: 74 06              je          0000000000000028
  0000000000000022: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
  0000000000000028: 48 8D 0D 00 00 00  lea         rcx,[?gCS@@3U_RTL_CRITICAL_SECTION@@A]
                    00
  000000000000002F: FF 15 00 00 00 00  call        qword ptr [__imp_DeleteCriticalSection]
  0000000000000035: C7 05 00 00 00 00  mov         dword ptr [?gInitialised@@3HA],0
                    00 00 00 00
  000000000000003F: 48 83 C4 28        add         rsp,28h
  0000000000000043: C3                 ret

?initialiseGlobals@@YAHXZ (int __cdecl initialiseGlobals(void)):
  0000000000000000: 48 81 EC C8 00 00  sub         rsp,0C8h
                    00
  0000000000000007: 83 3D 00 00 00 00  cmp         dword ptr [?gInitialised@@3HA],0
                    00
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: B8 01 00 00 00     mov         eax,1
  0000000000000015: 48 81 C4 C8 00 00  add         rsp,0C8h
                    00
  000000000000001C: C3                 ret
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[?gCS@@3U_RTL_CRITICAL_SECTION@@A]
                    00
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__imp_InitializeCriticalSection]
  000000000000002A: 45 33 C0           xor         r8d,r8d
  000000000000002D: 33 D2              xor         edx,edx
  000000000000002F: 33 C9              xor         ecx,ecx
  0000000000000031: FF 15 00 00 00 00  call        qword ptr [__imp_CreateMutexA]
  0000000000000037: 48 8B C8           mov         rcx,rax
  000000000000003A: 48 89 05 00 00 00  mov         qword ptr [?ghFtOpenLock@@3PEAXEA],rax
                    00
  0000000000000041: 48 85 C0           test        rax,rax
  0000000000000044: 74 7D              je          00000000000000C3
  0000000000000046: 45 33 C0           xor         r8d,r8d
  0000000000000049: 33 D2              xor         edx,edx
  000000000000004B: 33 C9              xor         ecx,ecx
  000000000000004D: FF 15 00 00 00 00  call        qword ptr [__imp_CreateMutexA]
  0000000000000053: 48 8B D0           mov         rdx,rax
  0000000000000056: 48 89 05 00 00 00  mov         qword ptr [?ghFtDevListLock@@3PEAXEA],rax
                    00
  000000000000005D: 48 85 C0           test        rax,rax
  0000000000000060: 74 58              je          00000000000000BA
  0000000000000062: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000067: 33 D2              xor         edx,edx
  0000000000000069: 41 B8 9C 00 00 00  mov         r8d,9Ch
  000000000000006F: E8 00 00 00 00     call        memset
  0000000000000074: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000079: C7 44 24 20 9C 00  mov         dword ptr [rsp+20h],9Ch
                    00 00
  0000000000000081: FF 15 00 00 00 00  call        qword ptr [__imp_GetVersionExA]
  0000000000000087: 83 7C 24 24 0A     cmp         dword ptr [rsp+24h],0Ah
  000000000000008C: B8 01 00 00 00     mov         eax,1
  0000000000000091: 75 0F              jne         00000000000000A2
  0000000000000093: 89 05 00 00 00 00  mov         dword ptr [?gServer2016@@3HA],eax
  0000000000000099: 38 84 24 BA 00 00  cmp         byte ptr [rsp+0BAh],al
                    00
  00000000000000A0: 75 61              jne         0000000000000103
  00000000000000A2: C7 05 00 00 00 00  mov         dword ptr [?gServer2016@@3HA],0
                    00 00 00 00
  00000000000000AC: 89 05 00 00 00 00  mov         dword ptr [?gInitialised@@3HA],eax
  00000000000000B2: 48 81 C4 C8 00 00  add         rsp,0C8h
                    00
  00000000000000B9: C3                 ret
  00000000000000BA: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  00000000000000C1: EB 07              jmp         $exit$18
  00000000000000C3: 48 8B 15 00 00 00  mov         rdx,qword ptr [?ghFtDevListLock@@3PEAXEA]
                    00
$exit$18:
  00000000000000CA: 8B 05 00 00 00 00  mov         eax,dword ptr [?gInitialised@@3HA]
  00000000000000D0: 85 C0              test        eax,eax
  00000000000000D2: 75 35              jne         0000000000000109
  00000000000000D4: 48 85 D2           test        rdx,rdx
  00000000000000D7: 74 10              je          00000000000000E9
  00000000000000D9: 48 8B CA           mov         rcx,rdx
  00000000000000DC: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
  00000000000000E2: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  00000000000000E9: 48 85 C9           test        rcx,rcx
  00000000000000EC: 74 06              je          00000000000000F4
  00000000000000EE: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
  00000000000000F4: 48 8D 0D 00 00 00  lea         rcx,[?gCS@@3U_RTL_CRITICAL_SECTION@@A]
                    00
  00000000000000FB: FF 15 00 00 00 00  call        qword ptr [__imp_DeleteCriticalSection]
  0000000000000101: 33 C0              xor         eax,eax
  0000000000000103: 89 05 00 00 00 00  mov         dword ptr [?gInitialised@@3HA],eax
  0000000000000109: 48 81 C4 C8 00 00  add         rsp,0C8h
                    00
  0000000000000110: C3                 ret

?short_to_ascii_hex@@YAXPEADG@Z (void __cdecl short_to_ascii_hex(char *,unsigned short)):
  0000000000000000: 4C 8D 41 03        lea         r8,[rcx+3]
  0000000000000004: 66 85 D2           test        dx,dx
  0000000000000007: 74 30              je          0000000000000039
  0000000000000009: 4C 8D 0D 00 00 00  lea         r9,[??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@]
                    00
  0000000000000010: 0F B7 C2           movzx       eax,dx
  0000000000000013: 25 0F 00 00 80     and         eax,8000000Fh
  0000000000000018: 7D 07              jge         0000000000000021
  000000000000001A: FF C8              dec         eax
  000000000000001C: 83 C8 F0           or          eax,0FFFFFFF0h
  000000000000001F: FF C0              inc         eax
  0000000000000021: 48 63 C8           movsxd      rcx,eax
  0000000000000024: 66 C1 EA 04        shr         dx,4
  0000000000000028: 49 FF C8           dec         r8
  000000000000002B: 42 0F B6 04 09     movzx       eax,byte ptr [rcx+r9]
  0000000000000030: 41 88 40 01        mov         byte ptr [r8+1],al
  0000000000000034: 66 85 D2           test        dx,dx
  0000000000000037: 75 D7              jne         0000000000000010
  0000000000000039: C3                 ret

FT_Close:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 85 C0           test        rax,rax
  0000000000000013: 74 0D              je          0000000000000022
  0000000000000015: 48 3B C1           cmp         rax,rcx
  0000000000000018: 74 13              je          000000000000002D
  000000000000001A: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001D: 48 85 C0           test        rax,rax
  0000000000000020: 75 F3              jne         0000000000000015
  0000000000000022: B8 01 00 00 00     mov         eax,1
  0000000000000027: 48 83 C4 20        add         rsp,20h
  000000000000002B: 5B                 pop         rbx
  000000000000002C: C3                 ret
  000000000000002D: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  0000000000000032: 85 C0              test        eax,eax
  0000000000000034: 75 0B              jne         0000000000000041
  0000000000000036: B8 05 00 00 00     mov         eax,5
  000000000000003B: 48 83 C4 20        add         rsp,20h
  000000000000003F: 5B                 pop         rbx
  0000000000000040: C3                 ret
  0000000000000041: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  0000000000000048: 83 CA FF           or          edx,0FFFFFFFFh
  000000000000004B: FF 15 00 00 00 00  call        qword ptr [__imp_WaitForSingleObject]
  0000000000000051: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  0000000000000055: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
  000000000000005B: 48 8B 4B 20        mov         rcx,qword ptr [rbx+20h]
  000000000000005F: 48 85 C9           test        rcx,rcx
  0000000000000062: 74 0E              je          0000000000000072
  0000000000000064: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  000000000000006A: 48 C7 43 20 00 00  mov         qword ptr [rbx+20h],0
                    00 00
  0000000000000072: 48 8B CB           mov         rcx,rbx
  0000000000000075: E8 00 00 00 00     call        ?RemoveDevice@@YAKPEAUft_private_vars@@@Z
  000000000000007A: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  0000000000000081: 8B D8              mov         ebx,eax
  0000000000000083: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  0000000000000089: 8B C3              mov         eax,ebx
  000000000000008B: 48 83 C4 20        add         rsp,20h
  000000000000008F: 5B                 pop         rbx
  0000000000000090: C3                 ret

FT_ClrDtr:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 90 28 01 00 00  mov         edx,dword ptr [rax+128h]
  000000000000004E: 45 33 C0           xor         r8d,r8d
  0000000000000051: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000055: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000060: B9 04 00 00 00     mov         ecx,4
  0000000000000065: 85 C0              test        eax,eax
  0000000000000067: 0F 45 CB           cmovne      ecx,ebx
  000000000000006A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006F: 8B C1              mov         eax,ecx
  0000000000000071: 48 83 C4 48        add         rsp,48h
  0000000000000075: C3                 ret

FT_ClrRts:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 90 34 01 00 00  mov         edx,dword ptr [rax+134h]
  000000000000004E: 45 33 C0           xor         r8d,r8d
  0000000000000051: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000055: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000060: B9 04 00 00 00     mov         ecx,4
  0000000000000065: 85 C0              test        eax,eax
  0000000000000067: 0F 45 CB           cmovne      ecx,ebx
  000000000000006A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006F: 8B C1              mov         eax,ecx
  0000000000000071: 48 83 C4 48        add         rsp,48h
  0000000000000075: C3                 ret

FT_ComPortCancelIdle:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 90 E0 01 00 00  mov         edx,dword ptr [rax+1E0h]
  000000000000004E: 45 33 C0           xor         r8d,r8d
  0000000000000051: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000055: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000060: B9 04 00 00 00     mov         ecx,4
  0000000000000065: 85 C0              test        eax,eax
  0000000000000067: 0F 45 CB           cmovne      ecx,ebx
  000000000000006A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006F: 8B C1              mov         eax,ecx
  0000000000000071: 48 83 C4 48        add         rsp,48h
  0000000000000075: C3                 ret

FT_ComPortIdle:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 90 DC 01 00 00  mov         edx,dword ptr [rax+1DCh]
  000000000000004E: 45 33 C0           xor         r8d,r8d
  0000000000000051: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000055: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000060: B9 04 00 00 00     mov         ecx,4
  0000000000000065: 85 C0              test        eax,eax
  0000000000000067: 0F 45 CB           cmovne      ecx,ebx
  000000000000006A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006F: 8B C1              mov         eax,ecx
  0000000000000071: 48 83 C4 48        add         rsp,48h
  0000000000000075: C3                 ret

FT_CreateDeviceInfoList:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  000000000000000E: 85 C0              test        eax,eax
  0000000000000010: 75 0B              jne         000000000000001D
  0000000000000012: B8 05 00 00 00     mov         eax,5
  0000000000000017: 48 83 C4 20        add         rsp,20h
  000000000000001B: 5B                 pop         rbx
  000000000000001C: C3                 ret
  000000000000001D: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtDevListLock@@3PEAXEA]
                    00
  0000000000000024: 83 CA FF           or          edx,0FFFFFFFFh
  0000000000000027: FF 15 00 00 00 00  call        qword ptr [__imp_WaitForSingleObject]
  000000000000002D: 48 8B CB           mov         rcx,rbx
  0000000000000030: E8 00 00 00 00     call        ?CreateDeviceInfoList@@YAKPEAK@Z
  0000000000000035: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtDevListLock@@3PEAXEA]
                    00
  000000000000003C: 8B D8              mov         ebx,eax
  000000000000003E: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  0000000000000044: 8B C3              mov         eax,ebx
  0000000000000046: 48 83 C4 20        add         rsp,20h
  000000000000004A: 5B                 pop         rbx
  000000000000004B: C3                 ret

FT_CyclePort:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 50 40           mov         edx,dword ptr [rax+40h]
  000000000000004B: 45 33 C0           xor         r8d,r8d
  000000000000004E: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000052: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000057: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000005D: B9 04 00 00 00     mov         ecx,4
  0000000000000062: 85 C0              test        eax,eax
  0000000000000064: 0F 45 CB           cmovne      ecx,ebx
  0000000000000067: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006C: 8B C1              mov         eax,ecx
  000000000000006E: 48 83 C4 48        add         rsp,48h
  0000000000000072: C3                 ret

FT_EEPROM_Program:
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 30        sub         rsp,30h
  000000000000000F: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000016: 49 8B E9           mov         rbp,r9
  0000000000000019: 48 8B FA           mov         rdi,rdx
  000000000000001C: 48 8B D9           mov         rbx,rcx
  000000000000001F: 48 85 C0           test        rax,rax
  0000000000000022: 74 0D              je          0000000000000031
  0000000000000024: 48 3B C1           cmp         rax,rcx
  0000000000000027: 74 1D              je          0000000000000046
  0000000000000029: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002C: 48 85 C0           test        rax,rax
  000000000000002F: 75 F3              jne         0000000000000024
  0000000000000031: B8 01 00 00 00     mov         eax,1
  0000000000000036: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  000000000000003B: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000040: 48 83 C4 30        add         rsp,30h
  0000000000000044: 5F                 pop         rdi
  0000000000000045: C3                 ret
  0000000000000046: 48 85 D2           test        rdx,rdx
  0000000000000049: 75 15              jne         0000000000000060
  000000000000004B: B8 06 00 00 00     mov         eax,6
  0000000000000050: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000055: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  000000000000005A: 48 83 C4 30        add         rsp,30h
  000000000000005E: 5F                 pop         rdi
  000000000000005F: C3                 ret
  0000000000000060: 8B 02              mov         eax,dword ptr [rdx]
  0000000000000062: 3B 41 28           cmp         eax,dword ptr [rcx+28h]
  0000000000000065: 75 E4              jne         000000000000004B
  0000000000000067: 48 89 74 24 40     mov         qword ptr [rsp+40h],rsi
  000000000000006C: 83 F8 09           cmp         eax,9
  000000000000006F: 0F 87 7F 03 00 00  ja          $LN1
  0000000000000075: 48 8D 15 00 00 00  lea         rdx,[__ImageBase]
                    00
  000000000000007C: 8B 8C 82 00 00 00  mov         ecx,dword ptr $LN77[rdx+rax*4]
                    00
  0000000000000083: 48 03 CA           add         rcx,rdx
  0000000000000086: FF E1              jmp         rcx
$LN36:
  0000000000000088: 41 83 F8 10        cmp         r8d,10h
  000000000000008C: 0F 85 62 03 00 00  jne         $LN1
  0000000000000092: B9 48 08 00 00     mov         ecx,848h
  0000000000000097: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000009C: 48 85 C0           test        rax,rax
  000000000000009F: 74 5B              je          00000000000000FC
  00000000000000A1: 48 8B D3           mov         rdx,rbx
  00000000000000A4: 48 8B C8           mov         rcx,rax
  00000000000000A7: E8 00 00 00 00     call        ??0TFtEE232@@QEAA@PEAUft_private_vars@@@Z
  00000000000000AC: 48 8B F0           mov         rsi,rax
  00000000000000AF: 48 85 C0           test        rax,rax
  00000000000000B2: 74 48              je          00000000000000FC
  00000000000000B4: 48 8B 44 24 70     mov         rax,qword ptr [rsp+70h]
  00000000000000B9: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  00000000000000BE: 4C 8B C5           mov         r8,rbp
  00000000000000C1: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000C6: 48 8B 44 24 68     mov         rax,qword ptr [rsp+68h]
  00000000000000CB: 48 8B D7           mov         rdx,rdi
  00000000000000CE: 48 8B CE           mov         rcx,rsi
  00000000000000D1: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000D6: E8 00 00 00 00     call        ?Program@TFtEE232@@QEAAKPEAXPEAD111@Z
  00000000000000DB: 48 8B CE           mov         rcx,rsi
  00000000000000DE: 8B D8              mov         ebx,eax
  00000000000000E0: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000000E5: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000000EA: 8B C3              mov         eax,ebx
  00000000000000EC: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  00000000000000F1: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  00000000000000F6: 48 83 C4 30        add         rsp,30h
  00000000000000FA: 5F                 pop         rdi
  00000000000000FB: C3                 ret
  00000000000000FC: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000101: BB 05 00 00 00     mov         ebx,5
  0000000000000106: 8B C3              mov         eax,ebx
  0000000000000108: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  000000000000010D: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000112: 48 83 C4 30        add         rsp,30h
  0000000000000116: 5F                 pop         rdi
  0000000000000117: C3                 ret
$LN31:
  0000000000000118: 41 83 F8 1C        cmp         r8d,1Ch
  000000000000011C: 0F 85 D2 02 00 00  jne         $LN1
  0000000000000122: B9 48 08 00 00     mov         ecx,848h
  0000000000000127: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000012C: 48 85 C0           test        rax,rax
  000000000000012F: 74 CB              je          00000000000000FC
  0000000000000131: 48 8B D3           mov         rdx,rbx
  0000000000000134: 48 8B C8           mov         rcx,rax
  0000000000000137: E8 00 00 00 00     call        ??0TFtEE2232@@QEAA@PEAUft_private_vars@@@Z
  000000000000013C: 48 8B F0           mov         rsi,rax
  000000000000013F: 48 85 C0           test        rax,rax
  0000000000000142: 74 B8              je          00000000000000FC
  0000000000000144: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000149: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  000000000000014E: 4C 8B C5           mov         r8,rbp
  0000000000000151: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  0000000000000156: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  000000000000015B: 48 8B D7           mov         rdx,rdi
  000000000000015E: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000163: 48 8B C8           mov         rcx,rax
  0000000000000166: E8 00 00 00 00     call        ?Program@TFtEE2232@@QEAAKPEAXPEAD111@Z
  000000000000016B: 48 8B CE           mov         rcx,rsi
  000000000000016E: 8B D8              mov         ebx,eax
  0000000000000170: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000175: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  000000000000017A: 8B C3              mov         eax,ebx
  000000000000017C: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000181: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000186: 48 83 C4 30        add         rsp,30h
  000000000000018A: 5F                 pop         rdi
  000000000000018B: C3                 ret
$LN26:
  000000000000018C: 41 83 F8 20        cmp         r8d,20h
  0000000000000190: 0F 85 5E 02 00 00  jne         $LN1
  0000000000000196: B9 50 08 00 00     mov         ecx,850h
  000000000000019B: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000001A0: 48 85 C0           test        rax,rax
  00000000000001A3: 0F 84 53 FF FF FF  je          00000000000000FC
  00000000000001A9: 48 8B D3           mov         rdx,rbx
  00000000000001AC: 48 8B C8           mov         rcx,rax
  00000000000001AF: E8 00 00 00 00     call        ??0TFtEE232R@@QEAA@PEAUft_private_vars@@@Z
  00000000000001B4: 48 8B F0           mov         rsi,rax
  00000000000001B7: 48 85 C0           test        rax,rax
  00000000000001BA: 0F 84 3C FF FF FF  je          00000000000000FC
  00000000000001C0: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  00000000000001C5: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  00000000000001CA: 4C 8B C5           mov         r8,rbp
  00000000000001CD: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  00000000000001D2: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  00000000000001D7: 48 8B D7           mov         rdx,rdi
  00000000000001DA: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  00000000000001DF: 48 8B C8           mov         rcx,rax
  00000000000001E2: E8 00 00 00 00     call        ?Program@TFtEE232R@@QEAAKPEAXPEAD111@Z
  00000000000001E7: 48 8B CE           mov         rcx,rsi
  00000000000001EA: 8B D8              mov         ebx,eax
  00000000000001EC: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000001F1: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000001F6: 8B C3              mov         eax,ebx
  00000000000001F8: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  00000000000001FD: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000202: 48 83 C4 30        add         rsp,30h
  0000000000000206: 5F                 pop         rdi
  0000000000000207: C3                 ret
$LN21:
  0000000000000208: 41 83 F8 28        cmp         r8d,28h
  000000000000020C: 0F 85 E2 01 00 00  jne         $LN1
  0000000000000212: B9 48 08 00 00     mov         ecx,848h
  0000000000000217: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000021C: 48 85 C0           test        rax,rax
  000000000000021F: 0F 84 D7 FE FF FF  je          00000000000000FC
  0000000000000225: 48 8B D3           mov         rdx,rbx
  0000000000000228: 48 8B C8           mov         rcx,rax
  000000000000022B: E8 00 00 00 00     call        ??0TFtEE2232H@@QEAA@PEAUft_private_vars@@@Z
  0000000000000230: 48 8B F0           mov         rsi,rax
  0000000000000233: 48 85 C0           test        rax,rax
  0000000000000236: 0F 84 C0 FE FF FF  je          00000000000000FC
  000000000000023C: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000241: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  0000000000000246: 4C 8B C5           mov         r8,rbp
  0000000000000249: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  000000000000024E: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  0000000000000253: 48 8B D7           mov         rdx,rdi
  0000000000000256: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  000000000000025B: 48 8B C8           mov         rcx,rax
  000000000000025E: E8 00 00 00 00     call        ?Program@TFtEE2232H@@QEAAKPEAXPEAD111@Z
  0000000000000263: 48 8B CE           mov         rcx,rsi
  0000000000000266: 8B D8              mov         ebx,eax
  0000000000000268: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  000000000000026D: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000272: 8B C3              mov         eax,ebx
  0000000000000274: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000279: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  000000000000027E: 48 83 C4 30        add         rsp,30h
  0000000000000282: 5F                 pop         rdi
  0000000000000283: C3                 ret
$LN16:
  0000000000000284: 41 83 F8 24        cmp         r8d,24h
  0000000000000288: 0F 85 66 01 00 00  jne         $LN1
  000000000000028E: B9 48 08 00 00     mov         ecx,848h
  0000000000000293: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000298: 48 85 C0           test        rax,rax
  000000000000029B: 0F 84 5B FE FF FF  je          00000000000000FC
  00000000000002A1: 48 8B D3           mov         rdx,rbx
  00000000000002A4: 48 8B C8           mov         rcx,rax
  00000000000002A7: E8 00 00 00 00     call        ??0TFtEE4232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000002AC: 48 8B F0           mov         rsi,rax
  00000000000002AF: 48 85 C0           test        rax,rax
  00000000000002B2: 0F 84 44 FE FF FF  je          00000000000000FC
  00000000000002B8: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  00000000000002BD: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  00000000000002C2: 4C 8B C5           mov         r8,rbp
  00000000000002C5: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  00000000000002CA: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  00000000000002CF: 48 8B D7           mov         rdx,rdi
  00000000000002D2: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  00000000000002D7: 48 8B C8           mov         rcx,rax
  00000000000002DA: E8 00 00 00 00     call        ?Program@TFtEE4232H@@QEAAKPEAXPEAD111@Z
  00000000000002DF: 48 8B CE           mov         rcx,rsi
  00000000000002E2: 8B D8              mov         ebx,eax
  00000000000002E4: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000002E9: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000002EE: 8B C3              mov         eax,ebx
  00000000000002F0: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  00000000000002F5: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  00000000000002FA: 48 83 C4 30        add         rsp,30h
  00000000000002FE: 5F                 pop         rdi
  00000000000002FF: C3                 ret
$LN11:
  0000000000000300: 41 83 F8 2C        cmp         r8d,2Ch
  0000000000000304: 0F 85 EA 00 00 00  jne         $LN1
  000000000000030A: B9 48 08 00 00     mov         ecx,848h
  000000000000030F: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000314: 48 85 C0           test        rax,rax
  0000000000000317: 0F 84 DF FD FF FF  je          00000000000000FC
  000000000000031D: 48 8B D3           mov         rdx,rbx
  0000000000000320: 48 8B C8           mov         rcx,rax
  0000000000000323: E8 00 00 00 00     call        ??0TFtEE232H@@QEAA@PEAUft_private_vars@@@Z
  0000000000000328: 48 8B F0           mov         rsi,rax
  000000000000032B: 48 85 C0           test        rax,rax
  000000000000032E: 0F 84 C8 FD FF FF  je          00000000000000FC
  0000000000000334: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000339: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  000000000000033E: 4C 8B C5           mov         r8,rbp
  0000000000000341: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  0000000000000346: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  000000000000034B: 48 8B D7           mov         rdx,rdi
  000000000000034E: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000353: 48 8B C8           mov         rcx,rax
  0000000000000356: E8 00 00 00 00     call        ?Program@TFtEE232H@@QEAAKPEAXPEAD111@Z
  000000000000035B: 48 8B CE           mov         rcx,rsi
  000000000000035E: 8B D8              mov         ebx,eax
  0000000000000360: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000365: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  000000000000036A: 8B C3              mov         eax,ebx
  000000000000036C: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000371: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000376: 48 83 C4 30        add         rsp,30h
  000000000000037A: 5F                 pop         rdi
  000000000000037B: C3                 ret
$LN6:
  000000000000037C: 41 83 F8 38        cmp         r8d,38h
  0000000000000380: 75 72              jne         $LN1
  0000000000000382: B9 48 08 00 00     mov         ecx,848h
  0000000000000387: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000038C: 48 85 C0           test        rax,rax
  000000000000038F: 0F 84 67 FD FF FF  je          00000000000000FC
  0000000000000395: 48 8B D3           mov         rdx,rbx
  0000000000000398: 48 8B C8           mov         rcx,rax
  000000000000039B: E8 00 00 00 00     call        ??0TFtEEFTX@@QEAA@PEAUft_private_vars@@@Z
  00000000000003A0: 48 8B F0           mov         rsi,rax
  00000000000003A3: 48 85 C0           test        rax,rax
  00000000000003A6: 0F 84 50 FD FF FF  je          00000000000000FC
  00000000000003AC: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  00000000000003B1: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  00000000000003B6: 4C 8B C5           mov         r8,rbp
  00000000000003B9: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  00000000000003BE: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  00000000000003C3: 48 8B D7           mov         rdx,rdi
  00000000000003C6: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  00000000000003CB: 48 8B C8           mov         rcx,rax
  00000000000003CE: E8 00 00 00 00     call        ?Program@TFtEEFTX@@QEAAKPEAXPEAD111@Z
  00000000000003D3: 48 8B CE           mov         rcx,rsi
  00000000000003D6: 8B D8              mov         ebx,eax
  00000000000003D8: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000003DD: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000003E2: 8B C3              mov         eax,ebx
  00000000000003E4: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  00000000000003E9: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  00000000000003EE: 48 83 C4 30        add         rsp,30h
  00000000000003F2: 5F                 pop         rdi
  00000000000003F3: C3                 ret
$LN1:
  00000000000003F4: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000003F9: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  00000000000003FE: BB 06 00 00 00     mov         ebx,6
  0000000000000403: 8B C3              mov         eax,ebx
  0000000000000405: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  000000000000040A: 48 83 C4 30        add         rsp,30h
  000000000000040E: 5F                 pop         rdi
  000000000000040F: C3                 ret
$LN77:
  0000000000000410: 00 00              add         byte ptr [rax],al
  0000000000000412: 00 00              add         byte ptr [rax],al
  0000000000000414: 00 00              add         byte ptr [rax],al
  0000000000000416: 00 00              add         byte ptr [rax],al
  0000000000000418: 00 00              add         byte ptr [rax],al
  000000000000041A: 00 00              add         byte ptr [rax],al
  000000000000041C: 00 00              add         byte ptr [rax],al
  000000000000041E: 00 00              add         byte ptr [rax],al
  0000000000000420: 00 00              add         byte ptr [rax],al
  0000000000000422: 00 00              add         byte ptr [rax],al
  0000000000000424: 00 00              add         byte ptr [rax],al
  0000000000000426: 00 00              add         byte ptr [rax],al
  0000000000000428: 00 00              add         byte ptr [rax],al
  000000000000042A: 00 00              add         byte ptr [rax],al
  000000000000042C: 00 00              add         byte ptr [rax],al
  000000000000042E: 00 00              add         byte ptr [rax],al
  0000000000000430: 00 00              add         byte ptr [rax],al
  0000000000000432: 00 00              add         byte ptr [rax],al
  0000000000000434: 00 00              add         byte ptr [rax],al
  0000000000000436: 00 00              add         byte ptr [rax],al

FT_EEPROM_Read:
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 30        sub         rsp,30h
  000000000000000F: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000016: 49 8B E9           mov         rbp,r9
  0000000000000019: 48 8B FA           mov         rdi,rdx
  000000000000001C: 48 8B D9           mov         rbx,rcx
  000000000000001F: 48 85 C0           test        rax,rax
  0000000000000022: 74 0D              je          0000000000000031
  0000000000000024: 48 3B C1           cmp         rax,rcx
  0000000000000027: 74 1D              je          0000000000000046
  0000000000000029: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002C: 48 85 C0           test        rax,rax
  000000000000002F: 75 F3              jne         0000000000000024
  0000000000000031: B8 01 00 00 00     mov         eax,1
  0000000000000036: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  000000000000003B: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000040: 48 83 C4 30        add         rsp,30h
  0000000000000044: 5F                 pop         rdi
  0000000000000045: C3                 ret
  0000000000000046: 48 85 D2           test        rdx,rdx
  0000000000000049: 75 15              jne         0000000000000060
  000000000000004B: B8 06 00 00 00     mov         eax,6
  0000000000000050: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000055: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  000000000000005A: 48 83 C4 30        add         rsp,30h
  000000000000005E: 5F                 pop         rdi
  000000000000005F: C3                 ret
  0000000000000060: 8B 02              mov         eax,dword ptr [rdx]
  0000000000000062: 3B 41 28           cmp         eax,dword ptr [rcx+28h]
  0000000000000065: 75 E4              jne         000000000000004B
  0000000000000067: 48 89 74 24 40     mov         qword ptr [rsp+40h],rsi
  000000000000006C: 83 F8 09           cmp         eax,9
  000000000000006F: 0F 87 7F 03 00 00  ja          $LN1
  0000000000000075: 48 8D 15 00 00 00  lea         rdx,[__ImageBase]
                    00
  000000000000007C: 8B 8C 82 00 00 00  mov         ecx,dword ptr $LN77[rdx+rax*4]
                    00
  0000000000000083: 48 03 CA           add         rcx,rdx
  0000000000000086: FF E1              jmp         rcx
$LN36:
  0000000000000088: 41 83 F8 10        cmp         r8d,10h
  000000000000008C: 0F 85 62 03 00 00  jne         $LN1
  0000000000000092: B9 48 08 00 00     mov         ecx,848h
  0000000000000097: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000009C: 48 85 C0           test        rax,rax
  000000000000009F: 74 5B              je          00000000000000FC
  00000000000000A1: 48 8B D3           mov         rdx,rbx
  00000000000000A4: 48 8B C8           mov         rcx,rax
  00000000000000A7: E8 00 00 00 00     call        ??0TFtEE232@@QEAA@PEAUft_private_vars@@@Z
  00000000000000AC: 48 8B F0           mov         rsi,rax
  00000000000000AF: 48 85 C0           test        rax,rax
  00000000000000B2: 74 48              je          00000000000000FC
  00000000000000B4: 48 8B 44 24 70     mov         rax,qword ptr [rsp+70h]
  00000000000000B9: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  00000000000000BE: 4C 8B C5           mov         r8,rbp
  00000000000000C1: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000C6: 48 8B 44 24 68     mov         rax,qword ptr [rsp+68h]
  00000000000000CB: 48 8B D7           mov         rdx,rdi
  00000000000000CE: 48 8B CE           mov         rcx,rsi
  00000000000000D1: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000D6: E8 00 00 00 00     call        ?ReadAndParse@TFtEE232@@QEAAKPEAXPEAD111@Z
  00000000000000DB: 48 8B CE           mov         rcx,rsi
  00000000000000DE: 8B D8              mov         ebx,eax
  00000000000000E0: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000000E5: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000000EA: 8B C3              mov         eax,ebx
  00000000000000EC: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  00000000000000F1: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  00000000000000F6: 48 83 C4 30        add         rsp,30h
  00000000000000FA: 5F                 pop         rdi
  00000000000000FB: C3                 ret
  00000000000000FC: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000101: BB 05 00 00 00     mov         ebx,5
  0000000000000106: 8B C3              mov         eax,ebx
  0000000000000108: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  000000000000010D: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000112: 48 83 C4 30        add         rsp,30h
  0000000000000116: 5F                 pop         rdi
  0000000000000117: C3                 ret
$LN31:
  0000000000000118: 41 83 F8 1C        cmp         r8d,1Ch
  000000000000011C: 0F 85 D2 02 00 00  jne         $LN1
  0000000000000122: B9 48 08 00 00     mov         ecx,848h
  0000000000000127: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000012C: 48 85 C0           test        rax,rax
  000000000000012F: 74 CB              je          00000000000000FC
  0000000000000131: 48 8B D3           mov         rdx,rbx
  0000000000000134: 48 8B C8           mov         rcx,rax
  0000000000000137: E8 00 00 00 00     call        ??0TFtEE2232@@QEAA@PEAUft_private_vars@@@Z
  000000000000013C: 48 8B F0           mov         rsi,rax
  000000000000013F: 48 85 C0           test        rax,rax
  0000000000000142: 74 B8              je          00000000000000FC
  0000000000000144: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000149: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  000000000000014E: 4C 8B C5           mov         r8,rbp
  0000000000000151: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  0000000000000156: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  000000000000015B: 48 8B D7           mov         rdx,rdi
  000000000000015E: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000163: 48 8B C8           mov         rcx,rax
  0000000000000166: E8 00 00 00 00     call        ?ReadAndParse@TFtEE2232@@QEAAKPEAXPEAD111@Z
  000000000000016B: 48 8B CE           mov         rcx,rsi
  000000000000016E: 8B D8              mov         ebx,eax
  0000000000000170: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000175: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  000000000000017A: 8B C3              mov         eax,ebx
  000000000000017C: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000181: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000186: 48 83 C4 30        add         rsp,30h
  000000000000018A: 5F                 pop         rdi
  000000000000018B: C3                 ret
$LN26:
  000000000000018C: 41 83 F8 20        cmp         r8d,20h
  0000000000000190: 0F 85 5E 02 00 00  jne         $LN1
  0000000000000196: B9 50 08 00 00     mov         ecx,850h
  000000000000019B: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000001A0: 48 85 C0           test        rax,rax
  00000000000001A3: 0F 84 53 FF FF FF  je          00000000000000FC
  00000000000001A9: 48 8B D3           mov         rdx,rbx
  00000000000001AC: 48 8B C8           mov         rcx,rax
  00000000000001AF: E8 00 00 00 00     call        ??0TFtEE232R@@QEAA@PEAUft_private_vars@@@Z
  00000000000001B4: 48 8B F0           mov         rsi,rax
  00000000000001B7: 48 85 C0           test        rax,rax
  00000000000001BA: 0F 84 3C FF FF FF  je          00000000000000FC
  00000000000001C0: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  00000000000001C5: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  00000000000001CA: 4C 8B C5           mov         r8,rbp
  00000000000001CD: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  00000000000001D2: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  00000000000001D7: 48 8B D7           mov         rdx,rdi
  00000000000001DA: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  00000000000001DF: 48 8B C8           mov         rcx,rax
  00000000000001E2: E8 00 00 00 00     call        ?ReadAndParse@TFtEE232R@@QEAAKPEAXPEAD111@Z
  00000000000001E7: 48 8B CE           mov         rcx,rsi
  00000000000001EA: 8B D8              mov         ebx,eax
  00000000000001EC: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000001F1: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000001F6: 8B C3              mov         eax,ebx
  00000000000001F8: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  00000000000001FD: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000202: 48 83 C4 30        add         rsp,30h
  0000000000000206: 5F                 pop         rdi
  0000000000000207: C3                 ret
$LN21:
  0000000000000208: 41 83 F8 28        cmp         r8d,28h
  000000000000020C: 0F 85 E2 01 00 00  jne         $LN1
  0000000000000212: B9 48 08 00 00     mov         ecx,848h
  0000000000000217: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000021C: 48 85 C0           test        rax,rax
  000000000000021F: 0F 84 D7 FE FF FF  je          00000000000000FC
  0000000000000225: 48 8B D3           mov         rdx,rbx
  0000000000000228: 48 8B C8           mov         rcx,rax
  000000000000022B: E8 00 00 00 00     call        ??0TFtEE2232H@@QEAA@PEAUft_private_vars@@@Z
  0000000000000230: 48 8B F0           mov         rsi,rax
  0000000000000233: 48 85 C0           test        rax,rax
  0000000000000236: 0F 84 C0 FE FF FF  je          00000000000000FC
  000000000000023C: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000241: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  0000000000000246: 4C 8B C5           mov         r8,rbp
  0000000000000249: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  000000000000024E: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  0000000000000253: 48 8B D7           mov         rdx,rdi
  0000000000000256: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  000000000000025B: 48 8B C8           mov         rcx,rax
  000000000000025E: E8 00 00 00 00     call        ?ReadAndParse@TFtEE2232H@@QEAAKPEAXPEAD111@Z
  0000000000000263: 48 8B CE           mov         rcx,rsi
  0000000000000266: 8B D8              mov         ebx,eax
  0000000000000268: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  000000000000026D: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000272: 8B C3              mov         eax,ebx
  0000000000000274: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000279: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  000000000000027E: 48 83 C4 30        add         rsp,30h
  0000000000000282: 5F                 pop         rdi
  0000000000000283: C3                 ret
$LN16:
  0000000000000284: 41 83 F8 24        cmp         r8d,24h
  0000000000000288: 0F 85 66 01 00 00  jne         $LN1
  000000000000028E: B9 48 08 00 00     mov         ecx,848h
  0000000000000293: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000298: 48 85 C0           test        rax,rax
  000000000000029B: 0F 84 5B FE FF FF  je          00000000000000FC
  00000000000002A1: 48 8B D3           mov         rdx,rbx
  00000000000002A4: 48 8B C8           mov         rcx,rax
  00000000000002A7: E8 00 00 00 00     call        ??0TFtEE4232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000002AC: 48 8B F0           mov         rsi,rax
  00000000000002AF: 48 85 C0           test        rax,rax
  00000000000002B2: 0F 84 44 FE FF FF  je          00000000000000FC
  00000000000002B8: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  00000000000002BD: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  00000000000002C2: 4C 8B C5           mov         r8,rbp
  00000000000002C5: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  00000000000002CA: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  00000000000002CF: 48 8B D7           mov         rdx,rdi
  00000000000002D2: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  00000000000002D7: 48 8B C8           mov         rcx,rax
  00000000000002DA: E8 00 00 00 00     call        ?ReadAndParse@TFtEE4232H@@QEAAKPEAXPEAD111@Z
  00000000000002DF: 48 8B CE           mov         rcx,rsi
  00000000000002E2: 8B D8              mov         ebx,eax
  00000000000002E4: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000002E9: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000002EE: 8B C3              mov         eax,ebx
  00000000000002F0: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  00000000000002F5: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  00000000000002FA: 48 83 C4 30        add         rsp,30h
  00000000000002FE: 5F                 pop         rdi
  00000000000002FF: C3                 ret
$LN11:
  0000000000000300: 41 83 F8 2C        cmp         r8d,2Ch
  0000000000000304: 0F 85 EA 00 00 00  jne         $LN1
  000000000000030A: B9 48 08 00 00     mov         ecx,848h
  000000000000030F: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000314: 48 85 C0           test        rax,rax
  0000000000000317: 0F 84 DF FD FF FF  je          00000000000000FC
  000000000000031D: 48 8B D3           mov         rdx,rbx
  0000000000000320: 48 8B C8           mov         rcx,rax
  0000000000000323: E8 00 00 00 00     call        ??0TFtEE232H@@QEAA@PEAUft_private_vars@@@Z
  0000000000000328: 48 8B F0           mov         rsi,rax
  000000000000032B: 48 85 C0           test        rax,rax
  000000000000032E: 0F 84 C8 FD FF FF  je          00000000000000FC
  0000000000000334: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000339: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  000000000000033E: 4C 8B C5           mov         r8,rbp
  0000000000000341: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  0000000000000346: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  000000000000034B: 48 8B D7           mov         rdx,rdi
  000000000000034E: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000353: 48 8B C8           mov         rcx,rax
  0000000000000356: E8 00 00 00 00     call        ?ReadAndParse@TFtEE232H@@QEAAKPEAXPEAD111@Z
  000000000000035B: 48 8B CE           mov         rcx,rsi
  000000000000035E: 8B D8              mov         ebx,eax
  0000000000000360: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000365: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  000000000000036A: 8B C3              mov         eax,ebx
  000000000000036C: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000371: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000376: 48 83 C4 30        add         rsp,30h
  000000000000037A: 5F                 pop         rdi
  000000000000037B: C3                 ret
$LN6:
  000000000000037C: 41 83 F8 38        cmp         r8d,38h
  0000000000000380: 75 72              jne         $LN1
  0000000000000382: B9 48 08 00 00     mov         ecx,848h
  0000000000000387: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000038C: 48 85 C0           test        rax,rax
  000000000000038F: 0F 84 67 FD FF FF  je          00000000000000FC
  0000000000000395: 48 8B D3           mov         rdx,rbx
  0000000000000398: 48 8B C8           mov         rcx,rax
  000000000000039B: E8 00 00 00 00     call        ??0TFtEEFTX@@QEAA@PEAUft_private_vars@@@Z
  00000000000003A0: 48 8B F0           mov         rsi,rax
  00000000000003A3: 48 85 C0           test        rax,rax
  00000000000003A6: 0F 84 50 FD FF FF  je          00000000000000FC
  00000000000003AC: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  00000000000003B1: 4C 8B 4C 24 60     mov         r9,qword ptr [rsp+60h]
  00000000000003B6: 4C 8B C5           mov         r8,rbp
  00000000000003B9: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  00000000000003BE: 48 8B 4C 24 68     mov         rcx,qword ptr [rsp+68h]
  00000000000003C3: 48 8B D7           mov         rdx,rdi
  00000000000003C6: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  00000000000003CB: 48 8B C8           mov         rcx,rax
  00000000000003CE: E8 00 00 00 00     call        ?ReadAndParse@TFtEEFTX@@QEAAKPEAXPEAD111@Z
  00000000000003D3: 48 8B CE           mov         rcx,rsi
  00000000000003D6: 8B D8              mov         ebx,eax
  00000000000003D8: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000003DD: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000003E2: 8B C3              mov         eax,ebx
  00000000000003E4: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  00000000000003E9: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  00000000000003EE: 48 83 C4 30        add         rsp,30h
  00000000000003F2: 5F                 pop         rdi
  00000000000003F3: C3                 ret
$LN1:
  00000000000003F4: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000003F9: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  00000000000003FE: BB 06 00 00 00     mov         ebx,6
  0000000000000403: 8B C3              mov         eax,ebx
  0000000000000405: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  000000000000040A: 48 83 C4 30        add         rsp,30h
  000000000000040E: 5F                 pop         rdi
  000000000000040F: C3                 ret
$LN77:
  0000000000000410: 00 00              add         byte ptr [rax],al
  0000000000000412: 00 00              add         byte ptr [rax],al
  0000000000000414: 00 00              add         byte ptr [rax],al
  0000000000000416: 00 00              add         byte ptr [rax],al
  0000000000000418: 00 00              add         byte ptr [rax],al
  000000000000041A: 00 00              add         byte ptr [rax],al
  000000000000041C: 00 00              add         byte ptr [rax],al
  000000000000041E: 00 00              add         byte ptr [rax],al
  0000000000000420: 00 00              add         byte ptr [rax],al
  0000000000000422: 00 00              add         byte ptr [rax],al
  0000000000000424: 00 00              add         byte ptr [rax],al
  0000000000000426: 00 00              add         byte ptr [rax],al
  0000000000000428: 00 00              add         byte ptr [rax],al
  000000000000042A: 00 00              add         byte ptr [rax],al
  000000000000042C: 00 00              add         byte ptr [rax],al
  000000000000042E: 00 00              add         byte ptr [rax],al
  0000000000000430: 00 00              add         byte ptr [rax],al
  0000000000000432: 00 00              add         byte ptr [rax],al
  0000000000000434: 00 00              add         byte ptr [rax],al
  0000000000000436: 00 00              add         byte ptr [rax],al

FT_EE_Program:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 41 56              push        r14
  0000000000000005: 41 57              push        r15
  0000000000000007: 48 81 EC D8 01 00  sub         rsp,1D8h
                    00
  000000000000000E: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000015: 45 33 FF           xor         r15d,r15d
  0000000000000018: 48 8B DA           mov         rbx,rdx
  000000000000001B: 48 8B E9           mov         rbp,rcx
  000000000000001E: 45 8B F7           mov         r14d,r15d
  0000000000000021: 48 85 C0           test        rax,rax
  0000000000000024: 74 0D              je          0000000000000033
  0000000000000026: 48 3B C1           cmp         rax,rcx
  0000000000000029: 74 1B              je          0000000000000046
  000000000000002B: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002E: 48 85 C0           test        rax,rax
  0000000000000031: 75 F3              jne         0000000000000026
  0000000000000033: B8 01 00 00 00     mov         eax,1
  0000000000000038: 48 81 C4 D8 01 00  add         rsp,1D8h
                    00
  000000000000003F: 41 5F              pop         r15
  0000000000000041: 41 5E              pop         r14
  0000000000000043: 5D                 pop         rbp
  0000000000000044: 5B                 pop         rbx
  0000000000000045: C3                 ret
  0000000000000046: 8B 41 28           mov         eax,dword ptr [rcx+28h]
  0000000000000049: 48 89 B4 24 10 02  mov         qword ptr [rsp+210h],rsi
                    00 00
  0000000000000051: 48 89 BC 24 D0 01  mov         qword ptr [rsp+1D0h],rdi
                    00 00
  0000000000000059: 83 F8 04           cmp         eax,4
  000000000000005C: 0F 85 4F 01 00 00  jne         00000000000001B1
  0000000000000062: B9 48 08 00 00     mov         ecx,848h
  0000000000000067: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000006C: 48 85 C0           test        rax,rax
  000000000000006F: 74 10              je          0000000000000081
  0000000000000071: 48 8B D5           mov         rdx,rbp
  0000000000000074: 48 8B C8           mov         rcx,rax
  0000000000000077: E8 00 00 00 00     call        ??0TFtEE2232@@QEAA@PEAUft_private_vars@@@Z
  000000000000007C: 48 8B F8           mov         rdi,rax
  000000000000007F: EB 03              jmp         0000000000000084
  0000000000000081: 49 8B FF           mov         rdi,r15
  0000000000000084: 48 85 FF           test        rdi,rdi
  0000000000000087: 0F 84 2A 08 00 00  je          00000000000008B7
  000000000000008D: B9 38 00 00 00     mov         ecx,38h
  0000000000000092: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  0000000000000098: 48 8B F0           mov         rsi,rax
  000000000000009B: 48 85 C0           test        rax,rax
  000000000000009E: 0F 84 0B 08 00 00  je          00000000000008AF
  00000000000000A4: 44 39 33           cmp         dword ptr [rbx],r14d
  00000000000000A7: 75 06              jne         00000000000000AF
  00000000000000A9: 83 7B 04 FF        cmp         dword ptr [rbx+4],0FFFFFFFFh
  00000000000000AD: 74 54              je          0000000000000103
  00000000000000AF: B9 B0 00 00 00     mov         ecx,0B0h
  00000000000000B4: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  00000000000000BA: 4C 8B F0           mov         r14,rax
  00000000000000BD: 48 85 C0           test        rax,rax
  00000000000000C0: 0F 84 E9 07 00 00  je          00000000000008AF
  00000000000000C6: 44 89 38           mov         dword ptr [rax],r15d
  00000000000000C9: C7 40 04 FF FF FF  mov         dword ptr [rax+4],0FFFFFFFFh
                    FF
  00000000000000D0: C7 40 08 01 00 00  mov         dword ptr [rax+8],1
                    00
  00000000000000D7: 0F 10 03           movups      xmm0,xmmword ptr [rbx]
  00000000000000DA: 0F 11 40 0C        movups      xmmword ptr [rax+0Ch],xmm0
  00000000000000DE: 0F 10 4B 10        movups      xmm1,xmmword ptr [rbx+10h]
  00000000000000E2: 0F 11 48 1C        movups      xmmword ptr [rax+1Ch],xmm1
  00000000000000E6: 0F 10 43 20        movups      xmm0,xmmword ptr [rbx+20h]
  00000000000000EA: 0F 11 40 2C        movups      xmmword ptr [rax+2Ch],xmm0
  00000000000000EE: 0F 10 4B 30        movups      xmm1,xmmword ptr [rbx+30h]
  00000000000000F2: 0F 11 48 3C        movups      xmmword ptr [rax+3Ch],xmm1
  00000000000000F6: F2 0F 10 43 40     movsd       xmm0,mmword ptr [rbx+40h]
  00000000000000FB: 48 8B D8           mov         rbx,rax
  00000000000000FE: F2 0F 11 40 4C     movsd       mmword ptr [rax+4Ch],xmm0
  0000000000000103: 48 8B 43 10        mov         rax,qword ptr [rbx+10h]
  0000000000000107: 48 8B CF           mov         rcx,rdi
  000000000000010A: 48 89 06           mov         qword ptr [rsi],rax
  000000000000010D: 48 8B 43 20        mov         rax,qword ptr [rbx+20h]
  0000000000000111: 48 89 46 08        mov         qword ptr [rsi+8],rax
  0000000000000115: 48 8D 05 00 00 00  lea         rax,[??_C@_00CNPNBAHC@?$AA@]
                    00
  000000000000011C: 48 89 46 10        mov         qword ptr [rsi+10h],rax
  0000000000000120: 0F B6 43 40        movzx       eax,byte ptr [rbx+40h]
  0000000000000124: 88 46 20           mov         byte ptr [rsi+20h],al
  0000000000000127: 0F B6 43 41        movzx       eax,byte ptr [rbx+41h]
  000000000000012B: 88 46 21           mov         byte ptr [rsi+21h],al
  000000000000012E: 0F B6 43 42        movzx       eax,byte ptr [rbx+42h]
  0000000000000132: 88 46 22           mov         byte ptr [rsi+22h],al
  0000000000000135: 0F B6 43 43        movzx       eax,byte ptr [rbx+43h]
  0000000000000139: 88 46 23           mov         byte ptr [rsi+23h],al
  000000000000013C: 0F B6 43 44        movzx       eax,byte ptr [rbx+44h]
  0000000000000140: 88 46 24           mov         byte ptr [rsi+24h],al
  0000000000000143: 0F B6 43 45        movzx       eax,byte ptr [rbx+45h]
  0000000000000147: 88 46 25           mov         byte ptr [rsi+25h],al
  000000000000014A: 0F B6 43 46        movzx       eax,byte ptr [rbx+46h]
  000000000000014E: 88 46 26           mov         byte ptr [rsi+26h],al
  0000000000000151: 0F B6 43 47        movzx       eax,byte ptr [rbx+47h]
  0000000000000155: 88 46 27           mov         byte ptr [rsi+27h],al
  0000000000000158: 0F B7 43 48        movzx       eax,word ptr [rbx+48h]
  000000000000015C: 66 89 46 28        mov         word ptr [rsi+28h],ax
  0000000000000160: 0F B6 43 4A        movzx       eax,byte ptr [rbx+4Ah]
  0000000000000164: 88 46 2A           mov         byte ptr [rsi+2Ah],al
  0000000000000167: 0F B6 43 4B        movzx       eax,byte ptr [rbx+4Bh]
  000000000000016B: 88 46 2B           mov         byte ptr [rsi+2Bh],al
  000000000000016E: 0F B6 43 4C        movzx       eax,byte ptr [rbx+4Ch]
  0000000000000172: 88 46 2C           mov         byte ptr [rsi+2Ch],al
  0000000000000175: 0F B6 43 4D        movzx       eax,byte ptr [rbx+4Dh]
  0000000000000179: 88 46 2D           mov         byte ptr [rsi+2Dh],al
  000000000000017C: 0F B6 43 4E        movzx       eax,byte ptr [rbx+4Eh]
  0000000000000180: 88 46 2E           mov         byte ptr [rsi+2Eh],al
  0000000000000183: 0F B6 43 4F        movzx       eax,byte ptr [rbx+4Fh]
  0000000000000187: 88 46 2F           mov         byte ptr [rsi+2Fh],al
  000000000000018A: 0F B6 43 50        movzx       eax,byte ptr [rbx+50h]
  000000000000018E: 88 46 30           mov         byte ptr [rsi+30h],al
  0000000000000191: 0F B6 43 51        movzx       eax,byte ptr [rbx+51h]
  0000000000000195: 88 46 31           mov         byte ptr [rsi+31h],al
  0000000000000198: 0F B6 43 52        movzx       eax,byte ptr [rbx+52h]
  000000000000019C: 88 46 32           mov         byte ptr [rsi+32h],al
  000000000000019F: 0F B6 43 53        movzx       eax,byte ptr [rbx+53h]
  00000000000001A3: 88 46 33           mov         byte ptr [rsi+33h],al
  00000000000001A6: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000001A9: FF 50 40           call        qword ptr [rax+40h]
  00000000000001AC: E9 8B 07 00 00     jmp         000000000000093C
  00000000000001B1: 83 F8 05           cmp         eax,5
  00000000000001B4: 0F 85 21 01 00 00  jne         00000000000002DB
  00000000000001BA: B9 50 08 00 00     mov         ecx,850h
  00000000000001BF: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000001C4: 48 85 C0           test        rax,rax
  00000000000001C7: 74 10              je          00000000000001D9
  00000000000001C9: 48 8B D5           mov         rdx,rbp
  00000000000001CC: 48 8B C8           mov         rcx,rax
  00000000000001CF: E8 00 00 00 00     call        ??0TFtEE232R@@QEAA@PEAUft_private_vars@@@Z
  00000000000001D4: 48 8B F8           mov         rdi,rax
  00000000000001D7: EB 03              jmp         00000000000001DC
  00000000000001D9: 49 8B FF           mov         rdi,r15
  00000000000001DC: 48 85 FF           test        rdi,rdi
  00000000000001DF: 0F 84 D2 06 00 00  je          00000000000008B7
  00000000000001E5: B9 30 00 00 00     mov         ecx,30h
  00000000000001EA: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  00000000000001F0: 48 8B F0           mov         rsi,rax
  00000000000001F3: 48 85 C0           test        rax,rax
  00000000000001F6: 0F 84 B3 06 00 00  je          00000000000008AF
  00000000000001FC: 44 39 33           cmp         dword ptr [rbx],r14d
  00000000000001FF: 0F 85 AB 00 00 00  jne         00000000000002B0
  0000000000000205: 83 7B 04 FF        cmp         dword ptr [rbx+4],0FFFFFFFFh
  0000000000000209: 0F 85 A1 00 00 00  jne         00000000000002B0
  000000000000020F: 48 8B 43 10        mov         rax,qword ptr [rbx+10h]
  0000000000000213: 48 89 06           mov         qword ptr [rsi],rax
  0000000000000216: 48 8B 43 20        mov         rax,qword ptr [rbx+20h]
  000000000000021A: 48 89 46 08        mov         qword ptr [rsi+8],rax
  000000000000021E: 48 8D 05 00 00 00  lea         rax,[??_C@_00CNPNBAHC@?$AA@]
                    00
  0000000000000225: 48 89 46 10        mov         qword ptr [rsi+10h],rax
  0000000000000229: 0F B6 43 57        movzx       eax,byte ptr [rbx+57h]
  000000000000022D: 88 46 1B           mov         byte ptr [rsi+1Bh],al
  0000000000000230: 0F B6 43 58        movzx       eax,byte ptr [rbx+58h]
  0000000000000234: 88 46 1C           mov         byte ptr [rsi+1Ch],al
  0000000000000237: 0F B6 43 54        movzx       eax,byte ptr [rbx+54h]
  000000000000023B: 88 46 18           mov         byte ptr [rsi+18h],al
  000000000000023E: 0F B6 43 55        movzx       eax,byte ptr [rbx+55h]
  0000000000000242: C6 46 1A 40        mov         byte ptr [rsi+1Ah],40h
  0000000000000246: 88 46 19           mov         byte ptr [rsi+19h],al
  0000000000000249: 0F B6 43 59        movzx       eax,byte ptr [rbx+59h]
  000000000000024D: 88 46 1D           mov         byte ptr [rsi+1Dh],al
  0000000000000250: 0F B6 43 5A        movzx       eax,byte ptr [rbx+5Ah]
  0000000000000254: 88 46 1E           mov         byte ptr [rsi+1Eh],al
  0000000000000257: 0F B6 43 5B        movzx       eax,byte ptr [rbx+5Bh]
  000000000000025B: 88 46 1F           mov         byte ptr [rsi+1Fh],al
  000000000000025E: 0F B6 43 5C        movzx       eax,byte ptr [rbx+5Ch]
  0000000000000262: 88 46 20           mov         byte ptr [rsi+20h],al
  0000000000000265: 0F B6 43 5D        movzx       eax,byte ptr [rbx+5Dh]
  0000000000000269: 88 46 21           mov         byte ptr [rsi+21h],al
  000000000000026C: 0F B6 43 5E        movzx       eax,byte ptr [rbx+5Eh]
  0000000000000270: 88 46 22           mov         byte ptr [rsi+22h],al
  0000000000000273: 0F B6 43 5F        movzx       eax,byte ptr [rbx+5Fh]
  0000000000000277: 88 46 23           mov         byte ptr [rsi+23h],al
  000000000000027A: 0F B6 43 60        movzx       eax,byte ptr [rbx+60h]
  000000000000027E: 88 46 24           mov         byte ptr [rsi+24h],al
  0000000000000281: 0F B6 43 61        movzx       eax,byte ptr [rbx+61h]
  0000000000000285: 88 46 25           mov         byte ptr [rsi+25h],al
  0000000000000288: 0F B6 43 62        movzx       eax,byte ptr [rbx+62h]
  000000000000028C: 88 46 26           mov         byte ptr [rsi+26h],al
  000000000000028F: 0F B6 43 63        movzx       eax,byte ptr [rbx+63h]
  0000000000000293: 88 46 27           mov         byte ptr [rsi+27h],al
  0000000000000296: 0F B6 43 64        movzx       eax,byte ptr [rbx+64h]
  000000000000029A: 88 46 28           mov         byte ptr [rsi+28h],al
  000000000000029D: 0F B6 43 65        movzx       eax,byte ptr [rbx+65h]
  00000000000002A1: 88 46 29           mov         byte ptr [rsi+29h],al
  00000000000002A4: 0F B6 43 66        movzx       eax,byte ptr [rbx+66h]
  00000000000002A8: 88 46 2A           mov         byte ptr [rsi+2Ah],al
  00000000000002AB: E9 8C 06 00 00     jmp         000000000000093C
  00000000000002B0: 48 8B CF           mov         rcx,rdi
  00000000000002B3: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000002B8: B8 06 00 00 00     mov         eax,6
  00000000000002BD: 48 8B B4 24 10 02  mov         rsi,qword ptr [rsp+210h]
                    00 00
  00000000000002C5: 48 8B BC 24 D0 01  mov         rdi,qword ptr [rsp+1D0h]
                    00 00
  00000000000002CD: 48 81 C4 D8 01 00  add         rsp,1D8h
                    00
  00000000000002D4: 41 5F              pop         r15
  00000000000002D6: 41 5E              pop         r14
  00000000000002D8: 5D                 pop         rbp
  00000000000002D9: 5B                 pop         rbx
  00000000000002DA: C3                 ret
  00000000000002DB: B9 48 08 00 00     mov         ecx,848h
  00000000000002E0: 83 F8 06           cmp         eax,6
  00000000000002E3: 0F 85 7C 01 00 00  jne         0000000000000465
  00000000000002E9: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000002EE: 48 85 C0           test        rax,rax
  00000000000002F1: 74 10              je          0000000000000303
  00000000000002F3: 48 8B D5           mov         rdx,rbp
  00000000000002F6: 48 8B C8           mov         rcx,rax
  00000000000002F9: E8 00 00 00 00     call        ??0TFtEE2232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000002FE: 48 8B F8           mov         rdi,rax
  0000000000000301: EB 03              jmp         0000000000000306
  0000000000000303: 49 8B FF           mov         rdi,r15
  0000000000000306: 48 85 FF           test        rdi,rdi
  0000000000000309: 0F 84 A8 05 00 00  je          00000000000008B7
  000000000000030F: B9 30 00 00 00     mov         ecx,30h
  0000000000000314: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  000000000000031A: 48 8B F0           mov         rsi,rax
  000000000000031D: 48 85 C0           test        rax,rax
  0000000000000320: 0F 84 89 05 00 00  je          00000000000008AF
  0000000000000326: 44 39 33           cmp         dword ptr [rbx],r14d
  0000000000000329: 75 06              jne         0000000000000331
  000000000000032B: 83 7B 04 FF        cmp         dword ptr [rbx+4],0FFFFFFFFh
  000000000000032F: 74 6B              je          000000000000039C
  0000000000000331: B9 B0 00 00 00     mov         ecx,0B0h
  0000000000000336: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  000000000000033C: 4C 8B F0           mov         r14,rax
  000000000000033F: 48 85 C0           test        rax,rax
  0000000000000342: 0F 84 67 05 00 00  je          00000000000008AF
  0000000000000348: 44 89 38           mov         dword ptr [rax],r15d
  000000000000034B: C7 40 04 FF FF FF  mov         dword ptr [rax+4],0FFFFFFFFh
                    FF
  0000000000000352: C7 40 08 03 00 00  mov         dword ptr [rax+8],3
                    00
  0000000000000359: 0F 10 03           movups      xmm0,xmmword ptr [rbx]
  000000000000035C: 0F 11 40 0C        movups      xmmword ptr [rax+0Ch],xmm0
  0000000000000360: 0F 10 4B 10        movups      xmm1,xmmword ptr [rbx+10h]
  0000000000000364: 0F 11 48 1C        movups      xmmword ptr [rax+1Ch],xmm1
  0000000000000368: 0F 10 43 20        movups      xmm0,xmmword ptr [rbx+20h]
  000000000000036C: 0F 11 40 2C        movups      xmmword ptr [rax+2Ch],xmm0
  0000000000000370: 0F 10 4B 30        movups      xmm1,xmmword ptr [rbx+30h]
  0000000000000374: 0F 11 48 3C        movups      xmmword ptr [rax+3Ch],xmm1
  0000000000000378: 0F 10 43 40        movups      xmm0,xmmword ptr [rbx+40h]
  000000000000037C: 0F 11 40 4C        movups      xmmword ptr [rax+4Ch],xmm0
  0000000000000380: 0F 10 4B 50        movups      xmm1,xmmword ptr [rbx+50h]
  0000000000000384: 0F 11 48 5C        movups      xmmword ptr [rax+5Ch],xmm1
  0000000000000388: 0F 10 43 60        movups      xmm0,xmmword ptr [rbx+60h]
  000000000000038C: 0F 11 40 6C        movups      xmmword ptr [rax+6Ch],xmm0
  0000000000000390: 0F B7 43 70        movzx       eax,word ptr [rbx+70h]
  0000000000000394: 49 8B DE           mov         rbx,r14
  0000000000000397: 66 41 89 46 7C     mov         word ptr [r14+7Ch],ax
  000000000000039C: 48 8B 43 10        mov         rax,qword ptr [rbx+10h]
  00000000000003A0: 48 8B CF           mov         rcx,rdi
  00000000000003A3: 48 89 06           mov         qword ptr [rsi],rax
  00000000000003A6: 48 8B 43 20        mov         rax,qword ptr [rbx+20h]
  00000000000003AA: 48 89 46 08        mov         qword ptr [rsi+8],rax
  00000000000003AE: 48 8D 05 00 00 00  lea         rax,[??_C@_00CNPNBAHC@?$AA@]
                    00
  00000000000003B5: 48 89 46 10        mov         qword ptr [rsi+10h],rax
  00000000000003B9: 0F B6 43 67        movzx       eax,byte ptr [rbx+67h]
  00000000000003BD: 88 46 18           mov         byte ptr [rsi+18h],al
  00000000000003C0: 0F B6 43 68        movzx       eax,byte ptr [rbx+68h]
  00000000000003C4: 88 46 19           mov         byte ptr [rsi+19h],al
  00000000000003C7: 0F B6 43 69        movzx       eax,byte ptr [rbx+69h]
  00000000000003CB: 88 46 1A           mov         byte ptr [rsi+1Ah],al
  00000000000003CE: 0F B6 43 6A        movzx       eax,byte ptr [rbx+6Ah]
  00000000000003D2: 88 46 1B           mov         byte ptr [rsi+1Bh],al
  00000000000003D5: 0F B6 43 6B        movzx       eax,byte ptr [rbx+6Bh]
  00000000000003D9: 88 46 1C           mov         byte ptr [rsi+1Ch],al
  00000000000003DC: 0F B6 43 6C        movzx       eax,byte ptr [rbx+6Ch]
  00000000000003E0: 88 46 1D           mov         byte ptr [rsi+1Dh],al
  00000000000003E3: 0F B6 43 6D        movzx       eax,byte ptr [rbx+6Dh]
  00000000000003E7: 88 46 1E           mov         byte ptr [rsi+1Eh],al
  00000000000003EA: 0F B6 43 6E        movzx       eax,byte ptr [rbx+6Eh]
  00000000000003EE: 88 46 1F           mov         byte ptr [rsi+1Fh],al
  00000000000003F1: 0F B6 43 6F        movzx       eax,byte ptr [rbx+6Fh]
  00000000000003F5: 88 46 20           mov         byte ptr [rsi+20h],al
  00000000000003F8: 0F B6 43 70        movzx       eax,byte ptr [rbx+70h]
  00000000000003FC: 88 46 21           mov         byte ptr [rsi+21h],al
  00000000000003FF: 0F B6 43 71        movzx       eax,byte ptr [rbx+71h]
  0000000000000403: 88 46 22           mov         byte ptr [rsi+22h],al
  0000000000000406: 0F B6 43 72        movzx       eax,byte ptr [rbx+72h]
  000000000000040A: 88 46 23           mov         byte ptr [rsi+23h],al
  000000000000040D: 0F B6 43 73        movzx       eax,byte ptr [rbx+73h]
  0000000000000411: 88 46 24           mov         byte ptr [rsi+24h],al
  0000000000000414: 0F B6 43 74        movzx       eax,byte ptr [rbx+74h]
  0000000000000418: 88 46 25           mov         byte ptr [rsi+25h],al
  000000000000041B: 0F B6 43 75        movzx       eax,byte ptr [rbx+75h]
  000000000000041F: 88 46 26           mov         byte ptr [rsi+26h],al
  0000000000000422: 0F B6 43 76        movzx       eax,byte ptr [rbx+76h]
  0000000000000426: 88 46 27           mov         byte ptr [rsi+27h],al
  0000000000000429: 0F B6 43 77        movzx       eax,byte ptr [rbx+77h]
  000000000000042D: 88 46 28           mov         byte ptr [rsi+28h],al
  0000000000000430: 0F B6 43 78        movzx       eax,byte ptr [rbx+78h]
  0000000000000434: 88 46 29           mov         byte ptr [rsi+29h],al
  0000000000000437: 0F B6 43 79        movzx       eax,byte ptr [rbx+79h]
  000000000000043B: 88 46 2A           mov         byte ptr [rsi+2Ah],al
  000000000000043E: 0F B6 43 7A        movzx       eax,byte ptr [rbx+7Ah]
  0000000000000442: 88 46 2B           mov         byte ptr [rsi+2Bh],al
  0000000000000445: 0F B6 43 7B        movzx       eax,byte ptr [rbx+7Bh]
  0000000000000449: 88 46 2C           mov         byte ptr [rsi+2Ch],al
  000000000000044C: 0F B6 43 7C        movzx       eax,byte ptr [rbx+7Ch]
  0000000000000450: 88 46 2D           mov         byte ptr [rsi+2Dh],al
  0000000000000453: 0F B6 43 7D        movzx       eax,byte ptr [rbx+7Dh]
  0000000000000457: 88 46 2E           mov         byte ptr [rsi+2Eh],al
  000000000000045A: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000045D: FF 50 40           call        qword ptr [rax+40h]
  0000000000000460: E9 D7 04 00 00     jmp         000000000000093C
  0000000000000465: 83 F8 07           cmp         eax,7
  0000000000000468: 0F 85 C0 01 00 00  jne         000000000000062E
  000000000000046E: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000473: 48 85 C0           test        rax,rax
  0000000000000476: 74 10              je          0000000000000488
  0000000000000478: 48 8B D5           mov         rdx,rbp
  000000000000047B: 48 8B C8           mov         rcx,rax
  000000000000047E: E8 00 00 00 00     call        ??0TFtEE4232H@@QEAA@PEAUft_private_vars@@@Z
  0000000000000483: 48 8B F8           mov         rdi,rax
  0000000000000486: EB 03              jmp         000000000000048B
  0000000000000488: 49 8B FF           mov         rdi,r15
  000000000000048B: 48 85 FF           test        rdi,rdi
  000000000000048E: 0F 84 23 04 00 00  je          00000000000008B7
  0000000000000494: B9 30 00 00 00     mov         ecx,30h
  0000000000000499: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  000000000000049F: 48 8B F0           mov         rsi,rax
  00000000000004A2: 48 85 C0           test        rax,rax
  00000000000004A5: 0F 84 04 04 00 00  je          00000000000008AF
  00000000000004AB: 44 39 33           cmp         dword ptr [rbx],r14d
  00000000000004AE: 75 06              jne         00000000000004B6
  00000000000004B0: 83 7B 04 FF        cmp         dword ptr [rbx+4],0FFFFFFFFh
  00000000000004B4: 74 7A              je          0000000000000530
  00000000000004B6: B9 B0 00 00 00     mov         ecx,0B0h
  00000000000004BB: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  00000000000004C1: 4C 8B F0           mov         r14,rax
  00000000000004C4: 48 85 C0           test        rax,rax
  00000000000004C7: 0F 84 E2 03 00 00  je          00000000000008AF
  00000000000004CD: 44 89 38           mov         dword ptr [rax],r15d
  00000000000004D0: C7 40 04 FF FF FF  mov         dword ptr [rax+4],0FFFFFFFFh
                    FF
  00000000000004D7: C7 40 08 04 00 00  mov         dword ptr [rax+8],4
                    00
  00000000000004DE: 0F 10 03           movups      xmm0,xmmword ptr [rbx]
  00000000000004E1: 0F 11 40 0C        movups      xmmword ptr [rax+0Ch],xmm0
  00000000000004E5: 0F 10 4B 10        movups      xmm1,xmmword ptr [rbx+10h]
  00000000000004E9: 0F 11 48 1C        movups      xmmword ptr [rax+1Ch],xmm1
  00000000000004ED: 0F 10 43 20        movups      xmm0,xmmword ptr [rbx+20h]
  00000000000004F1: 0F 11 40 2C        movups      xmmword ptr [rax+2Ch],xmm0
  00000000000004F5: 0F 10 4B 30        movups      xmm1,xmmword ptr [rbx+30h]
  00000000000004F9: 0F 11 48 3C        movups      xmmword ptr [rax+3Ch],xmm1
  00000000000004FD: 0F 10 43 40        movups      xmm0,xmmword ptr [rbx+40h]
  0000000000000501: 0F 11 40 4C        movups      xmmword ptr [rax+4Ch],xmm0
  0000000000000505: 0F 10 4B 50        movups      xmm1,xmmword ptr [rbx+50h]
  0000000000000509: 0F 11 48 5C        movups      xmmword ptr [rax+5Ch],xmm1
  000000000000050D: 0F 10 43 60        movups      xmm0,xmmword ptr [rbx+60h]
  0000000000000511: 0F 11 40 6C        movups      xmmword ptr [rax+6Ch],xmm0
  0000000000000515: 0F 10 4B 70        movups      xmm1,xmmword ptr [rbx+70h]
  0000000000000519: 0F 11 48 7C        movups      xmmword ptr [rax+7Ch],xmm1
  000000000000051D: F2 0F 10 83 80 00  movsd       xmm0,mmword ptr [rbx+80h]
                    00 00
  0000000000000525: 48 8B D8           mov         rbx,rax
  0000000000000528: F2 0F 11 80 8C 00  movsd       mmword ptr [rax+8Ch],xmm0
                    00 00
  0000000000000530: 48 8B 43 10        mov         rax,qword ptr [rbx+10h]
  0000000000000534: 48 8B CF           mov         rcx,rdi
  0000000000000537: 48 89 06           mov         qword ptr [rsi],rax
  000000000000053A: 48 8B 43 20        mov         rax,qword ptr [rbx+20h]
  000000000000053E: 48 89 46 08        mov         qword ptr [rsi+8],rax
  0000000000000542: 48 8D 05 00 00 00  lea         rax,[??_C@_00CNPNBAHC@?$AA@]
                    00
  0000000000000549: 48 89 46 10        mov         qword ptr [rsi+10h],rax
  000000000000054D: 0F B6 43 7E        movzx       eax,byte ptr [rbx+7Eh]
  0000000000000551: 88 46 18           mov         byte ptr [rsi+18h],al
  0000000000000554: 0F B6 43 7F        movzx       eax,byte ptr [rbx+7Fh]
  0000000000000558: 88 46 19           mov         byte ptr [rsi+19h],al
  000000000000055B: 0F B6 83 80 00 00  movzx       eax,byte ptr [rbx+80h]
                    00
  0000000000000562: 88 46 1A           mov         byte ptr [rsi+1Ah],al
  0000000000000565: 0F B6 83 81 00 00  movzx       eax,byte ptr [rbx+81h]
                    00
  000000000000056C: 88 46 1B           mov         byte ptr [rsi+1Bh],al
  000000000000056F: 0F B6 83 82 00 00  movzx       eax,byte ptr [rbx+82h]
                    00
  0000000000000576: 88 46 1C           mov         byte ptr [rsi+1Ch],al
  0000000000000579: 0F B6 83 83 00 00  movzx       eax,byte ptr [rbx+83h]
                    00
  0000000000000580: 88 46 1D           mov         byte ptr [rsi+1Dh],al
  0000000000000583: 0F B6 83 84 00 00  movzx       eax,byte ptr [rbx+84h]
                    00
  000000000000058A: 88 46 1E           mov         byte ptr [rsi+1Eh],al
  000000000000058D: 0F B6 83 85 00 00  movzx       eax,byte ptr [rbx+85h]
                    00
  0000000000000594: 88 46 1F           mov         byte ptr [rsi+1Fh],al
  0000000000000597: 0F B6 83 86 00 00  movzx       eax,byte ptr [rbx+86h]
                    00
  000000000000059E: 88 46 20           mov         byte ptr [rsi+20h],al
  00000000000005A1: 0F B6 83 87 00 00  movzx       eax,byte ptr [rbx+87h]
                    00
  00000000000005A8: 88 46 21           mov         byte ptr [rsi+21h],al
  00000000000005AB: 0F B6 83 88 00 00  movzx       eax,byte ptr [rbx+88h]
                    00
  00000000000005B2: 88 46 22           mov         byte ptr [rsi+22h],al
  00000000000005B5: 0F B6 83 89 00 00  movzx       eax,byte ptr [rbx+89h]
                    00
  00000000000005BC: 88 46 23           mov         byte ptr [rsi+23h],al
  00000000000005BF: 0F B6 83 8A 00 00  movzx       eax,byte ptr [rbx+8Ah]
                    00
  00000000000005C6: 88 46 24           mov         byte ptr [rsi+24h],al
  00000000000005C9: 0F B6 83 8B 00 00  movzx       eax,byte ptr [rbx+8Bh]
                    00
  00000000000005D0: 88 46 25           mov         byte ptr [rsi+25h],al
  00000000000005D3: 0F B6 83 8C 00 00  movzx       eax,byte ptr [rbx+8Ch]
                    00
  00000000000005DA: 88 46 26           mov         byte ptr [rsi+26h],al
  00000000000005DD: 0F B6 83 8D 00 00  movzx       eax,byte ptr [rbx+8Dh]
                    00
  00000000000005E4: 88 46 27           mov         byte ptr [rsi+27h],al
  00000000000005E7: 0F B6 83 8E 00 00  movzx       eax,byte ptr [rbx+8Eh]
                    00
  00000000000005EE: 88 46 28           mov         byte ptr [rsi+28h],al
  00000000000005F1: 0F B6 83 8F 00 00  movzx       eax,byte ptr [rbx+8Fh]
                    00
  00000000000005F8: 88 46 29           mov         byte ptr [rsi+29h],al
  00000000000005FB: 0F B6 83 90 00 00  movzx       eax,byte ptr [rbx+90h]
                    00
  0000000000000602: 88 46 2A           mov         byte ptr [rsi+2Ah],al
  0000000000000605: 0F B6 83 91 00 00  movzx       eax,byte ptr [rbx+91h]
                    00
  000000000000060C: 88 46 2B           mov         byte ptr [rsi+2Bh],al
  000000000000060F: 0F B6 83 92 00 00  movzx       eax,byte ptr [rbx+92h]
                    00
  0000000000000616: 88 46 2C           mov         byte ptr [rsi+2Ch],al
  0000000000000619: 0F B6 83 93 00 00  movzx       eax,byte ptr [rbx+93h]
                    00
  0000000000000620: 88 46 2D           mov         byte ptr [rsi+2Dh],al
  0000000000000623: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000626: FF 50 40           call        qword ptr [rax+40h]
  0000000000000629: E9 0E 03 00 00     jmp         000000000000093C
  000000000000062E: 83 F8 08           cmp         eax,8
  0000000000000631: 0F 85 25 02 00 00  jne         000000000000085C
  0000000000000637: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000063C: 48 85 C0           test        rax,rax
  000000000000063F: 74 10              je          0000000000000651
  0000000000000641: 48 8B D5           mov         rdx,rbp
  0000000000000644: 48 8B C8           mov         rcx,rax
  0000000000000647: E8 00 00 00 00     call        ??0TFtEE232H@@QEAA@PEAUft_private_vars@@@Z
  000000000000064C: 48 8B F8           mov         rdi,rax
  000000000000064F: EB 03              jmp         0000000000000654
  0000000000000651: 49 8B FF           mov         rdi,r15
  0000000000000654: 48 85 FF           test        rdi,rdi
  0000000000000657: 0F 84 5A 02 00 00  je          00000000000008B7
  000000000000065D: B9 38 00 00 00     mov         ecx,38h
  0000000000000662: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  0000000000000668: 48 8B F0           mov         rsi,rax
  000000000000066B: 48 85 C0           test        rax,rax
  000000000000066E: 0F 84 3B 02 00 00  je          00000000000008AF
  0000000000000674: 44 39 33           cmp         dword ptr [rbx],r14d
  0000000000000677: 75 0A              jne         0000000000000683
  0000000000000679: 83 7B 04 FF        cmp         dword ptr [rbx+4],0FFFFFFFFh
  000000000000067D: 0F 84 A3 00 00 00  je          0000000000000726
  0000000000000683: B9 B0 00 00 00     mov         ecx,0B0h
  0000000000000688: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  000000000000068E: 4C 8B F0           mov         r14,rax
  0000000000000691: 48 85 C0           test        rax,rax
  0000000000000694: 0F 84 15 02 00 00  je          00000000000008AF
  000000000000069A: 44 89 38           mov         dword ptr [rax],r15d
  000000000000069D: C7 40 04 FF FF FF  mov         dword ptr [rax+4],0FFFFFFFFh
                    FF
  00000000000006A4: C7 40 08 05 00 00  mov         dword ptr [rax+8],5
                    00
  00000000000006AB: 0F 10 03           movups      xmm0,xmmword ptr [rbx]
  00000000000006AE: 0F 11 40 0C        movups      xmmword ptr [rax+0Ch],xmm0
  00000000000006B2: 0F 10 4B 10        movups      xmm1,xmmword ptr [rbx+10h]
  00000000000006B6: 0F 11 48 1C        movups      xmmword ptr [rax+1Ch],xmm1
  00000000000006BA: 0F 10 43 20        movups      xmm0,xmmword ptr [rbx+20h]
  00000000000006BE: 0F 11 40 2C        movups      xmmword ptr [rax+2Ch],xmm0
  00000000000006C2: 0F 10 4B 30        movups      xmm1,xmmword ptr [rbx+30h]
  00000000000006C6: 0F 11 48 3C        movups      xmmword ptr [rax+3Ch],xmm1
  00000000000006CA: 0F 10 43 40        movups      xmm0,xmmword ptr [rbx+40h]
  00000000000006CE: 0F 11 40 4C        movups      xmmword ptr [rax+4Ch],xmm0
  00000000000006D2: 0F 10 4B 50        movups      xmm1,xmmword ptr [rbx+50h]
  00000000000006D6: 0F 11 48 5C        movups      xmmword ptr [rax+5Ch],xmm1
  00000000000006DA: 0F 10 43 60        movups      xmm0,xmmword ptr [rbx+60h]
  00000000000006DE: 0F 11 40 6C        movups      xmmword ptr [rax+6Ch],xmm0
  00000000000006E2: 0F 10 43 70        movups      xmm0,xmmword ptr [rbx+70h]
  00000000000006E6: 0F 11 40 7C        movups      xmmword ptr [rax+7Ch],xmm0
  00000000000006EA: 0F 10 8B 80 00 00  movups      xmm1,xmmword ptr [rbx+80h]
                    00
  00000000000006F1: 0F 11 88 8C 00 00  movups      xmmword ptr [rax+8Ch],xmm1
                    00
  00000000000006F8: 0F 10 83 90 00 00  movups      xmm0,xmmword ptr [rbx+90h]
                    00
  00000000000006FF: 0F 11 80 9C 00 00  movups      xmmword ptr [rax+9Ch],xmm0
                    00
  0000000000000706: 0F B7 83 A0 00 00  movzx       eax,word ptr [rbx+0A0h]
                    00
  000000000000070D: 66 41 89 86 AC 00  mov         word ptr [r14+0ACh],ax
                    00 00
  0000000000000715: 0F B6 83 A2 00 00  movzx       eax,byte ptr [rbx+0A2h]
                    00
  000000000000071C: 49 8B DE           mov         rbx,r14
  000000000000071F: 41 88 86 AE 00 00  mov         byte ptr [r14+0AEh],al
                    00
  0000000000000726: 48 8B 43 10        mov         rax,qword ptr [rbx+10h]
  000000000000072A: 48 8B CF           mov         rcx,rdi
  000000000000072D: 48 89 06           mov         qword ptr [rsi],rax
  0000000000000730: 48 8B 43 20        mov         rax,qword ptr [rbx+20h]
  0000000000000734: 48 89 46 08        mov         qword ptr [rsi+8],rax
  0000000000000738: 48 8D 05 00 00 00  lea         rax,[??_C@_00CNPNBAHC@?$AA@]
                    00
  000000000000073F: 48 89 46 10        mov         qword ptr [rsi+10h],rax
  0000000000000743: 0F B6 83 94 00 00  movzx       eax,byte ptr [rbx+94h]
                    00
  000000000000074A: 88 46 18           mov         byte ptr [rsi+18h],al
  000000000000074D: 0F B6 83 95 00 00  movzx       eax,byte ptr [rbx+95h]
                    00
  0000000000000754: 88 46 19           mov         byte ptr [rsi+19h],al
  0000000000000757: 0F B6 83 96 00 00  movzx       eax,byte ptr [rbx+96h]
                    00
  000000000000075E: 88 46 1A           mov         byte ptr [rsi+1Ah],al
  0000000000000761: 0F B6 83 97 00 00  movzx       eax,byte ptr [rbx+97h]
                    00
  0000000000000768: 88 46 1B           mov         byte ptr [rsi+1Bh],al
  000000000000076B: 0F B6 83 98 00 00  movzx       eax,byte ptr [rbx+98h]
                    00
  0000000000000772: 88 46 1C           mov         byte ptr [rsi+1Ch],al
  0000000000000775: 0F B6 83 99 00 00  movzx       eax,byte ptr [rbx+99h]
                    00
  000000000000077C: 88 46 1D           mov         byte ptr [rsi+1Dh],al
  000000000000077F: 0F B6 83 9A 00 00  movzx       eax,byte ptr [rbx+9Ah]
                    00
  0000000000000786: 88 46 1E           mov         byte ptr [rsi+1Eh],al
  0000000000000789: 0F B6 83 9B 00 00  movzx       eax,byte ptr [rbx+9Bh]
                    00
  0000000000000790: 88 46 1F           mov         byte ptr [rsi+1Fh],al
  0000000000000793: 0F B6 83 9C 00 00  movzx       eax,byte ptr [rbx+9Ch]
                    00
  000000000000079A: 88 46 20           mov         byte ptr [rsi+20h],al
  000000000000079D: 0F B6 83 9D 00 00  movzx       eax,byte ptr [rbx+9Dh]
                    00
  00000000000007A4: 88 46 21           mov         byte ptr [rsi+21h],al
  00000000000007A7: 0F B6 83 9E 00 00  movzx       eax,byte ptr [rbx+9Eh]
                    00
  00000000000007AE: 88 46 22           mov         byte ptr [rsi+22h],al
  00000000000007B1: 0F B6 83 9F 00 00  movzx       eax,byte ptr [rbx+9Fh]
                    00
  00000000000007B8: 88 46 23           mov         byte ptr [rsi+23h],al
  00000000000007BB: 0F B6 83 A0 00 00  movzx       eax,byte ptr [rbx+0A0h]
                    00
  00000000000007C2: 88 46 24           mov         byte ptr [rsi+24h],al
  00000000000007C5: 0F B6 83 A1 00 00  movzx       eax,byte ptr [rbx+0A1h]
                    00
  00000000000007CC: 88 46 25           mov         byte ptr [rsi+25h],al
  00000000000007CF: 0F B6 83 A2 00 00  movzx       eax,byte ptr [rbx+0A2h]
                    00
  00000000000007D6: 88 46 26           mov         byte ptr [rsi+26h],al
  00000000000007D9: 0F B6 83 A3 00 00  movzx       eax,byte ptr [rbx+0A3h]
                    00
  00000000000007E0: 88 46 27           mov         byte ptr [rsi+27h],al
  00000000000007E3: 0F B6 83 A4 00 00  movzx       eax,byte ptr [rbx+0A4h]
                    00
  00000000000007EA: 88 46 28           mov         byte ptr [rsi+28h],al
  00000000000007ED: 0F B6 83 A5 00 00  movzx       eax,byte ptr [rbx+0A5h]
                    00
  00000000000007F4: 88 46 29           mov         byte ptr [rsi+29h],al
  00000000000007F7: 0F B6 83 A6 00 00  movzx       eax,byte ptr [rbx+0A6h]
                    00
  00000000000007FE: 88 46 2A           mov         byte ptr [rsi+2Ah],al
  0000000000000801: 0F B6 83 A7 00 00  movzx       eax,byte ptr [rbx+0A7h]
                    00
  0000000000000808: 88 46 2B           mov         byte ptr [rsi+2Bh],al
  000000000000080B: 0F B6 83 A8 00 00  movzx       eax,byte ptr [rbx+0A8h]
                    00
  0000000000000812: 88 46 2C           mov         byte ptr [rsi+2Ch],al
  0000000000000815: 0F B6 83 A9 00 00  movzx       eax,byte ptr [rbx+0A9h]
                    00
  000000000000081C: 88 46 2D           mov         byte ptr [rsi+2Dh],al
  000000000000081F: 0F B6 83 AA 00 00  movzx       eax,byte ptr [rbx+0AAh]
                    00
  0000000000000826: 88 46 2E           mov         byte ptr [rsi+2Eh],al
  0000000000000829: 0F B6 83 AB 00 00  movzx       eax,byte ptr [rbx+0ABh]
                    00
  0000000000000830: 88 46 2F           mov         byte ptr [rsi+2Fh],al
  0000000000000833: 0F B6 83 AC 00 00  movzx       eax,byte ptr [rbx+0ACh]
                    00
  000000000000083A: 88 46 30           mov         byte ptr [rsi+30h],al
  000000000000083D: 0F B6 83 AD 00 00  movzx       eax,byte ptr [rbx+0ADh]
                    00
  0000000000000844: 88 46 31           mov         byte ptr [rsi+31h],al
  0000000000000847: 0F B6 83 AE 00 00  movzx       eax,byte ptr [rbx+0AEh]
                    00
  000000000000084E: 88 46 32           mov         byte ptr [rsi+32h],al
  0000000000000851: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000854: FF 50 40           call        qword ptr [rax+40h]
  0000000000000857: E9 E0 00 00 00     jmp         000000000000093C
  000000000000085C: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000861: 48 85 C0           test        rax,rax
  0000000000000864: 74 10              je          0000000000000876
  0000000000000866: 48 8B D5           mov         rdx,rbp
  0000000000000869: 48 8B C8           mov         rcx,rax
  000000000000086C: E8 00 00 00 00     call        ??0TFtEE232@@QEAA@PEAUft_private_vars@@@Z
  0000000000000871: 48 8B F8           mov         rdi,rax
  0000000000000874: EB 03              jmp         0000000000000879
  0000000000000876: 49 8B FF           mov         rdi,r15
  0000000000000879: 48 85 FF           test        rdi,rdi
  000000000000087C: 74 39              je          00000000000008B7
  000000000000087E: B9 20 00 00 00     mov         ecx,20h
  0000000000000883: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  0000000000000889: 48 8B F0           mov         rsi,rax
  000000000000088C: 48 85 C0           test        rax,rax
  000000000000088F: 74 1E              je          00000000000008AF
  0000000000000891: 44 39 33           cmp         dword ptr [rbx],r14d
  0000000000000894: 75 06              jne         000000000000089C
  0000000000000896: 83 7B 04 FF        cmp         dword ptr [rbx+4],0FFFFFFFFh
  000000000000089A: 74 54              je          00000000000008F0
  000000000000089C: B9 B0 00 00 00     mov         ecx,0B0h
  00000000000008A1: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  00000000000008A7: 4C 8B F0           mov         r14,rax
  00000000000008AA: 48 85 C0           test        rax,rax
  00000000000008AD: 75 12              jne         00000000000008C1
  00000000000008AF: 48 8B CF           mov         rcx,rdi
  00000000000008B2: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000008B7: B8 05 00 00 00     mov         eax,5
  00000000000008BC: E9 FC F9 FF FF     jmp         00000000000002BD
  00000000000008C1: 44 89 38           mov         dword ptr [rax],r15d
  00000000000008C4: C7 40 04 FF FF FF  mov         dword ptr [rax+4],0FFFFFFFFh
                    FF
  00000000000008CB: 44 89 78 08        mov         dword ptr [rax+8],r15d
  00000000000008CF: 0F 10 03           movups      xmm0,xmmword ptr [rbx]
  00000000000008D2: 0F 11 40 0C        movups      xmmword ptr [rax+0Ch],xmm0
  00000000000008D6: 0F 10 4B 10        movups      xmm1,xmmword ptr [rbx+10h]
  00000000000008DA: 0F 11 48 1C        movups      xmmword ptr [rax+1Ch],xmm1
  00000000000008DE: 0F 10 43 20        movups      xmm0,xmmword ptr [rbx+20h]
  00000000000008E2: 0F 11 40 2C        movups      xmmword ptr [rax+2Ch],xmm0
  00000000000008E6: 8B 43 30           mov         eax,dword ptr [rbx+30h]
  00000000000008E9: 49 8B DE           mov         rbx,r14
  00000000000008EC: 41 89 46 3C        mov         dword ptr [r14+3Ch],eax
  00000000000008F0: 48 8B 43 10        mov         rax,qword ptr [rbx+10h]
  00000000000008F4: 48 89 06           mov         qword ptr [rsi],rax
  00000000000008F7: 48 8B 43 20        mov         rax,qword ptr [rbx+20h]
  00000000000008FB: 48 89 46 08        mov         qword ptr [rsi+8],rax
  00000000000008FF: 48 8D 05 00 00 00  lea         rax,[??_C@_00CNPNBAHC@?$AA@]
                    00
  0000000000000906: 48 89 46 10        mov         qword ptr [rsi+10h],rax
  000000000000090A: 0F B6 43 38        movzx       eax,byte ptr [rbx+38h]
  000000000000090E: 88 46 18           mov         byte ptr [rsi+18h],al
  0000000000000911: 0F B6 43 39        movzx       eax,byte ptr [rbx+39h]
  0000000000000915: 88 46 19           mov         byte ptr [rsi+19h],al
  0000000000000918: 0F B6 43 3A        movzx       eax,byte ptr [rbx+3Ah]
  000000000000091C: 88 46 1A           mov         byte ptr [rsi+1Ah],al
  000000000000091F: 0F B6 43 3B        movzx       eax,byte ptr [rbx+3Bh]
  0000000000000923: 88 46 1B           mov         byte ptr [rsi+1Bh],al
  0000000000000926: 0F B6 43 3C        movzx       eax,byte ptr [rbx+3Ch]
  000000000000092A: 88 46 1C           mov         byte ptr [rsi+1Ch],al
  000000000000092D: 0F B6 43 3D        movzx       eax,byte ptr [rbx+3Dh]
  0000000000000931: 88 46 1D           mov         byte ptr [rsi+1Dh],al
  0000000000000934: 0F B7 43 3E        movzx       eax,word ptr [rbx+3Eh]
  0000000000000938: 66 89 46 1E        mov         word ptr [rsi+1Eh],ax
  000000000000093C: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000093F: 48 8B D6           mov         rdx,rsi
  0000000000000942: 48 8B CF           mov         rcx,rdi
  0000000000000945: FF 50 30           call        qword ptr [rax+30h]
  0000000000000948: 48 8B CE           mov         rcx,rsi
  000000000000094B: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  0000000000000951: 0F B7 43 0E        movzx       eax,word ptr [rbx+0Eh]
  0000000000000955: 25 03 00 00 80     and         eax,80000003h
  000000000000095A: 7D 07              jge         0000000000000963
  000000000000095C: FF C8              dec         eax
  000000000000095E: 83 C8 FC           or          eax,0FFFFFFFCh
  0000000000000961: FF C0              inc         eax
  0000000000000963: 48 8B 53 18        mov         rdx,qword ptr [rbx+18h]
  0000000000000967: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000096C: 44 0F B7 C0        movzx       r8d,ax
  0000000000000970: E8 00 00 00 00     call        ??0TSerialNumber@@QEAA@PEADG@Z
  0000000000000975: 4C 8D 84 24 08 02  lea         r8,[rsp+208h]
                    00 00
  000000000000097D: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000982: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000987: E8 00 00 00 00     call        ?Get@TSerialNumber@@QEAAHPEADPEAH@Z
  000000000000098C: 48 8B 53 28        mov         rdx,qword ptr [rbx+28h]
  0000000000000990: 48 85 D2           test        rdx,rdx
  0000000000000993: 74 5D              je          00000000000009F2
  0000000000000995: 48 83 C9 FF        or          rcx,0FFFFFFFFFFFFFFFFh
  0000000000000999: 48 8B C1           mov         rax,rcx
  000000000000099C: 0F 1F 40 00        nop         dword ptr [rax]
  00000000000009A0: 48 FF C0           inc         rax
  00000000000009A3: 44 38 3C 02        cmp         byte ptr [rdx+rax],r15b
  00000000000009A7: 75 F7              jne         00000000000009A0
  00000000000009A9: 48 85 C0           test        rax,rax
  00000000000009AC: 74 44              je          00000000000009F2
  00000000000009AE: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  00000000000009B3: 0F 1F 40 00        nop         dword ptr [rax]
  00000000000009B7: 66 0F 1F 84 00 00  nop         word ptr [rax+rax]
                    00 00 00
  00000000000009C0: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000009C3: 4D 8D 40 01        lea         r8,[r8+1]
  00000000000009C7: 48 8D 52 01        lea         rdx,[rdx+1]
  00000000000009CB: 41 88 40 FF        mov         byte ptr [r8-1],al
  00000000000009CF: 84 C0              test        al,al
  00000000000009D1: 75 ED              jne         00000000000009C0
  00000000000009D3: 48 8D 44 24 50     lea         rax,[rsp+50h]
  00000000000009D8: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  00000000000009E0: 48 FF C1           inc         rcx
  00000000000009E3: 44 38 3C 08        cmp         byte ptr [rax+rcx],r15b
  00000000000009E7: 75 F7              jne         00000000000009E0
  00000000000009E9: 89 8C 24 08 02 00  mov         dword ptr [rsp+208h],ecx
                    00
  00000000000009F0: EB 07              jmp         00000000000009F9
  00000000000009F2: 8B 8C 24 08 02 00  mov         ecx,dword ptr [rsp+208h]
                    00
  00000000000009F9: 85 C9              test        ecx,ecx
  00000000000009FB: 7E 28              jle         0000000000000A25
  00000000000009FD: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000A02: 4C 8D 84 24 D2 00  lea         r8,[rsp+0D2h]
                    00 00
  0000000000000A0A: 44 8B C9           mov         r9d,ecx
  0000000000000A0D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000A10: 0F BE 02           movsx       eax,byte ptr [rdx]
  0000000000000A13: 4D 8D 40 02        lea         r8,[r8+2]
  0000000000000A17: 48 8D 52 01        lea         rdx,[rdx+1]
  0000000000000A1B: 66 41 89 40 FE     mov         word ptr [r8-2],ax
  0000000000000A20: 49 FF C9           dec         r9
  0000000000000A23: 75 EB              jne         0000000000000A10
  0000000000000A25: B8 81 01 00 00     mov         eax,181h
  0000000000000A2A: 48 8D 94 24 D0 00  lea         rdx,[rsp+0D0h]
                    00 00
  0000000000000A32: 66 03 C8           add         cx,ax
  0000000000000A35: 66 03 C9           add         cx,cx
  0000000000000A38: 66 89 8C 24 D0 00  mov         word ptr [rsp+0D0h],cx
                    00 00
  0000000000000A40: 48 8B CF           mov         rcx,rdi
  0000000000000A43: E8 00 00 00 00     call        ?AddSerialStringDescriptor@TFtE2Data@@QEAAXPEAE@Z
  0000000000000A48: B8 02 03 00 00     mov         eax,302h
  0000000000000A4D: 48 8D 94 24 D0 00  lea         rdx,[rsp+0D0h]
                    00 00
  0000000000000A55: 48 8B CF           mov         rcx,rdi
  0000000000000A58: 44 89 BC 24 08 02  mov         dword ptr [rsp+208h],r15d
                    00 00
  0000000000000A60: 66 89 84 24 D0 00  mov         word ptr [rsp+0D0h],ax
                    00 00
  0000000000000A68: E8 00 00 00 00     call        ?AddPortNamePrefixDescriptor@TFtE2Data@@QEAAHPEAE@Z
  0000000000000A6D: 85 C0              test        eax,eax
  0000000000000A6F: 75 0A              jne         0000000000000A7B
  0000000000000A71: B8 12 00 00 00     mov         eax,12h
  0000000000000A76: E9 42 F8 FF FF     jmp         00000000000002BD
  0000000000000A7B: 66 44 39 7B 32     cmp         word ptr [rbx+32h],r15w
  0000000000000A80: 48 8B CF           mov         rcx,rdi
  0000000000000A83: 41 0F 94 C7        sete        r15b
  0000000000000A87: 41 0F B7 D7        movzx       edx,r15w
  0000000000000A8B: E8 00 00 00 00     call        ?AddOptions@TFtE2Data@@QEAAXG@Z
  0000000000000A90: 0F B7 53 0C        movzx       edx,word ptr [rbx+0Ch]
  0000000000000A94: 66 85 D2           test        dx,dx
  0000000000000A97: 0F 84 1B F8 FF FF  je          00000000000002B8
  0000000000000A9D: 66 83 7B 0E 00     cmp         word ptr [rbx+0Eh],0
  0000000000000AA2: 0F 84 10 F8 FF FF  je          00000000000002B8
  0000000000000AA8: 48 8B CF           mov         rcx,rdi
  0000000000000AAB: E8 00 00 00 00     call        ?AddOemVendorId@TFtE2Data@@QEAAXG@Z
  0000000000000AB0: 0F B7 53 0E        movzx       edx,word ptr [rbx+0Eh]
  0000000000000AB4: 48 8B CF           mov         rcx,rdi
  0000000000000AB7: E8 00 00 00 00     call        ?AddOemProductId@TFtE2Data@@QEAAXG@Z
  0000000000000ABC: 66 83 7B 34 00     cmp         word ptr [rbx+34h],0
  0000000000000AC1: B0 80              mov         al,80h
  0000000000000AC3: 0F B6 C0           movzx       eax,al
  0000000000000AC6: B9 C0 00 00 00     mov         ecx,0C0h
  0000000000000ACB: 0F 45 C1           cmovne      eax,ecx
  0000000000000ACE: 66 83 7B 36 00     cmp         word ptr [rbx+36h],0
  0000000000000AD3: 74 02              je          0000000000000AD7
  0000000000000AD5: 0C 20              or          al,20h
  0000000000000AD7: 0F B6 D0           movzx       edx,al
  0000000000000ADA: 48 8B CF           mov         rcx,rdi
  0000000000000ADD: E8 00 00 00 00     call        ?AddBmAttributes@TFtE2Data@@QEAAXE@Z
  0000000000000AE2: 0F B7 43 30        movzx       eax,word ptr [rbx+30h]
  0000000000000AE6: BA F4 01 00 00     mov         edx,1F4h
  0000000000000AEB: 66 3B C2           cmp         ax,dx
  0000000000000AEE: 73 03              jae         0000000000000AF3
  0000000000000AF0: 0F B7 D0           movzx       edx,ax
  0000000000000AF3: 48 8B CF           mov         rcx,rdi
  0000000000000AF6: E8 00 00 00 00     call        ?AddMaxPower@TFtE2Data@@QEAAXH@Z
  0000000000000AFB: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000B00: 48 8B CF           mov         rcx,rdi
  0000000000000B03: E8 00 00 00 00     call        ?GetSerialString@TFtE2Data@@QEAAXPEAD@Z
  0000000000000B08: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000B0D: 48 FF C9           dec         rcx
  0000000000000B10: 80 79 01 00        cmp         byte ptr [rcx+1],0
  0000000000000B14: 48 8D 49 01        lea         rcx,[rcx+1]
  0000000000000B18: 75 F6              jne         0000000000000B10
  0000000000000B1A: 4C 8D 44 24 20     lea         r8,[rsp+20h]
  0000000000000B1F: 33 D2              xor         edx,edx
  0000000000000B21: 41 0F B6 04 10     movzx       eax,byte ptr [r8+rdx]
  0000000000000B26: 48 8D 52 01        lea         rdx,[rdx+1]
  0000000000000B2A: 88 44 11 FF        mov         byte ptr [rcx+rdx-1],al
  0000000000000B2E: 84 C0              test        al,al
  0000000000000B30: 75 EF              jne         0000000000000B21
  0000000000000B32: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000B35: 48 8B CF           mov         rcx,rdi
  0000000000000B38: FF 50 48           call        qword ptr [rax+48h]
  0000000000000B3B: 4D 85 F6           test        r14,r14
  0000000000000B3E: 74 09              je          0000000000000B49
  0000000000000B40: 49 8B CE           mov         rcx,r14
  0000000000000B43: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  0000000000000B49: 83 7D 28 05        cmp         dword ptr [rbp+28h],5
  0000000000000B4D: 75 1A              jne         0000000000000B69
  0000000000000B4F: 48 8D 94 24 00 02  lea         rdx,[rsp+200h]
                    00 00
  0000000000000B57: 48 8B CD           mov         rcx,rbp
  0000000000000B5A: E8 00 00 00 00     call        FT_GetLatencyTimer
  0000000000000B5F: B2 77              mov         dl,77h
  0000000000000B61: 48 8B CD           mov         rcx,rbp
  0000000000000B64: E8 00 00 00 00     call        FT_SetLatencyTimer
  0000000000000B69: 48 8D 4F 08        lea         rcx,[rdi+8]
  0000000000000B6D: E8 00 00 00 00     call        ?Erase@TEeData@@QEAAHXZ
  0000000000000B72: 85 C0              test        eax,eax
  0000000000000B74: 75 12              jne         0000000000000B88
  0000000000000B76: 48 8B CF           mov         rcx,rdi
  0000000000000B79: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000B7E: B8 0D 00 00 00     mov         eax,0Dh
  0000000000000B83: E9 35 F7 FF FF     jmp         00000000000002BD
  0000000000000B88: 48 8D 4F 08        lea         rcx,[rdi+8]
  0000000000000B8C: E8 00 00 00 00     call        ?Write@TEeData@@QEAAHXZ
  0000000000000B91: 85 C0              test        eax,eax
  0000000000000B93: 74 0D              je          0000000000000BA2
  0000000000000B95: 48 8D 4F 08        lea         rcx,[rdi+8]
  0000000000000B99: E8 00 00 00 00     call        ?Confirm@TEeData@@QEAAHXZ
  0000000000000B9E: 85 C0              test        eax,eax
  0000000000000BA0: 75 12              jne         0000000000000BB4
  0000000000000BA2: 48 8B CF           mov         rcx,rdi
  0000000000000BA5: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000BAA: B8 0C 00 00 00     mov         eax,0Ch
  0000000000000BAF: E9 09 F7 FF FF     jmp         00000000000002BD
  0000000000000BB4: 83 7D 28 05        cmp         dword ptr [rbp+28h],5
  0000000000000BB8: 75 10              jne         0000000000000BCA
  0000000000000BBA: 0F B6 94 24 00 02  movzx       edx,byte ptr [rsp+200h]
                    00 00
  0000000000000BC2: 48 8B CD           mov         rcx,rbp
  0000000000000BC5: E8 00 00 00 00     call        FT_SetLatencyTimer
  0000000000000BCA: 48 8B CF           mov         rcx,rdi
  0000000000000BCD: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000BD2: 33 C0              xor         eax,eax
  0000000000000BD4: E9 E4 F6 FF FF     jmp         00000000000002BD

FT_EE_ProgramEx:
  0000000000000000: 48 85 D2           test        rdx,rdx
  0000000000000003: 75 04              jne         0000000000000009
  0000000000000005: 8D 42 10           lea         eax,[rdx+10h]
  0000000000000008: C3                 ret
  0000000000000009: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  000000000000000E: 4C 89 42 10        mov         qword ptr [rdx+10h],r8
  0000000000000012: 4C 89 4A 18        mov         qword ptr [rdx+18h],r9
  0000000000000016: 48 89 42 20        mov         qword ptr [rdx+20h],rax
  000000000000001A: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  000000000000001F: 48 89 42 28        mov         qword ptr [rdx+28h],rax
  0000000000000023: E9 00 00 00 00     jmp         FT_EE_Program

FT_EE_Read:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000001B: 33 FF              xor         edi,edi
  000000000000001D: 48 8B EA           mov         rbp,rdx
  0000000000000020: 48 8B F1           mov         rsi,rcx
  0000000000000023: 8B DF              mov         ebx,edi
  0000000000000025: 48 85 C0           test        rax,rax
  0000000000000028: 74 13              je          000000000000003D
  000000000000002A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000030: 48 3B C1           cmp         rax,rcx
  0000000000000033: 74 22              je          0000000000000057
  0000000000000035: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000038: 48 85 C0           test        rax,rax
  000000000000003B: 75 F3              jne         0000000000000030
  000000000000003D: B8 01 00 00 00     mov         eax,1
  0000000000000042: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000047: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000004C: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000051: 48 83 C4 20        add         rsp,20h
  0000000000000055: 5F                 pop         rdi
  0000000000000056: C3                 ret
  0000000000000057: 39 1A              cmp         dword ptr [rdx],ebx
  0000000000000059: 75 06              jne         0000000000000061
  000000000000005B: 83 7A 04 FF        cmp         dword ptr [rdx+4],0FFFFFFFFh
  000000000000005F: 74 3F              je          00000000000000A0
  0000000000000061: B9 B0 00 00 00     mov         ecx,0B0h
  0000000000000066: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  000000000000006C: 48 8B D8           mov         rbx,rax
  000000000000006F: 48 85 C0           test        rax,rax
  0000000000000072: 75 07              jne         000000000000007B
  0000000000000074: B8 05 00 00 00     mov         eax,5
  0000000000000079: EB C7              jmp         0000000000000042
  000000000000007B: 89 38              mov         dword ptr [rax],edi
  000000000000007D: C7 40 04 FF FF FF  mov         dword ptr [rax+4],0FFFFFFFFh
                    FF
  0000000000000084: 8B 45 04           mov         eax,dword ptr [rbp+4]
  0000000000000087: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  000000000000008B: 8B 45 08           mov         eax,dword ptr [rbp+8]
  000000000000008E: 48 89 43 18        mov         qword ptr [rbx+18h],rax
  0000000000000092: 8B 45 0C           mov         eax,dword ptr [rbp+0Ch]
  0000000000000095: 48 89 43 20        mov         qword ptr [rbx+20h],rax
  0000000000000099: 8B 45 10           mov         eax,dword ptr [rbp+10h]
  000000000000009C: 48 89 43 28        mov         qword ptr [rbx+28h],rax
  00000000000000A0: 8B 46 28           mov         eax,dword ptr [rsi+28h]
  00000000000000A3: 83 F8 04           cmp         eax,4
  00000000000000A6: 0F 85 8E 00 00 00  jne         000000000000013A
  00000000000000AC: B9 48 08 00 00     mov         ecx,848h
  00000000000000B1: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000B6: 48 85 C0           test        rax,rax
  00000000000000B9: 74 0E              je          00000000000000C9
  00000000000000BB: 48 8B D6           mov         rdx,rsi
  00000000000000BE: 48 8B C8           mov         rcx,rax
  00000000000000C1: E8 00 00 00 00     call        ??0TFtEE2232@@QEAA@PEAUft_private_vars@@@Z
  00000000000000C6: 48 8B F8           mov         rdi,rax
  00000000000000C9: 48 8B F7           mov         rsi,rdi
  00000000000000CC: 48 85 FF           test        rdi,rdi
  00000000000000CF: 75 08              jne         00000000000000D9
  00000000000000D1: 8D 7E 05           lea         edi,[rsi+5]
  00000000000000D4: E9 58 03 00 00     jmp         0000000000000431
  00000000000000D9: 48 8B CF           mov         rcx,rdi
  00000000000000DC: 48 85 DB           test        rbx,rbx
  00000000000000DF: 75 10              jne         00000000000000F1
  00000000000000E1: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000E4: 48 8B D5           mov         rdx,rbp
  00000000000000E7: FF 50 38           call        qword ptr [rax+38h]
  00000000000000EA: 8B F8              mov         edi,eax
  00000000000000EC: E9 4E 03 00 00     jmp         000000000000043F
  00000000000000F1: C7 43 08 01 00 00  mov         dword ptr [rbx+8],1
                    00
  00000000000000F8: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000FB: 48 8B D3           mov         rdx,rbx
  00000000000000FE: FF 50 38           call        qword ptr [rax+38h]
  0000000000000101: 8B F8              mov         edi,eax
  0000000000000103: 85 C0              test        eax,eax
  0000000000000105: 0F 85 26 03 00 00  jne         0000000000000431
  000000000000010B: 0F 10 43 0C        movups      xmm0,xmmword ptr [rbx+0Ch]
  000000000000010F: 0F 11 45 00        movups      xmmword ptr [rbp],xmm0
  0000000000000113: 0F 10 4B 1C        movups      xmm1,xmmword ptr [rbx+1Ch]
  0000000000000117: 0F 11 4D 10        movups      xmmword ptr [rbp+10h],xmm1
  000000000000011B: 0F 10 43 2C        movups      xmm0,xmmword ptr [rbx+2Ch]
  000000000000011F: 0F 11 45 20        movups      xmmword ptr [rbp+20h],xmm0
  0000000000000123: 0F 10 4B 3C        movups      xmm1,xmmword ptr [rbx+3Ch]
  0000000000000127: 0F 11 4D 30        movups      xmmword ptr [rbp+30h],xmm1
  000000000000012B: F2 0F 10 43 4C     movsd       xmm0,mmword ptr [rbx+4Ch]
  0000000000000130: F2 0F 11 45 40     movsd       mmword ptr [rbp+40h],xmm0
  0000000000000135: E9 F7 02 00 00     jmp         0000000000000431
  000000000000013A: 83 F8 05           cmp         eax,5
  000000000000013D: 75 3E              jne         000000000000017D
  000000000000013F: B9 50 08 00 00     mov         ecx,850h
  0000000000000144: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000149: 48 85 C0           test        rax,rax
  000000000000014C: 74 10              je          000000000000015E
  000000000000014E: 48 8B D6           mov         rdx,rsi
  0000000000000151: 48 8B C8           mov         rcx,rax
  0000000000000154: E8 00 00 00 00     call        ??0TFtEE232R@@QEAA@PEAUft_private_vars@@@Z
  0000000000000159: 48 8B F0           mov         rsi,rax
  000000000000015C: EB 03              jmp         0000000000000161
  000000000000015E: 48 8B F7           mov         rsi,rdi
  0000000000000161: 48 85 F6           test        rsi,rsi
  0000000000000164: 0F 84 0A FF FF FF  je          0000000000000074
  000000000000016A: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000016D: 48 8B D5           mov         rdx,rbp
  0000000000000170: 48 8B CE           mov         rcx,rsi
  0000000000000173: FF 50 38           call        qword ptr [rax+38h]
  0000000000000176: 8B F8              mov         edi,eax
  0000000000000178: E9 B4 02 00 00     jmp         0000000000000431
  000000000000017D: B9 48 08 00 00     mov         ecx,848h
  0000000000000182: 83 F8 06           cmp         eax,6
  0000000000000185: 0F 85 A1 00 00 00  jne         000000000000022C
  000000000000018B: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000190: 48 85 C0           test        rax,rax
  0000000000000193: 74 10              je          00000000000001A5
  0000000000000195: 48 8B D6           mov         rdx,rsi
  0000000000000198: 48 8B C8           mov         rcx,rax
  000000000000019B: E8 00 00 00 00     call        ??0TFtEE2232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000001A0: 48 8B F0           mov         rsi,rax
  00000000000001A3: EB 03              jmp         00000000000001A8
  00000000000001A5: 48 8B F7           mov         rsi,rdi
  00000000000001A8: 48 85 F6           test        rsi,rsi
  00000000000001AB: 75 08              jne         00000000000001B5
  00000000000001AD: 8D 7E 05           lea         edi,[rsi+5]
  00000000000001B0: E9 7C 02 00 00     jmp         0000000000000431
  00000000000001B5: 48 8B CE           mov         rcx,rsi
  00000000000001B8: 48 85 DB           test        rbx,rbx
  00000000000001BB: 75 10              jne         00000000000001CD
  00000000000001BD: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000001C0: 48 8B D5           mov         rdx,rbp
  00000000000001C3: FF 50 38           call        qword ptr [rax+38h]
  00000000000001C6: 8B F8              mov         edi,eax
  00000000000001C8: E9 72 02 00 00     jmp         000000000000043F
  00000000000001CD: C7 43 08 03 00 00  mov         dword ptr [rbx+8],3
                    00
  00000000000001D4: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000001D7: 48 8B D3           mov         rdx,rbx
  00000000000001DA: FF 50 38           call        qword ptr [rax+38h]
  00000000000001DD: 8B F8              mov         edi,eax
  00000000000001DF: 85 C0              test        eax,eax
  00000000000001E1: 0F 85 4A 02 00 00  jne         0000000000000431
  00000000000001E7: 0F 10 43 0C        movups      xmm0,xmmword ptr [rbx+0Ch]
  00000000000001EB: 0F 11 45 00        movups      xmmword ptr [rbp],xmm0
  00000000000001EF: 0F 10 4B 1C        movups      xmm1,xmmword ptr [rbx+1Ch]
  00000000000001F3: 0F 11 4D 10        movups      xmmword ptr [rbp+10h],xmm1
  00000000000001F7: 0F 10 43 2C        movups      xmm0,xmmword ptr [rbx+2Ch]
  00000000000001FB: 0F 11 45 20        movups      xmmword ptr [rbp+20h],xmm0
  00000000000001FF: 0F 10 4B 3C        movups      xmm1,xmmword ptr [rbx+3Ch]
  0000000000000203: 0F 11 4D 30        movups      xmmword ptr [rbp+30h],xmm1
  0000000000000207: 0F 10 43 4C        movups      xmm0,xmmword ptr [rbx+4Ch]
  000000000000020B: 0F 11 45 40        movups      xmmword ptr [rbp+40h],xmm0
  000000000000020F: 0F 10 4B 5C        movups      xmm1,xmmword ptr [rbx+5Ch]
  0000000000000213: 0F 11 4D 50        movups      xmmword ptr [rbp+50h],xmm1
  0000000000000217: 0F 10 43 6C        movups      xmm0,xmmword ptr [rbx+6Ch]
  000000000000021B: 0F 11 45 60        movups      xmmword ptr [rbp+60h],xmm0
  000000000000021F: 0F B7 43 7C        movzx       eax,word ptr [rbx+7Ch]
  0000000000000223: 66 89 45 70        mov         word ptr [rbp+70h],ax
  0000000000000227: E9 05 02 00 00     jmp         0000000000000431
  000000000000022C: 83 F8 07           cmp         eax,7
  000000000000022F: 0F 85 B1 00 00 00  jne         00000000000002E6
  0000000000000235: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000023A: 48 85 C0           test        rax,rax
  000000000000023D: 74 10              je          000000000000024F
  000000000000023F: 48 8B D6           mov         rdx,rsi
  0000000000000242: 48 8B C8           mov         rcx,rax
  0000000000000245: E8 00 00 00 00     call        ??0TFtEE4232H@@QEAA@PEAUft_private_vars@@@Z
  000000000000024A: 48 8B F0           mov         rsi,rax
  000000000000024D: EB 03              jmp         0000000000000252
  000000000000024F: 48 8B F7           mov         rsi,rdi
  0000000000000252: 48 85 F6           test        rsi,rsi
  0000000000000255: 75 08              jne         000000000000025F
  0000000000000257: 8D 7E 05           lea         edi,[rsi+5]
  000000000000025A: E9 D2 01 00 00     jmp         0000000000000431
  000000000000025F: 48 8B CE           mov         rcx,rsi
  0000000000000262: 48 85 DB           test        rbx,rbx
  0000000000000265: 75 10              jne         0000000000000277
  0000000000000267: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000026A: 48 8B D5           mov         rdx,rbp
  000000000000026D: FF 50 38           call        qword ptr [rax+38h]
  0000000000000270: 8B F8              mov         edi,eax
  0000000000000272: E9 C8 01 00 00     jmp         000000000000043F
  0000000000000277: C7 43 08 04 00 00  mov         dword ptr [rbx+8],4
                    00
  000000000000027E: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000281: 48 8B D3           mov         rdx,rbx
  0000000000000284: FF 50 38           call        qword ptr [rax+38h]
  0000000000000287: 8B F8              mov         edi,eax
  0000000000000289: 85 C0              test        eax,eax
  000000000000028B: 0F 85 A0 01 00 00  jne         0000000000000431
  0000000000000291: 0F 10 43 0C        movups      xmm0,xmmword ptr [rbx+0Ch]
  0000000000000295: 0F 11 45 00        movups      xmmword ptr [rbp],xmm0
  0000000000000299: 0F 10 4B 1C        movups      xmm1,xmmword ptr [rbx+1Ch]
  000000000000029D: 0F 11 4D 10        movups      xmmword ptr [rbp+10h],xmm1
  00000000000002A1: 0F 10 43 2C        movups      xmm0,xmmword ptr [rbx+2Ch]
  00000000000002A5: 0F 11 45 20        movups      xmmword ptr [rbp+20h],xmm0
  00000000000002A9: 0F 10 4B 3C        movups      xmm1,xmmword ptr [rbx+3Ch]
  00000000000002AD: 0F 11 4D 30        movups      xmmword ptr [rbp+30h],xmm1
  00000000000002B1: 0F 10 43 4C        movups      xmm0,xmmword ptr [rbx+4Ch]
  00000000000002B5: 0F 11 45 40        movups      xmmword ptr [rbp+40h],xmm0
  00000000000002B9: 0F 10 4B 5C        movups      xmm1,xmmword ptr [rbx+5Ch]
  00000000000002BD: 0F 11 4D 50        movups      xmmword ptr [rbp+50h],xmm1
  00000000000002C1: 0F 10 43 6C        movups      xmm0,xmmword ptr [rbx+6Ch]
  00000000000002C5: 0F 11 45 60        movups      xmmword ptr [rbp+60h],xmm0
  00000000000002C9: 0F 10 4B 7C        movups      xmm1,xmmword ptr [rbx+7Ch]
  00000000000002CD: 0F 11 4D 70        movups      xmmword ptr [rbp+70h],xmm1
  00000000000002D1: F2 0F 10 83 8C 00  movsd       xmm0,mmword ptr [rbx+8Ch]
                    00 00
  00000000000002D9: F2 0F 11 85 80 00  movsd       mmword ptr [rbp+80h],xmm0
                    00 00
  00000000000002E1: E9 4B 01 00 00     jmp         0000000000000431
  00000000000002E6: 83 F8 08           cmp         eax,8
  00000000000002E9: 0F 85 D6 00 00 00  jne         00000000000003C5
  00000000000002EF: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000002F4: 48 85 C0           test        rax,rax
  00000000000002F7: 74 10              je          0000000000000309
  00000000000002F9: 48 8B D6           mov         rdx,rsi
  00000000000002FC: 48 8B C8           mov         rcx,rax
  00000000000002FF: E8 00 00 00 00     call        ??0TFtEE232H@@QEAA@PEAUft_private_vars@@@Z
  0000000000000304: 48 8B F0           mov         rsi,rax
  0000000000000307: EB 03              jmp         000000000000030C
  0000000000000309: 48 8B F7           mov         rsi,rdi
  000000000000030C: 48 85 F6           test        rsi,rsi
  000000000000030F: 75 08              jne         0000000000000319
  0000000000000311: 8D 7E 05           lea         edi,[rsi+5]
  0000000000000314: E9 18 01 00 00     jmp         0000000000000431
  0000000000000319: 48 8B CE           mov         rcx,rsi
  000000000000031C: 48 85 DB           test        rbx,rbx
  000000000000031F: 75 10              jne         0000000000000331
  0000000000000321: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000324: 48 8B D5           mov         rdx,rbp
  0000000000000327: FF 50 38           call        qword ptr [rax+38h]
  000000000000032A: 8B F8              mov         edi,eax
  000000000000032C: E9 0E 01 00 00     jmp         000000000000043F
  0000000000000331: BF 05 00 00 00     mov         edi,5
  0000000000000336: 48 8B D3           mov         rdx,rbx
  0000000000000339: 89 7B 08           mov         dword ptr [rbx+8],edi
  000000000000033C: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000033F: FF 50 38           call        qword ptr [rax+38h]
  0000000000000342: 8B F8              mov         edi,eax
  0000000000000344: 85 C0              test        eax,eax
  0000000000000346: 0F 85 E5 00 00 00  jne         0000000000000431
  000000000000034C: 0F 10 43 0C        movups      xmm0,xmmword ptr [rbx+0Ch]
  0000000000000350: 0F 11 45 00        movups      xmmword ptr [rbp],xmm0
  0000000000000354: 0F 10 4B 1C        movups      xmm1,xmmword ptr [rbx+1Ch]
  0000000000000358: 0F 11 4D 10        movups      xmmword ptr [rbp+10h],xmm1
  000000000000035C: 0F 10 43 2C        movups      xmm0,xmmword ptr [rbx+2Ch]
  0000000000000360: 0F 11 45 20        movups      xmmword ptr [rbp+20h],xmm0
  0000000000000364: 0F 10 4B 3C        movups      xmm1,xmmword ptr [rbx+3Ch]
  0000000000000368: 0F 11 4D 30        movups      xmmword ptr [rbp+30h],xmm1
  000000000000036C: 0F 10 43 4C        movups      xmm0,xmmword ptr [rbx+4Ch]
  0000000000000370: 0F 11 45 40        movups      xmmword ptr [rbp+40h],xmm0
  0000000000000374: 0F 10 4B 5C        movups      xmm1,xmmword ptr [rbx+5Ch]
  0000000000000378: 0F 11 4D 50        movups      xmmword ptr [rbp+50h],xmm1
  000000000000037C: 0F 10 43 6C        movups      xmm0,xmmword ptr [rbx+6Ch]
  0000000000000380: 0F 11 45 60        movups      xmmword ptr [rbp+60h],xmm0
  0000000000000384: 0F 10 43 7C        movups      xmm0,xmmword ptr [rbx+7Ch]
  0000000000000388: 0F 11 45 70        movups      xmmword ptr [rbp+70h],xmm0
  000000000000038C: 0F 10 8B 8C 00 00  movups      xmm1,xmmword ptr [rbx+8Ch]
                    00
  0000000000000393: 0F 11 8D 80 00 00  movups      xmmword ptr [rbp+80h],xmm1
                    00
  000000000000039A: 0F 10 83 9C 00 00  movups      xmm0,xmmword ptr [rbx+9Ch]
                    00
  00000000000003A1: 0F 11 85 90 00 00  movups      xmmword ptr [rbp+90h],xmm0
                    00
  00000000000003A8: 0F B7 83 AC 00 00  movzx       eax,word ptr [rbx+0ACh]
                    00
  00000000000003AF: 66 89 85 A0 00 00  mov         word ptr [rbp+0A0h],ax
                    00
  00000000000003B6: 0F B6 83 AE 00 00  movzx       eax,byte ptr [rbx+0AEh]
                    00
  00000000000003BD: 88 85 A2 00 00 00  mov         byte ptr [rbp+0A2h],al
  00000000000003C3: EB 6C              jmp         0000000000000431
  00000000000003C5: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000003CA: 48 85 C0           test        rax,rax
  00000000000003CD: 74 10              je          00000000000003DF
  00000000000003CF: 48 8B D6           mov         rdx,rsi
  00000000000003D2: 48 8B C8           mov         rcx,rax
  00000000000003D5: E8 00 00 00 00     call        ??0TFtEE232@@QEAA@PEAUft_private_vars@@@Z
  00000000000003DA: 48 8B F0           mov         rsi,rax
  00000000000003DD: EB 03              jmp         00000000000003E2
  00000000000003DF: 48 8B F7           mov         rsi,rdi
  00000000000003E2: 48 85 F6           test        rsi,rsi
  00000000000003E5: 75 05              jne         00000000000003EC
  00000000000003E7: 8D 7E 05           lea         edi,[rsi+5]
  00000000000003EA: EB 45              jmp         0000000000000431
  00000000000003EC: 48 8B CE           mov         rcx,rsi
  00000000000003EF: 48 85 DB           test        rbx,rbx
  00000000000003F2: 75 0D              jne         0000000000000401
  00000000000003F4: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000003F7: 48 8B D5           mov         rdx,rbp
  00000000000003FA: FF 50 38           call        qword ptr [rax+38h]
  00000000000003FD: 8B F8              mov         edi,eax
  00000000000003FF: EB 3E              jmp         000000000000043F
  0000000000000401: 89 7B 08           mov         dword ptr [rbx+8],edi
  0000000000000404: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000407: 48 8B D3           mov         rdx,rbx
  000000000000040A: FF 50 38           call        qword ptr [rax+38h]
  000000000000040D: 8B F8              mov         edi,eax
  000000000000040F: 85 C0              test        eax,eax
  0000000000000411: 75 1E              jne         0000000000000431
  0000000000000413: 0F 10 43 0C        movups      xmm0,xmmword ptr [rbx+0Ch]
  0000000000000417: 0F 11 45 00        movups      xmmword ptr [rbp],xmm0
  000000000000041B: 0F 10 4B 1C        movups      xmm1,xmmword ptr [rbx+1Ch]
  000000000000041F: 0F 11 4D 10        movups      xmmword ptr [rbp+10h],xmm1
  0000000000000423: 0F 10 43 2C        movups      xmm0,xmmword ptr [rbx+2Ch]
  0000000000000427: 0F 11 45 20        movups      xmmword ptr [rbp+20h],xmm0
  000000000000042B: 8B 43 3C           mov         eax,dword ptr [rbx+3Ch]
  000000000000042E: 89 45 30           mov         dword ptr [rbp+30h],eax
  0000000000000431: 48 85 DB           test        rbx,rbx
  0000000000000434: 74 09              je          000000000000043F
  0000000000000436: 48 8B CB           mov         rcx,rbx
  0000000000000439: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  000000000000043F: 48 85 F6           test        rsi,rsi
  0000000000000442: 74 08              je          000000000000044C
  0000000000000444: 48 8B CE           mov         rcx,rsi
  0000000000000447: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  000000000000044C: 8B C7              mov         eax,edi
  000000000000044E: E9 EF FB FF FF     jmp         0000000000000042

FT_EE_ReadConfig:
  0000000000000000: 88 54 24 10        mov         byte ptr [rsp+10h],dl
  0000000000000004: 48 83 EC 48        sub         rsp,48h
  0000000000000008: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000F: 4C 8B D1           mov         r10,rcx
  0000000000000012: 48 8B D0           mov         rdx,rax
  0000000000000015: 48 85 C0           test        rax,rax
  0000000000000018: 74 13              je          000000000000002D
  000000000000001A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000020: 48 3B D1           cmp         rdx,rcx
  0000000000000023: 74 12              je          0000000000000037
  0000000000000025: 48 8B 12           mov         rdx,qword ptr [rdx]
  0000000000000028: 48 85 D2           test        rdx,rdx
  000000000000002B: 75 F3              jne         0000000000000020
  000000000000002D: B8 01 00 00 00     mov         eax,1
  0000000000000032: 48 83 C4 48        add         rsp,48h
  0000000000000036: C3                 ret
  0000000000000037: 8B 49 28           mov         ecx,dword ptr [rcx+28h]
  000000000000003A: 83 E9 08           sub         ecx,8
  000000000000003D: 83 F9 01           cmp         ecx,1
  0000000000000040: 76 0A              jbe         000000000000004C
  0000000000000042: B8 11 00 00 00     mov         eax,11h
  0000000000000047: 48 83 C4 48        add         rsp,48h
  000000000000004B: C3                 ret
  000000000000004C: 48 85 C0           test        rax,rax
  000000000000004F: 74 0D              je          000000000000005E
  0000000000000051: 49 3B C2           cmp         rax,r10
  0000000000000054: 74 14              je          000000000000006A
  0000000000000056: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000059: 48 85 C0           test        rax,rax
  000000000000005C: 75 F3              jne         0000000000000051
  000000000000005E: B9 01 00 00 00     mov         ecx,1
  0000000000000063: 8B C1              mov         eax,ecx
  0000000000000065: 48 83 C4 48        add         rsp,48h
  0000000000000069: C3                 ret
  000000000000006A: 49 8B 42 30        mov         rax,qword ptr [r10+30h]
  000000000000006E: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000073: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000078: 8B 90 CC 01 00 00  mov         edx,dword ptr [rax+1CCh]
  000000000000007E: 33 DB              xor         ebx,ebx
  0000000000000080: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000085: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  000000000000008A: B9 01 00 00 00     mov         ecx,1
  000000000000008F: 89 4C 24 28        mov         dword ptr [rsp+28h],ecx
  0000000000000093: 44 8B C9           mov         r9d,ecx
  0000000000000096: 49 8B 4A 10        mov         rcx,qword ptr [r10+10h]
  000000000000009A: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  000000000000009F: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  00000000000000A4: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000000AA: B9 04 00 00 00     mov         ecx,4
  00000000000000AF: 85 C0              test        eax,eax
  00000000000000B1: 0F 45 CB           cmovne      ecx,ebx
  00000000000000B4: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  00000000000000B9: 8B C1              mov         eax,ecx
  00000000000000BB: 48 83 C4 48        add         rsp,48h
  00000000000000BF: C3                 ret

FT_EE_ReadECC:
  0000000000000000: 88 54 24 10        mov         byte ptr [rsp+10h],dl
  0000000000000004: 48 83 EC 48        sub         rsp,48h
  0000000000000008: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000F: 4C 8B D1           mov         r10,rcx
  0000000000000012: 48 8B D0           mov         rdx,rax
  0000000000000015: 48 85 C0           test        rax,rax
  0000000000000018: 74 13              je          000000000000002D
  000000000000001A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000020: 48 3B D1           cmp         rdx,rcx
  0000000000000023: 74 12              je          0000000000000037
  0000000000000025: 48 8B 12           mov         rdx,qword ptr [rdx]
  0000000000000028: 48 85 D2           test        rdx,rdx
  000000000000002B: 75 F3              jne         0000000000000020
  000000000000002D: B8 01 00 00 00     mov         eax,1
  0000000000000032: 48 83 C4 48        add         rsp,48h
  0000000000000036: C3                 ret
  0000000000000037: 8B 49 28           mov         ecx,dword ptr [rcx+28h]
  000000000000003A: 83 E9 08           sub         ecx,8
  000000000000003D: 83 F9 01           cmp         ecx,1
  0000000000000040: 76 0A              jbe         000000000000004C
  0000000000000042: B8 11 00 00 00     mov         eax,11h
  0000000000000047: 48 83 C4 48        add         rsp,48h
  000000000000004B: C3                 ret
  000000000000004C: 48 85 C0           test        rax,rax
  000000000000004F: 74 0D              je          000000000000005E
  0000000000000051: 49 3B C2           cmp         rax,r10
  0000000000000054: 74 14              je          000000000000006A
  0000000000000056: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000059: 48 85 C0           test        rax,rax
  000000000000005C: 75 F3              jne         0000000000000051
  000000000000005E: B9 01 00 00 00     mov         ecx,1
  0000000000000063: 8B C1              mov         eax,ecx
  0000000000000065: 48 83 C4 48        add         rsp,48h
  0000000000000069: C3                 ret
  000000000000006A: 49 8B 42 30        mov         rax,qword ptr [r10+30h]
  000000000000006E: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000073: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000078: 8B 90 D4 01 00 00  mov         edx,dword ptr [rax+1D4h]
  000000000000007E: 33 DB              xor         ebx,ebx
  0000000000000080: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000085: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  000000000000008A: 49 8B 4A 10        mov         rcx,qword ptr [r10+10h]
  000000000000008E: C7 44 24 28 02 00  mov         dword ptr [rsp+28h],2
                    00 00
  0000000000000096: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  000000000000009B: 44 8D 4B 01        lea         r9d,[rbx+1]
  000000000000009F: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  00000000000000A4: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000000AA: B9 04 00 00 00     mov         ecx,4
  00000000000000AF: 85 C0              test        eax,eax
  00000000000000B1: 0F 45 CB           cmovne      ecx,ebx
  00000000000000B4: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  00000000000000B9: 8B C1              mov         eax,ecx
  00000000000000BB: 48 83 C4 48        add         rsp,48h
  00000000000000BF: C3                 ret

FT_EE_ReadEx:
  0000000000000000: 48 85 D2           test        rdx,rdx
  0000000000000003: 75 04              jne         0000000000000009
  0000000000000005: 8D 42 10           lea         eax,[rdx+10h]
  0000000000000008: C3                 ret
  0000000000000009: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  000000000000000E: 4C 89 42 10        mov         qword ptr [rdx+10h],r8
  0000000000000012: 4C 89 4A 18        mov         qword ptr [rdx+18h],r9
  0000000000000016: 48 89 42 20        mov         qword ptr [rdx+20h],rax
  000000000000001A: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  000000000000001F: 48 89 42 28        mov         qword ptr [rdx+28h],rax
  0000000000000023: E9 00 00 00 00     jmp         FT_EE_Read

FT_EE_UARead:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 20        sub         rsp,20h
  000000000000001A: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000021: 33 FF              xor         edi,edi
  0000000000000023: 4D 8B F1           mov         r14,r9
  0000000000000026: 41 8B F0           mov         esi,r8d
  0000000000000029: 48 8B EA           mov         rbp,rdx
  000000000000002C: 48 8B D9           mov         rbx,rcx
  000000000000002F: 48 85 C0           test        rax,rax
  0000000000000032: 74 0D              je          0000000000000041
  0000000000000034: 48 3B C1           cmp         rax,rcx
  0000000000000037: 74 28              je          0000000000000061
  0000000000000039: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000003C: 48 85 C0           test        rax,rax
  000000000000003F: 75 F3              jne         0000000000000034
  0000000000000041: B8 01 00 00 00     mov         eax,1
  0000000000000046: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000004B: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  0000000000000050: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000055: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  000000000000005A: 48 83 C4 20        add         rsp,20h
  000000000000005E: 41 5E              pop         r14
  0000000000000060: C3                 ret
  0000000000000061: 48 85 D2           test        rdx,rdx
  0000000000000064: 75 05              jne         000000000000006B
  0000000000000066: 8D 42 06           lea         eax,[rdx+6]
  0000000000000069: EB DB              jmp         0000000000000046
  000000000000006B: 45 85 C0           test        r8d,r8d
  000000000000006E: 75 04              jne         0000000000000074
  0000000000000070: 33 C0              xor         eax,eax
  0000000000000072: EB D2              jmp         0000000000000046
  0000000000000074: 8B 41 28           mov         eax,dword ptr [rcx+28h]
  0000000000000077: B9 48 08 00 00     mov         ecx,848h
  000000000000007C: 83 F8 04           cmp         eax,4
  000000000000007F: 75 21              jne         00000000000000A2
  0000000000000081: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000086: 48 85 C0           test        rax,rax
  0000000000000089: 0F 84 AD 00 00 00  je          000000000000013C
  000000000000008F: 48 8B D3           mov         rdx,rbx
  0000000000000092: 48 8B C8           mov         rcx,rax
  0000000000000095: E8 00 00 00 00     call        ??0TFtEE2232@@QEAA@PEAUft_private_vars@@@Z
  000000000000009A: 48 8B D8           mov         rbx,rax
  000000000000009D: E9 9D 00 00 00     jmp         000000000000013F
  00000000000000A2: 83 F8 06           cmp         eax,6
  00000000000000A5: 75 1E              jne         00000000000000C5
  00000000000000A7: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000AC: 48 85 C0           test        rax,rax
  00000000000000AF: 0F 84 87 00 00 00  je          000000000000013C
  00000000000000B5: 48 8B D3           mov         rdx,rbx
  00000000000000B8: 48 8B C8           mov         rcx,rax
  00000000000000BB: E8 00 00 00 00     call        ??0TFtEE2232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000000C0: 48 8B D8           mov         rbx,rax
  00000000000000C3: EB 7A              jmp         000000000000013F
  00000000000000C5: 83 F8 07           cmp         eax,7
  00000000000000C8: 75 1A              jne         00000000000000E4
  00000000000000CA: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000CF: 48 85 C0           test        rax,rax
  00000000000000D2: 74 68              je          000000000000013C
  00000000000000D4: 48 8B D3           mov         rdx,rbx
  00000000000000D7: 48 8B C8           mov         rcx,rax
  00000000000000DA: E8 00 00 00 00     call        ??0TFtEE4232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000000DF: 48 8B D8           mov         rbx,rax
  00000000000000E2: EB 5B              jmp         000000000000013F
  00000000000000E4: 83 F8 08           cmp         eax,8
  00000000000000E7: 75 1A              jne         0000000000000103
  00000000000000E9: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000EE: 48 85 C0           test        rax,rax
  00000000000000F1: 74 49              je          000000000000013C
  00000000000000F3: 48 8B D3           mov         rdx,rbx
  00000000000000F6: 48 8B C8           mov         rcx,rax
  00000000000000F9: E8 00 00 00 00     call        ??0TFtEE232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000000FE: 48 8B D8           mov         rbx,rax
  0000000000000101: EB 3C              jmp         000000000000013F
  0000000000000103: 83 F8 09           cmp         eax,9
  0000000000000106: 75 1A              jne         0000000000000122
  0000000000000108: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000010D: 48 85 C0           test        rax,rax
  0000000000000110: 74 2A              je          000000000000013C
  0000000000000112: 48 8B D3           mov         rdx,rbx
  0000000000000115: 48 8B C8           mov         rcx,rax
  0000000000000118: E8 00 00 00 00     call        ??0TFtEEFTX@@QEAA@PEAUft_private_vars@@@Z
  000000000000011D: 48 8B D8           mov         rbx,rax
  0000000000000120: EB 1D              jmp         000000000000013F
  0000000000000122: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000127: 48 85 C0           test        rax,rax
  000000000000012A: 74 10              je          000000000000013C
  000000000000012C: 48 8B D3           mov         rdx,rbx
  000000000000012F: 48 8B C8           mov         rcx,rax
  0000000000000132: E8 00 00 00 00     call        ??0TFtEE232@@QEAA@PEAUft_private_vars@@@Z
  0000000000000137: 48 8B D8           mov         rbx,rax
  000000000000013A: EB 03              jmp         000000000000013F
  000000000000013C: 48 8B DF           mov         rbx,rdi
  000000000000013F: 48 85 DB           test        rbx,rbx
  0000000000000142: 75 08              jne         000000000000014C
  0000000000000144: 8D 43 05           lea         eax,[rbx+5]
  0000000000000147: E9 FA FE FF FF     jmp         0000000000000046
  000000000000014C: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000014F: 48 8B CB           mov         rcx,rbx
  0000000000000152: FF 10              call        qword ptr [rax]
  0000000000000154: 85 C0              test        eax,eax
  0000000000000156: 75 12              jne         000000000000016A
  0000000000000158: 48 8B CB           mov         rcx,rbx
  000000000000015B: 8D 78 0B           lea         edi,[rax+0Bh]
  000000000000015E: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000163: 8B C7              mov         eax,edi
  0000000000000165: E9 DC FE FF FF     jmp         0000000000000046
  000000000000016A: 4C 8B 13           mov         r10,qword ptr [rbx]
  000000000000016D: 4D 8B CE           mov         r9,r14
  0000000000000170: 44 8B C6           mov         r8d,esi
  0000000000000173: 48 8B D5           mov         rdx,rbp
  0000000000000176: 48 8B CB           mov         rcx,rbx
  0000000000000179: 41 FF 52 28        call        qword ptr [r10+28h]
  000000000000017D: 48 8B CB           mov         rcx,rbx
  0000000000000180: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000185: 8B C7              mov         eax,edi
  0000000000000187: E9 BA FE FF FF     jmp         0000000000000046

FT_EE_UASize:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000016: 33 FF              xor         edi,edi
  0000000000000018: 48 8B F2           mov         rsi,rdx
  000000000000001B: 48 8B D9           mov         rbx,rcx
  000000000000001E: 48 85 C0           test        rax,rax
  0000000000000021: 74 0D              je          0000000000000030
  0000000000000023: 48 3B C1           cmp         rax,rcx
  0000000000000026: 74 1D              je          0000000000000045
  0000000000000028: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002B: 48 85 C0           test        rax,rax
  000000000000002E: 75 F3              jne         0000000000000023
  0000000000000030: B8 01 00 00 00     mov         eax,1
  0000000000000035: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000003A: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  000000000000003F: 48 83 C4 20        add         rsp,20h
  0000000000000043: 5F                 pop         rdi
  0000000000000044: C3                 ret
  0000000000000045: 48 85 D2           test        rdx,rdx
  0000000000000048: 75 13              jne         000000000000005D
  000000000000004A: 8D 42 06           lea         eax,[rdx+6]
  000000000000004D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000052: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000057: 48 83 C4 20        add         rsp,20h
  000000000000005B: 5F                 pop         rdi
  000000000000005C: C3                 ret
  000000000000005D: 8B 41 28           mov         eax,dword ptr [rcx+28h]
  0000000000000060: B9 48 08 00 00     mov         ecx,848h
  0000000000000065: 83 F8 04           cmp         eax,4
  0000000000000068: 75 21              jne         000000000000008B
  000000000000006A: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000006F: 48 85 C0           test        rax,rax
  0000000000000072: 0F 84 AD 00 00 00  je          0000000000000125
  0000000000000078: 48 8B D3           mov         rdx,rbx
  000000000000007B: 48 8B C8           mov         rcx,rax
  000000000000007E: E8 00 00 00 00     call        ??0TFtEE2232@@QEAA@PEAUft_private_vars@@@Z
  0000000000000083: 48 8B D8           mov         rbx,rax
  0000000000000086: E9 9D 00 00 00     jmp         0000000000000128
  000000000000008B: 83 F8 06           cmp         eax,6
  000000000000008E: 75 1E              jne         00000000000000AE
  0000000000000090: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000095: 48 85 C0           test        rax,rax
  0000000000000098: 0F 84 87 00 00 00  je          0000000000000125
  000000000000009E: 48 8B D3           mov         rdx,rbx
  00000000000000A1: 48 8B C8           mov         rcx,rax
  00000000000000A4: E8 00 00 00 00     call        ??0TFtEE2232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000000A9: 48 8B D8           mov         rbx,rax
  00000000000000AC: EB 7A              jmp         0000000000000128
  00000000000000AE: 83 F8 07           cmp         eax,7
  00000000000000B1: 75 1A              jne         00000000000000CD
  00000000000000B3: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000B8: 48 85 C0           test        rax,rax
  00000000000000BB: 74 68              je          0000000000000125
  00000000000000BD: 48 8B D3           mov         rdx,rbx
  00000000000000C0: 48 8B C8           mov         rcx,rax
  00000000000000C3: E8 00 00 00 00     call        ??0TFtEE4232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000000C8: 48 8B D8           mov         rbx,rax
  00000000000000CB: EB 5B              jmp         0000000000000128
  00000000000000CD: 83 F8 08           cmp         eax,8
  00000000000000D0: 75 1A              jne         00000000000000EC
  00000000000000D2: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000D7: 48 85 C0           test        rax,rax
  00000000000000DA: 74 49              je          0000000000000125
  00000000000000DC: 48 8B D3           mov         rdx,rbx
  00000000000000DF: 48 8B C8           mov         rcx,rax
  00000000000000E2: E8 00 00 00 00     call        ??0TFtEE232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000000E7: 48 8B D8           mov         rbx,rax
  00000000000000EA: EB 3C              jmp         0000000000000128
  00000000000000EC: 83 F8 09           cmp         eax,9
  00000000000000EF: 75 1A              jne         000000000000010B
  00000000000000F1: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000F6: 48 85 C0           test        rax,rax
  00000000000000F9: 74 2A              je          0000000000000125
  00000000000000FB: 48 8B D3           mov         rdx,rbx
  00000000000000FE: 48 8B C8           mov         rcx,rax
  0000000000000101: E8 00 00 00 00     call        ??0TFtEEFTX@@QEAA@PEAUft_private_vars@@@Z
  0000000000000106: 48 8B D8           mov         rbx,rax
  0000000000000109: EB 1D              jmp         0000000000000128
  000000000000010B: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000110: 48 85 C0           test        rax,rax
  0000000000000113: 74 10              je          0000000000000125
  0000000000000115: 48 8B D3           mov         rdx,rbx
  0000000000000118: 48 8B C8           mov         rcx,rax
  000000000000011B: E8 00 00 00 00     call        ??0TFtEE232@@QEAA@PEAUft_private_vars@@@Z
  0000000000000120: 48 8B D8           mov         rbx,rax
  0000000000000123: EB 03              jmp         0000000000000128
  0000000000000125: 48 8B DF           mov         rbx,rdi
  0000000000000128: 48 85 DB           test        rbx,rbx
  000000000000012B: 75 13              jne         0000000000000140
  000000000000012D: 8D 43 05           lea         eax,[rbx+5]
  0000000000000130: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000135: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  000000000000013A: 48 83 C4 20        add         rsp,20h
  000000000000013E: 5F                 pop         rdi
  000000000000013F: C3                 ret
  0000000000000140: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000143: 48 8B CB           mov         rcx,rbx
  0000000000000146: FF 10              call        qword ptr [rax]
  0000000000000148: 85 C0              test        eax,eax
  000000000000014A: 74 2A              je          0000000000000176
  000000000000014C: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000014F: 48 8B CB           mov         rcx,rbx
  0000000000000152: FF 50 18           call        qword ptr [rax+18h]
  0000000000000155: 48 8B CB           mov         rcx,rbx
  0000000000000158: 0F B7 C0           movzx       eax,ax
  000000000000015B: 03 C0              add         eax,eax
  000000000000015D: 89 06              mov         dword ptr [rsi],eax
  000000000000015F: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000164: 8B C7              mov         eax,edi
  0000000000000166: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000016B: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000170: 48 83 C4 20        add         rsp,20h
  0000000000000174: 5F                 pop         rdi
  0000000000000175: C3                 ret
  0000000000000176: 89 3E              mov         dword ptr [rsi],edi
  0000000000000178: 48 8B CB           mov         rcx,rbx
  000000000000017B: BF 0B 00 00 00     mov         edi,0Bh
  0000000000000180: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000185: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000018A: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  000000000000018F: 8B C7              mov         eax,edi
  0000000000000191: 48 83 C4 20        add         rsp,20h
  0000000000000195: 5F                 pop         rdi
  0000000000000196: C3                 ret

FT_EE_UAWrite:
  0000000000000000: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  0000000000000005: 56                 push        rsi
  0000000000000006: 57                 push        rdi
  0000000000000007: 41 56              push        r14
  0000000000000009: 48 83 EC 20        sub         rsp,20h
  000000000000000D: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000014: 33 ED              xor         ebp,ebp
  0000000000000016: 45 8B F0           mov         r14d,r8d
  0000000000000019: 48 8B F2           mov         rsi,rdx
  000000000000001C: 48 8B F9           mov         rdi,rcx
  000000000000001F: 48 85 C0           test        rax,rax
  0000000000000022: 74 0D              je          0000000000000031
  0000000000000024: 48 3B C1           cmp         rax,rcx
  0000000000000027: 74 1B              je          0000000000000044
  0000000000000029: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002C: 48 85 C0           test        rax,rax
  000000000000002F: 75 F3              jne         0000000000000024
  0000000000000031: B8 01 00 00 00     mov         eax,1
  0000000000000036: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  000000000000003B: 48 83 C4 20        add         rsp,20h
  000000000000003F: 41 5E              pop         r14
  0000000000000041: 5F                 pop         rdi
  0000000000000042: 5E                 pop         rsi
  0000000000000043: C3                 ret
  0000000000000044: 48 85 D2           test        rdx,rdx
  0000000000000047: 75 11              jne         000000000000005A
  0000000000000049: 8D 42 06           lea         eax,[rdx+6]
  000000000000004C: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000051: 48 83 C4 20        add         rsp,20h
  0000000000000055: 41 5E              pop         r14
  0000000000000057: 5F                 pop         rdi
  0000000000000058: 5E                 pop         rsi
  0000000000000059: C3                 ret
  000000000000005A: 8B 41 28           mov         eax,dword ptr [rcx+28h]
  000000000000005D: 48 89 5C 24 48     mov         qword ptr [rsp+48h],rbx
  0000000000000062: B9 48 08 00 00     mov         ecx,848h
  0000000000000067: 83 F8 04           cmp         eax,4
  000000000000006A: 75 21              jne         000000000000008D
  000000000000006C: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000071: 48 85 C0           test        rax,rax
  0000000000000074: 0F 84 AD 00 00 00  je          0000000000000127
  000000000000007A: 48 8B D7           mov         rdx,rdi
  000000000000007D: 48 8B C8           mov         rcx,rax
  0000000000000080: E8 00 00 00 00     call        ??0TFtEE2232@@QEAA@PEAUft_private_vars@@@Z
  0000000000000085: 48 8B D8           mov         rbx,rax
  0000000000000088: E9 9D 00 00 00     jmp         000000000000012A
  000000000000008D: 83 F8 06           cmp         eax,6
  0000000000000090: 75 1E              jne         00000000000000B0
  0000000000000092: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000097: 48 85 C0           test        rax,rax
  000000000000009A: 0F 84 87 00 00 00  je          0000000000000127
  00000000000000A0: 48 8B D7           mov         rdx,rdi
  00000000000000A3: 48 8B C8           mov         rcx,rax
  00000000000000A6: E8 00 00 00 00     call        ??0TFtEE2232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000000AB: 48 8B D8           mov         rbx,rax
  00000000000000AE: EB 7A              jmp         000000000000012A
  00000000000000B0: 83 F8 07           cmp         eax,7
  00000000000000B3: 75 1A              jne         00000000000000CF
  00000000000000B5: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000BA: 48 85 C0           test        rax,rax
  00000000000000BD: 74 68              je          0000000000000127
  00000000000000BF: 48 8B D7           mov         rdx,rdi
  00000000000000C2: 48 8B C8           mov         rcx,rax
  00000000000000C5: E8 00 00 00 00     call        ??0TFtEE4232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000000CA: 48 8B D8           mov         rbx,rax
  00000000000000CD: EB 5B              jmp         000000000000012A
  00000000000000CF: 83 F8 08           cmp         eax,8
  00000000000000D2: 75 1A              jne         00000000000000EE
  00000000000000D4: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000D9: 48 85 C0           test        rax,rax
  00000000000000DC: 74 49              je          0000000000000127
  00000000000000DE: 48 8B D7           mov         rdx,rdi
  00000000000000E1: 48 8B C8           mov         rcx,rax
  00000000000000E4: E8 00 00 00 00     call        ??0TFtEE232H@@QEAA@PEAUft_private_vars@@@Z
  00000000000000E9: 48 8B D8           mov         rbx,rax
  00000000000000EC: EB 3C              jmp         000000000000012A
  00000000000000EE: 83 F8 09           cmp         eax,9
  00000000000000F1: 75 1A              jne         000000000000010D
  00000000000000F3: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000F8: 48 85 C0           test        rax,rax
  00000000000000FB: 74 2A              je          0000000000000127
  00000000000000FD: 48 8B D7           mov         rdx,rdi
  0000000000000100: 48 8B C8           mov         rcx,rax
  0000000000000103: E8 00 00 00 00     call        ??0TFtEEFTX@@QEAA@PEAUft_private_vars@@@Z
  0000000000000108: 48 8B D8           mov         rbx,rax
  000000000000010B: EB 1D              jmp         000000000000012A
  000000000000010D: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000112: 48 85 C0           test        rax,rax
  0000000000000115: 74 10              je          0000000000000127
  0000000000000117: 48 8B D7           mov         rdx,rdi
  000000000000011A: 48 8B C8           mov         rcx,rax
  000000000000011D: E8 00 00 00 00     call        ??0TFtEE232@@QEAA@PEAUft_private_vars@@@Z
  0000000000000122: 48 8B D8           mov         rbx,rax
  0000000000000125: EB 03              jmp         000000000000012A
  0000000000000127: 48 8B DD           mov         rbx,rbp
  000000000000012A: 48 85 DB           test        rbx,rbx
  000000000000012D: 75 16              jne         0000000000000145
  000000000000012F: 8D 43 05           lea         eax,[rbx+5]
  0000000000000132: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000137: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  000000000000013C: 48 83 C4 20        add         rsp,20h
  0000000000000140: 41 5E              pop         r14
  0000000000000142: 5F                 pop         rdi
  0000000000000143: 5E                 pop         rsi
  0000000000000144: C3                 ret
  0000000000000145: 83 7F 28 05        cmp         dword ptr [rdi+28h],5
  0000000000000149: 75 17              jne         0000000000000162
  000000000000014B: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  0000000000000150: 48 8B CF           mov         rcx,rdi
  0000000000000153: E8 00 00 00 00     call        FT_GetLatencyTimer
  0000000000000158: B2 77              mov         dl,77h
  000000000000015A: 48 8B CF           mov         rcx,rdi
  000000000000015D: E8 00 00 00 00     call        FT_SetLatencyTimer
  0000000000000162: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000165: 48 8B CB           mov         rcx,rbx
  0000000000000168: FF 10              call        qword ptr [rax]
  000000000000016A: 85 C0              test        eax,eax
  000000000000016C: 75 05              jne         0000000000000173
  000000000000016E: 8D 70 0B           lea         esi,[rax+0Bh]
  0000000000000171: EB 51              jmp         00000000000001C4
  0000000000000173: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000176: 45 8B C6           mov         r8d,r14d
  0000000000000179: 48 8B D6           mov         rdx,rsi
  000000000000017C: 48 8B CB           mov         rcx,rbx
  000000000000017F: FF 50 20           call        qword ptr [rax+20h]
  0000000000000182: 85 C0              test        eax,eax
  0000000000000184: 75 05              jne         000000000000018B
  0000000000000186: 8D 70 0C           lea         esi,[rax+0Ch]
  0000000000000189: EB 39              jmp         00000000000001C4
  000000000000018B: 48 8D 4B 08        lea         rcx,[rbx+8]
  000000000000018F: E8 00 00 00 00     call        ?Erase@TEeData@@QEAAHXZ
  0000000000000194: 85 C0              test        eax,eax
  0000000000000196: 75 05              jne         000000000000019D
  0000000000000198: 8D 70 0D           lea         esi,[rax+0Dh]
  000000000000019B: EB 27              jmp         00000000000001C4
  000000000000019D: 48 8D 4B 08        lea         rcx,[rbx+8]
  00000000000001A1: E8 00 00 00 00     call        ?Write@TEeData@@QEAAHXZ
  00000000000001A6: 85 C0              test        eax,eax
  00000000000001A8: 75 05              jne         00000000000001AF
  00000000000001AA: 8D 70 0C           lea         esi,[rax+0Ch]
  00000000000001AD: EB 15              jmp         00000000000001C4
  00000000000001AF: 48 8D 4B 08        lea         rcx,[rbx+8]
  00000000000001B3: E8 00 00 00 00     call        ?Confirm@TEeData@@QEAAHXZ
  00000000000001B8: BE 0C 00 00 00     mov         esi,0Ch
  00000000000001BD: 85 C0              test        eax,eax
  00000000000001BF: 0F 44 EE           cmove       ebp,esi
  00000000000001C2: 8B F5              mov         esi,ebp
  00000000000001C4: 83 7F 28 05        cmp         dword ptr [rdi+28h],5
  00000000000001C8: 75 0D              jne         00000000000001D7
  00000000000001CA: 0F B6 54 24 40     movzx       edx,byte ptr [rsp+40h]
  00000000000001CF: 48 8B CF           mov         rcx,rdi
  00000000000001D2: E8 00 00 00 00     call        FT_SetLatencyTimer
  00000000000001D7: 48 8B CB           mov         rcx,rbx
  00000000000001DA: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000001DF: 8B C6              mov         eax,esi
  00000000000001E1: E9 4C FF FF FF     jmp         0000000000000132

FT_EE_WriteConfig:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 4C 8B D1           mov         r10,rcx
  000000000000000E: 4C 8B C8           mov         r9,rax
  0000000000000011: 48 85 C0           test        rax,rax
  0000000000000014: 74 0D              je          0000000000000023
  0000000000000016: 4C 3B C9           cmp         r9,rcx
  0000000000000019: 74 12              je          000000000000002D
  000000000000001B: 4D 8B 09           mov         r9,qword ptr [r9]
  000000000000001E: 4D 85 C9           test        r9,r9
  0000000000000021: 75 F3              jne         0000000000000016
  0000000000000023: B8 01 00 00 00     mov         eax,1
  0000000000000028: 48 83 C4 48        add         rsp,48h
  000000000000002C: C3                 ret
  000000000000002D: 8B 49 28           mov         ecx,dword ptr [rcx+28h]
  0000000000000030: 83 E9 08           sub         ecx,8
  0000000000000033: 83 F9 01           cmp         ecx,1
  0000000000000036: 76 0A              jbe         0000000000000042
  0000000000000038: B8 11 00 00 00     mov         eax,11h
  000000000000003D: 48 83 C4 48        add         rsp,48h
  0000000000000041: C3                 ret
  0000000000000042: 88 54 24 50        mov         byte ptr [rsp+50h],dl
  0000000000000046: 44 88 44 24 51     mov         byte ptr [rsp+51h],r8b
  000000000000004B: 48 85 C0           test        rax,rax
  000000000000004E: 74 0D              je          000000000000005D
  0000000000000050: 49 3B C2           cmp         rax,r10
  0000000000000053: 74 14              je          0000000000000069
  0000000000000055: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000058: 48 85 C0           test        rax,rax
  000000000000005B: 75 F3              jne         0000000000000050
  000000000000005D: B9 01 00 00 00     mov         ecx,1
  0000000000000062: 8B C1              mov         eax,ecx
  0000000000000064: 48 83 C4 48        add         rsp,48h
  0000000000000068: C3                 ret
  0000000000000069: 49 8B 42 30        mov         rax,qword ptr [r10+30h]
  000000000000006D: 48 8D 4C 24 68     lea         rcx,[rsp+68h]
  0000000000000072: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000077: 8B 90 D0 01 00 00  mov         edx,dword ptr [rax+1D0h]
  000000000000007D: 33 DB              xor         ebx,ebx
  000000000000007F: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000084: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000089: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  000000000000008E: 49 8B 4A 10        mov         rcx,qword ptr [r10+10h]
  0000000000000092: 44 8D 4B 02        lea         r9d,[rbx+2]
  0000000000000096: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  000000000000009A: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000009F: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000000A5: B9 04 00 00 00     mov         ecx,4
  00000000000000AA: 85 C0              test        eax,eax
  00000000000000AC: 0F 45 CB           cmovne      ecx,ebx
  00000000000000AF: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  00000000000000B4: 8B C1              mov         eax,ecx
  00000000000000B6: 48 83 C4 48        add         rsp,48h
  00000000000000BA: C3                 ret

FT_EraseEE:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: C7 44 24 50 AD 0B  mov         dword ptr [rsp+50h],0ADEE0BADh
                    EE AD
  0000000000000013: 48 85 C0           test        rax,rax
  0000000000000016: 74 0D              je          0000000000000025
  0000000000000018: 48 3B C1           cmp         rax,rcx
  000000000000001B: 74 12              je          000000000000002F
  000000000000001D: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000020: 48 85 C0           test        rax,rax
  0000000000000023: 75 F3              jne         0000000000000018
  0000000000000025: B8 01 00 00 00     mov         eax,1
  000000000000002A: 48 83 C4 48        add         rsp,48h
  000000000000002E: C3                 ret
  000000000000002F: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000033: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000037: 48 8D 54 24 58     lea         rdx,[rsp+58h]
  000000000000003C: 48 89 5C 24 60     mov         qword ptr [rsp+60h],rbx
  0000000000000041: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000046: 33 FF              xor         edi,edi
  0000000000000048: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  000000000000004D: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000052: 8B 90 88 00 00 00  mov         edx,dword ptr [rax+88h]
  0000000000000058: BB 04 00 00 00     mov         ebx,4
  000000000000005D: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000062: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  0000000000000066: 44 8B CB           mov         r9d,ebx
  0000000000000069: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000006E: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000074: 85 C0              test        eax,eax
  0000000000000076: 0F 45 DF           cmovne      ebx,edi
  0000000000000079: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  000000000000007E: 8B C3              mov         eax,ebx
  0000000000000080: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  0000000000000085: 48 83 C4 48        add         rsp,48h
  0000000000000089: C3                 ret

FT_Finalise:
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 83 3D 00 00 00 00  cmp         dword ptr [?gInitialised@@3HA],0
                    00
  000000000000000B: 74 3B              je          0000000000000048
  000000000000000D: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtDevListLock@@3PEAXEA]
                    00
  0000000000000014: 48 85 C9           test        rcx,rcx
  0000000000000017: 74 06              je          000000000000001F
  0000000000000019: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
  000000000000001F: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  0000000000000026: 48 85 C9           test        rcx,rcx
  0000000000000029: 74 06              je          0000000000000031
  000000000000002B: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
  0000000000000031: 48 8D 0D 00 00 00  lea         rcx,[?gCS@@3U_RTL_CRITICAL_SECTION@@A]
                    00
  0000000000000038: FF 15 00 00 00 00  call        qword ptr [__imp_DeleteCriticalSection]
  000000000000003E: C7 05 00 00 00 00  mov         dword ptr [?gInitialised@@3HA],0
                    00 00 00 00
  0000000000000048: 48 83 C4 28        add         rsp,28h
  000000000000004C: C3                 ret

FT_GetBitMode:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000048: C7 44 24 28 01 00  mov         dword ptr [rsp+28h],1
                    00 00
  0000000000000050: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000055: 8B 90 7C 01 00 00  mov         edx,dword ptr [rax+17Ch]
  000000000000005B: 45 33 C0           xor         r8d,r8d
  000000000000005E: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000064: B9 04 00 00 00     mov         ecx,4
  0000000000000069: 85 C0              test        eax,eax
  000000000000006B: 0F 45 CB           cmovne      ecx,ebx
  000000000000006E: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000073: 8B C1              mov         eax,ecx
  0000000000000075: 48 83 C4 48        add         rsp,48h
  0000000000000079: C3                 ret

FT_GetComPortNumber:
  0000000000000000: 40 57              push        rdi
  0000000000000002: 48 83 EC 40        sub         rsp,40h
  0000000000000006: 48 8B FA           mov         rdi,rdx
  0000000000000009: 48 85 D2           test        rdx,rdx
  000000000000000C: 0F 84 85 00 00 00  je          0000000000000097
  0000000000000012: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000019: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  000000000000001E: 48 85 C0           test        rax,rax
  0000000000000021: 74 0D              je          0000000000000030
  0000000000000023: 48 3B C1           cmp         rax,rcx
  0000000000000026: 74 25              je          000000000000004D
  0000000000000028: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002B: 48 85 C0           test        rax,rax
  000000000000002E: 75 F3              jne         0000000000000023
  0000000000000030: BB 01 00 00 00     mov         ebx,1
  0000000000000035: 83 3F 00           cmp         dword ptr [rdi],0
  0000000000000038: 8B C3              mov         eax,ebx
  000000000000003A: 75 06              jne         0000000000000042
  000000000000003C: C7 07 FF FF FF FF  mov         dword ptr [rdi],0FFFFFFFFh
  0000000000000042: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000047: 48 83 C4 40        add         rsp,40h
  000000000000004B: 5F                 pop         rdi
  000000000000004C: C3                 ret
  000000000000004D: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000051: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000055: 48 8D 54 24 58     lea         rdx,[rsp+58h]
  000000000000005A: 48 89 74 24 60     mov         qword ptr [rsp+60h],rsi
  000000000000005F: 33 F6              xor         esi,esi
  0000000000000061: BB 04 00 00 00     mov         ebx,4
  0000000000000066: 48 89 74 24 38     mov         qword ptr [rsp+38h],rsi
  000000000000006B: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000070: 8B 90 C8 01 00 00  mov         edx,dword ptr [rax+1C8h]
  0000000000000076: 45 33 C9           xor         r9d,r9d
  0000000000000079: 45 33 C0           xor         r8d,r8d
  000000000000007C: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000080: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000085: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000008B: 85 C0              test        eax,eax
  000000000000008D: 0F 45 DE           cmovne      ebx,esi
  0000000000000090: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  0000000000000095: EB 9E              jmp         0000000000000035
  0000000000000097: B8 06 00 00 00     mov         eax,6
  000000000000009C: 48 83 C4 40        add         rsp,40h
  00000000000000A0: 5F                 pop         rdi
  00000000000000A1: C3                 ret

FT_GetDeviceInfo:
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 41 56              push        r14
  0000000000000009: 48 81 EC B0 00 00  sub         rsp,0B0h
                    00
  0000000000000010: 48 8B DA           mov         rbx,rdx
  0000000000000013: 33 D2              xor         edx,edx
  0000000000000015: 4D 8B F0           mov         r14,r8
  0000000000000018: 48 8B E9           mov         rbp,rcx
  000000000000001B: 44 8D 42 68        lea         r8d,[rdx+68h]
  000000000000001F: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000024: 49 8B F9           mov         rdi,r9
  0000000000000027: E8 00 00 00 00     call        memset
  000000000000002C: 48 8B 15 00 00 00  mov         rdx,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000033: C7 44 24 40 11 00  mov         dword ptr [rsp+40h],11h
                    00 00
  000000000000003B: 48 85 D2           test        rdx,rdx
  000000000000003E: 74 0D              je          000000000000004D
  0000000000000040: 48 3B D5           cmp         rdx,rbp
  0000000000000043: 74 12              je          0000000000000057
  0000000000000045: 48 8B 12           mov         rdx,qword ptr [rdx]
  0000000000000048: 48 85 D2           test        rdx,rdx
  000000000000004B: 75 F3              jne         0000000000000040
  000000000000004D: B8 11 00 00 00     mov         eax,11h
  0000000000000052: E9 FD 01 00 00     jmp         0000000000000254
  0000000000000057: 48 8B 45 30        mov         rax,qword ptr [rbp+30h]
  000000000000005B: 48 8D 8C 24 D0 00  lea         rcx,[rsp+0D0h]
                    00 00
  0000000000000063: 48 89 B4 24 D8 00  mov         qword ptr [rsp+0D8h],rsi
                    00 00
  000000000000006B: 8B 90 98 01 00 00  mov         edx,dword ptr [rax+198h]
  0000000000000071: 33 F6              xor         esi,esi
  0000000000000073: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  0000000000000078: 48 89 74 24 38     mov         qword ptr [rsp+38h],rsi
  000000000000007D: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  0000000000000082: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000087: C7 44 24 28 68 00  mov         dword ptr [rsp+28h],68h
                    00 00
  000000000000008F: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000094: 48 8B 4D 10        mov         rcx,qword ptr [rbp+10h]
  0000000000000098: 44 8D 4E 68        lea         r9d,[rsi+68h]
  000000000000009C: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000000A2: B9 04 00 00 00     mov         ecx,4
  00000000000000A7: 85 C0              test        eax,eax
  00000000000000A9: 0F 45 CE           cmovne      ecx,esi
  00000000000000AC: 85 C9              test        ecx,ecx
  00000000000000AE: 0F 85 94 01 00 00  jne         0000000000000248
  00000000000000B4: 44 8B 4C 24 40     mov         r9d,dword ptr [rsp+40h]
  00000000000000B9: 45 85 C9           test        r9d,r9d
  00000000000000BC: 0F 85 81 01 00 00  jne         0000000000000243
  00000000000000C2: 48 85 DB           test        rbx,rbx
  00000000000000C5: 0F 84 01 01 00 00  je          00000000000001CC
  00000000000000CB: 8B 44 24 44        mov         eax,dword ptr [rsp+44h]
  00000000000000CF: 3D 11 00 36 40     cmp         eax,40360011h
  00000000000000D4: 0F 84 F0 00 00 00  je          00000000000001CA
  00000000000000DA: 3D 12 00 36 40     cmp         eax,40360012h
  00000000000000DF: 75 0B              jne         00000000000000EC
  00000000000000E1: C7 03 05 00 00 00  mov         dword ptr [rbx],5
  00000000000000E7: E9 E0 00 00 00     jmp         00000000000001CC
  00000000000000EC: 3D 00 01 36 40     cmp         eax,40360100h
  00000000000000F1: 75 0B              jne         00000000000000FE
  00000000000000F3: C7 03 04 00 00 00  mov         dword ptr [rbx],4
  00000000000000F9: E9 CE 00 00 00     jmp         00000000000001CC
  00000000000000FE: 3D 01 01 36 40     cmp         eax,40360101h
  0000000000000103: 75 0B              jne         0000000000000110
  0000000000000105: C7 03 06 00 00 00  mov         dword ptr [rbx],6
  000000000000010B: E9 BC 00 00 00     jmp         00000000000001CC
  0000000000000110: 3D 10 01 36 40     cmp         eax,40360110h
  0000000000000115: 75 0B              jne         0000000000000122
  0000000000000117: C7 03 07 00 00 00  mov         dword ptr [rbx],7
  000000000000011D: E9 AA 00 00 00     jmp         00000000000001CC
  0000000000000122: 3D 40 01 36 40     cmp         eax,40360140h
  0000000000000127: 75 0B              jne         0000000000000134
  0000000000000129: C7 03 08 00 00 00  mov         dword ptr [rbx],8
  000000000000012F: E9 98 00 00 00     jmp         00000000000001CC
  0000000000000134: 3D 50 01 36 40     cmp         eax,40360150h
  0000000000000139: 75 0B              jne         0000000000000146
  000000000000013B: C7 03 09 00 00 00  mov         dword ptr [rbx],9
  0000000000000141: E9 86 00 00 00     jmp         00000000000001CC
  0000000000000146: 3D C0 01 36 40     cmp         eax,403601C0h
  000000000000014B: 75 08              jne         0000000000000155
  000000000000014D: C7 03 0A 00 00 00  mov         dword ptr [rbx],0Ah
  0000000000000153: EB 77              jmp         00000000000001CC
  0000000000000155: 3D C1 01 36 40     cmp         eax,403601C1h
  000000000000015A: 75 08              jne         0000000000000164
  000000000000015C: C7 03 0B 00 00 00  mov         dword ptr [rbx],0Bh
  0000000000000162: EB 68              jmp         00000000000001CC
  0000000000000164: 3D C3 01 36 40     cmp         eax,403601C3h
  0000000000000169: 75 08              jne         0000000000000173
  000000000000016B: C7 03 0C 00 00 00  mov         dword ptr [rbx],0Ch
  0000000000000171: EB 59              jmp         00000000000001CC
  0000000000000173: 3D C0 FE 30 40     cmp         eax,4030FEC0h
  0000000000000178: 75 08              jne         0000000000000182
  000000000000017A: C7 03 0D 00 00 00  mov         dword ptr [rbx],0Dh
  0000000000000180: EB 4A              jmp         00000000000001CC
  0000000000000182: 3D 10 03 36 40     cmp         eax,40360310h
  0000000000000187: 75 08              jne         0000000000000191
  0000000000000189: C7 03 0E 00 00 00  mov         dword ptr [rbx],0Eh
  000000000000018F: EB 3B              jmp         00000000000001CC
  0000000000000191: 3D 20 03 36 40     cmp         eax,40360320h
  0000000000000196: 75 08              jne         00000000000001A0
  0000000000000198: C7 03 0F 00 00 00  mov         dword ptr [rbx],0Fh
  000000000000019E: EB 2C              jmp         00000000000001CC
  00000000000001A0: 3D E0 03 36 40     cmp         eax,403603E0h
  00000000000001A5: 75 08              jne         00000000000001AF
  00000000000001A7: C7 03 10 00 00 00  mov         dword ptr [rbx],10h
  00000000000001AD: EB 1D              jmp         00000000000001CC
  00000000000001AF: 3D 10 00 36 40     cmp         eax,40360010h
  00000000000001B4: 75 08              jne         00000000000001BE
  00000000000001B6: C7 03 01 00 00 00  mov         dword ptr [rbx],1
  00000000000001BC: EB 0E              jmp         00000000000001CC
  00000000000001BE: 3D 20 37 38 40     cmp         eax,40383720h
  00000000000001C3: 40 0F 95 C6        setne       sil
  00000000000001C7: 83 C6 02           add         esi,2
  00000000000001CA: 89 33              mov         dword ptr [rbx],esi
  00000000000001CC: 4D 85 F6           test        r14,r14
  00000000000001CF: 74 07              je          00000000000001D8
  00000000000001D1: 8B 44 24 48        mov         eax,dword ptr [rsp+48h]
  00000000000001D5: 41 89 06           mov         dword ptr [r14],eax
  00000000000001D8: 48 85 FF           test        rdi,rdi
  00000000000001DB: 74 22              je          00000000000001FF
  00000000000001DD: 48 8D 44 24 58     lea         rax,[rsp+58h]
  00000000000001E2: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  00000000000001E7: 48 2B F8           sub         rdi,rax
  00000000000001EA: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  00000000000001F0: 0F B6 01           movzx       eax,byte ptr [rcx]
  00000000000001F3: 48 8D 49 01        lea         rcx,[rcx+1]
  00000000000001F7: 88 44 0F FF        mov         byte ptr [rdi+rcx-1],al
  00000000000001FB: 84 C0              test        al,al
  00000000000001FD: 75 F1              jne         00000000000001F0
  00000000000001FF: 4C 8B 84 24 F0 00  mov         r8,qword ptr [rsp+0F0h]
                    00 00
  0000000000000207: 4D 85 C0           test        r8,r8
  000000000000020A: 74 24              je          0000000000000230
  000000000000020C: 48 8D 44 24 68     lea         rax,[rsp+68h]
  0000000000000211: 48 8D 54 24 68     lea         rdx,[rsp+68h]
  0000000000000216: 4C 2B C0           sub         r8,rax
  0000000000000219: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000220: 0F B6 0A           movzx       ecx,byte ptr [rdx]
  0000000000000223: 48 8D 52 01        lea         rdx,[rdx+1]
  0000000000000227: 41 88 4C 10 FF     mov         byte ptr [r8+rdx-1],cl
  000000000000022C: 84 C9              test        cl,cl
  000000000000022E: 75 F0              jne         0000000000000220
  0000000000000230: 48 8B 84 24 F8 00  mov         rax,qword ptr [rsp+0F8h]
                    00 00
  0000000000000238: 48 85 C0           test        rax,rax
  000000000000023B: 74 06              je          0000000000000243
  000000000000023D: 8B 4C 24 50        mov         ecx,dword ptr [rsp+50h]
  0000000000000241: 89 08              mov         dword ptr [rax],ecx
  0000000000000243: 41 8B C1           mov         eax,r9d
  0000000000000246: EB 04              jmp         000000000000024C
  0000000000000248: 8B 44 24 40        mov         eax,dword ptr [rsp+40h]
  000000000000024C: 48 8B B4 24 D8 00  mov         rsi,qword ptr [rsp+0D8h]
                    00 00
  0000000000000254: 48 8B 9C 24 E0 00  mov         rbx,qword ptr [rsp+0E0h]
                    00 00
  000000000000025C: 48 81 C4 B0 00 00  add         rsp,0B0h
                    00
  0000000000000263: 41 5E              pop         r14
  0000000000000265: 5F                 pop         rdi
  0000000000000266: 5D                 pop         rbp
  0000000000000267: C3                 ret

FT_GetDeviceInfoDetail:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 48 89 7C 24 18     mov         qword ptr [rsp+18h],rdi
  000000000000000F: 41 56              push        r14
  0000000000000011: 48 83 EC 20        sub         rsp,20h
  0000000000000015: 48 83 3D 00 00 00  cmp         qword ptr [?pgAttachedList@@3PEAU_ft_device_list_info_node@@EA],0
                    00 00
  000000000000001D: 49 8B D9           mov         rbx,r9
  0000000000000020: 49 8B F8           mov         rdi,r8
  0000000000000023: 4C 8B F2           mov         r14,rdx
  0000000000000026: 8B F1              mov         esi,ecx
  0000000000000028: 0F 84 C3 00 00 00  je          00000000000000F1
  000000000000002E: 3B 35 00 00 00 00  cmp         esi,dword ptr [?dwNumberOfAttachedDevices@@3KA]
  0000000000000034: 0F 83 B7 00 00 00  jae         00000000000000F1
  000000000000003A: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  000000000000003F: 85 C0              test        eax,eax
  0000000000000041: 75 0A              jne         000000000000004D
  0000000000000043: B8 05 00 00 00     mov         eax,5
  0000000000000048: E9 A9 00 00 00     jmp         00000000000000F6
  000000000000004D: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtDevListLock@@3PEAXEA]
                    00
  0000000000000054: 83 CA FF           or          edx,0FFFFFFFFh
  0000000000000057: FF 15 00 00 00 00  call        qword ptr [__imp_WaitForSingleObject]
  000000000000005D: 48 6B CE 68        imul        rcx,rsi,68h
  0000000000000061: 48 03 0D 00 00 00  add         rcx,qword ptr [?pgAttachedList@@3PEAU_ft_device_list_info_node@@EA]
                    00
  0000000000000068: 4D 85 F6           test        r14,r14
  000000000000006B: 74 05              je          0000000000000072
  000000000000006D: 8B 01              mov         eax,dword ptr [rcx]
  000000000000006F: 41 89 06           mov         dword ptr [r14],eax
  0000000000000072: 48 85 FF           test        rdi,rdi
  0000000000000075: 74 05              je          000000000000007C
  0000000000000077: 8B 41 04           mov         eax,dword ptr [rcx+4]
  000000000000007A: 89 07              mov         dword ptr [rdi],eax
  000000000000007C: 48 85 DB           test        rbx,rbx
  000000000000007F: 74 05              je          0000000000000086
  0000000000000081: 8B 41 08           mov         eax,dword ptr [rcx+8]
  0000000000000084: 89 03              mov         dword ptr [rbx],eax
  0000000000000086: 48 8B 44 24 58     mov         rax,qword ptr [rsp+58h]
  000000000000008B: 48 85 C0           test        rax,rax
  000000000000008E: 74 07              je          0000000000000097
  0000000000000090: 0F 10 41 10        movups      xmm0,xmmword ptr [rcx+10h]
  0000000000000094: 0F 11 00           movups      xmmword ptr [rax],xmm0
  0000000000000097: 48 8B 44 24 60     mov         rax,qword ptr [rsp+60h]
  000000000000009C: 48 85 C0           test        rax,rax
  000000000000009F: 74 1F              je          00000000000000C0
  00000000000000A1: 0F 10 41 20        movups      xmm0,xmmword ptr [rcx+20h]
  00000000000000A5: 0F 11 00           movups      xmmword ptr [rax],xmm0
  00000000000000A8: 0F 10 49 30        movups      xmm1,xmmword ptr [rcx+30h]
  00000000000000AC: 0F 11 48 10        movups      xmmword ptr [rax+10h],xmm1
  00000000000000B0: 0F 10 41 40        movups      xmm0,xmmword ptr [rcx+40h]
  00000000000000B4: 0F 11 40 20        movups      xmmword ptr [rax+20h],xmm0
  00000000000000B8: 0F 10 49 50        movups      xmm1,xmmword ptr [rcx+50h]
  00000000000000BC: 0F 11 48 30        movups      xmmword ptr [rax+30h],xmm1
  00000000000000C0: 48 8B 54 24 68     mov         rdx,qword ptr [rsp+68h]
  00000000000000C5: 48 85 D2           test        rdx,rdx
  00000000000000C8: 74 07              je          00000000000000D1
  00000000000000CA: 48 8B 41 60        mov         rax,qword ptr [rcx+60h]
  00000000000000CE: 48 89 02           mov         qword ptr [rdx],rax
  00000000000000D1: 48 8B 54 24 50     mov         rdx,qword ptr [rsp+50h]
  00000000000000D6: 48 85 D2           test        rdx,rdx
  00000000000000D9: 74 05              je          00000000000000E0
  00000000000000DB: 8B 41 0C           mov         eax,dword ptr [rcx+0Ch]
  00000000000000DE: 89 02              mov         dword ptr [rdx],eax
  00000000000000E0: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtDevListLock@@3PEAXEA]
                    00
  00000000000000E7: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  00000000000000ED: 33 C0              xor         eax,eax
  00000000000000EF: EB 05              jmp         00000000000000F6
  00000000000000F1: B8 02 00 00 00     mov         eax,2
  00000000000000F6: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000FB: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000100: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  0000000000000105: 48 83 C4 20        add         rsp,20h
  0000000000000109: 41 5E              pop         r14
  000000000000010B: C3                 ret

FT_GetDeviceInfoList:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B 1D 00 00 00  mov         rbx,qword ptr [?pgAttachedList@@3PEAU_ft_device_list_info_node@@EA]
                    00
  0000000000000016: 48 8B F2           mov         rsi,rdx
  0000000000000019: 48 8B F9           mov         rdi,rcx
  000000000000001C: 48 85 D2           test        rdx,rdx
  000000000000001F: 75 13              jne         0000000000000034
  0000000000000021: 8D 42 06           lea         eax,[rdx+6]
  0000000000000024: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000029: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  000000000000002E: 48 83 C4 20        add         rsp,20h
  0000000000000032: 5F                 pop         rdi
  0000000000000033: C3                 ret
  0000000000000034: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  0000000000000039: 85 C0              test        eax,eax
  000000000000003B: 75 15              jne         0000000000000052
  000000000000003D: B8 05 00 00 00     mov         eax,5
  0000000000000042: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000047: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  000000000000004C: 48 83 C4 20        add         rsp,20h
  0000000000000050: 5F                 pop         rdi
  0000000000000051: C3                 ret
  0000000000000052: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtDevListLock@@3PEAXEA]
                    00
  0000000000000059: 83 CA FF           or          edx,0FFFFFFFFh
  000000000000005C: FF 15 00 00 00 00  call        qword ptr [__imp_WaitForSingleObject]
  0000000000000062: 48 85 FF           test        rdi,rdi
  0000000000000065: 74 68              je          00000000000000CF
  0000000000000067: 48 85 DB           test        rbx,rbx
  000000000000006A: 74 63              je          00000000000000CF
  000000000000006C: 8B 05 00 00 00 00  mov         eax,dword ptr [?dwNumberOfAttachedDevices@@3KA]
  0000000000000072: 33 C9              xor         ecx,ecx
  0000000000000074: 85 C0              test        eax,eax
  0000000000000076: 74 5D              je          00000000000000D5
  0000000000000078: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000080: 0F 10 03           movups      xmm0,xmmword ptr [rbx]
  0000000000000083: FF C1              inc         ecx
  0000000000000085: 48 8D 7F 68        lea         rdi,[rdi+68h]
  0000000000000089: 48 8D 5B 68        lea         rbx,[rbx+68h]
  000000000000008D: 0F 11 47 98        movups      xmmword ptr [rdi-68h],xmm0
  0000000000000091: 0F 10 4B A8        movups      xmm1,xmmword ptr [rbx-58h]
  0000000000000095: 0F 11 4F A8        movups      xmmword ptr [rdi-58h],xmm1
  0000000000000099: 0F 10 43 B8        movups      xmm0,xmmword ptr [rbx-48h]
  000000000000009D: 0F 11 47 B8        movups      xmmword ptr [rdi-48h],xmm0
  00000000000000A1: 0F 10 4B C8        movups      xmm1,xmmword ptr [rbx-38h]
  00000000000000A5: 0F 11 4F C8        movups      xmmword ptr [rdi-38h],xmm1
  00000000000000A9: 0F 10 43 D8        movups      xmm0,xmmword ptr [rbx-28h]
  00000000000000AD: 0F 11 47 D8        movups      xmmword ptr [rdi-28h],xmm0
  00000000000000B1: 0F 10 4B E8        movups      xmm1,xmmword ptr [rbx-18h]
  00000000000000B5: 0F 11 4F E8        movups      xmmword ptr [rdi-18h],xmm1
  00000000000000B9: F2 0F 10 43 F8     movsd       xmm0,mmword ptr [rbx-8]
  00000000000000BE: F2 0F 11 47 F8     movsd       mmword ptr [rdi-8],xmm0
  00000000000000C3: 8B 05 00 00 00 00  mov         eax,dword ptr [?dwNumberOfAttachedDevices@@3KA]
  00000000000000C9: 3B C8              cmp         ecx,eax
  00000000000000CB: 72 B3              jb          0000000000000080
  00000000000000CD: EB 06              jmp         00000000000000D5
  00000000000000CF: 8B 05 00 00 00 00  mov         eax,dword ptr [?dwNumberOfAttachedDevices@@3KA]
  00000000000000D5: 89 06              mov         dword ptr [rsi],eax
  00000000000000D7: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtDevListLock@@3PEAXEA]
                    00
  00000000000000DE: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  00000000000000E4: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000E9: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  00000000000000EE: 33 C0              xor         eax,eax
  00000000000000F0: 48 83 C4 20        add         rsp,20h
  00000000000000F4: 5F                 pop         rdi
  00000000000000F5: C3                 ret

FT_GetDriverVersion:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 85 D2           test        rdx,rdx
  0000000000000007: 74 7C              je          0000000000000085
  0000000000000009: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000010: 48 85 C0           test        rax,rax
  0000000000000013: 74 0D              je          0000000000000022
  0000000000000015: 48 3B C1           cmp         rax,rcx
  0000000000000018: 74 12              je          000000000000002C
  000000000000001A: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001D: 48 85 C0           test        rax,rax
  0000000000000020: 75 F3              jne         0000000000000015
  0000000000000022: B8 01 00 00 00     mov         eax,1
  0000000000000027: 48 83 C4 48        add         rsp,48h
  000000000000002B: C3                 ret
  000000000000002C: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000030: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000034: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  0000000000000039: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  000000000000003E: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000043: 33 FF              xor         edi,edi
  0000000000000045: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  000000000000004A: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  000000000000004F: BB 04 00 00 00     mov         ebx,4
  0000000000000054: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000058: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000005D: 8B 90 BC 01 00 00  mov         edx,dword ptr [rax+1BCh]
  0000000000000063: 45 33 C9           xor         r9d,r9d
  0000000000000066: 45 33 C0           xor         r8d,r8d
  0000000000000069: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000006F: 85 C0              test        eax,eax
  0000000000000071: 0F 45 DF           cmovne      ebx,edi
  0000000000000074: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  0000000000000079: 8B C3              mov         eax,ebx
  000000000000007B: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000080: 48 83 C4 48        add         rsp,48h
  0000000000000084: C3                 ret
  0000000000000085: B8 06 00 00 00     mov         eax,6
  000000000000008A: 48 83 C4 48        add         rsp,48h
  000000000000008E: C3                 ret

FT_GetEventStatus:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 89 5C 24 58     mov         qword ptr [rsp+58h],rbx
  0000000000000034: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000039: BB 04 00 00 00     mov         ebx,4
  000000000000003E: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000043: 33 FF              xor         edi,edi
  0000000000000045: 44 8B CB           mov         r9d,ebx
  0000000000000048: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  000000000000004D: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000052: 4C 8B C2           mov         r8,rdx
  0000000000000055: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000059: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000005E: 8B 90 90 00 00 00  mov         edx,dword ptr [rax+90h]
  0000000000000064: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000006A: 85 C0              test        eax,eax
  000000000000006C: 0F 45 DF           cmovne      ebx,edi
  000000000000006F: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  0000000000000074: 8B C3              mov         eax,ebx
  0000000000000076: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  000000000000007B: 48 83 C4 48        add         rsp,48h
  000000000000007F: C3                 ret

FT_GetLatencyTimer:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000048: C7 44 24 28 01 00  mov         dword ptr [rsp+28h],1
                    00 00
  0000000000000050: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000055: 8B 90 74 01 00 00  mov         edx,dword ptr [rax+174h]
  000000000000005B: 45 33 C0           xor         r8d,r8d
  000000000000005E: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000064: B9 04 00 00 00     mov         ecx,4
  0000000000000069: 85 C0              test        eax,eax
  000000000000006B: 0F 45 CB           cmovne      ecx,ebx
  000000000000006E: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000073: 8B C1              mov         eax,ecx
  0000000000000075: 48 83 C4 48        add         rsp,48h
  0000000000000079: C3                 ret

FT_GetLibraryVersion:
  0000000000000000: 48 85 C9           test        rcx,rcx
  0000000000000003: 74 09              je          000000000000000E
  0000000000000005: C7 01 14 02 03 00  mov         dword ptr [rcx],30214h
  000000000000000B: 33 C0              xor         eax,eax
  000000000000000D: C3                 ret
  000000000000000E: B8 06 00 00 00     mov         eax,6
  0000000000000013: C3                 ret

FT_GetModemStatus:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 89 5C 24 58     mov         qword ptr [rsp+58h],rbx
  0000000000000034: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000039: BB 04 00 00 00     mov         ebx,4
  000000000000003E: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000043: 33 FF              xor         edi,edi
  0000000000000045: 44 8B CB           mov         r9d,ebx
  0000000000000048: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  000000000000004D: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000052: 4C 8B C2           mov         r8,rdx
  0000000000000055: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000059: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000005E: 8B 90 68 01 00 00  mov         edx,dword ptr [rax+168h]
  0000000000000064: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000006A: 85 C0              test        eax,eax
  000000000000006C: 0F 45 DF           cmovne      ebx,edi
  000000000000006F: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  0000000000000074: 8B C3              mov         eax,ebx
  0000000000000076: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  000000000000007B: 48 83 C4 48        add         rsp,48h
  000000000000007F: C3                 ret

FT_GetQueueStatus:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 89 5C 24 58     mov         qword ptr [rsp+58h],rbx
  0000000000000034: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000039: BB 04 00 00 00     mov         ebx,4
  000000000000003E: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000043: 33 FF              xor         edi,edi
  0000000000000045: 44 8B CB           mov         r9d,ebx
  0000000000000048: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  000000000000004D: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000052: 4C 8B C2           mov         r8,rdx
  0000000000000055: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000059: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000005E: 8B 90 6C 01 00 00  mov         edx,dword ptr [rax+16Ch]
  0000000000000064: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000006A: 85 C0              test        eax,eax
  000000000000006C: 0F 45 DF           cmovne      ebx,edi
  000000000000006F: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  0000000000000074: 8B C3              mov         eax,ebx
  0000000000000076: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  000000000000007B: 48 83 C4 48        add         rsp,48h
  000000000000007F: C3                 ret

FT_GetQueueStatusEx:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 89 5C 24 58     mov         qword ptr [rsp+58h],rbx
  0000000000000034: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000039: BB 04 00 00 00     mov         ebx,4
  000000000000003E: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000043: 33 FF              xor         edi,edi
  0000000000000045: 44 8B CB           mov         r9d,ebx
  0000000000000048: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  000000000000004D: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000052: 4C 8B C2           mov         r8,rdx
  0000000000000055: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000059: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000005E: 8B 90 D8 01 00 00  mov         edx,dword ptr [rax+1D8h]
  0000000000000064: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000006A: 85 C0              test        eax,eax
  000000000000006C: 0F 45 DF           cmovne      ebx,edi
  000000000000006F: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  0000000000000074: 8B C3              mov         eax,ebx
  0000000000000076: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  000000000000007B: 48 83 C4 48        add         rsp,48h
  000000000000007F: C3                 ret

FT_GetStatus:
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 50        sub         rsp,50h
  000000000000000F: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000016: 49 8B D9           mov         rbx,r9
  0000000000000019: 49 8B F8           mov         rdi,r8
  000000000000001C: 48 8B F2           mov         rsi,rdx
  000000000000001F: 48 85 C0           test        rax,rax
  0000000000000022: 74 0D              je          0000000000000031
  0000000000000024: 48 3B C1           cmp         rax,rcx
  0000000000000027: 74 1D              je          0000000000000046
  0000000000000029: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002C: 48 85 C0           test        rax,rax
  000000000000002F: 75 F3              jne         0000000000000024
  0000000000000031: B8 01 00 00 00     mov         eax,1
  0000000000000036: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  000000000000003B: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  0000000000000040: 48 83 C4 50        add         rsp,50h
  0000000000000044: 5F                 pop         rdi
  0000000000000045: C3                 ret
  0000000000000046: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000004A: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000004E: 48 8D 54 24 60     lea         rdx,[rsp+60h]
  0000000000000053: 48 89 6C 24 68     mov         qword ptr [rsp+68h],rbp
  0000000000000058: 33 ED              xor         ebp,ebp
  000000000000005A: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  000000000000005F: 48 89 6C 24 38     mov         qword ptr [rsp+38h],rbp
  0000000000000064: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000069: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  000000000000006E: C7 44 24 28 0C 00  mov         dword ptr [rsp+28h],0Ch
                    00 00
  0000000000000076: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000007B: 8B 90 94 00 00 00  mov         edx,dword ptr [rax+94h]
  0000000000000081: 44 8D 4D 0C        lea         r9d,[rbp+0Ch]
  0000000000000085: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000008B: BA 04 00 00 00     mov         edx,4
  0000000000000090: 85 C0              test        eax,eax
  0000000000000092: 0F 45 D5           cmovne      edx,ebp
  0000000000000095: 48 8B 6C 24 68     mov         rbp,qword ptr [rsp+68h]
  000000000000009A: 8B C2              mov         eax,edx
  000000000000009C: 85 D2              test        edx,edx
  000000000000009E: 75 96              jne         0000000000000036
  00000000000000A0: 8B 4C 24 40        mov         ecx,dword ptr [rsp+40h]
  00000000000000A4: 89 0E              mov         dword ptr [rsi],ecx
  00000000000000A6: 8B 4C 24 44        mov         ecx,dword ptr [rsp+44h]
  00000000000000AA: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  00000000000000AF: 89 0F              mov         dword ptr [rdi],ecx
  00000000000000B1: 8B 4C 24 48        mov         ecx,dword ptr [rsp+48h]
  00000000000000B5: 89 0B              mov         dword ptr [rbx],ecx
  00000000000000B7: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  00000000000000BC: 48 83 C4 50        add         rsp,50h
  00000000000000C0: 5F                 pop         rdi
  00000000000000C1: C3                 ret

FT_Initialise:
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  0000000000000009: 33 D2              xor         edx,edx
  000000000000000B: B9 05 00 00 00     mov         ecx,5
  0000000000000010: 83 F8 01           cmp         eax,1
  0000000000000013: 0F 44 CA           cmove       ecx,edx
  0000000000000016: 8B C1              mov         eax,ecx
  0000000000000018: 48 83 C4 28        add         rsp,28h
  000000000000001C: C3                 ret

FT_IoCtl:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 4C 8B D1           mov         r10,rcx
  000000000000000E: 48 85 C0           test        rax,rax
  0000000000000011: 74 0D              je          0000000000000020
  0000000000000013: 48 3B C1           cmp         rax,rcx
  0000000000000016: 74 12              je          000000000000002A
  0000000000000018: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001B: 48 85 C0           test        rax,rax
  000000000000001E: 75 F3              jne         0000000000000013
  0000000000000020: B8 01 00 00 00     mov         eax,1
  0000000000000025: 48 83 C4 48        add         rsp,48h
  0000000000000029: C3                 ret
  000000000000002A: 49 8B 42 30        mov         rax,qword ptr [r10+30h]
  000000000000002E: 8B CA              mov         ecx,edx
  0000000000000030: 48 C1 E9 02        shr         rcx,2
  0000000000000034: 81 E1 FF 0F 00 00  and         ecx,0FFFh
  000000000000003A: 8B 14 88           mov         edx,dword ptr [rax+rcx*4]
  000000000000003D: 48 8B 84 24 88 00  mov         rax,qword ptr [rsp+88h]
                    00 00
  0000000000000045: 49 8B 4A 10        mov         rcx,qword ptr [r10+10h]
  0000000000000049: 48 89 44 24 38     mov         qword ptr [rsp+38h],rax
  000000000000004E: 48 8B 84 24 80 00  mov         rax,qword ptr [rsp+80h]
                    00 00
  0000000000000056: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  000000000000005B: 8B 44 24 78        mov         eax,dword ptr [rsp+78h]
  000000000000005F: 89 44 24 28        mov         dword ptr [rsp+28h],eax
  0000000000000063: 48 8B 44 24 70     mov         rax,qword ptr [rsp+70h]
  0000000000000068: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  000000000000006D: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000073: 33 D2              xor         edx,edx
  0000000000000075: 85 C0              test        eax,eax
  0000000000000077: B9 04 00 00 00     mov         ecx,4
  000000000000007C: 0F 45 CA           cmovne      ecx,edx
  000000000000007F: 8B C1              mov         eax,ecx
  0000000000000081: 48 83 C4 48        add         rsp,48h
  0000000000000085: C3                 ret

FT_ListDevices:
  0000000000000000: 44 89 44 24 18     mov         dword ptr [rsp+18h],r8d
  0000000000000005: 55                 push        rbp
  0000000000000006: 53                 push        rbx
  0000000000000007: 56                 push        rsi
  0000000000000008: 57                 push        rdi
  0000000000000009: 41 54              push        r12
  000000000000000B: 41 55              push        r13
  000000000000000D: 41 56              push        r14
  000000000000000F: 48 8D 6C 24 D9     lea         rbp,[rsp-27h]
  0000000000000014: 48 81 EC D0 00 00  sub         rsp,0D0h
                    00
  000000000000001B: 48 8B F9           mov         rdi,rcx
  000000000000001E: 4C 8B E2           mov         r12,rdx
  0000000000000021: 48 89 55 A7        mov         qword ptr [rbp-59h],rdx
  0000000000000025: 45 33 F6           xor         r14d,r14d
  0000000000000028: BE 02 00 00 00     mov         esi,2
  000000000000002D: 48 8D 0D 00 00 00  lea         rcx,[GUID_CLASS_FT_BULK]
                    00
  0000000000000034: 44 8D 4E 10        lea         r9d,[rsi+10h]
  0000000000000038: 45 33 C0           xor         r8d,r8d
  000000000000003B: 33 D2              xor         edx,edx
  000000000000003D: 45 8B EE           mov         r13d,r14d
  0000000000000040: 44 89 75 7F        mov         dword ptr [rbp+7Fh],r14d
  0000000000000044: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetClassDevsA]
  000000000000004A: 48 8B D8           mov         rbx,rax
  000000000000004D: 48 85 C0           test        rax,rax
  0000000000000050: 75 07              jne         0000000000000059
  0000000000000052: 8B C6              mov         eax,esi
  0000000000000054: E9 F8 02 00 00     jmp         0000000000000351
  0000000000000059: 48 8D 45 FF        lea         rax,[rbp-1]
  000000000000005D: 4C 8D 05 00 00 00  lea         r8,[GUID_CLASS_FT_BULK]
                    00
  0000000000000064: 45 33 C9           xor         r9d,r9d
  0000000000000067: 33 D2              xor         edx,edx
  0000000000000069: 48 8B CB           mov         rcx,rbx
  000000000000006C: C7 45 FF 20 00 00  mov         dword ptr [rbp-1],20h
                    00
  0000000000000073: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000078: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInterfaces]
  000000000000007E: 85 C0              test        eax,eax
  0000000000000080: 74 33              je          00000000000000B5
  0000000000000082: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000086: 66 66 0F 1F 84 00  nop         word ptr [rax+rax]
                    00 00 00 00
  0000000000000090: 48 8D 45 FF        lea         rax,[rbp-1]
  0000000000000094: 41 FF C5           inc         r13d
  0000000000000097: 4C 8D 05 00 00 00  lea         r8,[GUID_CLASS_FT_BULK]
                    00
  000000000000009E: 33 D2              xor         edx,edx
  00000000000000A0: 48 8B CB           mov         rcx,rbx
  00000000000000A3: 45 8B CD           mov         r9d,r13d
  00000000000000A6: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000AB: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInterfaces]
  00000000000000B1: 85 C0              test        eax,eax
  00000000000000B3: 75 DB              jne         0000000000000090
  00000000000000B5: 48 8B CB           mov         rcx,rbx
  00000000000000B8: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  00000000000000BE: 8B 5D 77           mov         ebx,dword ptr [rbp+77h]
  00000000000000C1: 8B C3              mov         eax,ebx
  00000000000000C3: 25 00 00 00 E0     and         eax,0E0000000h
  00000000000000C8: 3D 00 00 00 80     cmp         eax,80000000h
  00000000000000CD: 75 1E              jne         00000000000000ED
  00000000000000CF: 48 85 FF           test        rdi,rdi
  00000000000000D2: 75 0E              jne         00000000000000E2
  00000000000000D4: 41 BE 06 00 00 00  mov         r14d,6
  00000000000000DA: 41 8B C6           mov         eax,r14d
  00000000000000DD: E9 6F 02 00 00     jmp         0000000000000351
  00000000000000E2: 44 89 2F           mov         dword ptr [rdi],r13d
  00000000000000E5: 41 8B C6           mov         eax,r14d
  00000000000000E8: E9 64 02 00 00     jmp         0000000000000351
  00000000000000ED: 4C 89 BC 24 10 01  mov         qword ptr [rsp+110h],r15
                    00 00
  00000000000000F5: 3D 00 00 00 40     cmp         eax,40000000h
  00000000000000FA: 75 17              jne         0000000000000113
  00000000000000FC: 8B CF              mov         ecx,edi
  00000000000000FE: 89 4D 7F           mov         dword ptr [rbp+7Fh],ecx
  0000000000000101: 4D 85 E4           test        r12,r12
  0000000000000104: 0F 84 3A 02 00 00  je          0000000000000344
  000000000000010A: 4C 8B 7D 7F        mov         r15,qword ptr [rbp+7Fh]
  000000000000010E: 49 8B FC           mov         rdi,r12
  0000000000000111: EB 2F              jmp         0000000000000142
  0000000000000113: 3D 00 00 00 20     cmp         eax,20000000h
  0000000000000118: 0F 85 26 02 00 00  jne         0000000000000344
  000000000000011E: 48 85 FF           test        rdi,rdi
  0000000000000121: 0F 84 1D 02 00 00  je          0000000000000344
  0000000000000127: 4D 85 E4           test        r12,r12
  000000000000012A: 0F 84 14 02 00 00  je          0000000000000344
  0000000000000130: 48 8B 45 7F        mov         rax,qword ptr [rbp+7Fh]
  0000000000000134: 4C 8B FF           mov         r15,rdi
  0000000000000137: 45 89 2C 24        mov         dword ptr [r12],r13d
  000000000000013B: 48 89 45 A7        mov         qword ptr [rbp-59h],rax
  000000000000013F: 41 8B CE           mov         ecx,r14d
  0000000000000142: BA A4 00 22 00     mov         edx,2200A4h
  0000000000000147: 40 84 DE           test        sil,bl
  000000000000014A: 74 09              je          0000000000000155
  000000000000014C: C7 45 97 A0 00 22  mov         dword ptr [rbp-69h],2200A0h
                    00
  0000000000000153: EB 0E              jmp         0000000000000163
  0000000000000155: F6 C3 04           test        bl,4
  0000000000000158: B8 9C 00 22 00     mov         eax,22009Ch
  000000000000015D: 0F 45 C2           cmovne      eax,edx
  0000000000000160: 89 45 97           mov         dword ptr [rbp-69h],eax
  0000000000000163: 45 8B E6           mov         r12d,r14d
  0000000000000166: 45 85 ED           test        r13d,r13d
  0000000000000169: 0F 84 D1 01 00 00  je          0000000000000340
  000000000000016F: 8B C3              mov         eax,ebx
  0000000000000171: 25 00 00 00 40     and         eax,40000000h
  0000000000000176: 89 45 9B           mov         dword ptr [rbp-65h],eax
  0000000000000179: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000180: 85 C0              test        eax,eax
  0000000000000182: 74 09              je          000000000000018D
  0000000000000184: 41 3B CC           cmp         ecx,r12d
  0000000000000187: 0F 85 6D 01 00 00  jne         00000000000002FA
  000000000000018D: 48 8D 55 F7        lea         rdx,[rbp-9]
  0000000000000191: 41 8B CC           mov         ecx,r12d
  0000000000000194: E8 00 00 00 00     call        FT_Open
  0000000000000199: 8B F0              mov         esi,eax
  000000000000019B: 85 C0              test        eax,eax
  000000000000019D: 0F 85 0A 01 00 00  jne         00000000000002AD
  00000000000001A3: 48 8B 5D F7        mov         rbx,qword ptr [rbp-9]
  00000000000001A7: 33 C0              xor         eax,eax
  00000000000001A9: 48 89 45 B7        mov         qword ptr [rbp-49h],rax
  00000000000001AD: 48 89 45 BF        mov         qword ptr [rbp-41h],rax
  00000000000001B1: 48 89 45 C7        mov         qword ptr [rbp-39h],rax
  00000000000001B5: 48 89 45 CF        mov         qword ptr [rbp-31h],rax
  00000000000001B9: 48 89 45 D7        mov         qword ptr [rbp-29h],rax
  00000000000001BD: 48 89 45 DF        mov         qword ptr [rbp-21h],rax
  00000000000001C1: 48 89 45 E7        mov         qword ptr [rbp-19h],rax
  00000000000001C5: 48 89 45 EF        mov         qword ptr [rbp-11h],rax
  00000000000001C9: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  00000000000001D0: 48 85 C0           test        rax,rax
  00000000000001D3: 74 0D              je          00000000000001E2
  00000000000001D5: 48 3B C3           cmp         rax,rbx
  00000000000001D8: 74 1D              je          00000000000001F7
  00000000000001DA: 48 8B 00           mov         rax,qword ptr [rax]
  00000000000001DD: 48 85 C0           test        rax,rax
  00000000000001E0: 75 F3              jne         00000000000001D5
  00000000000001E2: BE 01 00 00 00     mov         esi,1
  00000000000001E7: 48 8B CB           mov         rcx,rbx
  00000000000001EA: E8 00 00 00 00     call        FT_Close
  00000000000001EF: 8B 5D 77           mov         ebx,dword ptr [rbp+77h]
  00000000000001F2: E9 FD 00 00 00     jmp         00000000000002F4
  00000000000001F7: 48 8B 43 30        mov         rax,qword ptr [rbx+30h]
  00000000000001FB: 8B 4D 97           mov         ecx,dword ptr [rbp-69h]
  00000000000001FE: 4C 89 74 24 38     mov         qword ptr [rsp+38h],r14
  0000000000000203: 48 C1 E9 02        shr         rcx,2
  0000000000000207: 48 8D 55 9F        lea         rdx,[rbp-61h]
  000000000000020B: 4C 8D 45 B7        lea         r8,[rbp-49h]
  000000000000020F: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000214: 48 8D 55 B7        lea         rdx,[rbp-49h]
  0000000000000218: 81 E1 FF 0F 00 00  and         ecx,0FFFh
  000000000000021E: C7 44 24 28 40 00  mov         dword ptr [rsp+28h],40h
                    00 00
  0000000000000226: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000022B: 8B 14 88           mov         edx,dword ptr [rax+rcx*4]
  000000000000022E: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  0000000000000232: 41 B9 40 00 00 00  mov         r9d,40h
  0000000000000238: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000023E: BE 04 00 00 00     mov         esi,4
  0000000000000243: 85 C0              test        eax,eax
  0000000000000245: 41 0F 45 F6        cmovne      esi,r14d
  0000000000000249: 85 F6              test        esi,esi
  000000000000024B: 75 9A              jne         00000000000001E7
  000000000000024D: 44 39 75 9B        cmp         dword ptr [rbp-65h],r14d
  0000000000000251: 0F 85 B3 00 00 00  jne         000000000000030A
  0000000000000257: F7 45 77 00 00 00  test        dword ptr [rbp+77h],20000000h
                    20
  000000000000025E: 74 87              je          00000000000001E7
  0000000000000260: 81 7D 97 A4 00 22  cmp         dword ptr [rbp-69h],2200A4h
                    00
  0000000000000267: 74 2D              je          0000000000000296
  0000000000000269: 49 8B 0F           mov         rcx,qword ptr [r15]
  000000000000026C: 48 85 C9           test        rcx,rcx
  000000000000026F: 0F 84 72 FF FF FF  je          00000000000001E7
  0000000000000275: 44 8B 45 9F        mov         r8d,dword ptr [rbp-61h]
  0000000000000279: 48 8D 55 B7        lea         rdx,[rbp-49h]
  000000000000027D: 49 83 C7 08        add         r15,8
  0000000000000281: 41 FF C0           inc         r8d
  0000000000000284: E8 00 00 00 00     call        memcpy
  0000000000000289: 48 8B CB           mov         rcx,rbx
  000000000000028C: E8 00 00 00 00     call        FT_Close
  0000000000000291: 8B 5D 77           mov         ebx,dword ptr [rbp+77h]
  0000000000000294: EB 5E              jmp         00000000000002F4
  0000000000000296: 8B 45 B7           mov         eax,dword ptr [rbp-49h]
  0000000000000299: 48 8B CB           mov         rcx,rbx
  000000000000029C: 48 83 C7 04        add         rdi,4
  00000000000002A0: 89 47 FC           mov         dword ptr [rdi-4],eax
  00000000000002A3: E8 00 00 00 00     call        FT_Close
  00000000000002A8: 8B 5D 77           mov         ebx,dword ptr [rbp+77h]
  00000000000002AB: EB 47              jmp         00000000000002F4
  00000000000002AD: 0F BA E3 1D        bt          ebx,1Dh
  00000000000002B1: 73 41              jae         00000000000002F4
  00000000000002B3: F6 C3 04           test        bl,4
  00000000000002B6: 74 09              je          00000000000002C1
  00000000000002B8: 44 89 37           mov         dword ptr [rdi],r14d
  00000000000002BB: 48 83 C7 04        add         rdi,4
  00000000000002BF: EB 30              jmp         00000000000002F1
  00000000000002C1: 49 8B 07           mov         rax,qword ptr [r15]
  00000000000002C4: 33 C9              xor         ecx,ecx
  00000000000002C6: 48 89 4D B7        mov         qword ptr [rbp-49h],rcx
  00000000000002CA: 48 89 4D BF        mov         qword ptr [rbp-41h],rcx
  00000000000002CE: 48 89 4D C7        mov         qword ptr [rbp-39h],rcx
  00000000000002D2: 48 89 4D CF        mov         qword ptr [rbp-31h],rcx
  00000000000002D6: 48 89 4D D7        mov         qword ptr [rbp-29h],rcx
  00000000000002DA: 48 89 4D DF        mov         qword ptr [rbp-21h],rcx
  00000000000002DE: 48 89 4D E7        mov         qword ptr [rbp-19h],rcx
  00000000000002E2: 48 89 4D EF        mov         qword ptr [rbp-11h],rcx
  00000000000002E6: 48 85 C0           test        rax,rax
  00000000000002E9: 74 06              je          00000000000002F1
  00000000000002EB: 49 83 C7 08        add         r15,8
  00000000000002EF: 88 08              mov         byte ptr [rax],cl
  00000000000002F1: 41 8B F6           mov         esi,r14d
  00000000000002F4: 8B 45 9B           mov         eax,dword ptr [rbp-65h]
  00000000000002F7: 8B 4D 7F           mov         ecx,dword ptr [rbp+7Fh]
  00000000000002FA: 41 FF C4           inc         r12d
  00000000000002FD: 45 3B E5           cmp         r12d,r13d
  0000000000000300: 0F 82 7A FE FF FF  jb          0000000000000180
  0000000000000306: 8B C6              mov         eax,esi
  0000000000000308: EB 3F              jmp         0000000000000349
  000000000000030A: 81 7D 97 A4 00 22  cmp         dword ptr [rbp-69h],2200A4h
                    00
  0000000000000311: 74 20              je          0000000000000333
  0000000000000313: 44 8B 45 9F        mov         r8d,dword ptr [rbp-61h]
  0000000000000317: 48 8B 4D A7        mov         rcx,qword ptr [rbp-59h]
  000000000000031B: 48 8D 55 B7        lea         rdx,[rbp-49h]
  000000000000031F: 41 FF C0           inc         r8d
  0000000000000322: E8 00 00 00 00     call        memcpy
  0000000000000327: 48 8B CB           mov         rcx,rbx
  000000000000032A: E8 00 00 00 00     call        FT_Close
  000000000000032F: 8B C6              mov         eax,esi
  0000000000000331: EB 16              jmp         0000000000000349
  0000000000000333: 8B 45 B7           mov         eax,dword ptr [rbp-49h]
  0000000000000336: 48 8B CB           mov         rcx,rbx
  0000000000000339: 89 07              mov         dword ptr [rdi],eax
  000000000000033B: E8 00 00 00 00     call        FT_Close
  0000000000000340: 8B C6              mov         eax,esi
  0000000000000342: EB 05              jmp         0000000000000349
  0000000000000344: B8 06 00 00 00     mov         eax,6
  0000000000000349: 4C 8B BC 24 10 01  mov         r15,qword ptr [rsp+110h]
                    00 00
  0000000000000351: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  0000000000000358: 41 5E              pop         r14
  000000000000035A: 41 5D              pop         r13
  000000000000035C: 41 5C              pop         r12
  000000000000035E: 5F                 pop         rdi
  000000000000035F: 5E                 pop         rsi
  0000000000000360: 5B                 pop         rbx
  0000000000000361: 5D                 pop         rbp
  0000000000000362: C3                 ret

FT_Open:
  0000000000000000: 40 55              push        rbp
  0000000000000002: 57                 push        rdi
  0000000000000003: 41 54              push        r12
  0000000000000005: 41 56              push        r14
  0000000000000007: 41 57              push        r15
  0000000000000009: 48 8D 6C 24 C9     lea         rbp,[rsp-37h]
  000000000000000E: 48 81 EC 00 01 00  sub         rsp,100h
                    00
  0000000000000015: 45 33 E4           xor         r12d,r12d
  0000000000000018: 4C 8B F2           mov         r14,rdx
  000000000000001B: 44 8B F9           mov         r15d,ecx
  000000000000001E: 44 89 65 7F        mov         dword ptr [rbp+7Fh],r12d
  0000000000000022: 41 8B FC           mov         edi,r12d
  0000000000000025: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  000000000000002A: 85 C0              test        eax,eax
  000000000000002C: 75 15              jne         0000000000000043
  000000000000002E: 41 8D 44 24 05     lea         eax,[r12+5]
  0000000000000033: 48 81 C4 00 01 00  add         rsp,100h
                    00
  000000000000003A: 41 5F              pop         r15
  000000000000003C: 41 5E              pop         r14
  000000000000003E: 41 5C              pop         r12
  0000000000000040: 5F                 pop         rdi
  0000000000000041: 5D                 pop         rbp
  0000000000000042: C3                 ret
  0000000000000043: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  000000000000004A: 83 CA FF           or          edx,0FFFFFFFFh
  000000000000004D: 48 89 B4 24 38 01  mov         qword ptr [rsp+138h],rsi
                    00 00
  0000000000000055: FF 15 00 00 00 00  call        qword ptr [__imp_WaitForSingleObject]
  000000000000005B: 48 8D 0D 00 00 00  lea         rcx,[GUID_CLASS_FT_BULK]
                    00
  0000000000000062: 41 B9 12 00 00 00  mov         r9d,12h
  0000000000000068: 45 33 C0           xor         r8d,r8d
  000000000000006B: 33 D2              xor         edx,edx
  000000000000006D: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetClassDevsA]
  0000000000000073: 48 8B F0           mov         rsi,rax
  0000000000000076: 48 85 C0           test        rax,rax
  0000000000000079: 75 15              jne         0000000000000090
  000000000000007B: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  0000000000000082: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  0000000000000088: 8D 46 02           lea         eax,[rsi+2]
  000000000000008B: E9 70 02 00 00     jmp         0000000000000300
  0000000000000090: 48 8D 44 24 48     lea         rax,[rsp+48h]
  0000000000000095: 4C 8D 05 00 00 00  lea         r8,[GUID_CLASS_FT_BULK]
                    00
  000000000000009C: 45 8B CF           mov         r9d,r15d
  000000000000009F: 33 D2              xor         edx,edx
  00000000000000A1: 48 8B CE           mov         rcx,rsi
  00000000000000A4: 48 89 9C 24 30 01  mov         qword ptr [rsp+130h],rbx
                    00 00
  00000000000000AC: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000B1: C7 44 24 48 20 00  mov         dword ptr [rsp+48h],20h
                    00 00
  00000000000000B9: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInterfaces]
  00000000000000BF: 85 C0              test        eax,eax
  00000000000000C1: 74 61              je          0000000000000124
  00000000000000C3: 48 8D 45 7F        lea         rax,[rbp+7Fh]
  00000000000000C7: 48 8D 54 24 48     lea         rdx,[rsp+48h]
  00000000000000CC: 45 33 C9           xor         r9d,r9d
  00000000000000CF: 45 33 C0           xor         r8d,r8d
  00000000000000D2: 48 8B CE           mov         rcx,rsi
  00000000000000D5: 4C 89 64 24 28     mov         qword ptr [rsp+28h],r12
  00000000000000DA: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000DF: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceInterfaceDetailA]
  00000000000000E5: 8B 5D 7F           mov         ebx,dword ptr [rbp+7Fh]
  00000000000000E8: 8B CB              mov         ecx,ebx
  00000000000000EA: FF 15 00 00 00 00  call        qword ptr [__imp_malloc]
  00000000000000F0: 48 8D 54 24 48     lea         rdx,[rsp+48h]
  00000000000000F5: 44 8B CB           mov         r9d,ebx
  00000000000000F8: 48 8B F8           mov         rdi,rax
  00000000000000FB: C7 00 08 00 00 00  mov         dword ptr [rax],8
  0000000000000101: 48 8D 45 7F        lea         rax,[rbp+7Fh]
  0000000000000105: 48 8B CE           mov         rcx,rsi
  0000000000000108: 4C 8B C7           mov         r8,rdi
  000000000000010B: 4C 89 64 24 28     mov         qword ptr [rsp+28h],r12
  0000000000000110: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000115: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceInterfaceDetailA]
  000000000000011B: 85 C0              test        eax,eax
  000000000000011D: 75 3A              jne         0000000000000159
  000000000000011F: 48 8B CF           mov         rcx,rdi
  0000000000000122: EB 0F              jmp         0000000000000133
  0000000000000124: FF 15 00 00 00 00  call        qword ptr [__imp_GetLastError]
  000000000000012A: 3D 03 01 00 00     cmp         eax,103h
  000000000000012F: 74 28              je          0000000000000159
  0000000000000131: 33 C9              xor         ecx,ecx
  0000000000000133: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  0000000000000139: 48 8B CE           mov         rcx,rsi
  000000000000013C: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  0000000000000142: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  0000000000000149: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  000000000000014F: B8 02 00 00 00     mov         eax,2
  0000000000000154: E9 9F 01 00 00     jmp         00000000000002F8
  0000000000000159: 4C 8D 45 17        lea         r8,[rbp+17h]
  000000000000015D: 41 8B D7           mov         edx,r15d
  0000000000000160: 48 8B CE           mov         rcx,rsi
  0000000000000163: C7 45 17 20 00 00  mov         dword ptr [rbp+17h],20h
                    00
  000000000000016A: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInfo]
  0000000000000170: 45 8B FC           mov         r15d,r12d
  0000000000000173: 85 C0              test        eax,eax
  0000000000000175: 48 8B CE           mov         rcx,rsi
  0000000000000178: 44 0F 45 7D 2B     cmovne      r15d,dword ptr [rbp+2Bh]
  000000000000017D: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  0000000000000183: 48 85 FF           test        rdi,rdi
  0000000000000186: 74 BA              je          0000000000000142
  0000000000000188: 41 8B C4           mov         eax,r12d
  000000000000018B: B9 00 00 80 00     mov         ecx,800000h
  0000000000000190: 4C 89 64 24 30     mov         qword ptr [rsp+30h],r12
  0000000000000195: 39 05 00 00 00 00  cmp         dword ptr [?gServer2016@@3HA],eax
  000000000000019B: BA 00 00 00 C0     mov         edx,0C0000000h
  00000000000001A0: 0F 45 C1           cmovne      eax,ecx
  00000000000001A3: 48 8D 4F 04        lea         rcx,[rdi+4]
  00000000000001A7: 45 33 C9           xor         r9d,r9d
  00000000000001AA: 89 44 24 28        mov         dword ptr [rsp+28h],eax
  00000000000001AE: 45 33 C0           xor         r8d,r8d
  00000000000001B1: C7 44 24 20 03 00  mov         dword ptr [rsp+20h],3
                    00 00
  00000000000001B9: FF 15 00 00 00 00  call        qword ptr [__imp_CreateFileA]
  00000000000001BF: 48 8B F0           mov         rsi,rax
  00000000000001C2: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000001C6: 75 1E              jne         00000000000001E6
  00000000000001C8: 48 8B CF           mov         rcx,rdi
  00000000000001CB: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  00000000000001D1: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  00000000000001D8: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  00000000000001DE: 8D 46 04           lea         eax,[rsi+4]
  00000000000001E1: E9 12 01 00 00     jmp         00000000000002F8
  00000000000001E6: E8 00 00 00 00     call        ?AddDevice@@YAPEAUft_private_vars@@XZ
  00000000000001EB: 48 8B D8           mov         rbx,rax
  00000000000001EE: 48 85 C0           test        rax,rax
  00000000000001F1: 75 27              jne         000000000000021A
  00000000000001F3: 48 8B CE           mov         rcx,rsi
  00000000000001F6: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
  00000000000001FC: 48 8B CF           mov         rcx,rdi
  00000000000001FF: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  0000000000000205: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  000000000000020C: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  0000000000000212: 8D 43 05           lea         eax,[rbx+5]
  0000000000000215: E9 DE 00 00 00     jmp         00000000000002F8
  000000000000021A: 48 89 70 10        mov         qword ptr [rax+10h],rsi
  000000000000021E: 48 89 78 20        mov         qword ptr [rax+20h],rdi
  0000000000000222: 44 89 B8 A0 00 00  mov         dword ptr [rax+0A0h],r15d
                    00
  0000000000000229: 49 89 06           mov         qword ptr [r14],rax
  000000000000022C: 48 8D 05 00 00 00  lea         rax,[?Set1Ioctls@@3PAKA]
                    00
  0000000000000233: 4C 8D 4D B7        lea         r9,[rbp-49h]
  0000000000000237: 48 89 43 30        mov         qword ptr [rbx+30h],rax
  000000000000023B: 49 8B 0E           mov         rcx,qword ptr [r14]
  000000000000023E: 48 8D 45 C7        lea         rax,[rbp-39h]
  0000000000000242: 4C 8D 45 AF        lea         r8,[rbp-51h]
  0000000000000246: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  000000000000024B: 4C 89 64 24 28     mov         qword ptr [rsp+28h],r12
  0000000000000250: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000255: E8 00 00 00 00     call        FT_GetDeviceInfo
  000000000000025A: 85 C0              test        eax,eax
  000000000000025C: 74 2E              je          000000000000028C
  000000000000025E: 48 8D 05 00 00 00  lea         rax,[?Set2Ioctls@@3PAKA]
                    00
  0000000000000265: 4C 8D 4D B7        lea         r9,[rbp-49h]
  0000000000000269: 4C 8D 45 AF        lea         r8,[rbp-51h]
  000000000000026D: 48 89 43 30        mov         qword ptr [rbx+30h],rax
  0000000000000271: 49 8B 0E           mov         rcx,qword ptr [r14]
  0000000000000274: 48 8D 45 C7        lea         rax,[rbp-39h]
  0000000000000278: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  000000000000027D: 4C 89 64 24 28     mov         qword ptr [rsp+28h],r12
  0000000000000282: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000287: E8 00 00 00 00     call        FT_GetDeviceInfo
  000000000000028C: 8B 44 24 40        mov         eax,dword ptr [rsp+40h]
  0000000000000290: 0F 28 45 B7        movaps      xmm0,xmmword ptr [rbp-49h]
  0000000000000294: 0F 28 4D D7        movaps      xmm1,xmmword ptr [rbp-29h]
  0000000000000298: 89 43 28           mov         dword ptr [rbx+28h],eax
  000000000000029B: 89 43 3C           mov         dword ptr [rbx+3Ch],eax
  000000000000029E: 8B 45 AF           mov         eax,dword ptr [rbp-51h]
  00000000000002A1: 89 43 40           mov         dword ptr [rbx+40h],eax
  00000000000002A4: 48 8D 55 77        lea         rdx,[rbp+77h]
  00000000000002A8: 0F 11 43 48        movups      xmmword ptr [rbx+48h],xmm0
  00000000000002AC: 0F 28 45 C7        movaps      xmm0,xmmword ptr [rbp-39h]
  00000000000002B0: 0F 11 43 58        movups      xmmword ptr [rbx+58h],xmm0
  00000000000002B4: 0F 28 45 E7        movaps      xmm0,xmmword ptr [rbp-19h]
  00000000000002B8: 0F 11 4B 68        movups      xmmword ptr [rbx+68h],xmm1
  00000000000002BC: 0F 28 4D F7        movaps      xmm1,xmmword ptr [rbp-9]
  00000000000002C0: 0F 11 43 78        movups      xmmword ptr [rbx+78h],xmm0
  00000000000002C4: 0F 11 8B 88 00 00  movups      xmmword ptr [rbx+88h],xmm1
                    00
  00000000000002CB: 48 89 9B 98 00 00  mov         qword ptr [rbx+98h],rbx
                    00
  00000000000002D2: 49 8B 0E           mov         rcx,qword ptr [r14]
  00000000000002D5: E8 00 00 00 00     call        ?FT_GetPacketSize@@YAKPEAXPEAG@Z
  00000000000002DA: 85 C0              test        eax,eax
  00000000000002DC: 75 0B              jne         00000000000002E9
  00000000000002DE: 0F B7 45 77        movzx       eax,word ptr [rbp+77h]
  00000000000002E2: 66 89 83 A8 00 00  mov         word ptr [rbx+0A8h],ax
                    00
  00000000000002E9: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  00000000000002F0: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  00000000000002F6: 33 C0              xor         eax,eax
  00000000000002F8: 48 8B 9C 24 30 01  mov         rbx,qword ptr [rsp+130h]
                    00 00
  0000000000000300: 48 8B B4 24 38 01  mov         rsi,qword ptr [rsp+138h]
                    00 00
  0000000000000308: 48 81 C4 00 01 00  add         rsp,100h
                    00
  000000000000030F: 41 5F              pop         r15
  0000000000000311: 41 5E              pop         r14
  0000000000000313: 41 5C              pop         r12
  0000000000000315: 5F                 pop         rdi
  0000000000000316: 5D                 pop         rbp
  0000000000000317: C3                 ret

FT_OpenEx:
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 41 54              push        r12
  0000000000000009: 41 56              push        r14
  000000000000000B: 41 57              push        r15
  000000000000000D: 48 81 EC A0 00 00  sub         rsp,0A0h
                    00
  0000000000000014: 45 33 E4           xor         r12d,r12d
  0000000000000017: 4D 8B F0           mov         r14,r8
  000000000000001A: 4C 8B F9           mov         r15,rcx
  000000000000001D: BB 02 00 00 00     mov         ebx,2
  0000000000000022: 41 8B F4           mov         esi,r12d
  0000000000000025: F6 C2 01           test        dl,1
  0000000000000028: 74 07              je          0000000000000031
  000000000000002A: BD 9C 00 22 00     mov         ebp,22009Ch
  000000000000002F: EB 19              jmp         000000000000004A
  0000000000000031: 84 D3              test        bl,dl
  0000000000000033: 74 07              je          000000000000003C
  0000000000000035: BD A0 00 22 00     mov         ebp,2200A0h
  000000000000003A: EB 0E              jmp         000000000000004A
  000000000000003C: F6 C2 04           test        dl,4
  000000000000003F: 0F 84 C7 02 00 00  je          000000000000030C
  0000000000000045: BD A4 00 22 00     mov         ebp,2200A4h
  000000000000004A: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  000000000000004F: 85 C0              test        eax,eax
  0000000000000051: 75 0A              jne         000000000000005D
  0000000000000053: B8 05 00 00 00     mov         eax,5
  0000000000000058: E9 88 02 00 00     jmp         00000000000002E5
  000000000000005D: 48 8D 0D 00 00 00  lea         rcx,[GUID_CLASS_FT_BULK]
                    00
  0000000000000064: 41 B9 12 00 00 00  mov         r9d,12h
  000000000000006A: 45 33 C0           xor         r8d,r8d
  000000000000006D: 33 D2              xor         edx,edx
  000000000000006F: 48 89 BC 24 D0 00  mov         qword ptr [rsp+0D0h],rdi
                    00 00
  0000000000000077: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetClassDevsA]
  000000000000007D: 48 8B F8           mov         rdi,rax
  0000000000000080: 48 85 C0           test        rax,rax
  0000000000000083: 0F 84 52 02 00 00  je          00000000000002DB
  0000000000000089: 48 8D 44 24 40     lea         rax,[rsp+40h]
  000000000000008E: 4C 8D 05 00 00 00  lea         r8,[GUID_CLASS_FT_BULK]
                    00
  0000000000000095: 45 33 C9           xor         r9d,r9d
  0000000000000098: 33 D2              xor         edx,edx
  000000000000009A: 48 8B CF           mov         rcx,rdi
  000000000000009D: C7 44 24 40 20 00  mov         dword ptr [rsp+40h],20h
                    00 00
  00000000000000A5: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000AA: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInterfaces]
  00000000000000B0: 85 C0              test        eax,eax
  00000000000000B2: 74 31              je          00000000000000E5
  00000000000000B4: 0F 1F 40 00        nop         dword ptr [rax]
  00000000000000B8: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  00000000000000C0: 48 8D 44 24 40     lea         rax,[rsp+40h]
  00000000000000C5: FF C6              inc         esi
  00000000000000C7: 4C 8D 05 00 00 00  lea         r8,[GUID_CLASS_FT_BULK]
                    00
  00000000000000CE: 33 D2              xor         edx,edx
  00000000000000D0: 48 8B CF           mov         rcx,rdi
  00000000000000D3: 44 8B CE           mov         r9d,esi
  00000000000000D6: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000DB: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInterfaces]
  00000000000000E1: 85 C0              test        eax,eax
  00000000000000E3: 75 DB              jne         00000000000000C0
  00000000000000E5: 48 8B CF           mov         rcx,rdi
  00000000000000E8: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  00000000000000EE: 41 8B FC           mov         edi,r12d
  00000000000000F1: 85 F6              test        esi,esi
  00000000000000F3: 0F 84 E2 01 00 00  je          00000000000002DB
  00000000000000F9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000100: 48 8D 0D 00 00 00  lea         rcx,[?gCS@@3U_RTL_CRITICAL_SECTION@@A]
                    00
  0000000000000107: FF 15 00 00 00 00  call        qword ptr [__imp_EnterCriticalSection]
  000000000000010D: 49 8B D6           mov         rdx,r14
  0000000000000110: 8B CF              mov         ecx,edi
  0000000000000112: E8 00 00 00 00     call        FT_Open
  0000000000000117: 8B D8              mov         ebx,eax
  0000000000000119: 85 C0              test        eax,eax
  000000000000011B: 0F 85 6E 01 00 00  jne         000000000000028F
  0000000000000121: 49 8B 0E           mov         rcx,qword ptr [r14]
  0000000000000124: 33 C0              xor         eax,eax
  0000000000000126: 48 89 44 24 60     mov         qword ptr [rsp+60h],rax
  000000000000012B: 48 89 44 24 68     mov         qword ptr [rsp+68h],rax
  0000000000000130: 48 89 44 24 70     mov         qword ptr [rsp+70h],rax
  0000000000000135: 48 89 44 24 78     mov         qword ptr [rsp+78h],rax
  000000000000013A: 48 89 84 24 80 00  mov         qword ptr [rsp+80h],rax
                    00 00
  0000000000000142: 48 89 84 24 88 00  mov         qword ptr [rsp+88h],rax
                    00 00
  000000000000014A: 48 89 84 24 90 00  mov         qword ptr [rsp+90h],rax
                    00 00
  0000000000000152: 48 89 84 24 98 00  mov         qword ptr [rsp+98h],rax
                    00 00
  000000000000015A: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000161: 48 85 C0           test        rax,rax
  0000000000000164: 0F 84 A8 00 00 00  je          0000000000000212
  000000000000016A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000170: 48 3B C1           cmp         rax,rcx
  0000000000000173: 74 0D              je          0000000000000182
  0000000000000175: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000178: 48 85 C0           test        rax,rax
  000000000000017B: 75 F3              jne         0000000000000170
  000000000000017D: E9 90 00 00 00     jmp         0000000000000212
  0000000000000182: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000186: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000018A: 4C 89 64 24 38     mov         qword ptr [rsp+38h],r12
  000000000000018F: 4C 8D 84 24 E8 00  lea         r8,[rsp+0E8h]
                    00 00
  0000000000000197: 8B D5              mov         edx,ebp
  0000000000000199: 41 B9 40 00 00 00  mov         r9d,40h
  000000000000019F: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  00000000000001A4: 48 C1 EA 02        shr         rdx,2
  00000000000001A8: 4C 8D 44 24 60     lea         r8,[rsp+60h]
  00000000000001AD: 81 E2 FF 0F 00 00  and         edx,0FFFh
  00000000000001B3: C7 44 24 28 40 00  mov         dword ptr [rsp+28h],40h
                    00 00
  00000000000001BB: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  00000000000001C0: 8B 14 90           mov         edx,dword ptr [rax+rdx*4]
  00000000000001C3: 4C 8D 44 24 60     lea         r8,[rsp+60h]
  00000000000001C8: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000001CE: BB 04 00 00 00     mov         ebx,4
  00000000000001D3: 85 C0              test        eax,eax
  00000000000001D5: 41 0F 45 DC        cmovne      ebx,r12d
  00000000000001D9: 85 DB              test        ebx,ebx
  00000000000001DB: 75 35              jne         0000000000000212
  00000000000001DD: 81 FD A4 00 22 00  cmp         ebp,2200A4h
  00000000000001E3: 74 22              je          0000000000000207
  00000000000001E5: 4C 8D 44 24 60     lea         r8,[rsp+60h]
  00000000000001EA: 49 8B C7           mov         rax,r15
  00000000000001ED: 4D 2B C7           sub         r8,r15
  00000000000001F0: 0F B6 10           movzx       edx,byte ptr [rax]
  00000000000001F3: 42 0F B6 0C 00     movzx       ecx,byte ptr [rax+r8]
  00000000000001F8: 2B D1              sub         edx,ecx
  00000000000001FA: 75 07              jne         0000000000000203
  00000000000001FC: 48 FF C0           inc         rax
  00000000000001FF: 85 C9              test        ecx,ecx
  0000000000000201: 75 ED              jne         00000000000001F0
  0000000000000203: 85 D2              test        edx,edx
  0000000000000205: EB 05              jmp         000000000000020C
  0000000000000207: 44 3B 7C 24 60     cmp         r15d,dword ptr [rsp+60h]
  000000000000020C: 0F 84 EB 00 00 00  je          00000000000002FD
  0000000000000212: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000219: 49 8B 1E           mov         rbx,qword ptr [r14]
  000000000000021C: 48 85 C0           test        rax,rax
  000000000000021F: 74 5A              je          000000000000027B
  0000000000000221: 48 3B C3           cmp         rax,rbx
  0000000000000224: 74 0A              je          0000000000000230
  0000000000000226: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000229: 48 85 C0           test        rax,rax
  000000000000022C: 75 F3              jne         0000000000000221
  000000000000022E: EB 4B              jmp         000000000000027B
  0000000000000230: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  0000000000000235: 85 C0              test        eax,eax
  0000000000000237: 74 42              je          000000000000027B
  0000000000000239: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  0000000000000240: 83 CA FF           or          edx,0FFFFFFFFh
  0000000000000243: FF 15 00 00 00 00  call        qword ptr [__imp_WaitForSingleObject]
  0000000000000249: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  000000000000024D: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
  0000000000000253: 48 8B 4B 20        mov         rcx,qword ptr [rbx+20h]
  0000000000000257: 48 85 C9           test        rcx,rcx
  000000000000025A: 74 0A              je          0000000000000266
  000000000000025C: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  0000000000000262: 4C 89 63 20        mov         qword ptr [rbx+20h],r12
  0000000000000266: 48 8B CB           mov         rcx,rbx
  0000000000000269: E8 00 00 00 00     call        ?RemoveDevice@@YAKPEAUft_private_vars@@@Z
  000000000000026E: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  0000000000000275: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  000000000000027B: 48 8D 0D 00 00 00  lea         rcx,[?gCS@@3U_RTL_CRITICAL_SECTION@@A]
                    00
  0000000000000282: FF 15 00 00 00 00  call        qword ptr [__imp_LeaveCriticalSection]
  0000000000000288: BB 02 00 00 00     mov         ebx,2
  000000000000028D: EB 0D              jmp         000000000000029C
  000000000000028F: 48 8D 0D 00 00 00  lea         rcx,[?gCS@@3U_RTL_CRITICAL_SECTION@@A]
                    00
  0000000000000296: FF 15 00 00 00 00  call        qword ptr [__imp_LeaveCriticalSection]
  000000000000029C: FF C7              inc         edi
  000000000000029E: 3B FE              cmp         edi,esi
  00000000000002A0: 0F 82 5A FE FF FF  jb          0000000000000100
  00000000000002A6: 85 DB              test        ebx,ebx
  00000000000002A8: 75 31              jne         00000000000002DB
  00000000000002AA: 49 8B 0E           mov         rcx,qword ptr [r14]
  00000000000002AD: 48 8D 94 24 D8 00  lea         rdx,[rsp+0D8h]
                    00 00
  00000000000002B5: 45 33 C9           xor         r9d,r9d
  00000000000002B8: 45 33 C0           xor         r8d,r8d
  00000000000002BB: 4C 89 64 24 28     mov         qword ptr [rsp+28h],r12
  00000000000002C0: 4C 89 64 24 20     mov         qword ptr [rsp+20h],r12
  00000000000002C5: E8 00 00 00 00     call        FT_GetDeviceInfo
  00000000000002CA: 85 C0              test        eax,eax
  00000000000002CC: 75 0D              jne         00000000000002DB
  00000000000002CE: 49 8B 0E           mov         rcx,qword ptr [r14]
  00000000000002D1: 8B 84 24 D8 00 00  mov         eax,dword ptr [rsp+0D8h]
                    00
  00000000000002D8: 89 41 28           mov         dword ptr [rcx+28h],eax
  00000000000002DB: 48 8B BC 24 D0 00  mov         rdi,qword ptr [rsp+0D0h]
                    00 00
  00000000000002E3: 8B C3              mov         eax,ebx
  00000000000002E5: 48 8B 9C 24 E0 00  mov         rbx,qword ptr [rsp+0E0h]
                    00 00
  00000000000002ED: 48 81 C4 A0 00 00  add         rsp,0A0h
                    00
  00000000000002F4: 41 5F              pop         r15
  00000000000002F6: 41 5E              pop         r14
  00000000000002F8: 41 5C              pop         r12
  00000000000002FA: 5E                 pop         rsi
  00000000000002FB: 5D                 pop         rbp
  00000000000002FC: C3                 ret
  00000000000002FD: 48 8D 0D 00 00 00  lea         rcx,[?gCS@@3U_RTL_CRITICAL_SECTION@@A]
                    00
  0000000000000304: FF 15 00 00 00 00  call        qword ptr [__imp_LeaveCriticalSection]
  000000000000030A: EB 9E              jmp         00000000000002AA
  000000000000030C: B8 06 00 00 00     mov         eax,6
  0000000000000311: EB D2              jmp         00000000000002E5

FT_Purge:
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 83 EC 48        sub         rsp,48h
  0000000000000008: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000F: 48 85 C0           test        rax,rax
  0000000000000012: 74 0D              je          0000000000000021
  0000000000000014: 48 3B C1           cmp         rax,rcx
  0000000000000017: 74 12              je          000000000000002B
  0000000000000019: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 75 F3              jne         0000000000000014
  0000000000000021: B8 01 00 00 00     mov         eax,1
  0000000000000026: 48 83 C4 48        add         rsp,48h
  000000000000002A: C3                 ret
  000000000000002B: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002F: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000033: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000038: 48 89 5C 24 60     mov         qword ptr [rsp+60h],rbx
  000000000000003D: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000042: 33 FF              xor         edi,edi
  0000000000000044: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000049: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000004E: 8B 90 4C 01 00 00  mov         edx,dword ptr [rax+14Ch]
  0000000000000054: BB 04 00 00 00     mov         ebx,4
  0000000000000059: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  000000000000005E: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  0000000000000062: 44 8B CB           mov         r9d,ebx
  0000000000000065: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000006A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000070: 85 C0              test        eax,eax
  0000000000000072: 0F 45 DF           cmovne      ebx,edi
  0000000000000075: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  000000000000007A: 8B C3              mov         eax,ebx
  000000000000007C: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  0000000000000081: 48 83 C4 48        add         rsp,48h
  0000000000000085: C3                 ret

FT_Read:
  0000000000000000: 40 57              push        rdi
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000D: 49 8B F9           mov         rdi,r9
  0000000000000010: 48 85 C0           test        rax,rax
  0000000000000013: 74 0D              je          0000000000000022
  0000000000000015: 48 3B C1           cmp         rax,rcx
  0000000000000018: 74 13              je          000000000000002D
  000000000000001A: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001D: 48 85 C0           test        rax,rax
  0000000000000020: 75 F3              jne         0000000000000015
  0000000000000022: B8 01 00 00 00     mov         eax,1
  0000000000000027: 48 83 C4 30        add         rsp,30h
  000000000000002B: 5F                 pop         rdi
  000000000000002C: C3                 ret
  000000000000002D: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000032: 33 DB              xor         ebx,ebx
  0000000000000034: 41 89 19           mov         dword ptr [r9],ebx
  0000000000000037: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000003B: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000040: FF 15 00 00 00 00  call        qword ptr [__imp_ReadFile]
  0000000000000046: 85 C0              test        eax,eax
  0000000000000048: 75 09              jne         0000000000000053
  000000000000004A: 39 1F              cmp         dword ptr [rdi],ebx
  000000000000004C: 75 05              jne         0000000000000053
  000000000000004E: BB 04 00 00 00     mov         ebx,4
  0000000000000053: 8B C3              mov         eax,ebx
  0000000000000055: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000005A: 48 83 C4 30        add         rsp,30h
  000000000000005E: 5F                 pop         rdi
  000000000000005F: C3                 ret

FT_ReadEE:
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 83 EC 48        sub         rsp,48h
  0000000000000008: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000F: 48 85 C0           test        rax,rax
  0000000000000012: 74 0D              je          0000000000000021
  0000000000000014: 48 3B C1           cmp         rax,rcx
  0000000000000017: 74 12              je          000000000000002B
  0000000000000019: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 75 F3              jne         0000000000000014
  0000000000000021: B8 01 00 00 00     mov         eax,1
  0000000000000026: 48 83 C4 48        add         rsp,48h
  000000000000002A: C3                 ret
  000000000000002B: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002F: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000033: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000038: 48 89 5C 24 60     mov         qword ptr [rsp+60h],rbx
  000000000000003D: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000042: 33 FF              xor         edi,edi
  0000000000000044: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000049: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000004E: 8B 90 80 00 00 00  mov         edx,dword ptr [rax+80h]
  0000000000000054: C7 44 24 28 02 00  mov         dword ptr [rsp+28h],2
                    00 00
  000000000000005C: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  0000000000000061: BB 04 00 00 00     mov         ebx,4
  0000000000000066: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  000000000000006B: 44 8B CB           mov         r9d,ebx
  000000000000006E: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000074: 85 C0              test        eax,eax
  0000000000000076: 0F 45 DF           cmovne      ebx,edi
  0000000000000079: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  000000000000007E: 8B C3              mov         eax,ebx
  0000000000000080: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  0000000000000085: 48 83 C4 48        add         rsp,48h
  0000000000000089: C3                 ret

FT_Reload:
  0000000000000000: 4C 8B DC           mov         r11,rsp
  0000000000000003: 48 83 EC 78        sub         rsp,78h
  0000000000000007: 66 85 C9           test        cx,cx
  000000000000000A: 75 2D              jne         0000000000000039
  000000000000000C: 66 85 D2           test        dx,dx
  000000000000000F: 75 28              jne         0000000000000039
  0000000000000011: 33 D2              xor         edx,edx
  0000000000000013: 48 8D 05 00 00 00  lea         rax,[??_C@_0N@EHFJGMNP@USB?2ROOT_HUB?$AA@]
                    00
  000000000000001A: 4D 8D 4B 18        lea         r9,[r11+18h]
  000000000000001E: 44 8D 42 01        lea         r8d,[rdx+1]
  0000000000000022: 33 C9              xor         ecx,ecx
  0000000000000024: 49 89 43 18        mov         qword ptr [r11+18h],rax
  0000000000000028: E8 00 00 00 00     call        ?cmdRestart@@YAHPEBD0HQEAPEAD@Z
  000000000000002D: 48 8D 05 00 00 00  lea         rax,[??_C@_0P@LKANLEPH@USB?2ROOT_HUB20?$AA@]
                    00
  0000000000000034: E9 97 00 00 00     jmp         00000000000000D0
  0000000000000039: 8B 05 10 00 00 00  mov         eax,dword ptr [??_C@_0BG@NCALHNG@USB?2VID_0000?$CGPID_0000?$AA@+10h]
  000000000000003F: 0F 10 05 00 00 00  movups      xmm0,xmmword ptr [??_C@_0BG@NCALHNG@USB?2VID_0000?$CGPID_0000?$AA@]
                    00
  0000000000000046: 4C 8D 44 24 2B     lea         r8,[rsp+2Bh]
  000000000000004B: 89 44 24 30        mov         dword ptr [rsp+30h],eax
  000000000000004F: 0F B7 05 14 00 00  movzx       eax,word ptr [??_C@_0BG@NCALHNG@USB?2VID_0000?$CGPID_0000?$AA@+14h]
                    00
  0000000000000056: 4C 8D 0D 00 00 00  lea         r9,[??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@]
                    00
  000000000000005D: 0F 29 44 24 20     movaps      xmmword ptr [rsp+20h],xmm0
  0000000000000062: 66 89 44 24 34     mov         word ptr [rsp+34h],ax
  0000000000000067: 66 85 C9           test        cx,cx
  000000000000006A: 74 2C              je          0000000000000098
  000000000000006C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000070: 0F B7 C1           movzx       eax,cx
  0000000000000073: 25 0F 00 00 80     and         eax,8000000Fh
  0000000000000078: 7D 07              jge         0000000000000081
  000000000000007A: FF C8              dec         eax
  000000000000007C: 83 C8 F0           or          eax,0FFFFFFF0h
  000000000000007F: FF C0              inc         eax
  0000000000000081: 48 98              cdqe
  0000000000000083: 66 C1 E9 04        shr         cx,4
  0000000000000087: 49 FF C8           dec         r8
  000000000000008A: 42 0F B6 04 08     movzx       eax,byte ptr [rax+r9]
  000000000000008F: 41 88 40 01        mov         byte ptr [r8+1],al
  0000000000000093: 66 85 C9           test        cx,cx
  0000000000000096: 75 D8              jne         0000000000000070
  0000000000000098: 4C 8D 44 24 34     lea         r8,[rsp+34h]
  000000000000009D: 66 85 D2           test        dx,dx
  00000000000000A0: 74 29              je          00000000000000CB
  00000000000000A2: 0F B7 C2           movzx       eax,dx
  00000000000000A5: 25 0F 00 00 80     and         eax,8000000Fh
  00000000000000AA: 7D 07              jge         00000000000000B3
  00000000000000AC: FF C8              dec         eax
  00000000000000AE: 83 C8 F0           or          eax,0FFFFFFF0h
  00000000000000B1: FF C0              inc         eax
  00000000000000B3: 48 63 C8           movsxd      rcx,eax
  00000000000000B6: 66 C1 EA 04        shr         dx,4
  00000000000000BA: 49 FF C8           dec         r8
  00000000000000BD: 42 0F B6 04 09     movzx       eax,byte ptr [rcx+r9]
  00000000000000C2: 41 88 40 01        mov         byte ptr [r8+1],al
  00000000000000C6: 66 85 D2           test        dx,dx
  00000000000000C9: 75 D7              jne         00000000000000A2
  00000000000000CB: 48 8D 44 24 20     lea         rax,[rsp+20h]
  00000000000000D0: 4C 8D 8C 24 90 00  lea         r9,[rsp+90h]
                    00 00
  00000000000000D8: 41 B8 01 00 00 00  mov         r8d,1
  00000000000000DE: 33 D2              xor         edx,edx
  00000000000000E0: 33 C9              xor         ecx,ecx
  00000000000000E2: 48 89 84 24 90 00  mov         qword ptr [rsp+90h],rax
                    00 00
  00000000000000EA: E8 00 00 00 00     call        ?cmdRestart@@YAHPEBD0HQEAPEAD@Z
  00000000000000EF: 33 C0              xor         eax,eax
  00000000000000F1: 48 83 C4 78        add         rsp,78h
  00000000000000F5: C3                 ret

FT_Rescan:
  0000000000000000: E9 00 00 00 00     jmp         ?ListClass@@YAKXZ

FT_ResetDevice:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 50 04           mov         edx,dword ptr [rax+4]
  000000000000004B: 45 33 C0           xor         r8d,r8d
  000000000000004E: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000052: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000057: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000005D: B9 04 00 00 00     mov         ecx,4
  0000000000000062: 85 C0              test        eax,eax
  0000000000000064: 0F 45 CB           cmovne      ecx,ebx
  0000000000000067: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006C: 8B C1              mov         eax,ecx
  000000000000006E: 48 83 C4 48        add         rsp,48h
  0000000000000072: C3                 ret

FT_ResetPort:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 90 A8 01 00 00  mov         edx,dword ptr [rax+1A8h]
  000000000000004E: 45 33 C0           xor         r8d,r8d
  0000000000000051: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000055: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000060: B9 04 00 00 00     mov         ecx,4
  0000000000000065: 85 C0              test        eax,eax
  0000000000000067: 0F 45 CB           cmovne      ecx,ebx
  000000000000006A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006F: 8B C1              mov         eax,ecx
  0000000000000071: 48 83 C4 48        add         rsp,48h
  0000000000000075: C3                 ret

FT_RestartInTask:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 90 A0 01 00 00  mov         edx,dword ptr [rax+1A0h]
  000000000000004E: 45 33 C0           xor         r8d,r8d
  0000000000000051: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000055: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000060: B9 04 00 00 00     mov         ecx,4
  0000000000000065: 85 C0              test        eax,eax
  0000000000000067: 0F 45 CB           cmovne      ecx,ebx
  000000000000006A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006F: 8B C1              mov         eax,ecx
  0000000000000071: 48 83 C4 48        add         rsp,48h
  0000000000000075: C3                 ret

FT_SetBaudRate:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 89 54 24 58        mov         dword ptr [rsp+58h],edx
  000000000000000F: 48 85 C0           test        rax,rax
  0000000000000012: 74 0D              je          0000000000000021
  0000000000000014: 48 3B C1           cmp         rax,rcx
  0000000000000017: 74 12              je          000000000000002B
  0000000000000019: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 75 F3              jne         0000000000000014
  0000000000000021: B8 01 00 00 00     mov         eax,1
  0000000000000026: 48 83 C4 48        add         rsp,48h
  000000000000002A: C3                 ret
  000000000000002B: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002F: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000033: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000038: 48 89 5C 24 60     mov         qword ptr [rsp+60h],rbx
  000000000000003D: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000042: 33 FF              xor         edi,edi
  0000000000000044: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000049: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000004E: 8B 90 04 01 00 00  mov         edx,dword ptr [rax+104h]
  0000000000000054: BB 04 00 00 00     mov         ebx,4
  0000000000000059: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  000000000000005E: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  0000000000000062: 44 8B CB           mov         r9d,ebx
  0000000000000065: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000006A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000070: 85 C0              test        eax,eax
  0000000000000072: B8 07 00 00 00     mov         eax,7
  0000000000000077: 0F 45 DF           cmovne      ebx,edi
  000000000000007A: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  000000000000007F: 83 FB 04           cmp         ebx,4
  0000000000000082: 0F 44 D8           cmove       ebx,eax
  0000000000000085: 8B C3              mov         eax,ebx
  0000000000000087: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  000000000000008C: 48 83 C4 48        add         rsp,48h
  0000000000000090: C3                 ret

FT_SetBitMode:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 88 54 24 58        mov         byte ptr [rsp+58h],dl
  000000000000000F: 44 88 44 24 59     mov         byte ptr [rsp+59h],r8b
  0000000000000014: 48 85 C0           test        rax,rax
  0000000000000017: 74 14              je          000000000000002D
  0000000000000019: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000020: 48 3B C1           cmp         rax,rcx
  0000000000000023: 74 12              je          0000000000000037
  0000000000000025: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000028: 48 85 C0           test        rax,rax
  000000000000002B: 75 F3              jne         0000000000000020
  000000000000002D: B8 01 00 00 00     mov         eax,1
  0000000000000032: 48 83 C4 48        add         rsp,48h
  0000000000000036: C3                 ret
  0000000000000037: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000003B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000003F: 48 8D 54 24 60     lea         rdx,[rsp+60h]
  0000000000000044: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000049: 33 DB              xor         ebx,ebx
  000000000000004B: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  0000000000000050: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000055: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000005A: 8B 90 78 01 00 00  mov         edx,dword ptr [rax+178h]
  0000000000000060: 44 8D 4B 02        lea         r9d,[rbx+2]
  0000000000000064: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000068: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000006D: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000073: B9 04 00 00 00     mov         ecx,4
  0000000000000078: 85 C0              test        eax,eax
  000000000000007A: 0F 45 CB           cmovne      ecx,ebx
  000000000000007D: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000082: 8B C1              mov         eax,ecx
  0000000000000084: 48 83 C4 48        add         rsp,48h
  0000000000000088: C3                 ret

FT_SetBreakOff:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 90 14 01 00 00  mov         edx,dword ptr [rax+114h]
  000000000000004E: 45 33 C0           xor         r8d,r8d
  0000000000000051: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000055: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000060: B9 04 00 00 00     mov         ecx,4
  0000000000000065: 85 C0              test        eax,eax
  0000000000000067: 0F 45 CB           cmovne      ecx,ebx
  000000000000006A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006F: 8B C1              mov         eax,ecx
  0000000000000071: 48 83 C4 48        add         rsp,48h
  0000000000000075: C3                 ret

FT_SetBreakOn:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 90 10 01 00 00  mov         edx,dword ptr [rax+110h]
  000000000000004E: 45 33 C0           xor         r8d,r8d
  0000000000000051: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000055: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000060: B9 04 00 00 00     mov         ecx,4
  0000000000000065: 85 C0              test        eax,eax
  0000000000000067: 0F 45 CB           cmovne      ecx,ebx
  000000000000006A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006F: 8B C1              mov         eax,ecx
  0000000000000071: 48 83 C4 48        add         rsp,48h
  0000000000000075: C3                 ret

FT_SetChars:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 0F B6 44 24 70     movzx       eax,byte ptr [rsp+70h]
  0000000000000009: 88 54 24 58        mov         byte ptr [rsp+58h],dl
  000000000000000D: 44 88 44 24 59     mov         byte ptr [rsp+59h],r8b
  0000000000000012: 88 44 24 5B        mov         byte ptr [rsp+5Bh],al
  0000000000000016: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000001D: 44 88 4C 24 5A     mov         byte ptr [rsp+5Ah],r9b
  0000000000000022: 48 85 C0           test        rax,rax
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: 48 3B C1           cmp         rax,rcx
  000000000000002A: 74 12              je          000000000000003E
  000000000000002C: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002F: 48 85 C0           test        rax,rax
  0000000000000032: 75 F3              jne         0000000000000027
  0000000000000034: B8 01 00 00 00     mov         eax,1
  0000000000000039: 48 83 C4 48        add         rsp,48h
  000000000000003D: C3                 ret
  000000000000003E: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000042: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000046: 48 8D 54 24 70     lea         rdx,[rsp+70h]
  000000000000004B: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  0000000000000050: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000055: 33 FF              xor         edi,edi
  0000000000000057: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  000000000000005C: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000061: 8B 90 5C 01 00 00  mov         edx,dword ptr [rax+15Ch]
  0000000000000067: BB 04 00 00 00     mov         ebx,4
  000000000000006C: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  0000000000000071: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  0000000000000075: 44 8B CB           mov         r9d,ebx
  0000000000000078: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000007D: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000083: 85 C0              test        eax,eax
  0000000000000085: 0F 45 DF           cmovne      ebx,edi
  0000000000000088: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  000000000000008D: 8B C3              mov         eax,ebx
  000000000000008F: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000094: 48 83 C4 48        add         rsp,48h
  0000000000000098: C3                 ret

FT_SetDataCharacteristics:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 88 54 24 5A        mov         byte ptr [rsp+5Ah],dl
  000000000000000F: 44 88 44 24 58     mov         byte ptr [rsp+58h],r8b
  0000000000000014: 44 88 4C 24 59     mov         byte ptr [rsp+59h],r9b
  0000000000000019: 48 85 C0           test        rax,rax
  000000000000001C: 74 0F              je          000000000000002D
  000000000000001E: 66 90              xchg        ax,ax
  0000000000000020: 48 3B C1           cmp         rax,rcx
  0000000000000023: 74 12              je          0000000000000037
  0000000000000025: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000028: 48 85 C0           test        rax,rax
  000000000000002B: 75 F3              jne         0000000000000020
  000000000000002D: B8 01 00 00 00     mov         eax,1
  0000000000000032: 48 83 C4 48        add         rsp,48h
  0000000000000036: C3                 ret
  0000000000000037: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000003B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000003F: 48 8D 54 24 60     lea         rdx,[rsp+60h]
  0000000000000044: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000049: 33 DB              xor         ebx,ebx
  000000000000004B: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  0000000000000050: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000055: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000005A: 8B 90 0C 01 00 00  mov         edx,dword ptr [rax+10Ch]
  0000000000000060: 44 8D 4B 03        lea         r9d,[rbx+3]
  0000000000000064: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000068: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000006D: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000073: B9 04 00 00 00     mov         ecx,4
  0000000000000078: 85 C0              test        eax,eax
  000000000000007A: 0F 45 CB           cmovne      ecx,ebx
  000000000000007D: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000082: 8B C1              mov         eax,ecx
  0000000000000084: 48 83 C4 48        add         rsp,48h
  0000000000000088: C3                 ret

FT_SetDeadmanTimeout:
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 83 EC 48        sub         rsp,48h
  0000000000000008: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000F: 48 85 C0           test        rax,rax
  0000000000000012: 74 0D              je          0000000000000021
  0000000000000014: 48 3B C1           cmp         rax,rcx
  0000000000000017: 74 12              je          000000000000002B
  0000000000000019: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 75 F3              jne         0000000000000014
  0000000000000021: B8 01 00 00 00     mov         eax,1
  0000000000000026: 48 83 C4 48        add         rsp,48h
  000000000000002A: C3                 ret
  000000000000002B: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002F: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000033: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000038: 48 89 5C 24 60     mov         qword ptr [rsp+60h],rbx
  000000000000003D: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000042: 33 FF              xor         edi,edi
  0000000000000044: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000049: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000004E: 8B 90 AC 01 00 00  mov         edx,dword ptr [rax+1ACh]
  0000000000000054: BB 04 00 00 00     mov         ebx,4
  0000000000000059: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  000000000000005E: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  0000000000000062: 44 8B CB           mov         r9d,ebx
  0000000000000065: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000006A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000070: 85 C0              test        eax,eax
  0000000000000072: 0F 45 DF           cmovne      ebx,edi
  0000000000000075: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  000000000000007A: 8B C3              mov         eax,ebx
  000000000000007C: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  0000000000000081: 48 83 C4 48        add         rsp,48h
  0000000000000085: C3                 ret

FT_SetDivisor:
  0000000000000000: 66 89 54 24 10     mov         word ptr [rsp+10h],dx
  0000000000000005: 48 83 EC 48        sub         rsp,48h
  0000000000000009: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000010: 48 85 C0           test        rax,rax
  0000000000000013: 74 0D              je          0000000000000022
  0000000000000015: 48 3B C1           cmp         rax,rcx
  0000000000000018: 74 12              je          000000000000002C
  000000000000001A: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001D: 48 85 C0           test        rax,rax
  0000000000000020: 75 F3              jne         0000000000000015
  0000000000000022: B8 01 00 00 00     mov         eax,1
  0000000000000027: 48 83 C4 48        add         rsp,48h
  000000000000002B: C3                 ret
  000000000000002C: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000030: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000034: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000039: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  000000000000003E: 33 DB              xor         ebx,ebx
  0000000000000040: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  0000000000000045: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  000000000000004A: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000004F: 8B 90 98 00 00 00  mov         edx,dword ptr [rax+98h]
  0000000000000055: 44 8D 4B 02        lea         r9d,[rbx+2]
  0000000000000059: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  000000000000005D: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000062: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000068: B9 04 00 00 00     mov         ecx,4
  000000000000006D: 85 C0              test        eax,eax
  000000000000006F: 0F 45 CB           cmovne      ecx,ebx
  0000000000000072: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000077: 8B C1              mov         eax,ecx
  0000000000000079: 48 83 C4 48        add         rsp,48h
  000000000000007D: C3                 ret

FT_SetDtr:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 90 24 01 00 00  mov         edx,dword ptr [rax+124h]
  000000000000004E: 45 33 C0           xor         r8d,r8d
  0000000000000051: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000055: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000060: B9 04 00 00 00     mov         ecx,4
  0000000000000065: 85 C0              test        eax,eax
  0000000000000067: 0F 45 CB           cmovne      ecx,ebx
  000000000000006A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006F: 8B C1              mov         eax,ecx
  0000000000000071: 48 83 C4 48        add         rsp,48h
  0000000000000075: C3                 ret

FT_SetEventNotification:
  0000000000000000: 48 83 EC 58        sub         rsp,58h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 89 4C 24 40        mov         dword ptr [rsp+40h],ecx
  000000000000000F: 89 54 24 44        mov         dword ptr [rsp+44h],edx
  0000000000000013: 4C 89 44 24 48     mov         qword ptr [rsp+48h],r8
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 74 10              je          000000000000002D
  000000000000001D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000020: 48 3B C1           cmp         rax,rcx
  0000000000000023: 74 12              je          0000000000000037
  0000000000000025: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000028: 48 85 C0           test        rax,rax
  000000000000002B: 75 F3              jne         0000000000000020
  000000000000002D: B8 01 00 00 00     mov         eax,1
  0000000000000032: 48 83 C4 58        add         rsp,58h
  0000000000000036: C3                 ret
  0000000000000037: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000003B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000003F: 48 8D 54 24 68     lea         rdx,[rsp+68h]
  0000000000000044: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  0000000000000049: 33 DB              xor         ebx,ebx
  000000000000004B: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  0000000000000050: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000055: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000005A: 8B 90 8C 00 00 00  mov         edx,dword ptr [rax+8Ch]
  0000000000000060: 44 8D 4B 10        lea         r9d,[rbx+10h]
  0000000000000064: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000068: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000006D: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000073: B9 04 00 00 00     mov         ecx,4
  0000000000000078: 85 C0              test        eax,eax
  000000000000007A: 0F 45 CB           cmovne      ecx,ebx
  000000000000007D: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000082: 8B C1              mov         eax,ecx
  0000000000000084: 48 83 C4 58        add         rsp,58h
  0000000000000088: C3                 ret

FT_SetFlowControl:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 66 89 54 24 60     mov         word ptr [rsp+60h],dx
  0000000000000010: 44 88 44 24 62     mov         byte ptr [rsp+62h],r8b
  0000000000000015: 44 88 4C 24 63     mov         byte ptr [rsp+63h],r9b
  000000000000001A: 48 85 C0           test        rax,rax
  000000000000001D: 74 0E              je          000000000000002D
  000000000000001F: 90                 nop
  0000000000000020: 48 3B C1           cmp         rax,rcx
  0000000000000023: 74 12              je          0000000000000037
  0000000000000025: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000028: 48 85 C0           test        rax,rax
  000000000000002B: 75 F3              jne         0000000000000020
  000000000000002D: B8 01 00 00 00     mov         eax,1
  0000000000000032: 48 83 C4 48        add         rsp,48h
  0000000000000036: C3                 ret
  0000000000000037: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000003B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000003F: 48 8D 54 24 68     lea         rdx,[rsp+68h]
  0000000000000044: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  0000000000000049: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  000000000000004E: 33 FF              xor         edi,edi
  0000000000000050: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000055: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000005A: 8B 90 64 01 00 00  mov         edx,dword ptr [rax+164h]
  0000000000000060: BB 04 00 00 00     mov         ebx,4
  0000000000000065: 4C 8D 44 24 60     lea         r8,[rsp+60h]
  000000000000006A: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  000000000000006E: 44 8B CB           mov         r9d,ebx
  0000000000000071: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000076: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000007C: 85 C0              test        eax,eax
  000000000000007E: 0F 45 DF           cmovne      ebx,edi
  0000000000000081: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  0000000000000086: 8B C3              mov         eax,ebx
  0000000000000088: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  000000000000008D: 48 83 C4 48        add         rsp,48h
  0000000000000091: C3                 ret

FT_SetLatencyTimer:
  0000000000000000: 88 54 24 10        mov         byte ptr [rsp+10h],dl
  0000000000000004: 48 83 EC 48        sub         rsp,48h
  0000000000000008: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000F: 48 85 C0           test        rax,rax
  0000000000000012: 74 0D              je          0000000000000021
  0000000000000014: 48 3B C1           cmp         rax,rcx
  0000000000000017: 74 12              je          000000000000002B
  0000000000000019: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 75 F3              jne         0000000000000014
  0000000000000021: B8 01 00 00 00     mov         eax,1
  0000000000000026: 48 83 C4 48        add         rsp,48h
  000000000000002A: C3                 ret
  000000000000002B: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002F: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000033: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000038: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  000000000000003D: 33 DB              xor         ebx,ebx
  000000000000003F: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  0000000000000044: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000049: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000004E: 8B 90 70 01 00 00  mov         edx,dword ptr [rax+170h]
  0000000000000054: 44 8D 4B 01        lea         r9d,[rbx+1]
  0000000000000058: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  000000000000005C: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000061: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000067: B9 04 00 00 00     mov         ecx,4
  000000000000006C: 85 C0              test        eax,eax
  000000000000006E: 0F 45 CB           cmovne      ecx,ebx
  0000000000000071: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000076: 8B C1              mov         eax,ecx
  0000000000000078: 48 83 C4 48        add         rsp,48h
  000000000000007C: C3                 ret

FT_SetResetPipeRetryCount:
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 83 EC 48        sub         rsp,48h
  0000000000000008: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000F: 48 85 C0           test        rax,rax
  0000000000000012: 74 0D              je          0000000000000021
  0000000000000014: 48 3B C1           cmp         rax,rcx
  0000000000000017: 74 12              je          000000000000002B
  0000000000000019: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 75 F3              jne         0000000000000014
  0000000000000021: B8 01 00 00 00     mov         eax,1
  0000000000000026: 48 83 C4 48        add         rsp,48h
  000000000000002A: C3                 ret
  000000000000002B: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002F: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000033: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000038: 48 89 5C 24 60     mov         qword ptr [rsp+60h],rbx
  000000000000003D: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000042: 33 FF              xor         edi,edi
  0000000000000044: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000049: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000004E: 8B 90 A4 01 00 00  mov         edx,dword ptr [rax+1A4h]
  0000000000000054: BB 04 00 00 00     mov         ebx,4
  0000000000000059: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  000000000000005E: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  0000000000000062: 44 8B CB           mov         r9d,ebx
  0000000000000065: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000006A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000070: 85 C0              test        eax,eax
  0000000000000072: 0F 45 DF           cmovne      ebx,edi
  0000000000000075: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  000000000000007A: 8B C3              mov         eax,ebx
  000000000000007C: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  0000000000000081: 48 83 C4 48        add         rsp,48h
  0000000000000085: C3                 ret

FT_SetRts:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 90 30 01 00 00  mov         edx,dword ptr [rax+130h]
  000000000000004E: 45 33 C0           xor         r8d,r8d
  0000000000000051: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000055: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000060: B9 04 00 00 00     mov         ecx,4
  0000000000000065: 85 C0              test        eax,eax
  0000000000000067: 0F 45 CB           cmovne      ecx,ebx
  000000000000006A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006F: 8B C1              mov         eax,ecx
  0000000000000071: 48 83 C4 48        add         rsp,48h
  0000000000000075: C3                 ret

FT_SetTimeouts:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 89 54 24 50        mov         dword ptr [rsp+50h],edx
  000000000000000F: 44 89 44 24 54     mov         dword ptr [rsp+54h],r8d
  0000000000000014: 48 85 C0           test        rax,rax
  0000000000000017: 74 14              je          000000000000002D
  0000000000000019: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000020: 48 3B C1           cmp         rax,rcx
  0000000000000023: 74 12              je          0000000000000037
  0000000000000025: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000028: 48 85 C0           test        rax,rax
  000000000000002B: 75 F3              jne         0000000000000020
  000000000000002D: B8 01 00 00 00     mov         eax,1
  0000000000000032: 48 83 C4 48        add         rsp,48h
  0000000000000036: C3                 ret
  0000000000000037: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000003B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000003F: 48 8D 54 24 58     lea         rdx,[rsp+58h]
  0000000000000044: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000049: 33 DB              xor         ebx,ebx
  000000000000004B: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000050: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000055: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000005A: 8B 90 1C 01 00 00  mov         edx,dword ptr [rax+11Ch]
  0000000000000060: 44 8D 4B 08        lea         r9d,[rbx+8]
  0000000000000064: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000068: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000006D: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000073: B9 04 00 00 00     mov         ecx,4
  0000000000000078: 85 C0              test        eax,eax
  000000000000007A: 0F 45 CB           cmovne      ecx,ebx
  000000000000007D: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000082: 8B C1              mov         eax,ecx
  0000000000000084: 48 83 C4 48        add         rsp,48h
  0000000000000088: C3                 ret

FT_SetUSBParameters:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 89 54 24 50        mov         dword ptr [rsp+50h],edx
  000000000000000F: 44 89 44 24 54     mov         dword ptr [rsp+54h],r8d
  0000000000000014: 48 85 C0           test        rax,rax
  0000000000000017: 74 14              je          000000000000002D
  0000000000000019: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000020: 48 3B C1           cmp         rax,rcx
  0000000000000023: 74 12              je          0000000000000037
  0000000000000025: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000028: 48 85 C0           test        rax,rax
  000000000000002B: 75 F3              jne         0000000000000020
  000000000000002D: B8 01 00 00 00     mov         eax,1
  0000000000000032: 48 83 C4 48        add         rsp,48h
  0000000000000036: C3                 ret
  0000000000000037: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000003B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000003F: 48 8D 54 24 58     lea         rdx,[rsp+58h]
  0000000000000044: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000049: 33 DB              xor         ebx,ebx
  000000000000004B: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000050: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000055: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000005A: 8B 90 80 01 00 00  mov         edx,dword ptr [rax+180h]
  0000000000000060: 44 8D 4B 08        lea         r9d,[rbx+8]
  0000000000000064: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000068: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000006D: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000073: B9 04 00 00 00     mov         ecx,4
  0000000000000078: 85 C0              test        eax,eax
  000000000000007A: 0F 45 CB           cmovne      ecx,ebx
  000000000000007D: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000082: 8B C1              mov         eax,ecx
  0000000000000084: 48 83 C4 48        add         rsp,48h
  0000000000000088: C3                 ret

FT_SetWaitMask:
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 83 EC 48        sub         rsp,48h
  0000000000000008: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000F: 48 85 C0           test        rax,rax
  0000000000000012: 74 0D              je          0000000000000021
  0000000000000014: 48 3B C1           cmp         rax,rcx
  0000000000000017: 74 12              je          000000000000002B
  0000000000000019: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001C: 48 85 C0           test        rax,rax
  000000000000001F: 75 F3              jne         0000000000000014
  0000000000000021: B8 01 00 00 00     mov         eax,1
  0000000000000026: 48 83 C4 48        add         rsp,48h
  000000000000002A: C3                 ret
  000000000000002B: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002F: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000033: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000038: 48 89 5C 24 60     mov         qword ptr [rsp+60h],rbx
  000000000000003D: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000042: 33 FF              xor         edi,edi
  0000000000000044: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000049: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000004E: 8B 90 44 01 00 00  mov         edx,dword ptr [rax+144h]
  0000000000000054: BB 04 00 00 00     mov         ebx,4
  0000000000000059: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  000000000000005E: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  0000000000000062: 44 8B CB           mov         r9d,ebx
  0000000000000065: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000006A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000070: 85 C0              test        eax,eax
  0000000000000072: 0F 45 DF           cmovne      ebx,edi
  0000000000000075: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  000000000000007A: 8B C3              mov         eax,ebx
  000000000000007C: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  0000000000000081: 48 83 C4 48        add         rsp,48h
  0000000000000085: C3                 ret

FT_StopInTask:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000034: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000039: 33 DB              xor         ebx,ebx
  000000000000003B: 45 33 C9           xor         r9d,r9d
  000000000000003E: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  0000000000000043: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000048: 8B 90 9C 01 00 00  mov         edx,dword ptr [rax+19Ch]
  000000000000004E: 45 33 C0           xor         r8d,r8d
  0000000000000051: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000055: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000060: B9 04 00 00 00     mov         ecx,4
  0000000000000065: 85 C0              test        eax,eax
  0000000000000067: 0F 45 CB           cmovne      ecx,ebx
  000000000000006A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006F: 8B C1              mov         eax,ecx
  0000000000000071: 48 83 C4 48        add         rsp,48h
  0000000000000075: C3                 ret

FT_VendorCmdGet:
  0000000000000000: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 81 EC D0 00 00  sub         rsp,0D0h
                    00
  000000000000000D: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000014: 41 0F B7 F9        movzx       edi,r9w
  0000000000000018: 49 8B F0           mov         rsi,r8
  000000000000001B: 88 54 24 40        mov         byte ptr [rsp+40h],dl
  000000000000001F: C6 44 24 41 00     mov         byte ptr [rsp+41h],0
  0000000000000024: 66 44 89 4C 24 42  mov         word ptr [rsp+42h],r9w
  000000000000002A: 48 85 C0           test        rax,rax
  000000000000002D: 74 0E              je          000000000000003D
  000000000000002F: 90                 nop
  0000000000000030: 48 3B C1           cmp         rax,rcx
  0000000000000033: 74 1E              je          0000000000000053
  0000000000000035: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000038: 48 85 C0           test        rax,rax
  000000000000003B: 75 F3              jne         0000000000000030
  000000000000003D: B8 01 00 00 00     mov         eax,1
  0000000000000042: 48 8B B4 24 F8 00  mov         rsi,qword ptr [rsp+0F8h]
                    00 00
  000000000000004A: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  0000000000000051: 5F                 pop         rdi
  0000000000000052: C3                 ret
  0000000000000053: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000057: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000005B: 48 8D 94 24 E8 00  lea         rdx,[rsp+0E8h]
                    00 00
  0000000000000063: 48 89 9C 24 E0 00  mov         qword ptr [rsp+0E0h],rbx
                    00 00
  000000000000006B: 48 89 AC 24 F0 00  mov         qword ptr [rsp+0F0h],rbp
                    00 00
  0000000000000073: 33 ED              xor         ebp,ebp
  0000000000000075: 48 89 6C 24 38     mov         qword ptr [rsp+38h],rbp
  000000000000007A: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000007F: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  0000000000000084: C7 44 24 28 84 00  mov         dword ptr [rsp+28h],84h
                    00 00
  000000000000008C: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000091: 8B 90 E4 01 00 00  mov         edx,dword ptr [rax+1E4h]
  0000000000000097: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  000000000000009C: 41 B9 84 00 00 00  mov         r9d,84h
  00000000000000A2: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000000A8: BB 04 00 00 00     mov         ebx,4
  00000000000000AD: 85 C0              test        eax,eax
  00000000000000AF: 0F 45 DD           cmovne      ebx,ebp
  00000000000000B2: 48 8B AC 24 F0 00  mov         rbp,qword ptr [rsp+0F0h]
                    00 00
  00000000000000BA: 85 DB              test        ebx,ebx
  00000000000000BC: 75 11              jne         00000000000000CF
  00000000000000BE: 48 8D 54 24 44     lea         rdx,[rsp+44h]
  00000000000000C3: 44 0F B7 C7        movzx       r8d,di
  00000000000000C7: 48 8B CE           mov         rcx,rsi
  00000000000000CA: E8 00 00 00 00     call        memcpy
  00000000000000CF: 48 8B B4 24 F8 00  mov         rsi,qword ptr [rsp+0F8h]
                    00 00
  00000000000000D7: 8B C3              mov         eax,ebx
  00000000000000D9: 48 8B 9C 24 E0 00  mov         rbx,qword ptr [rsp+0E0h]
                    00 00
  00000000000000E1: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  00000000000000E8: 5F                 pop         rdi
  00000000000000E9: C3                 ret

FT_VendorCmdGetEx:
  0000000000000000: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 81 EC D0 00 00  sub         rsp,0D0h
                    00
  000000000000000D: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000014: 41 0F B7 F9        movzx       edi,r9w
  0000000000000018: 49 8B F0           mov         rsi,r8
  000000000000001B: 66 89 54 24 40     mov         word ptr [rsp+40h],dx
  0000000000000020: C6 44 24 42 00     mov         byte ptr [rsp+42h],0
  0000000000000025: 66 44 89 4C 24 44  mov         word ptr [rsp+44h],r9w
  000000000000002B: 48 85 C0           test        rax,rax
  000000000000002E: 74 0D              je          000000000000003D
  0000000000000030: 48 3B C1           cmp         rax,rcx
  0000000000000033: 74 1E              je          0000000000000053
  0000000000000035: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000038: 48 85 C0           test        rax,rax
  000000000000003B: 75 F3              jne         0000000000000030
  000000000000003D: B8 01 00 00 00     mov         eax,1
  0000000000000042: 48 8B B4 24 F8 00  mov         rsi,qword ptr [rsp+0F8h]
                    00 00
  000000000000004A: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  0000000000000051: 5F                 pop         rdi
  0000000000000052: C3                 ret
  0000000000000053: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000057: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000005B: 48 8D 94 24 E8 00  lea         rdx,[rsp+0E8h]
                    00 00
  0000000000000063: 48 89 9C 24 E0 00  mov         qword ptr [rsp+0E0h],rbx
                    00 00
  000000000000006B: 48 89 AC 24 F0 00  mov         qword ptr [rsp+0F0h],rbp
                    00 00
  0000000000000073: 33 ED              xor         ebp,ebp
  0000000000000075: 48 89 6C 24 38     mov         qword ptr [rsp+38h],rbp
  000000000000007A: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000007F: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  0000000000000084: C7 44 24 28 86 00  mov         dword ptr [rsp+28h],86h
                    00 00
  000000000000008C: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000091: 8B 90 EC 01 00 00  mov         edx,dword ptr [rax+1ECh]
  0000000000000097: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  000000000000009C: 41 B9 86 00 00 00  mov         r9d,86h
  00000000000000A2: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000000A8: BB 04 00 00 00     mov         ebx,4
  00000000000000AD: 85 C0              test        eax,eax
  00000000000000AF: 0F 45 DD           cmovne      ebx,ebp
  00000000000000B2: 48 8B AC 24 F0 00  mov         rbp,qword ptr [rsp+0F0h]
                    00 00
  00000000000000BA: 85 DB              test        ebx,ebx
  00000000000000BC: 75 11              jne         00000000000000CF
  00000000000000BE: 48 8D 54 24 46     lea         rdx,[rsp+46h]
  00000000000000C3: 44 0F B7 C7        movzx       r8d,di
  00000000000000C7: 48 8B CE           mov         rcx,rsi
  00000000000000CA: E8 00 00 00 00     call        memcpy
  00000000000000CF: 48 8B B4 24 F8 00  mov         rsi,qword ptr [rsp+0F8h]
                    00 00
  00000000000000D7: 8B C3              mov         eax,ebx
  00000000000000D9: 48 8B 9C 24 E0 00  mov         rbx,qword ptr [rsp+0E0h]
                    00 00
  00000000000000E1: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  00000000000000E8: 5F                 pop         rdi
  00000000000000E9: C3                 ret

FT_VendorCmdSet:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 81 EC D0 00 00  sub         rsp,0D0h
                    00
  0000000000000009: 49 8B C0           mov         rax,r8
  000000000000000C: 48 8B D9           mov         rbx,rcx
  000000000000000F: 88 54 24 40        mov         byte ptr [rsp+40h],dl
  0000000000000013: 48 8D 4C 24 44     lea         rcx,[rsp+44h]
  0000000000000018: 45 0F B7 C1        movzx       r8d,r9w
  000000000000001C: 48 8B D0           mov         rdx,rax
  000000000000001F: C6 44 24 41 00     mov         byte ptr [rsp+41h],0
  0000000000000024: 66 44 89 4C 24 42  mov         word ptr [rsp+42h],r9w
  000000000000002A: E8 00 00 00 00     call        memcpy
  000000000000002F: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 12              je          000000000000004D
  000000000000003B: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  0000000000000040: 48 3B C3           cmp         rax,rbx
  0000000000000043: 74 16              je          000000000000005B
  0000000000000045: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000048: 48 85 C0           test        rax,rax
  000000000000004B: 75 F3              jne         0000000000000040
  000000000000004D: B8 01 00 00 00     mov         eax,1
  0000000000000052: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  0000000000000059: 5B                 pop         rbx
  000000000000005A: C3                 ret
  000000000000005B: 48 8B 43 30        mov         rax,qword ptr [rbx+30h]
  000000000000005F: 48 8D 8C 24 E8 00  lea         rcx,[rsp+0E8h]
                    00 00
  0000000000000067: 48 89 BC 24 E0 00  mov         qword ptr [rsp+0E0h],rdi
                    00 00
  000000000000006F: 8B 90 E8 01 00 00  mov         edx,dword ptr [rax+1E8h]
  0000000000000075: 33 FF              xor         edi,edi
  0000000000000077: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  000000000000007C: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000081: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  0000000000000086: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  000000000000008A: 41 B9 84 00 00 00  mov         r9d,84h
  0000000000000090: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  0000000000000094: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000099: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000009F: B9 04 00 00 00     mov         ecx,4
  00000000000000A4: 85 C0              test        eax,eax
  00000000000000A6: 0F 45 CF           cmovne      ecx,edi
  00000000000000A9: 48 8B BC 24 E0 00  mov         rdi,qword ptr [rsp+0E0h]
                    00 00
  00000000000000B1: 8B C1              mov         eax,ecx
  00000000000000B3: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  00000000000000BA: 5B                 pop         rbx
  00000000000000BB: C3                 ret

FT_VendorCmdSetEx:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 81 EC D0 00 00  sub         rsp,0D0h
                    00
  0000000000000009: 49 8B C0           mov         rax,r8
  000000000000000C: 48 8B D9           mov         rbx,rcx
  000000000000000F: 66 89 54 24 40     mov         word ptr [rsp+40h],dx
  0000000000000014: 48 8D 4C 24 46     lea         rcx,[rsp+46h]
  0000000000000019: 45 0F B7 C1        movzx       r8d,r9w
  000000000000001D: 48 8B D0           mov         rdx,rax
  0000000000000020: C6 44 24 42 00     mov         byte ptr [rsp+42h],0
  0000000000000025: 66 44 89 4C 24 44  mov         word ptr [rsp+44h],r9w
  000000000000002B: E8 00 00 00 00     call        memcpy
  0000000000000030: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000037: 48 85 C0           test        rax,rax
  000000000000003A: 74 11              je          000000000000004D
  000000000000003C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000040: 48 3B C3           cmp         rax,rbx
  0000000000000043: 74 16              je          000000000000005B
  0000000000000045: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000048: 48 85 C0           test        rax,rax
  000000000000004B: 75 F3              jne         0000000000000040
  000000000000004D: B8 01 00 00 00     mov         eax,1
  0000000000000052: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  0000000000000059: 5B                 pop         rbx
  000000000000005A: C3                 ret
  000000000000005B: 48 8B 43 30        mov         rax,qword ptr [rbx+30h]
  000000000000005F: 48 8D 8C 24 E8 00  lea         rcx,[rsp+0E8h]
                    00 00
  0000000000000067: 48 89 BC 24 E0 00  mov         qword ptr [rsp+0E0h],rdi
                    00 00
  000000000000006F: 8B 90 F0 01 00 00  mov         edx,dword ptr [rax+1F0h]
  0000000000000075: 33 FF              xor         edi,edi
  0000000000000077: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  000000000000007C: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000081: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  0000000000000086: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  000000000000008A: 41 B9 86 00 00 00  mov         r9d,86h
  0000000000000090: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  0000000000000094: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000099: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000009F: B9 04 00 00 00     mov         ecx,4
  00000000000000A4: 85 C0              test        eax,eax
  00000000000000A6: 0F 45 CF           cmovne      ecx,edi
  00000000000000A9: 48 8B BC 24 E0 00  mov         rdi,qword ptr [rsp+0E0h]
                    00 00
  00000000000000B1: 8B C1              mov         eax,ecx
  00000000000000B3: 48 81 C4 D0 00 00  add         rsp,0D0h
                    00
  00000000000000BA: 5B                 pop         rbx
  00000000000000BB: C3                 ret

FT_W32_CancelIo:
  0000000000000000: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000004: 48 FF 25 00 00 00  jmp         qword ptr [__imp_CancelIo]
                    00

FT_W32_ClearCommBreak:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000008: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000000C: 45 33 C0           xor         r8d,r8d
  000000000000000F: 4C 89 44 24 38     mov         qword ptr [rsp+38h],r8
  0000000000000014: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000019: 45 33 C9           xor         r9d,r9d
  000000000000001C: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000021: 8B 90 14 01 00 00  mov         edx,dword ptr [rax+114h]
  0000000000000027: 44 89 44 24 28     mov         dword ptr [rsp+28h],r8d
  000000000000002C: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  0000000000000031: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000037: 48 83 C4 48        add         rsp,48h
  000000000000003B: C3                 ret

FT_W32_ClearCommError:
  0000000000000000: 4C 8B DC           mov         r11,rsp
  0000000000000003: 49 89 5B 10        mov         qword ptr [r11+10h],rbx
  0000000000000007: 57                 push        rdi
  0000000000000008: 48 83 EC 50        sub         rsp,50h
  000000000000000C: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000010: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000014: 48 8B FA           mov         rdi,rdx
  0000000000000017: 49 C7 43 E0 00 00  mov         qword ptr [r11-20h],0
                    00 00
  000000000000001F: 49 8D 53 08        lea         rdx,[r11+8]
  0000000000000023: 49 8B D8           mov         rbx,r8
  0000000000000026: 49 89 53 D8        mov         qword ptr [r11-28h],rdx
  000000000000002A: 49 8D 53 E8        lea         rdx,[r11-18h]
  000000000000002E: C7 44 24 28 10 00  mov         dword ptr [rsp+28h],10h
                    00 00
  0000000000000036: 49 89 53 C8        mov         qword ptr [r11-38h],rdx
  000000000000003A: 8B 90 8C 01 00 00  mov         edx,dword ptr [rax+18Ch]
  0000000000000040: 4D 8D 43 E8        lea         r8,[r11-18h]
  0000000000000044: 41 B9 10 00 00 00  mov         r9d,10h
  000000000000004A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000050: 85 C0              test        eax,eax
  0000000000000052: 74 17              je          000000000000006B
  0000000000000054: 8B 4C 24 40        mov         ecx,dword ptr [rsp+40h]
  0000000000000058: F2 0F 10 44 24 44  movsd       xmm0,mmword ptr [rsp+44h]
  000000000000005E: 89 0F              mov         dword ptr [rdi],ecx
  0000000000000060: 8B 4C 24 4C        mov         ecx,dword ptr [rsp+4Ch]
  0000000000000064: F2 0F 11 03        movsd       mmword ptr [rbx],xmm0
  0000000000000068: 89 4B 08           mov         dword ptr [rbx+8],ecx
  000000000000006B: 48 8B 5C 24 68     mov         rbx,qword ptr [rsp+68h]
  0000000000000070: 48 83 C4 50        add         rsp,50h
  0000000000000074: 5F                 pop         rdi
  0000000000000075: C3                 ret

FT_W32_CloseHandle:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 85 C0           test        rax,rax
  0000000000000013: 74 0D              je          0000000000000022
  0000000000000015: 48 3B C1           cmp         rax,rcx
  0000000000000018: 74 10              je          000000000000002A
  000000000000001A: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001D: 48 85 C0           test        rax,rax
  0000000000000020: 75 F3              jne         0000000000000015
  0000000000000022: 33 C0              xor         eax,eax
  0000000000000024: 48 83 C4 20        add         rsp,20h
  0000000000000028: 5B                 pop         rbx
  0000000000000029: C3                 ret
  000000000000002A: E8 00 00 00 00     call        ?initialiseGlobals@@YAHXZ
  000000000000002F: 85 C0              test        eax,eax
  0000000000000031: 75 0B              jne         000000000000003E
  0000000000000033: B8 05 00 00 00     mov         eax,5
  0000000000000038: 48 83 C4 20        add         rsp,20h
  000000000000003C: 5B                 pop         rbx
  000000000000003D: C3                 ret
  000000000000003E: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  0000000000000045: 83 CA FF           or          edx,0FFFFFFFFh
  0000000000000048: 48 89 7C 24 30     mov         qword ptr [rsp+30h],rdi
  000000000000004D: FF 15 00 00 00 00  call        qword ptr [__imp_WaitForSingleObject]
  0000000000000053: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  0000000000000057: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
  000000000000005D: 48 8B 4B 20        mov         rcx,qword ptr [rbx+20h]
  0000000000000061: 33 FF              xor         edi,edi
  0000000000000063: 48 85 C9           test        rcx,rcx
  0000000000000066: 74 0A              je          0000000000000072
  0000000000000068: FF 15 00 00 00 00  call        qword ptr [__imp_free]
  000000000000006E: 48 89 7B 20        mov         qword ptr [rbx+20h],rdi
  0000000000000072: 48 8B CB           mov         rcx,rbx
  0000000000000075: E8 00 00 00 00     call        ?RemoveDevice@@YAKPEAUft_private_vars@@@Z
  000000000000007A: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?ghFtOpenLock@@3PEAXEA]
                    00
  0000000000000081: 8B D8              mov         ebx,eax
  0000000000000083: FF 15 00 00 00 00  call        qword ptr [__imp_ReleaseMutex]
  0000000000000089: 85 DB              test        ebx,ebx
  000000000000008B: 40 0F 94 C7        sete        dil
  000000000000008F: 8B C7              mov         eax,edi
  0000000000000091: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  0000000000000096: 48 83 C4 20        add         rsp,20h
  000000000000009A: 5B                 pop         rbx
  000000000000009B: C3                 ret

FT_W32_CreateFile:
  0000000000000000: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  0000000000000005: 44 89 44 24 18     mov         dword ptr [rsp+18h],r8d
  000000000000000A: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  000000000000000E: 53                 push        rbx
  000000000000000F: 55                 push        rbp
  0000000000000010: 56                 push        rsi
  0000000000000011: 41 56              push        r14
  0000000000000013: 41 57              push        r15
  0000000000000015: 48 81 EC C0 00 00  sub         rsp,0C0h
                    00
  000000000000001C: 44 8B B4 24 18 01  mov         r14d,dword ptr [rsp+118h]
                    00 00
  0000000000000024: 33 F6              xor         esi,esi
  0000000000000026: 48 83 CB FF        or          rbx,0FFFFFFFFFFFFFFFFh
  000000000000002A: 4C 8B F9           mov         r15,rcx
  000000000000002D: 41 F6 C6 01        test        r14b,1
  0000000000000031: 74 07              je          000000000000003A
  0000000000000033: BD 9C 00 22 00     mov         ebp,22009Ch
  0000000000000038: EB 1C              jmp         0000000000000056
  000000000000003A: 41 F6 C6 02        test        r14b,2
  000000000000003E: 74 07              je          0000000000000047
  0000000000000040: BD A0 00 22 00     mov         ebp,2200A0h
  0000000000000045: EB 0F              jmp         0000000000000056
  0000000000000047: 41 F6 C6 04        test        r14b,4
  000000000000004B: 0F 84 50 02 00 00  je          00000000000002A1
  0000000000000051: BD A4 00 22 00     mov         ebp,2200A4h
  0000000000000056: 48 8D 0D 00 00 00  lea         rcx,[GUID_CLASS_FT_BULK]
                    00
  000000000000005D: 41 B9 12 00 00 00  mov         r9d,12h
  0000000000000063: 45 33 C0           xor         r8d,r8d
  0000000000000066: 33 D2              xor         edx,edx
  0000000000000068: 48 89 BC 24 F0 00  mov         qword ptr [rsp+0F0h],rdi
                    00 00
  0000000000000070: 41 83 E6 F8        and         r14d,0FFFFFFF8h
  0000000000000074: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetClassDevsA]
  000000000000007A: 48 8B F8           mov         rdi,rax
  000000000000007D: 48 85 C0           test        rax,rax
  0000000000000080: 75 1B              jne         000000000000009D
  0000000000000082: 48 83 C8 FF        or          rax,0FFFFFFFFFFFFFFFFh
  0000000000000086: 48 8B BC 24 F0 00  mov         rdi,qword ptr [rsp+0F0h]
                    00 00
  000000000000008E: 48 81 C4 C0 00 00  add         rsp,0C0h
                    00
  0000000000000095: 41 5F              pop         r15
  0000000000000097: 41 5E              pop         r14
  0000000000000099: 5E                 pop         rsi
  000000000000009A: 5D                 pop         rbp
  000000000000009B: 5B                 pop         rbx
  000000000000009C: C3                 ret
  000000000000009D: 48 8D 44 24 48     lea         rax,[rsp+48h]
  00000000000000A2: 4C 8D 05 00 00 00  lea         r8,[GUID_CLASS_FT_BULK]
                    00
  00000000000000A9: 45 33 C9           xor         r9d,r9d
  00000000000000AC: 33 D2              xor         edx,edx
  00000000000000AE: 48 8B CF           mov         rcx,rdi
  00000000000000B1: C7 44 24 48 20 00  mov         dword ptr [rsp+48h],20h
                    00 00
  00000000000000B9: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000BE: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInterfaces]
  00000000000000C4: 85 C0              test        eax,eax
  00000000000000C6: 74 2D              je          00000000000000F5
  00000000000000C8: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  00000000000000D0: 48 8D 44 24 48     lea         rax,[rsp+48h]
  00000000000000D5: FF C6              inc         esi
  00000000000000D7: 4C 8D 05 00 00 00  lea         r8,[GUID_CLASS_FT_BULK]
                    00
  00000000000000DE: 33 D2              xor         edx,edx
  00000000000000E0: 48 8B CF           mov         rcx,rdi
  00000000000000E3: 44 8B CE           mov         r9d,esi
  00000000000000E6: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000EB: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInterfaces]
  00000000000000F1: 85 C0              test        eax,eax
  00000000000000F3: 75 DB              jne         00000000000000D0
  00000000000000F5: 48 8B CF           mov         rcx,rdi
  00000000000000F8: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  00000000000000FE: 33 FF              xor         edi,edi
  0000000000000100: 85 F6              test        esi,esi
  0000000000000102: 0F 84 91 01 00 00  je          0000000000000299
  0000000000000108: 4C 89 A4 24 B8 00  mov         qword ptr [rsp+0B8h],r12
                    00 00
  0000000000000110: 4C 8B A4 24 20 01  mov         r12,qword ptr [rsp+120h]
                    00 00
  0000000000000118: 4C 89 AC 24 B0 00  mov         qword ptr [rsp+0B0h],r13
                    00 00
  0000000000000120: 44 8B AC 24 10 01  mov         r13d,dword ptr [rsp+110h]
                    00 00
  0000000000000128: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000130: 4C 8B 8C 24 08 01  mov         r9,qword ptr [rsp+108h]
                    00 00
  0000000000000138: 44 8B 84 24 00 01  mov         r8d,dword ptr [rsp+100h]
                    00 00
  0000000000000140: 8B 94 24 F8 00 00  mov         edx,dword ptr [rsp+0F8h]
                    00
  0000000000000147: 4C 89 64 24 30     mov         qword ptr [rsp+30h],r12
  000000000000014C: 8B CF              mov         ecx,edi
  000000000000014E: 44 89 74 24 28     mov         dword ptr [rsp+28h],r14d
  0000000000000153: 44 89 6C 24 20     mov         dword ptr [rsp+20h],r13d
  0000000000000158: E8 00 00 00 00     call        ?FT_W32_OpenFile@@YAPEAXKKKPEAU_SECURITY_ATTRIBUTES@@KKPEAX@Z
  000000000000015D: 48 8B D8           mov         rbx,rax
  0000000000000160: 48 85 C0           test        rax,rax
  0000000000000163: 0F 84 CF 00 00 00  je          0000000000000238
  0000000000000169: 33 C0              xor         eax,eax
  000000000000016B: 48 C7 44 24 38 00  mov         qword ptr [rsp+38h],0
                    00 00 00
  0000000000000174: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  0000000000000179: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000017E: 48 89 44 24 70     mov         qword ptr [rsp+70h],rax
  0000000000000183: 48 89 44 24 78     mov         qword ptr [rsp+78h],rax
  0000000000000188: 48 89 84 24 80 00  mov         qword ptr [rsp+80h],rax
                    00 00
  0000000000000190: 48 89 84 24 88 00  mov         qword ptr [rsp+88h],rax
                    00 00
  0000000000000198: 48 89 84 24 90 00  mov         qword ptr [rsp+90h],rax
                    00 00
  00000000000001A0: 48 89 84 24 98 00  mov         qword ptr [rsp+98h],rax
                    00 00
  00000000000001A8: 48 89 84 24 A0 00  mov         qword ptr [rsp+0A0h],rax
                    00 00
  00000000000001B0: 48 89 84 24 A8 00  mov         qword ptr [rsp+0A8h],rax
                    00 00
  00000000000001B8: 48 8B 43 30        mov         rax,qword ptr [rbx+30h]
  00000000000001BC: 48 8D 54 24 70     lea         rdx,[rsp+70h]
  00000000000001C1: 8B CD              mov         ecx,ebp
  00000000000001C3: 48 C1 E9 02        shr         rcx,2
  00000000000001C7: C7 44 24 28 40 00  mov         dword ptr [rsp+28h],40h
                    00 00
  00000000000001CF: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  00000000000001D4: 81 E1 FF 0F 00 00  and         ecx,0FFFh
  00000000000001DA: 4C 8D 44 24 70     lea         r8,[rsp+70h]
  00000000000001DF: 41 B9 40 00 00 00  mov         r9d,40h
  00000000000001E5: 8B 14 88           mov         edx,dword ptr [rax+rcx*4]
  00000000000001E8: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  00000000000001EC: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000001F2: 85 C0              test        eax,eax
  00000000000001F4: 74 38              je          000000000000022E
  00000000000001F6: 81 FD A4 00 22 00  cmp         ebp,2200A4h
  00000000000001FC: 74 29              je          0000000000000227
  00000000000001FE: 4C 8D 44 24 70     lea         r8,[rsp+70h]
  0000000000000203: 49 8B C7           mov         rax,r15
  0000000000000206: 4D 2B C7           sub         r8,r15
  0000000000000209: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000210: 0F B6 10           movzx       edx,byte ptr [rax]
  0000000000000213: 42 0F B6 0C 00     movzx       ecx,byte ptr [rax+r8]
  0000000000000218: 2B D1              sub         edx,ecx
  000000000000021A: 75 07              jne         0000000000000223
  000000000000021C: 48 FF C0           inc         rax
  000000000000021F: 85 C9              test        ecx,ecx
  0000000000000221: 75 ED              jne         0000000000000210
  0000000000000223: 85 D2              test        edx,edx
  0000000000000225: EB 05              jmp         000000000000022C
  0000000000000227: 44 3B 7C 24 70     cmp         r15d,dword ptr [rsp+70h]
  000000000000022C: 74 14              je          0000000000000242
  000000000000022E: 48 8B CB           mov         rcx,rbx
  0000000000000231: E8 00 00 00 00     call        FT_Close
  0000000000000236: 33 DB              xor         ebx,ebx
  0000000000000238: FF C7              inc         edi
  000000000000023A: 3B FE              cmp         edi,esi
  000000000000023C: 0F 82 EE FE FF FF  jb          0000000000000130
  0000000000000242: 4C 8B AC 24 B0 00  mov         r13,qword ptr [rsp+0B0h]
                    00 00
  000000000000024A: 4C 8B A4 24 B8 00  mov         r12,qword ptr [rsp+0B8h]
                    00 00
  0000000000000252: 48 85 DB           test        rbx,rbx
  0000000000000255: 75 0C              jne         0000000000000263
  0000000000000257: 48 83 CB FF        or          rbx,0FFFFFFFFFFFFFFFFh
  000000000000025B: 48 8B C3           mov         rax,rbx
  000000000000025E: E9 23 FE FF FF     jmp         0000000000000086
  0000000000000263: 48 83 FB FF        cmp         rbx,0FFFFFFFFFFFFFFFFh
  0000000000000267: 74 30              je          0000000000000299
  0000000000000269: 33 C0              xor         eax,eax
  000000000000026B: 48 8D 94 24 18 01  lea         rdx,[rsp+118h]
                    00 00
  0000000000000273: 45 33 C9           xor         r9d,r9d
  0000000000000276: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  000000000000027B: 45 33 C0           xor         r8d,r8d
  000000000000027E: 48 8B CB           mov         rcx,rbx
  0000000000000281: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000286: E8 00 00 00 00     call        FT_GetDeviceInfo
  000000000000028B: 85 C0              test        eax,eax
  000000000000028D: 75 0A              jne         0000000000000299
  000000000000028F: 8B 84 24 18 01 00  mov         eax,dword ptr [rsp+118h]
                    00
  0000000000000296: 89 43 28           mov         dword ptr [rbx+28h],eax
  0000000000000299: 48 8B C3           mov         rax,rbx
  000000000000029C: E9 E5 FD FF FF     jmp         0000000000000086
  00000000000002A1: 48 83 C8 FF        or          rax,0FFFFFFFFFFFFFFFFh
  00000000000002A5: 48 81 C4 C0 00 00  add         rsp,0C0h
                    00
  00000000000002AC: 41 5F              pop         r15
  00000000000002AE: 41 5E              pop         r14
  00000000000002B0: 5E                 pop         rsi
  00000000000002B1: 5D                 pop         rbp
  00000000000002B2: 5B                 pop         rbx
  00000000000002B3: C3                 ret

FT_W32_EscapeCommFunction:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 83 C2 FD           add         edx,0FFFFFFFDh
  0000000000000007: 83 FA 06           cmp         edx,6
  000000000000000A: 0F 87 6A 01 00 00  ja          $LN13
  0000000000000010: 4C 8D 05 00 00 00  lea         r8,[__ImageBase]
                    00
  0000000000000017: 41 8B 94 90 00 00  mov         edx,dword ptr $LN12[r8+rdx*4]
                    00 00
  000000000000001F: 49 03 D0           add         rdx,r8
  0000000000000022: FF E2              jmp         rdx
$LN7:
  0000000000000024: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000028: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002C: 33 D2              xor         edx,edx
  000000000000002E: 48 89 54 24 38     mov         qword ptr [rsp+38h],rdx
  0000000000000033: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  0000000000000038: 45 33 C9           xor         r9d,r9d
  000000000000003B: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000040: 89 54 24 28        mov         dword ptr [rsp+28h],edx
  0000000000000044: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000049: 8B 90 24 01 00 00  mov         edx,dword ptr [rax+124h]
  000000000000004F: 45 33 C0           xor         r8d,r8d
  0000000000000052: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000058: 48 83 C4 48        add         rsp,48h
  000000000000005C: C3                 ret
$LN6:
  000000000000005D: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000061: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000065: 33 D2              xor         edx,edx
  0000000000000067: 48 89 54 24 38     mov         qword ptr [rsp+38h],rdx
  000000000000006C: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  0000000000000071: 45 33 C9           xor         r9d,r9d
  0000000000000074: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000079: 89 54 24 28        mov         dword ptr [rsp+28h],edx
  000000000000007D: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000082: 8B 90 28 01 00 00  mov         edx,dword ptr [rax+128h]
  0000000000000088: 45 33 C0           xor         r8d,r8d
  000000000000008B: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000091: 48 83 C4 48        add         rsp,48h
  0000000000000095: C3                 ret
$LN5:
  0000000000000096: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000009A: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000009E: 33 D2              xor         edx,edx
  00000000000000A0: 48 89 54 24 38     mov         qword ptr [rsp+38h],rdx
  00000000000000A5: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  00000000000000AA: 45 33 C9           xor         r9d,r9d
  00000000000000AD: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  00000000000000B2: 89 54 24 28        mov         dword ptr [rsp+28h],edx
  00000000000000B6: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  00000000000000BB: 8B 90 30 01 00 00  mov         edx,dword ptr [rax+130h]
  00000000000000C1: 45 33 C0           xor         r8d,r8d
  00000000000000C4: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000000CA: 48 83 C4 48        add         rsp,48h
  00000000000000CE: C3                 ret
$LN4:
  00000000000000CF: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  00000000000000D3: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  00000000000000D7: 33 D2              xor         edx,edx
  00000000000000D9: 48 89 54 24 38     mov         qword ptr [rsp+38h],rdx
  00000000000000DE: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  00000000000000E3: 45 33 C9           xor         r9d,r9d
  00000000000000E6: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  00000000000000EB: 89 54 24 28        mov         dword ptr [rsp+28h],edx
  00000000000000EF: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  00000000000000F4: 8B 90 34 01 00 00  mov         edx,dword ptr [rax+134h]
  00000000000000FA: 45 33 C0           xor         r8d,r8d
  00000000000000FD: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000103: 48 83 C4 48        add         rsp,48h
  0000000000000107: C3                 ret
$LN3:
  0000000000000108: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000010C: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000110: 33 D2              xor         edx,edx
  0000000000000112: 48 89 54 24 38     mov         qword ptr [rsp+38h],rdx
  0000000000000117: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  000000000000011C: 45 33 C9           xor         r9d,r9d
  000000000000011F: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000124: 89 54 24 28        mov         dword ptr [rsp+28h],edx
  0000000000000128: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000012D: 8B 90 10 01 00 00  mov         edx,dword ptr [rax+110h]
  0000000000000133: 45 33 C0           xor         r8d,r8d
  0000000000000136: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000013C: 48 83 C4 48        add         rsp,48h
  0000000000000140: C3                 ret
$LN2:
  0000000000000141: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000145: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000149: 33 D2              xor         edx,edx
  000000000000014B: 48 89 54 24 38     mov         qword ptr [rsp+38h],rdx
  0000000000000150: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  0000000000000155: 45 33 C9           xor         r9d,r9d
  0000000000000158: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  000000000000015D: 89 54 24 28        mov         dword ptr [rsp+28h],edx
  0000000000000161: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000166: 8B 90 14 01 00 00  mov         edx,dword ptr [rax+114h]
  000000000000016C: 45 33 C0           xor         r8d,r8d
  000000000000016F: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000175: 48 83 C4 48        add         rsp,48h
  0000000000000179: C3                 ret
$LN13:
  000000000000017A: 8B 44 24 58        mov         eax,dword ptr [rsp+58h]
  000000000000017E: 48 83 C4 48        add         rsp,48h
  0000000000000182: C3                 ret
  0000000000000183: 90                 nop
$LN12:
  0000000000000184: 00 00              add         byte ptr [rax],al
  0000000000000186: 00 00              add         byte ptr [rax],al
  0000000000000188: 00 00              add         byte ptr [rax],al
  000000000000018A: 00 00              add         byte ptr [rax],al
  000000000000018C: 00 00              add         byte ptr [rax],al
  000000000000018E: 00 00              add         byte ptr [rax],al
  0000000000000190: 00 00              add         byte ptr [rax],al
  0000000000000192: 00 00              add         byte ptr [rax],al
  0000000000000194: 00 00              add         byte ptr [rax],al
  0000000000000196: 00 00              add         byte ptr [rax],al
  0000000000000198: 00 00              add         byte ptr [rax],al
  000000000000019A: 00 00              add         byte ptr [rax],al
  000000000000019C: 00 00              add         byte ptr [rax],al
  000000000000019E: 00 00              add         byte ptr [rax],al

FT_W32_GetCommMask:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000008: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000000C: 48 C7 44 24 38 00  mov         qword ptr [rsp+38h],0
                    00 00 00
  0000000000000015: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  000000000000001A: 45 33 C9           xor         r9d,r9d
  000000000000001D: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000022: C7 44 24 28 04 00  mov         dword ptr [rsp+28h],4
                    00 00
  000000000000002A: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000002F: 8B 90 C0 01 00 00  mov         edx,dword ptr [rax+1C0h]
  0000000000000035: 45 33 C0           xor         r8d,r8d
  0000000000000038: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000003E: 48 83 C4 48        add         rsp,48h
  0000000000000042: C3                 ret

FT_W32_GetCommModemStatus:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000008: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000000C: 48 C7 44 24 38 00  mov         qword ptr [rsp+38h],0
                    00 00 00
  0000000000000015: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  000000000000001A: 45 33 C9           xor         r9d,r9d
  000000000000001D: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000022: C7 44 24 28 04 00  mov         dword ptr [rsp+28h],4
                    00 00
  000000000000002A: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000002F: 8B 90 68 01 00 00  mov         edx,dword ptr [rax+168h]
  0000000000000035: 45 33 C0           xor         r8d,r8d
  0000000000000038: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000003E: 48 83 C4 48        add         rsp,48h
  0000000000000042: C3                 ret

FT_W32_GetCommState:
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 60        sub         rsp,60h
  0000000000000006: 8B 42 18           mov         eax,dword ptr [rdx+18h]
  0000000000000009: F2 0F 10 4A 10     movsd       xmm1,mmword ptr [rdx+10h]
  000000000000000E: 0F 10 02           movups      xmm0,xmmword ptr [rdx]
  0000000000000011: 48 8B DA           mov         rbx,rdx
  0000000000000014: 48 C7 44 24 38 00  mov         qword ptr [rsp+38h],0
                    00 00 00
  000000000000001D: 89 44 24 58        mov         dword ptr [rsp+58h],eax
  0000000000000021: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000025: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000029: 48 8D 54 24 70     lea         rdx,[rsp+70h]
  000000000000002E: F2 0F 11 4C 24 50  movsd       mmword ptr [rsp+50h],xmm1
  0000000000000034: 0F 11 44 24 40     movups      xmmword ptr [rsp+40h],xmm0
  0000000000000039: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000003E: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  0000000000000043: C7 44 24 28 1C 00  mov         dword ptr [rsp+28h],1Ch
                    00 00
  000000000000004B: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000050: 8B 90 94 01 00 00  mov         edx,dword ptr [rax+194h]
  0000000000000056: 45 33 C9           xor         r9d,r9d
  0000000000000059: 45 33 C0           xor         r8d,r8d
  000000000000005C: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000062: 85 C0              test        eax,eax
  0000000000000064: 74 1A              je          0000000000000080
  0000000000000066: 0F 10 44 24 40     movups      xmm0,xmmword ptr [rsp+40h]
  000000000000006B: F2 0F 10 4C 24 50  movsd       xmm1,mmword ptr [rsp+50h]
  0000000000000071: 8B 4C 24 58        mov         ecx,dword ptr [rsp+58h]
  0000000000000075: 0F 11 03           movups      xmmword ptr [rbx],xmm0
  0000000000000078: F2 0F 11 4B 10     movsd       mmword ptr [rbx+10h],xmm1
  000000000000007D: 89 4B 18           mov         dword ptr [rbx+18h],ecx
  0000000000000080: 48 83 C4 60        add         rsp,60h
  0000000000000084: 5B                 pop         rbx
  0000000000000085: C3                 ret

FT_W32_GetCommTimeouts:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000008: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000000C: 48 C7 44 24 38 00  mov         qword ptr [rsp+38h],0
                    00 00 00
  0000000000000015: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  000000000000001A: 45 33 C9           xor         r9d,r9d
  000000000000001D: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  0000000000000022: C7 44 24 28 14 00  mov         dword ptr [rsp+28h],14h
                    00 00
  000000000000002A: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000002F: 8B 90 20 01 00 00  mov         edx,dword ptr [rax+120h]
  0000000000000035: 45 33 C0           xor         r8d,r8d
  0000000000000038: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000003E: 48 83 C4 48        add         rsp,48h
  0000000000000042: C3                 ret

FT_W32_GetLastError:
  0000000000000000: 48 FF 25 00 00 00  jmp         qword ptr [__imp_GetLastError]
                    00

FT_W32_GetOverlappedResult:
  0000000000000000: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000007: 48 85 C0           test        rax,rax
  000000000000000A: 74 11              je          000000000000001D
  000000000000000C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 0B              je          0000000000000020
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: 33 C0              xor         eax,eax
  000000000000001F: C3                 ret
  0000000000000020: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000024: 48 FF 25 00 00 00  jmp         qword ptr [__imp_GetOverlappedResult]
                    00

FT_W32_PurgeComm:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 45 33 C9           xor         r9d,r9d
  0000000000000007: F6 C2 0A           test        dl,0Ah
  000000000000000A: 41 B8 01 00 00 00  mov         r8d,1
  0000000000000010: 41 8B C1           mov         eax,r9d
  0000000000000013: 41 0F 45 C0        cmovne      eax,r8d
  0000000000000017: 89 44 24 58        mov         dword ptr [rsp+58h],eax
  000000000000001B: F6 C2 05           test        dl,5
  000000000000001E: 74 07              je          0000000000000027
  0000000000000020: 83 C8 02           or          eax,2
  0000000000000023: 89 44 24 58        mov         dword ptr [rsp+58h],eax
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 4C 89 4C 24 38     mov         qword ptr [rsp+38h],r9
  0000000000000034: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000039: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  000000000000003E: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000043: 8B 90 4C 01 00 00  mov         edx,dword ptr [rax+14Ch]
  0000000000000049: 44 89 4C 24 28     mov         dword ptr [rsp+28h],r9d
  000000000000004E: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  0000000000000053: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000059: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000005F: 48 83 C4 48        add         rsp,48h
  0000000000000063: C3                 ret

FT_W32_ReadFile:
  0000000000000000: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000007: 48 85 C0           test        rax,rax
  000000000000000A: 74 11              je          000000000000001D
  000000000000000C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 0B              je          0000000000000020
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: 33 C0              xor         eax,eax
  000000000000001F: C3                 ret
  0000000000000020: 41 C7 01 00 00 00  mov         dword ptr [r9],0
                    00
  0000000000000027: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002B: 48 FF 25 00 00 00  jmp         qword ptr [__imp_ReadFile]
                    00

FT_W32_SetCommBreak:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000008: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000000C: 45 33 C0           xor         r8d,r8d
  000000000000000F: 4C 89 44 24 38     mov         qword ptr [rsp+38h],r8
  0000000000000014: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000019: 45 33 C9           xor         r9d,r9d
  000000000000001C: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000021: 8B 90 10 01 00 00  mov         edx,dword ptr [rax+110h]
  0000000000000027: 44 89 44 24 28     mov         dword ptr [rsp+28h],r8d
  000000000000002C: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  0000000000000031: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000037: 48 83 C4 48        add         rsp,48h
  000000000000003B: C3                 ret

FT_W32_SetCommMask:
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 83 EC 48        sub         rsp,48h
  0000000000000008: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000000C: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000010: 45 33 C0           xor         r8d,r8d
  0000000000000013: 4C 89 44 24 38     mov         qword ptr [rsp+38h],r8
  0000000000000018: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  000000000000001D: 45 8D 48 04        lea         r9d,[r8+4]
  0000000000000021: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000026: 8B 90 84 01 00 00  mov         edx,dword ptr [rax+184h]
  000000000000002C: 44 89 44 24 28     mov         dword ptr [rsp+28h],r8d
  0000000000000031: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  0000000000000036: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  000000000000003B: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000041: 48 83 C4 48        add         rsp,48h
  0000000000000045: C3                 ret

FT_W32_SetCommState:
  0000000000000000: 48 83 EC 68        sub         rsp,68h
  0000000000000004: 8B 42 18           mov         eax,dword ptr [rdx+18h]
  0000000000000007: 0F 10 02           movups      xmm0,xmmword ptr [rdx]
  000000000000000A: F2 0F 10 4A 10     movsd       xmm1,mmword ptr [rdx+10h]
  000000000000000F: 45 33 C0           xor         r8d,r8d
  0000000000000012: 89 44 24 58        mov         dword ptr [rsp+58h],eax
  0000000000000016: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000001A: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000001E: 4C 89 44 24 38     mov         qword ptr [rsp+38h],r8
  0000000000000023: 48 8D 54 24 70     lea         rdx,[rsp+70h]
  0000000000000028: F2 0F 11 4C 24 50  movsd       mmword ptr [rsp+50h],xmm1
  000000000000002E: 0F 11 44 24 40     movups      xmmword ptr [rsp+40h],xmm0
  0000000000000033: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000038: 8B 90 90 01 00 00  mov         edx,dword ptr [rax+190h]
  000000000000003E: 44 89 44 24 28     mov         dword ptr [rsp+28h],r8d
  0000000000000043: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  0000000000000048: 45 8D 48 1C        lea         r9d,[r8+1Ch]
  000000000000004C: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  0000000000000051: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000057: 48 83 C4 68        add         rsp,68h
  000000000000005B: C3                 ret

FT_W32_SetCommTimeouts:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 0F              je          0000000000000024
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: 33 C0              xor         eax,eax
  000000000000001F: 48 83 C4 48        add         rsp,48h
  0000000000000023: C3                 ret
  0000000000000024: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000028: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002C: 45 33 C9           xor         r9d,r9d
  000000000000002F: 4C 89 4C 24 38     mov         qword ptr [rsp+38h],r9
  0000000000000034: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000039: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  000000000000003E: 44 89 4C 24 28     mov         dword ptr [rsp+28h],r9d
  0000000000000043: 4C 8B C2           mov         r8,rdx
  0000000000000046: 8B 90 1C 01 00 00  mov         edx,dword ptr [rax+11Ch]
  000000000000004C: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  0000000000000051: 41 B9 14 00 00 00  mov         r9d,14h
  0000000000000057: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000005D: 48 83 C4 48        add         rsp,48h
  0000000000000061: C3                 ret

FT_W32_SetupComm:
  0000000000000000: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000007: 48 85 C0           test        rax,rax
  000000000000000A: 74 11              je          000000000000001D
  000000000000000C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 0B              je          0000000000000020
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: 33 C0              xor         eax,eax
  000000000000001F: C3                 ret
  0000000000000020: B8 01 00 00 00     mov         eax,1
  0000000000000025: C3                 ret

FT_W32_WaitCommEvent:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  0000000000000008: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000000C: 4C 89 44 24 38     mov         qword ptr [rsp+38h],r8
  0000000000000011: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000016: 45 33 C9           xor         r9d,r9d
  0000000000000019: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  000000000000001E: C7 44 24 28 04 00  mov         dword ptr [rsp+28h],4
                    00 00
  0000000000000026: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000002B: 8B 90 88 01 00 00  mov         edx,dword ptr [rax+188h]
  0000000000000031: 45 33 C0           xor         r8d,r8d
  0000000000000034: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000003A: 48 83 C4 48        add         rsp,48h
  000000000000003E: C3                 ret

FT_W32_WriteFile:
  0000000000000000: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  0000000000000007: 48 85 C0           test        rax,rax
  000000000000000A: 74 11              je          000000000000001D
  000000000000000C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 0B              je          0000000000000020
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: 33 C0              xor         eax,eax
  000000000000001F: C3                 ret
  0000000000000020: 41 C7 01 00 00 00  mov         dword ptr [r9],0
                    00
  0000000000000027: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002B: 48 FF 25 00 00 00  jmp         qword ptr [__imp_WriteFile]
                    00

FT_WaitOnMask:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 74 0D              je          000000000000001D
  0000000000000010: 48 3B C1           cmp         rax,rcx
  0000000000000013: 74 12              je          0000000000000027
  0000000000000015: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 75 F3              jne         0000000000000010
  000000000000001D: B8 01 00 00 00     mov         eax,1
  0000000000000022: 48 83 C4 48        add         rsp,48h
  0000000000000026: C3                 ret
  0000000000000027: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000002B: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002F: 48 89 5C 24 58     mov         qword ptr [rsp+58h],rbx
  0000000000000034: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000039: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  000000000000003E: 33 FF              xor         edi,edi
  0000000000000040: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000045: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  000000000000004A: BB 04 00 00 00     mov         ebx,4
  000000000000004F: 89 5C 24 28        mov         dword ptr [rsp+28h],ebx
  0000000000000053: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000058: 8B 90 48 01 00 00  mov         edx,dword ptr [rax+148h]
  000000000000005E: 45 33 C9           xor         r9d,r9d
  0000000000000061: 45 33 C0           xor         r8d,r8d
  0000000000000064: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  000000000000006A: 85 C0              test        eax,eax
  000000000000006C: 0F 45 DF           cmovne      ebx,edi
  000000000000006F: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  0000000000000074: 8B C3              mov         eax,ebx
  0000000000000076: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  000000000000007B: 48 83 C4 48        add         rsp,48h
  000000000000007F: C3                 ret

FT_Write:
  0000000000000000: 40 57              push        rdi
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000D: 49 8B F9           mov         rdi,r9
  0000000000000010: 48 85 C0           test        rax,rax
  0000000000000013: 74 0D              je          0000000000000022
  0000000000000015: 48 3B C1           cmp         rax,rcx
  0000000000000018: 74 13              je          000000000000002D
  000000000000001A: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001D: 48 85 C0           test        rax,rax
  0000000000000020: 75 F3              jne         0000000000000015
  0000000000000022: B8 01 00 00 00     mov         eax,1
  0000000000000027: 48 83 C4 30        add         rsp,30h
  000000000000002B: 5F                 pop         rdi
  000000000000002C: C3                 ret
  000000000000002D: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  0000000000000032: 33 DB              xor         ebx,ebx
  0000000000000034: 41 89 19           mov         dword ptr [r9],ebx
  0000000000000037: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000003B: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000040: FF 15 00 00 00 00  call        qword ptr [__imp_WriteFile]
  0000000000000046: 85 C0              test        eax,eax
  0000000000000048: 75 09              jne         0000000000000053
  000000000000004A: 39 1F              cmp         dword ptr [rdi],ebx
  000000000000004C: 75 05              jne         0000000000000053
  000000000000004E: BB 04 00 00 00     mov         ebx,4
  0000000000000053: 8B C3              mov         eax,ebx
  0000000000000055: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000005A: 48 83 C4 30        add         rsp,30h
  000000000000005E: 5F                 pop         rdi
  000000000000005F: C3                 ret

FT_WriteEE:
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 05 00 00 00  mov         rax,qword ptr [?pgDeviceList@@3PEAUft_private_vars@@EA]
                    00
  000000000000000B: 44 88 44 24 62     mov         byte ptr [rsp+62h],r8b
  0000000000000010: 66 41 C1 E8 08     shr         r8w,8
  0000000000000015: 66 89 54 24 60     mov         word ptr [rsp+60h],dx
  000000000000001A: 44 88 44 24 63     mov         byte ptr [rsp+63h],r8b
  000000000000001F: 48 85 C0           test        rax,rax
  0000000000000022: 74 0D              je          0000000000000031
  0000000000000024: 48 3B C1           cmp         rax,rcx
  0000000000000027: 74 12              je          000000000000003B
  0000000000000029: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002C: 48 85 C0           test        rax,rax
  000000000000002F: 75 F3              jne         0000000000000024
  0000000000000031: B8 01 00 00 00     mov         eax,1
  0000000000000036: 48 83 C4 48        add         rsp,48h
  000000000000003A: C3                 ret
  000000000000003B: 48 8B 41 30        mov         rax,qword ptr [rcx+30h]
  000000000000003F: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000043: 48 8D 54 24 58     lea         rdx,[rsp+58h]
  0000000000000048: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  000000000000004D: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000052: 33 FF              xor         edi,edi
  0000000000000054: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000059: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000005E: 8B 90 84 00 00 00  mov         edx,dword ptr [rax+84h]
  0000000000000064: BB 04 00 00 00     mov         ebx,4
  0000000000000069: 4C 8D 44 24 60     lea         r8,[rsp+60h]
  000000000000006E: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  0000000000000072: 44 8B CB           mov         r9d,ebx
  0000000000000075: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000007A: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000080: 85 C0              test        eax,eax
  0000000000000082: 0F 45 DF           cmovne      ebx,edi
  0000000000000085: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  000000000000008A: 8B C3              mov         eax,ebx
  000000000000008C: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000091: 48 83 C4 48        add         rsp,48h
  0000000000000095: C3                 ret

??0TEeData@@QEAA@H@Z (public: __cdecl TEeData::TEeData(int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 8B DA              mov         ebx,edx
  000000000000000C: 41 B8 00 08 00 00  mov         r8d,800h
  0000000000000012: 33 D2              xor         edx,edx
  0000000000000014: 48 8B F9           mov         rdi,rcx
  0000000000000017: E8 00 00 00 00     call        memset
  000000000000001C: 33 C0              xor         eax,eax
  000000000000001E: 89 9F 08 08 00 00  mov         dword ptr [rdi+808h],ebx
  0000000000000024: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000029: 89 87 00 08 00 00  mov         dword ptr [rdi+800h],eax
  000000000000002F: 48 89 87 10 08 00  mov         qword ptr [rdi+810h],rax
                    00
  0000000000000036: C7 87 04 08 00 00  mov         dword ptr [rdi+804h],1
                    01 00 00 00
  0000000000000040: 48 8B C7           mov         rax,rdi
  0000000000000043: 48 83 C4 20        add         rsp,20h
  0000000000000047: 5F                 pop         rdi
  0000000000000048: C3                 ret

??0TEeData@@QEAA@PEAUft_private_vars@@@Z (public: __cdecl TEeData::TEeData(struct ft_private_vars *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B DA           mov         rbx,rdx
  000000000000000D: 41 B8 00 08 00 00  mov         r8d,800h
  0000000000000013: 33 D2              xor         edx,edx
  0000000000000015: 48 8B F9           mov         rdi,rcx
  0000000000000018: E8 00 00 00 00     call        memset
  000000000000001D: C7 87 00 08 00 00  mov         dword ptr [rdi+800h],0
                    00 00 00 00
  0000000000000027: C7 87 04 08 00 00  mov         dword ptr [rdi+804h],1
                    01 00 00 00
  0000000000000031: C7 87 08 08 00 00  mov         dword ptr [rdi+808h],40h
                    40 00 00 00
  000000000000003B: 48 8B 43 10        mov         rax,qword ptr [rbx+10h]
  000000000000003F: 48 89 87 10 08 00  mov         qword ptr [rdi+810h],rax
                    00
  0000000000000046: 48 8B 43 30        mov         rax,qword ptr [rbx+30h]
  000000000000004A: 44 8B 80 80 00 00  mov         r8d,dword ptr [rax+80h]
                    00
  0000000000000051: 44 89 87 18 08 00  mov         dword ptr [rdi+818h],r8d
                    00
  0000000000000058: 48 8B 43 30        mov         rax,qword ptr [rbx+30h]
  000000000000005C: 8B 88 84 00 00 00  mov         ecx,dword ptr [rax+84h]
  0000000000000062: 89 8F 1C 08 00 00  mov         dword ptr [rdi+81Ch],ecx
  0000000000000068: 48 8B 43 30        mov         rax,qword ptr [rbx+30h]
  000000000000006C: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000071: 8B 88 88 00 00 00  mov         ecx,dword ptr [rax+88h]
  0000000000000077: 48 8B C7           mov         rax,rdi
  000000000000007A: 89 8F 20 08 00 00  mov         dword ptr [rdi+820h],ecx
  0000000000000080: 48 83 C4 20        add         rsp,20h
  0000000000000084: 5F                 pop         rdi
  0000000000000085: C3                 ret

??0TEeData@@QEAA@PEAX@Z (public: __cdecl TEeData::TEeData(void *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B DA           mov         rbx,rdx
  000000000000000D: 41 B8 00 08 00 00  mov         r8d,800h
  0000000000000013: 33 D2              xor         edx,edx
  0000000000000015: 48 8B F9           mov         rdi,rcx
  0000000000000018: E8 00 00 00 00     call        memset
  000000000000001D: 48 89 9F 10 08 00  mov         qword ptr [rdi+810h],rbx
                    00
  0000000000000024: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000029: C7 87 00 08 00 00  mov         dword ptr [rdi+800h],0
                    00 00 00 00
  0000000000000033: C7 87 04 08 00 00  mov         dword ptr [rdi+804h],1
                    01 00 00 00
  000000000000003D: C7 87 08 08 00 00  mov         dword ptr [rdi+808h],40h
                    40 00 00 00
  0000000000000047: C7 87 18 08 00 00  mov         dword ptr [rdi+818h],220080h
                    80 00 22 00
  0000000000000051: C7 87 1C 08 00 00  mov         dword ptr [rdi+81Ch],220084h
                    84 00 22 00
  000000000000005B: C7 87 20 08 00 00  mov         dword ptr [rdi+820h],220088h
                    88 00 22 00
  0000000000000065: 48 8B C7           mov         rax,rdi
  0000000000000068: 48 83 C4 20        add         rsp,20h
  000000000000006C: 5F                 pop         rdi
  000000000000006D: C3                 ret

??0TEeData@@QEAA@XZ (public: __cdecl TEeData::TEeData(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 33 D2              xor         edx,edx
  0000000000000008: 41 B8 00 08 00 00  mov         r8d,800h
  000000000000000E: 48 8B D9           mov         rbx,rcx
  0000000000000011: E8 00 00 00 00     call        memset
  0000000000000016: 33 C0              xor         eax,eax
  0000000000000018: C7 83 04 08 00 00  mov         dword ptr [rbx+804h],1
                    01 00 00 00
  0000000000000022: 89 83 00 08 00 00  mov         dword ptr [rbx+800h],eax
  0000000000000028: 48 89 83 10 08 00  mov         qword ptr [rbx+810h],rax
                    00
  000000000000002F: C7 83 08 08 00 00  mov         dword ptr [rbx+808h],40h
                    40 00 00 00
  0000000000000039: 48 8B C3           mov         rax,rbx
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5B                 pop         rbx
  0000000000000041: C3                 ret

?Add@TEeData@@QEAAXG@Z (public: void __cdecl TEeData::Add(unsigned short)):
  0000000000000000: 48 63 81 00 08 00  movsxd      rax,dword ptr [rcx+0000000000000800h]
                    00
  0000000000000007: 44 0F B7 C2        movzx       r8d,dx
  000000000000000B: 88 14 08           mov         byte ptr [rax+rcx],dl
  000000000000000E: FF 81 00 08 00 00  inc         dword ptr [rcx+0000000000000800h]
  0000000000000014: 48 63 81 00 08 00  movsxd      rax,dword ptr [rcx+0000000000000800h]
                    00
  000000000000001B: 66 41 C1 E8 08     shr         r8w,8
  0000000000000020: 44 88 04 08        mov         byte ptr [rax+rcx],r8b
  0000000000000024: FF 81 00 08 00 00  inc         dword ptr [rcx+0000000000000800h]
  000000000000002A: B8 FF FF 00 00     mov         eax,0FFFFh
  000000000000002F: 66 3B D0           cmp         dx,ax
  0000000000000032: 74 0A              je          000000000000003E
  0000000000000034: C7 81 04 08 00 00  mov         dword ptr [rcx+0000000000000804h],0
                    00 00 00 00
  000000000000003E: C3                 ret

?Check@TEeData@@QEAAHXZ (public: int __cdecl TEeData::Check(void)):
  0000000000000000: B8 01 00 00 00     mov         eax,1
  0000000000000005: C3                 ret

?Confirm@TEeData@@QEAAHXZ (public: int __cdecl TEeData::Confirm(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 56                 push        rsi
  0000000000000003: 57                 push        rdi
  0000000000000004: 48 81 EC 40 08 00  sub         rsp,840h
                    00
  000000000000000B: 8B B1 08 08 00 00  mov         esi,dword ptr [rcx+808h]
  0000000000000011: 48 8B D9           mov         rbx,rcx
  0000000000000014: 8D 04 36           lea         eax,[rsi+rsi]
  0000000000000017: 85 C0              test        eax,eax
  0000000000000019: 7E 10              jle         000000000000002B
  000000000000001B: 48 8B D1           mov         rdx,rcx
  000000000000001E: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000023: 44 8B C0           mov         r8d,eax
  0000000000000026: E8 00 00 00 00     call        memcpy
  000000000000002B: 33 FF              xor         edi,edi
  000000000000002D: 48 39 BB 10 08 00  cmp         qword ptr [rbx+810h],rdi
                    00
  0000000000000034: 0F 84 C4 00 00 00  je          00000000000000FE
  000000000000003A: 89 BB 00 08 00 00  mov         dword ptr [rbx+800h],edi
  0000000000000040: 89 BC 24 68 08 00  mov         dword ptr [rsp+868h],edi
                    00
  0000000000000047: 85 F6              test        esi,esi
  0000000000000049: 0F 84 AF 00 00 00  je          00000000000000FE
  000000000000004F: BE FF FF 00 00     mov         esi,0FFFFh
  0000000000000054: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000058: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000060: 8B 93 18 08 00 00  mov         edx,dword ptr [rbx+818h]
  0000000000000066: 48 8B 8B 10 08 00  mov         rcx,qword ptr [rbx+810h]
                    00
  000000000000006D: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000072: 48 8D 84 24 70 08  lea         rax,[rsp+870h]
                    00 00
  000000000000007A: 4C 8D 84 24 68 08  lea         r8,[rsp+868h]
                    00 00
  0000000000000082: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000088: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  000000000000008D: 48 8D 84 24 60 08  lea         rax,[rsp+860h]
                    00 00
  0000000000000095: C7 44 24 28 02 00  mov         dword ptr [rsp+28h],2
                    00 00
  000000000000009D: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000A2: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000000A8: 48 63 83 00 08 00  movsxd      rax,dword ptr [rbx+800h]
                    00
  00000000000000AF: 0F B7 94 24 60 08  movzx       edx,word ptr [rsp+860h]
                    00 00
  00000000000000B7: 88 14 18           mov         byte ptr [rax+rbx],dl
  00000000000000BA: FF 83 00 08 00 00  inc         dword ptr [rbx+800h]
  00000000000000C0: 48 63 83 00 08 00  movsxd      rax,dword ptr [rbx+800h]
                    00
  00000000000000C7: 0F B7 CA           movzx       ecx,dx
  00000000000000CA: 66 C1 E9 08        shr         cx,8
  00000000000000CE: 88 0C 18           mov         byte ptr [rax+rbx],cl
  00000000000000D1: FF 83 00 08 00 00  inc         dword ptr [rbx+800h]
  00000000000000D7: 66 3B D6           cmp         dx,si
  00000000000000DA: 74 06              je          00000000000000E2
  00000000000000DC: 89 BB 04 08 00 00  mov         dword ptr [rbx+804h],edi
  00000000000000E2: 8B 84 24 68 08 00  mov         eax,dword ptr [rsp+868h]
                    00
  00000000000000E9: FF C0              inc         eax
  00000000000000EB: 89 84 24 68 08 00  mov         dword ptr [rsp+868h],eax
                    00
  00000000000000F2: 3B 83 08 08 00 00  cmp         eax,dword ptr [rbx+808h]
  00000000000000F8: 0F 82 62 FF FF FF  jb          0000000000000060
  00000000000000FE: 8B 93 08 08 00 00  mov         edx,dword ptr [rbx+808h]
  0000000000000104: 03 D2              add         edx,edx
  0000000000000106: 85 D2              test        edx,edx
  0000000000000108: 7E 1E              jle         0000000000000128
  000000000000010A: 48 8D 44 24 40     lea         rax,[rsp+40h]
  000000000000010F: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000114: 48 2B D8           sub         rbx,rax
  0000000000000117: 0F B6 04 19        movzx       eax,byte ptr [rcx+rbx]
  000000000000011B: 38 01              cmp         byte ptr [rcx],al
  000000000000011D: 75 19              jne         0000000000000138
  000000000000011F: FF C7              inc         edi
  0000000000000121: 48 FF C1           inc         rcx
  0000000000000124: 3B FA              cmp         edi,edx
  0000000000000126: 7C EF              jl          0000000000000117
  0000000000000128: B8 01 00 00 00     mov         eax,1
  000000000000012D: 48 81 C4 40 08 00  add         rsp,840h
                    00
  0000000000000134: 5F                 pop         rdi
  0000000000000135: 5E                 pop         rsi
  0000000000000136: 5B                 pop         rbx
  0000000000000137: C3                 ret
  0000000000000138: 33 C0              xor         eax,eax
  000000000000013A: 48 81 C4 40 08 00  add         rsp,840h
                    00
  0000000000000141: 5F                 pop         rdi
  0000000000000142: 5E                 pop         rsi
  0000000000000143: 5B                 pop         rbx
  0000000000000144: C3                 ret

?Erase@TEeData@@QEAAHXZ (public: int __cdecl TEeData::Erase(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 40        sub         rsp,40h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B 89 10 08 00  mov         rcx,qword ptr [rcx+810h]
                    00
  0000000000000010: 48 85 C9           test        rcx,rcx
  0000000000000013: 75 08              jne         000000000000001D
  0000000000000015: 33 C0              xor         eax,eax
  0000000000000017: 48 83 C4 40        add         rsp,40h
  000000000000001B: 5B                 pop         rbx
  000000000000001C: C3                 ret
  000000000000001D: 33 D2              xor         edx,edx
  000000000000001F: 48 8D 44 24 50     lea         rax,[rsp+50h]
  0000000000000024: 45 33 C9           xor         r9d,r9d
  0000000000000027: 48 89 54 24 38     mov         qword ptr [rsp+38h],rdx
  000000000000002C: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  0000000000000031: 89 54 24 28        mov         dword ptr [rsp+28h],edx
  0000000000000035: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  000000000000003A: 8B 93 20 08 00 00  mov         edx,dword ptr [rbx+820h]
  0000000000000040: 45 33 C0           xor         r8d,r8d
  0000000000000043: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000049: C7 83 04 08 00 00  mov         dword ptr [rbx+804h],1
                    01 00 00 00
  0000000000000053: B8 01 00 00 00     mov         eax,1
  0000000000000058: 48 83 C4 40        add         rsp,40h
  000000000000005C: 5B                 pop         rbx
  000000000000005D: C3                 ret

?Get@TEeData@@QEAAGXZ (public: unsigned short __cdecl TEeData::Get(void)):
  0000000000000000: 48 63 91 00 08 00  movsxd      rdx,dword ptr [rcx+0000000000000800h]
                    00
  0000000000000007: 44 0F B6 04 0A     movzx       r8d,byte ptr [rdx+rcx]
  000000000000000C: 44 8D 4A 01        lea         r9d,[rdx+1]
  0000000000000010: 49 63 C1           movsxd      rax,r9d
  0000000000000013: 44 89 89 00 08 00  mov         dword ptr [rcx+0000000000000800h],r9d
                    00
  000000000000001A: 0F B6 14 08        movzx       edx,byte ptr [rax+rcx]
  000000000000001E: 41 8D 41 01        lea         eax,[r9+1]
  0000000000000022: 89 81 00 08 00 00  mov         dword ptr [rcx+0000000000000800h],eax
  0000000000000028: 0F B7 C2           movzx       eax,dx
  000000000000002B: 66 C1 E0 08        shl         ax,8
  000000000000002F: 66 41 0B C0        or          ax,r8w
  0000000000000033: C3                 ret

?Init@TEeData@@QEAAXPEAD00@Z (public: void __cdecl TEeData::Init(char *,char *,char *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 33 D2              xor         edx,edx
  0000000000000008: 41 B8 00 08 00 00  mov         r8d,800h
  000000000000000E: 48 8B D9           mov         rbx,rcx
  0000000000000011: E8 00 00 00 00     call        memset
  0000000000000016: C7 83 04 08 00 00  mov         dword ptr [rbx+804h],0
                    00 00 00 00
  0000000000000020: 48 83 C4 20        add         rsp,20h
  0000000000000024: 5B                 pop         rbx
  0000000000000025: C3                 ret

?Invalidate@TEeData@@QEAAHXZ (public: int __cdecl TEeData::Invalidate(void)):
  0000000000000000: B8 01 00 00 00     mov         eax,1
  0000000000000005: C3                 ret

?IsErased@TEeData@@QEAAHXZ (public: int __cdecl TEeData::IsErased(void)):
  0000000000000000: 8B 81 04 08 00 00  mov         eax,dword ptr [rcx+0000000000000804h]
  0000000000000006: C3                 ret

?Read@TEeData@@QEAAHXZ (public: int __cdecl TEeData::Read(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 50        sub         rsp,50h
  0000000000000006: 48 83 B9 10 08 00  cmp         qword ptr [rcx+810h],0
                    00 00
  000000000000000E: 48 8B D9           mov         rbx,rcx
  0000000000000011: 75 08              jne         000000000000001B
  0000000000000013: 33 C0              xor         eax,eax
  0000000000000015: 48 83 C4 50        add         rsp,50h
  0000000000000019: 5B                 pop         rbx
  000000000000001A: C3                 ret
  000000000000001B: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000020: 33 FF              xor         edi,edi
  0000000000000022: 89 B9 00 08 00 00  mov         dword ptr [rcx+800h],edi
  0000000000000028: 89 7C 24 68        mov         dword ptr [rsp+68h],edi
  000000000000002C: 39 B9 08 08 00 00  cmp         dword ptr [rcx+808h],edi
  0000000000000032: 0F 86 9B 00 00 00  jbe         00000000000000D3
  0000000000000038: 48 89 74 24 48     mov         qword ptr [rsp+48h],rsi
  000000000000003D: BE FF FF 00 00     mov         esi,0FFFFh
  0000000000000042: 8B 93 18 08 00 00  mov         edx,dword ptr [rbx+818h]
  0000000000000048: 48 8B 8B 10 08 00  mov         rcx,qword ptr [rbx+810h]
                    00
  000000000000004F: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  0000000000000054: 48 8D 44 24 70     lea         rax,[rsp+70h]
  0000000000000059: 4C 8D 44 24 68     lea         r8,[rsp+68h]
  000000000000005E: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000064: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  0000000000000069: 48 8D 44 24 60     lea         rax,[rsp+60h]
  000000000000006E: C7 44 24 28 02 00  mov         dword ptr [rsp+28h],2
                    00 00
  0000000000000076: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  000000000000007B: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000081: 48 63 83 00 08 00  movsxd      rax,dword ptr [rbx+800h]
                    00
  0000000000000088: 0F B7 54 24 60     movzx       edx,word ptr [rsp+60h]
  000000000000008D: 88 14 18           mov         byte ptr [rax+rbx],dl
  0000000000000090: FF 83 00 08 00 00  inc         dword ptr [rbx+800h]
  0000000000000096: 48 63 83 00 08 00  movsxd      rax,dword ptr [rbx+800h]
                    00
  000000000000009D: 0F B7 CA           movzx       ecx,dx
  00000000000000A0: 66 C1 E9 08        shr         cx,8
  00000000000000A4: 88 0C 18           mov         byte ptr [rax+rbx],cl
  00000000000000A7: FF 83 00 08 00 00  inc         dword ptr [rbx+800h]
  00000000000000AD: 66 3B D6           cmp         dx,si
  00000000000000B0: 74 06              je          00000000000000B8
  00000000000000B2: 89 BB 04 08 00 00  mov         dword ptr [rbx+804h],edi
  00000000000000B8: 8B 44 24 68        mov         eax,dword ptr [rsp+68h]
  00000000000000BC: FF C0              inc         eax
  00000000000000BE: 89 44 24 68        mov         dword ptr [rsp+68h],eax
  00000000000000C2: 3B 83 08 08 00 00  cmp         eax,dword ptr [rbx+808h]
  00000000000000C8: 0F 82 74 FF FF FF  jb          0000000000000042
  00000000000000CE: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  00000000000000D3: B8 01 00 00 00     mov         eax,1
  00000000000000D8: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  00000000000000DD: 48 83 C4 50        add         rsp,50h
  00000000000000E1: 5B                 pop         rbx
  00000000000000E2: C3                 ret

?ReadWord@TEeData@@QEAAHKPEAG@Z (public: int __cdecl TEeData::ReadWord(unsigned long,unsigned short *)):
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 83 EC 48        sub         rsp,48h
  0000000000000008: 48 8B 81 10 08 00  mov         rax,qword ptr [rcx+810h]
                    00
  000000000000000F: 48 85 C0           test        rax,rax
  0000000000000012: 75 05              jne         0000000000000019
  0000000000000014: 48 83 C4 48        add         rsp,48h
  0000000000000018: C3                 ret
  0000000000000019: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  000000000000001E: 48 C7 44 24 38 00  mov         qword ptr [rsp+38h],0
                    00 00 00
  0000000000000027: 41 B9 04 00 00 00  mov         r9d,4
  000000000000002D: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000032: 8B 91 18 08 00 00  mov         edx,dword ptr [rcx+818h]
  0000000000000038: C7 44 24 28 02 00  mov         dword ptr [rsp+28h],2
                    00 00
  0000000000000040: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  0000000000000045: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  000000000000004A: 48 8B C8           mov         rcx,rax
  000000000000004D: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000053: B8 01 00 00 00     mov         eax,1
  0000000000000058: 48 83 C4 48        add         rsp,48h
  000000000000005C: C3                 ret

?Reset@TEeData@@QEAAXXZ (public: void __cdecl TEeData::Reset(void)):
  0000000000000000: C7 81 00 08 00 00  mov         dword ptr [rcx+0000000000000800h],0
                    00 00 00 00
  000000000000000A: C3                 ret

?Write@TEeData@@QEAAHXZ (public: int __cdecl TEeData::Write(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 40        sub         rsp,40h
  0000000000000006: 48 83 B9 10 08 00  cmp         qword ptr [rcx+810h],0
                    00 00
  000000000000000E: 48 8B D9           mov         rbx,rcx
  0000000000000011: 75 08              jne         000000000000001B
  0000000000000013: 33 C0              xor         eax,eax
  0000000000000015: 48 83 C4 40        add         rsp,40h
  0000000000000019: 5B                 pop         rbx
  000000000000001A: C3                 ret
  000000000000001B: 48 89 74 24 60     mov         qword ptr [rsp+60h],rsi
  0000000000000020: 33 F6              xor         esi,esi
  0000000000000022: 48 89 7C 24 68     mov         qword ptr [rsp+68h],rdi
  0000000000000027: 89 B1 00 08 00 00  mov         dword ptr [rcx+800h],esi
  000000000000002D: 8B FE              mov         edi,esi
  000000000000002F: 39 B1 08 08 00 00  cmp         dword ptr [rcx+808h],esi
  0000000000000035: 0F 86 94 00 00 00  jbe         00000000000000CF
  000000000000003B: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  0000000000000040: 48 63 8B 00 08 00  movsxd      rcx,dword ptr [rbx+800h]
                    00
  0000000000000047: 48 89 74 24 38     mov         qword ptr [rsp+38h],rsi
  000000000000004C: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000052: 0F B6 14 19        movzx       edx,byte ptr [rcx+rbx]
  0000000000000056: 44 8D 41 01        lea         r8d,[rcx+1]
  000000000000005A: 49 63 C0           movsxd      rax,r8d
  000000000000005D: 44 89 83 00 08 00  mov         dword ptr [rbx+800h],r8d
                    00
  0000000000000064: 0F B6 0C 18        movzx       ecx,byte ptr [rax+rbx]
  0000000000000068: 41 8D 40 01        lea         eax,[r8+1]
  000000000000006C: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000071: 89 83 00 08 00 00  mov         dword ptr [rbx+800h],eax
  0000000000000077: 0F B7 C1           movzx       eax,cx
  000000000000007A: 48 8B 8B 10 08 00  mov         rcx,qword ptr [rbx+810h]
                    00
  0000000000000081: 66 C1 E0 08        shl         ax,8
  0000000000000085: 66 89 7C 24 50     mov         word ptr [rsp+50h],di
  000000000000008A: 66 0B C2           or          ax,dx
  000000000000008D: 8B 93 1C 08 00 00  mov         edx,dword ptr [rbx+81Ch]
  0000000000000093: 88 44 24 52        mov         byte ptr [rsp+52h],al
  0000000000000097: 66 C1 E8 08        shr         ax,8
  000000000000009B: 88 44 24 53        mov         byte ptr [rsp+53h],al
  000000000000009F: 48 8D 44 24 58     lea         rax,[rsp+58h]
  00000000000000A4: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  00000000000000A9: 48 8D 44 24 50     lea         rax,[rsp+50h]
  00000000000000AE: C7 44 24 28 04 00  mov         dword ptr [rsp+28h],4
                    00 00
  00000000000000B6: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000BB: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  00000000000000C1: FF C7              inc         edi
  00000000000000C3: 3B BB 08 08 00 00  cmp         edi,dword ptr [rbx+808h]
  00000000000000C9: 0F 82 71 FF FF FF  jb          0000000000000040
  00000000000000CF: 48 8B 7C 24 68     mov         rdi,qword ptr [rsp+68h]
  00000000000000D4: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  00000000000000D9: B8 01 00 00 00     mov         eax,1
  00000000000000DE: 48 83 C4 40        add         rsp,40h
  00000000000000E2: 5B                 pop         rbx
  00000000000000E3: C3                 ret

?WriteToFile@TEeData@@QEAAHPEAD@Z (public: int __cdecl TEeData::WriteToFile(char *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B C2           mov         rax,rdx
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 8D 15 00 00 00  lea         rdx,[??_C@_02GMLFBBN@wb?$AA@]
                    00
  0000000000000017: 48 8B C8           mov         rcx,rax
  000000000000001A: FF 15 00 00 00 00  call        qword ptr [__imp_fopen]
  0000000000000020: 48 8B F8           mov         rdi,rax
  0000000000000023: 48 85 C0           test        rax,rax
  0000000000000026: 75 0B              jne         0000000000000033
  0000000000000028: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000002D: 48 83 C4 20        add         rsp,20h
  0000000000000031: 5F                 pop         rdi
  0000000000000032: C3                 ret
  0000000000000033: BA 01 00 00 00     mov         edx,1
  0000000000000038: 4C 8B C8           mov         r9,rax
  000000000000003B: 48 8B CB           mov         rcx,rbx
  000000000000003E: 44 8D 42 7F        lea         r8d,[rdx+7Fh]
  0000000000000042: FF 15 00 00 00 00  call        qword ptr [__imp_fwrite]
  0000000000000048: 48 8B CF           mov         rcx,rdi
  000000000000004B: 48 8B D8           mov         rbx,rax
  000000000000004E: FF 15 00 00 00 00  call        qword ptr [__imp_fclose]
  0000000000000054: 33 C0              xor         eax,eax
  0000000000000056: 48 81 FB 80 00 00  cmp         rbx,80h
                    00
  000000000000005D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000062: 0F 94 C0           sete        al
  0000000000000065: 48 83 C4 20        add         rsp,20h
  0000000000000069: 5F                 pop         rdi
  000000000000006A: C3                 ret

?WriteWord@TEeData@@QEAAHKG@Z (public: int __cdecl TEeData::WriteWord(unsigned long,unsigned short)):
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8B 81 10 08 00  mov         rax,qword ptr [rcx+810h]
                    00
  000000000000000B: 48 85 C0           test        rax,rax
  000000000000000E: 75 05              jne         0000000000000015
  0000000000000010: 48 83 C4 48        add         rsp,48h
  0000000000000014: C3                 ret
  0000000000000015: 66 89 54 24 50     mov         word ptr [rsp+50h],dx
  000000000000001A: 48 C7 44 24 38 00  mov         qword ptr [rsp+38h],0
                    00 00 00
  0000000000000023: 44 88 44 24 52     mov         byte ptr [rsp+52h],r8b
  0000000000000028: 66 41 C1 E8 08     shr         r8w,8
  000000000000002D: 48 8D 54 24 68     lea         rdx,[rsp+68h]
  0000000000000032: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000038: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  000000000000003D: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000042: 44 88 44 24 53     mov         byte ptr [rsp+53h],r8b
  0000000000000047: C7 44 24 28 04 00  mov         dword ptr [rsp+28h],4
                    00 00
  000000000000004F: 48 89 54 24 20     mov         qword ptr [rsp+20h],rdx
  0000000000000054: 8B 91 1C 08 00 00  mov         edx,dword ptr [rcx+81Ch]
  000000000000005A: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  000000000000005F: 48 8B C8           mov         rcx,rax
  0000000000000062: FF 15 00 00 00 00  call        qword ptr [__imp_DeviceIoControl]
  0000000000000068: B8 01 00 00 00     mov         eax,1
  000000000000006D: 48 83 C4 48        add         rsp,48h
  0000000000000071: C3                 ret

?ControlCallback@@YAHPEAXPEAU_SP_DEVINFO_DATA@@K0@Z (int __cdecl ControlCallback(void *,struct _SP_DEVINFO_DATA *,unsigned long,void *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 81 EC 80 01 00  sub         rsp,180h
                    00
  0000000000000012: 48 8B F1           mov         rsi,rcx
  0000000000000015: 41 8B 49 04        mov         ecx,dword ptr [r9+4]
  0000000000000019: 49 8B D9           mov         rbx,r9
  000000000000001C: 8B C1              mov         eax,ecx
  000000000000001E: 48 8B FA           mov         rdi,rdx
  0000000000000021: C7 44 24 20 08 00  mov         dword ptr [rsp+20h],8
                    00 00
  0000000000000029: C7 44 24 24 12 00  mov         dword ptr [rsp+24h],12h
                    00 00
  0000000000000031: FF C8              dec         eax
  0000000000000033: 74 06              je          000000000000003B
  0000000000000035: 89 4C 24 28        mov         dword ptr [rsp+28h],ecx
  0000000000000039: EB 51              jmp         000000000000008C
  000000000000003B: 4C 8D 44 24 20     lea         r8,[rsp+20h]
  0000000000000040: 41 B9 14 00 00 00  mov         r9d,14h
  0000000000000046: 48 8B CE           mov         rcx,rsi
  0000000000000049: C7 44 24 28 01 00  mov         dword ptr [rsp+28h],1
                    00 00
  0000000000000051: 48 C7 44 24 2C 01  mov         qword ptr [rsp+2Ch],1
                    00 00 00
  000000000000005A: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiSetClassInstallParamsA]
  0000000000000060: 85 C0              test        eax,eax
  0000000000000062: 74 11              je          0000000000000075
  0000000000000064: 4C 8B C7           mov         r8,rdi
  0000000000000067: 48 8B D6           mov         rdx,rsi
  000000000000006A: B9 12 00 00 00     mov         ecx,12h
  000000000000006F: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiCallClassInstaller]
  0000000000000075: 8B 43 04           mov         eax,dword ptr [rbx+4]
  0000000000000078: C7 44 24 20 08 00  mov         dword ptr [rsp+20h],8
                    00 00
  0000000000000080: C7 44 24 24 12 00  mov         dword ptr [rsp+24h],12h
                    00 00
  0000000000000088: 89 44 24 28        mov         dword ptr [rsp+28h],eax
  000000000000008C: 4C 8D 44 24 20     lea         r8,[rsp+20h]
  0000000000000091: 41 B9 14 00 00 00  mov         r9d,14h
  0000000000000097: 48 8B D7           mov         rdx,rdi
  000000000000009A: 48 8B CE           mov         rcx,rsi
  000000000000009D: 48 C7 44 24 2C 02  mov         qword ptr [rsp+2Ch],2
                    00 00 00
  00000000000000A6: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiSetClassInstallParamsA]
  00000000000000AC: 85 C0              test        eax,eax
  00000000000000AE: 74 69              je          0000000000000119
  00000000000000B0: 4C 8B C7           mov         r8,rdi
  00000000000000B3: 48 8B D6           mov         rdx,rsi
  00000000000000B6: B9 12 00 00 00     mov         ecx,12h
  00000000000000BB: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiCallClassInstaller]
  00000000000000C1: 85 C0              test        eax,eax
  00000000000000C3: 74 54              je          0000000000000119
  00000000000000C5: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000CA: 48 8B D7           mov         rdx,rdi
  00000000000000CD: 48 8B CE           mov         rcx,rsi
  00000000000000D0: C7 44 24 40 40 01  mov         dword ptr [rsp+40h],140h
                    00 00
  00000000000000D8: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceInstallParamsA]
  00000000000000DE: 85 C0              test        eax,eax
  00000000000000E0: 74 24              je          0000000000000106
  00000000000000E2: F7 44 24 44 80 01  test        dword ptr [rsp+44h],180h
                    00 00
  00000000000000EA: 74 1A              je          0000000000000106
  00000000000000EC: 4C 8B 43 18        mov         r8,qword ptr [rbx+18h]
  00000000000000F0: 48 8B D7           mov         rdx,rdi
  00000000000000F3: 48 8B CE           mov         rcx,rsi
  00000000000000F6: E8 00 00 00 00     call        ?DumpDeviceWithInfo@@YAHPEAXPEAU_SP_DEVINFO_DATA@@PEBD@Z
  00000000000000FB: FF 03              inc         dword ptr [rbx]
  00000000000000FD: C7 43 08 01 00 00  mov         dword ptr [rbx+8],1
                    00
  0000000000000104: EB 22              jmp         0000000000000128
  0000000000000106: 4C 8B 43 10        mov         r8,qword ptr [rbx+10h]
  000000000000010A: 48 8B D7           mov         rdx,rdi
  000000000000010D: 48 8B CE           mov         rcx,rsi
  0000000000000110: E8 00 00 00 00     call        ?DumpDeviceWithInfo@@YAHPEAXPEAU_SP_DEVINFO_DATA@@PEBD@Z
  0000000000000115: FF 03              inc         dword ptr [rbx]
  0000000000000117: EB 0F              jmp         0000000000000128
  0000000000000119: 4C 8B 43 20        mov         r8,qword ptr [rbx+20h]
  000000000000011D: 48 8B D7           mov         rdx,rdi
  0000000000000120: 48 8B CE           mov         rcx,rsi
  0000000000000123: E8 00 00 00 00     call        ?DumpDeviceWithInfo@@YAHPEAXPEAU_SP_DEVINFO_DATA@@PEBD@Z
  0000000000000128: 4C 8D 9C 24 80 01  lea         r11,[rsp+180h]
                    00 00
  0000000000000130: 33 C0              xor         eax,eax
  0000000000000132: 49 8B 5B 10        mov         rbx,qword ptr [r11+10h]
  0000000000000136: 49 8B 73 18        mov         rsi,qword ptr [r11+18h]
  000000000000013A: 49 8B E3           mov         rsp,r11
  000000000000013D: 5F                 pop         rdi
  000000000000013E: C3                 ret

?CopyMultiSz@@YAPEAPEADPEAPEA_W@Z (char * * __cdecl CopyMultiSz(wchar_t * *)):
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 48 89 6C 24 20     mov         qword ptr [rsp+20h],rbp
  000000000000000A: 56                 push        rsi
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 54              push        r12
  000000000000000E: 48 83 EC 20        sub         rsp,20h
  0000000000000012: 33 DB              xor         ebx,ebx
  0000000000000014: 48 8B F1           mov         rsi,rcx
  0000000000000017: 8B FB              mov         edi,ebx
  0000000000000019: 48 85 C9           test        rcx,rcx
  000000000000001C: 74 2C              je          000000000000004A
  000000000000001E: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000021: 48 85 C0           test        rax,rax
  0000000000000024: 74 24              je          000000000000004A
  0000000000000026: 8B EB              mov         ebp,ebx
  0000000000000028: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000030: 48 8B C8           mov         rcx,rax
  0000000000000033: FF 15 00 00 00 00  call        qword ptr [__imp_lstrlenA]
  0000000000000039: 48 8D 6D 01        lea         rbp,[rbp+1]
  000000000000003D: FF C0              inc         eax
  000000000000003F: 03 F8              add         edi,eax
  0000000000000041: 48 8B 04 EE        mov         rax,qword ptr [rsi+rbp*8]
  0000000000000045: 48 85 C0           test        rax,rax
  0000000000000048: 75 E6              jne         0000000000000030
  000000000000004A: FF C7              inc         edi
  000000000000004C: 4C 63 E7           movsxd      r12,edi
  000000000000004F: 49 8B CC           mov         rcx,r12
  0000000000000052: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000057: 48 8B E8           mov         rbp,rax
  000000000000005A: 48 85 C0           test        rax,rax
  000000000000005D: 0F 84 87 00 00 00  je          00000000000000EA
  0000000000000063: 4C 89 74 24 40     mov         qword ptr [rsp+40h],r14
  0000000000000068: 4C 89 7C 24 48     mov         qword ptr [rsp+48h],r15
  000000000000006D: 48 85 F6           test        rsi,rsi
  0000000000000070: 74 44              je          00000000000000B6
  0000000000000072: 48 39 1E           cmp         qword ptr [rsi],rbx
  0000000000000075: 74 3F              je          00000000000000B6
  0000000000000077: 4C 8B F3           mov         r14,rbx
  000000000000007A: 4C 8B C6           mov         r8,rsi
  000000000000007D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000080: 4D 8B 00           mov         r8,qword ptr [r8]
  0000000000000083: 8B C7              mov         eax,edi
  0000000000000085: 4C 63 FB           movsxd      r15,ebx
  0000000000000088: 2B C3              sub         eax,ebx
  000000000000008A: 4C 03 FD           add         r15,rbp
  000000000000008D: 48 63 D0           movsxd      rdx,eax
  0000000000000090: 49 8B CF           mov         rcx,r15
  0000000000000093: E8 00 00 00 00     call        ?StringCchCopyA@@YAJPEAD_KPEBD@Z
  0000000000000098: 85 C0              test        eax,eax
  000000000000009A: 78 3A              js          00000000000000D6
  000000000000009C: 49 8B CF           mov         rcx,r15
  000000000000009F: FF 15 00 00 00 00  call        qword ptr [__imp_lstrlenA]
  00000000000000A5: 49 FF C6           inc         r14
  00000000000000A8: FF C3              inc         ebx
  00000000000000AA: 4E 8D 04 F6        lea         r8,[rsi+r14*8]
  00000000000000AE: 03 D8              add         ebx,eax
  00000000000000B0: 49 83 38 00        cmp         qword ptr [r8],0
  00000000000000B4: 75 CA              jne         0000000000000080
  00000000000000B6: 3B DF              cmp         ebx,edi
  00000000000000B8: 7D 09              jge         00000000000000C3
  00000000000000BA: 48 63 C3           movsxd      rax,ebx
  00000000000000BD: C6 04 28 00        mov         byte ptr [rax+rbp],0
  00000000000000C1: EB 06              jmp         00000000000000C9
  00000000000000C3: 41 C6 44 2C FF 00  mov         byte ptr [r12+rbp-1],0
  00000000000000C9: 48 8B CD           mov         rcx,rbp
  00000000000000CC: E8 00 00 00 00     call        ?GetMultiSzIndexArray@@YAPEAPEADPEAD@Z
  00000000000000D1: 48 85 C0           test        rax,rax
  00000000000000D4: 75 0A              jne         00000000000000E0
  00000000000000D6: 48 8B CD           mov         rcx,rbp
  00000000000000D9: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000000DE: 33 C0              xor         eax,eax
  00000000000000E0: 4C 8B 74 24 40     mov         r14,qword ptr [rsp+40h]
  00000000000000E5: 4C 8B 7C 24 48     mov         r15,qword ptr [rsp+48h]
  00000000000000EA: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  00000000000000EF: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  00000000000000F4: 48 83 C4 20        add         rsp,20h
  00000000000000F8: 41 5C              pop         r12
  00000000000000FA: 5F                 pop         rdi
  00000000000000FB: 5E                 pop         rsi
  00000000000000FC: C3                 ret

?DelMultiSz@@YAXPEAPEA_W@Z (void __cdecl DelMultiSz(wchar_t * *)):
  0000000000000000: 48 85 C9           test        rcx,rcx
  0000000000000003: 74 24              je          0000000000000029
  0000000000000005: 53                 push        rbx
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000011: 48 85 C9           test        rcx,rcx
  0000000000000014: 74 05              je          000000000000001B
  0000000000000016: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  000000000000001B: 48 8D 4B F8        lea         rcx,[rbx-8]
  000000000000001F: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000024: 48 83 C4 20        add         rsp,20h
  0000000000000028: 5B                 pop         rbx
  0000000000000029: C3                 ret

?DumpDeviceWithInfo@@YAHPEAXPEAU_SP_DEVINFO_DATA@@PEBD@Z (int __cdecl DumpDeviceWithInfo(void *,struct _SP_DEVINFO_DATA *,char const *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 81 EC 30 02 00  sub         rsp,230h
                    00
  0000000000000012: 48 8B F2           mov         rsi,rdx
  0000000000000015: 48 8D 94 24 00 01  lea         rdx,[rsp+100h]
                    00 00
  000000000000001D: 49 8B F8           mov         rdi,r8
  0000000000000020: BB 01 00 00 00     mov         ebx,1
  0000000000000025: C7 84 24 00 01 00  mov         dword ptr [rsp+100h],128h
                    00 28 01 00 00
  0000000000000030: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceInfoListDetailA]
  0000000000000036: 85 C0              test        eax,eax
  0000000000000038: 74 28              je          0000000000000062
  000000000000003A: 48 8B 84 24 18 01  mov         rax,qword ptr [rsp+118h]
                    00 00
  0000000000000042: 8B 4E 14           mov         ecx,dword ptr [rsi+14h]
  0000000000000045: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  000000000000004A: 45 33 C9           xor         r9d,r9d
  000000000000004D: 41 B8 C8 00 00 00  mov         r8d,0C8h
  0000000000000053: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000058: FF 15 00 00 00 00  call        qword ptr [__imp_CM_Get_Device_ID_ExA]
  000000000000005E: 85 C0              test        eax,eax
  0000000000000060: 74 14              je          0000000000000076
  0000000000000062: 48 8D 15 00 00 00  lea         rdx,[??_C@_01OGPIMHDM@?$DP?$AA@]
                    00
  0000000000000069: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000006E: FF 15 00 00 00 00  call        qword ptr [__imp_lstrcpyA]
  0000000000000074: 33 DB              xor         ebx,ebx
  0000000000000076: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  000000000000007B: 48 85 FF           test        rdi,rdi
  000000000000007E: 74 12              je          0000000000000092
  0000000000000080: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0L@IDOCKPDF@?$CF?960s?3?5?$CFs?6?$AA@]
                    00
  0000000000000087: 4C 8B C7           mov         r8,rdi
  000000000000008A: FF 15 00 00 00 00  call        qword ptr [__imp_printf]
  0000000000000090: EB 0D              jmp         000000000000009F
  0000000000000092: 48 8D 0D 00 00 00  lea         rcx,[??_C@_03OFAPEBGM@?$CFs?6?$AA@]
                    00
  0000000000000099: FF 15 00 00 00 00  call        qword ptr [__imp_printf]
  000000000000009F: 4C 8D 9C 24 30 02  lea         r11,[rsp+230h]
                    00 00
  00000000000000A7: 8B C3              mov         eax,ebx
  00000000000000A9: 49 8B 5B 10        mov         rbx,qword ptr [r11+10h]
  00000000000000AD: 49 8B 73 18        mov         rsi,qword ptr [r11+18h]
  00000000000000B1: 49 8B E3           mov         rsp,r11
  00000000000000B4: 5F                 pop         rdi
  00000000000000B5: C3                 ret

?EnumerateDevices@@YAHPEBD0KHPEAPEA_WP6AHPEAXPEAU_SP_DEVINFO_DATA@@K2@Z2@Z (int __cdecl EnumerateDevices(char const *,char const *,unsigned long,int,wchar_t * *,int (__cdecl*)(void *,struct _SP_DEVINFO_DATA *,unsigned long,void *),void *)):
  0000000000000000: 44 89 4C 24 20     mov         dword ptr [rsp+20h],r9d
  0000000000000005: 44 89 44 24 18     mov         dword ptr [rsp+18h],r8d
  000000000000000A: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000F: 55                 push        rbp
  0000000000000010: 53                 push        rbx
  0000000000000011: 57                 push        rdi
  0000000000000012: 41 54              push        r12
  0000000000000014: 41 55              push        r13
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 8D AC 24 48 FE  lea         rbp,[rsp-1B8h]
                    FF FF
  0000000000000020: 48 81 EC B8 02 00  sub         rsp,2B8h
                    00
  0000000000000027: 33 C0              xor         eax,eax
  0000000000000029: 48 83 C9 FF        or          rcx,0FFFFFFFFFFFFFFFFh
  000000000000002D: 49 63 D9           movsxd      rbx,r9d
  0000000000000030: 4C 8B EA           mov         r13,rdx
  0000000000000033: C7 44 24 40 02 00  mov         dword ptr [rsp+40h],2
                    00 00
  000000000000003B: 44 8B F8           mov         r15d,eax
  000000000000003E: 44 8B E0           mov         r12d,eax
  0000000000000041: 89 44 24 54        mov         dword ptr [rsp+54h],eax
  0000000000000045: 8B F8              mov         edi,eax
  0000000000000047: 89 44 24 50        mov         dword ptr [rsp+50h],eax
  000000000000004B: 45 85 C9           test        r9d,r9d
  000000000000004E: 75 14              jne         0000000000000064
  0000000000000050: 8D 41 04           lea         eax,[rcx+4]
  0000000000000053: 48 81 C4 B8 02 00  add         rsp,2B8h
                    00
  000000000000005A: 41 5F              pop         r15
  000000000000005C: 41 5D              pop         r13
  000000000000005E: 41 5C              pop         r12
  0000000000000060: 5F                 pop         rdi
  0000000000000061: 5B                 pop         rbx
  0000000000000062: 5D                 pop         rbp
  0000000000000063: C3                 ret
  0000000000000064: B8 18 00 00 00     mov         eax,18h
  0000000000000069: 48 89 B4 24 F0 02  mov         qword ptr [rsp+2F0h],rsi
                    00 00
  0000000000000071: 48 8B F3           mov         rsi,rbx
  0000000000000074: 48 F7 E3           mul         rax,rbx
  0000000000000077: 48 0F 40 C1        cmovo       rax,rcx
  000000000000007B: 48 8B C8           mov         rcx,rax
  000000000000007E: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000083: 48 8B D0           mov         rdx,rax
  0000000000000086: 48 89 44 24 48     mov         qword ptr [rsp+48h],rax
  000000000000008B: 48 85 C0           test        rax,rax
  000000000000008E: 0F 84 91 00 00 00  je          0000000000000125
  0000000000000094: 4C 89 B4 24 B0 02  mov         qword ptr [rsp+2B0h],r14
                    00 00
  000000000000009C: 4C 8B B5 10 02 00  mov         r14,qword ptr [rbp+210h]
                    00
  00000000000000A3: 85 DB              test        ebx,ebx
  00000000000000A5: 0F 8E C3 00 00 00  jle         000000000000016E
  00000000000000AB: 49 8B 0E           mov         rcx,qword ptr [r14]
  00000000000000AE: 66 83 39 3D        cmp         word ptr [rcx],3Dh
  00000000000000B2: 0F 85 98 00 00 00  jne         0000000000000150
  00000000000000B8: 48 83 C1 02        add         rcx,2
  00000000000000BC: 66 39 39           cmp         word ptr [rcx],di
  00000000000000BF: 0F 84 8B 00 00 00  je          0000000000000150
  00000000000000C5: 4C 8D 4C 24 54     lea         r9,[rsp+54h]
  00000000000000CA: 48 8D 55 98        lea         rdx,[rbp-68h]
  00000000000000CE: 41 B8 01 00 00 00  mov         r8d,1
  00000000000000D4: 48 89 7C 24 28     mov         qword ptr [rsp+28h],rdi
  00000000000000D9: 4C 89 6C 24 20     mov         qword ptr [rsp+20h],r13
  00000000000000DE: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiClassGuidsFromNameExA]
  00000000000000E4: 85 C0              test        eax,eax
  00000000000000E6: 75 0B              jne         00000000000000F3
  00000000000000E8: FF 15 00 00 00 00  call        qword ptr [__imp_GetLastError]
  00000000000000EE: 83 F8 7A           cmp         eax,7Ah
  00000000000000F1: 75 0A              jne         00000000000000FD
  00000000000000F3: 39 7C 24 54        cmp         dword ptr [rsp+54h],edi
  00000000000000F7: 75 49              jne         0000000000000142
  00000000000000F9: 89 7C 24 40        mov         dword ptr [rsp+40h],edi
  00000000000000FD: 49 83 CD FF        or          r13,0FFFFFFFFFFFFFFFFh
  0000000000000101: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
$final$97:
  0000000000000106: 48 8B CF           mov         rcx,rdi
  0000000000000109: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  000000000000010E: 4C 8B B4 24 B0 02  mov         r14,qword ptr [rsp+2B0h]
                    00 00
  0000000000000116: 49 83 FD FF        cmp         r13,0FFFFFFFFFFFFFFFFh
  000000000000011A: 74 09              je          0000000000000125
  000000000000011C: 49 8B CD           mov         rcx,r13
  000000000000011F: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiDestroyDeviceInfoList]
  0000000000000125: 8B 44 24 40        mov         eax,dword ptr [rsp+40h]
  0000000000000129: 48 8B B4 24 F0 02  mov         rsi,qword ptr [rsp+2F0h]
                    00 00
  0000000000000131: 48 81 C4 B8 02 00  add         rsp,2B8h
                    00
  0000000000000138: 41 5F              pop         r15
  000000000000013A: 41 5D              pop         r13
  000000000000013C: 41 5C              pop         r12
  000000000000013E: 5F                 pop         rdi
  000000000000013F: 5B                 pop         rbx
  0000000000000140: 5D                 pop         rbp
  0000000000000141: C3                 ret
  0000000000000142: 48 8B 54 24 48     mov         rdx,qword ptr [rsp+48h]
  0000000000000147: BF 01 00 00 00     mov         edi,1
  000000000000014C: 89 7C 24 50        mov         dword ptr [rsp+50h],edi
  0000000000000150: 3B DF              cmp         ebx,edi
  0000000000000152: 7E 1A              jle         000000000000016E
  0000000000000154: 48 63 C7           movsxd      rax,edi
  0000000000000157: 49 8B 0C C6        mov         rcx,qword ptr [r14+rax*8]
  000000000000015B: 66 83 39 2A        cmp         word ptr [rcx],2Ah
  000000000000015F: 75 13              jne         0000000000000174
  0000000000000161: 66 44 39 61 02     cmp         word ptr [rcx+2],r12w
  0000000000000166: 75 0C              jne         0000000000000174
  0000000000000168: FF C7              inc         edi
  000000000000016A: 89 7C 24 50        mov         dword ptr [rsp+50h],edi
  000000000000016E: 41 BC 01 00 00 00  mov         r12d,1
  0000000000000174: 48 63 C7           movsxd      rax,edi
  0000000000000177: 48 8B F8           mov         rdi,rax
  000000000000017A: 48 3B C3           cmp         rax,rbx
  000000000000017D: 0F 8D A2 00 00 00  jge         0000000000000225
  0000000000000183: 48 8D 58 01        lea         rbx,[rax+1]
  0000000000000187: 45 33 ED           xor         r13d,r13d
  000000000000018A: 48 8D 1C 58        lea         rbx,[rax+rbx*2]
  000000000000018E: 48 8D 1C DA        lea         rbx,[rdx+rbx*8]
  0000000000000192: 49 8B 04 FE        mov         rax,qword ptr [r14+rdi*8]
  0000000000000196: 44 89 6C 24 68     mov         dword ptr [rsp+68h],r13d
  000000000000019B: 4C 89 6C 24 60     mov         qword ptr [rsp+60h],r13
  00000000000001A0: 80 38 40           cmp         byte ptr [rax],40h
  00000000000001A3: 48 89 44 24 58     mov         qword ptr [rsp+58h],rax
  00000000000001A8: 75 16              jne         00000000000001C0
  00000000000001AA: 48 8B C8           mov         rcx,rax
  00000000000001AD: C7 44 24 68 01 00  mov         dword ptr [rsp+68h],1
                    00 00
  00000000000001B5: FF 15 00 00 00 00  call        qword ptr [__imp_CharNextA]
  00000000000001BB: 48 89 44 24 58     mov         qword ptr [rsp+58h],rax
  00000000000001C0: 80 38 27           cmp         byte ptr [rax],27h
  00000000000001C3: 48 8B C8           mov         rcx,rax
  00000000000001C6: 75 0D              jne         00000000000001D5
  00000000000001C8: FF 15 00 00 00 00  call        qword ptr [__imp_CharNextA]
  00000000000001CE: 48 89 44 24 58     mov         qword ptr [rsp+58h],rax
  00000000000001D3: EB 10              jmp         00000000000001E5
  00000000000001D5: BA 2A 00 00 00     mov         edx,2Ah
  00000000000001DA: FF 15 00 00 00 00  call        qword ptr [__imp__mbschr]
  00000000000001E0: 48 89 44 24 60     mov         qword ptr [rsp+60h],rax
  00000000000001E5: 0F 10 44 24 58     movups      xmm0,xmmword ptr [rsp+58h]
  00000000000001EA: F2 0F 10 4C 24 68  movsd       xmm1,mmword ptr [rsp+68h]
  00000000000001F0: 0F 11 43 F0        movups      xmmword ptr [rbx-10h],xmm0
  00000000000001F4: F2 0F 11 0B        movsd       mmword ptr [rbx],xmm1
  00000000000001F8: 4C 39 6B F8        cmp         qword ptr [rbx-8],r13
  00000000000001FC: 75 05              jne         0000000000000203
  00000000000001FE: 44 39 2B           cmp         dword ptr [rbx],r13d
  0000000000000201: 75 06              jne         0000000000000209
  0000000000000203: 41 BF 01 00 00 00  mov         r15d,1
  0000000000000209: 48 FF C7           inc         rdi
  000000000000020C: 48 83 C3 18        add         rbx,18h
  0000000000000210: 48 3B FE           cmp         rdi,rsi
  0000000000000213: 0F 8C 79 FF FF FF  jl          0000000000000192
  0000000000000219: 4C 8B AD F8 01 00  mov         r13,qword ptr [rbp+1F8h]
                    00
  0000000000000220: 45 85 FF           test        r15d,r15d
  0000000000000223: 75 28              jne         000000000000024D
  0000000000000225: 45 85 E4           test        r12d,r12d
  0000000000000228: 75 23              jne         000000000000024D
  000000000000022A: 44 39 64 24 54     cmp         dword ptr [rsp+54h],r12d
  000000000000022F: 48 8D 4D 98        lea         rcx,[rbp-68h]
  0000000000000233: 41 BE 00 00 00 00  mov         r14d,0
  0000000000000239: 49 0F 44 CE        cmove       rcx,r14
  000000000000023D: 45 33 C9           xor         r9d,r9d
  0000000000000240: 33 D2              xor         edx,edx
  0000000000000242: 4D 8B C5           mov         r8,r13
  0000000000000245: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiCreateDeviceInfoListExA]
  000000000000024B: EB 41              jmp         000000000000028E
  000000000000024D: 8B 44 24 54        mov         eax,dword ptr [rsp+54h]
  0000000000000251: 41 BE 00 00 00 00  mov         r14d,0
  0000000000000257: 41 B9 04 00 00 00  mov         r9d,4
  000000000000025D: 85 C0              test        eax,eax
  000000000000025F: 4C 89 74 24 30     mov         qword ptr [rsp+30h],r14
  0000000000000264: 48 8D 4D 98        lea         rcx,[rbp-68h]
  0000000000000268: 45 0F 45 CE        cmovne      r9d,r14d
  000000000000026C: 4C 89 6C 24 28     mov         qword ptr [rsp+28h],r13
  0000000000000271: 4C 89 74 24 20     mov         qword ptr [rsp+20h],r14
  0000000000000276: 44 0B 8D 00 02 00  or          r9d,dword ptr [rbp+200h]
                    00
  000000000000027D: 85 C0              test        eax,eax
  000000000000027F: 49 0F 44 CE        cmove       rcx,r14
  0000000000000283: 45 33 C0           xor         r8d,r8d
  0000000000000286: 33 D2              xor         edx,edx
  0000000000000288: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetClassDevsExA]
  000000000000028E: 4C 8B E8           mov         r13,rax
  0000000000000291: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  0000000000000295: 0F 84 66 FE FF FF  je          0000000000000101
  000000000000029B: 48 63 44 24 50     movsxd      rax,dword ptr [rsp+50h]
  00000000000002A0: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  00000000000002A5: 48 8B C8           mov         rcx,rax
  00000000000002A8: 48 3B C6           cmp         rax,rsi
  00000000000002AB: 7D 31              jge         00000000000002DE
  00000000000002AD: 48 8D 04 40        lea         rax,[rax+rax*2]
  00000000000002B1: 48 2B F1           sub         rsi,rcx
  00000000000002B4: 48 8D 1C C7        lea         rbx,[rdi+rax*8]
  00000000000002B8: 83 7B 10 00        cmp         dword ptr [rbx+10h],0
  00000000000002BC: 74 17              je          00000000000002D5
  00000000000002BE: 48 8B 13           mov         rdx,qword ptr [rbx]
  00000000000002C1: 45 33 C9           xor         r9d,r9d
  00000000000002C4: 45 33 C0           xor         r8d,r8d
  00000000000002C7: 49 8B CD           mov         rcx,r13
  00000000000002CA: 4C 89 74 24 20     mov         qword ptr [rsp+20h],r14
  00000000000002CF: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiOpenDeviceInfoA]
  00000000000002D5: 48 83 C3 18        add         rbx,18h
  00000000000002D9: 48 FF CE           dec         rsi
  00000000000002DC: 75 DA              jne         00000000000002B8
  00000000000002DE: 48 8D 95 80 00 00  lea         rdx,[rbp+80h]
                    00
  00000000000002E5: 49 8B CD           mov         rcx,r13
  00000000000002E8: C7 85 80 00 00 00  mov         dword ptr [rbp+80h],128h
                    28 01 00 00
  00000000000002F2: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceInfoListDetailA]
  00000000000002F8: 85 C0              test        eax,eax
  00000000000002FA: 0F 84 06 FE FF FF  je          $final$97
  0000000000000300: 45 85 E4           test        r12d,r12d
  0000000000000303: 4C 8D 44 24 78     lea         r8,[rsp+78h]
  0000000000000308: 49 8B CD           mov         rcx,r13
  000000000000030B: 45 0F 45 FE        cmovne      r15d,r14d
  000000000000030F: 33 D2              xor         edx,edx
  0000000000000311: C7 44 24 78 20 00  mov         dword ptr [rsp+78h],20h
                    00 00
  0000000000000319: 41 8B F6           mov         esi,r14d
  000000000000031C: 44 89 74 24 40     mov         dword ptr [rsp+40h],r14d
  0000000000000321: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInfo]
  0000000000000327: 85 C0              test        eax,eax
  0000000000000329: 0F 84 B8 01 00 00  je          00000000000004E7
  000000000000032F: 8B BD 08 02 00 00  mov         edi,dword ptr [rbp+208h]
  0000000000000335: 49 63 C7           movsxd      rax,r15d
  0000000000000338: 48 89 44 24 70     mov         qword ptr [rsp+70h],rax
  000000000000033D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000340: 48 85 C0           test        rax,rax
  0000000000000343: 0F 84 54 01 00 00  je          000000000000049D
  0000000000000349: 48 63 4C 24 50     movsxd      rcx,dword ptr [rsp+50h]
  000000000000034E: 8B D9              mov         ebx,ecx
  0000000000000350: 3B CF              cmp         ecx,edi
  0000000000000352: 0F 8D 61 01 00 00  jge         00000000000004B9
  0000000000000358: 4C 8B 64 24 48     mov         r12,qword ptr [rsp+48h]
  000000000000035D: 4C 8D 79 01        lea         r15,[rcx+1]
  0000000000000361: 4E 8D 3C 79        lea         r15,[rcx+r15*2]
  0000000000000365: 4F 8D 3C FC        lea         r15,[r12+r15*8]
  0000000000000369: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000370: 45 85 F6           test        r14d,r14d
  0000000000000373: 0F 85 1A 01 00 00  jne         0000000000000493
  0000000000000379: 48 8B 85 98 00 00  mov         rax,qword ptr [rbp+98h]
                    00
  0000000000000380: 8B 4D 8C           mov         ecx,dword ptr [rbp-74h]
  0000000000000383: 48 8D 55 B0        lea         rdx,[rbp-50h]
  0000000000000387: 45 33 C9           xor         r9d,r9d
  000000000000038A: 41 B8 C8 00 00 00  mov         r8d,0C8h
  0000000000000390: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000395: FF 15 00 00 00 00  call        qword ptr [__imp_CM_Get_Device_ID_ExA]
  000000000000039B: 0F B6 4D B0        movzx       ecx,byte ptr [rbp-50h]
  000000000000039F: 85 C0              test        eax,eax
  00000000000003A1: B8 00 00 00 00     mov         eax,0
  00000000000003A6: 0F 45 C8           cmovne      ecx,eax
  00000000000003A9: 88 4D B0           mov         byte ptr [rbp-50h],cl
  00000000000003AC: 41 39 07           cmp         dword ptr [r15],eax
  00000000000003AF: 74 27              je          00000000000003D8
  00000000000003B1: 48 63 C3           movsxd      rax,ebx
  00000000000003B4: 48 8D 0C 40        lea         rcx,[rax+rax*2]
  00000000000003B8: 49 8D 14 CC        lea         rdx,[r12+rcx*8]
  00000000000003BC: 48 8D 4D B0        lea         rcx,[rbp-50h]
  00000000000003C0: E8 00 00 00 00     call        ?WildCardMatch@@YAHPEBDAEBUIdEntry@@@Z
  00000000000003C5: 85 C0              test        eax,eax
  00000000000003C7: 0F 84 A3 00 00 00  je          0000000000000470
  00000000000003CD: 41 BE 01 00 00 00  mov         r14d,1
  00000000000003D3: E9 98 00 00 00     jmp         0000000000000470
  00000000000003D8: 48 8D 54 24 78     lea         rdx,[rsp+78h]
  00000000000003DD: 41 B8 01 00 00 00  mov         r8d,1
  00000000000003E3: 49 8B CD           mov         rcx,r13
  00000000000003E6: E8 00 00 00 00     call        ?GetDevMultiSz@@YAPEAPEADPEAXPEAU_SP_DEVINFO_DATA@@K@Z
  00000000000003EB: 48 8D 54 24 78     lea         rdx,[rsp+78h]
  00000000000003F0: 41 B8 02 00 00 00  mov         r8d,2
  00000000000003F6: 49 8B CD           mov         rcx,r13
  00000000000003F9: 48 8B F8           mov         rdi,rax
  00000000000003FC: E8 00 00 00 00     call        ?GetDevMultiSz@@YAPEAPEADPEAXPEAU_SP_DEVINFO_DATA@@K@Z
  0000000000000401: 48 63 CB           movsxd      rcx,ebx
  0000000000000404: 48 8D 14 49        lea         rdx,[rcx+rcx*2]
  0000000000000408: 48 8B CF           mov         rcx,rdi
  000000000000040B: 48 8B F0           mov         rsi,rax
  000000000000040E: 4D 8D 24 D4        lea         r12,[r12+rdx*8]
  0000000000000412: 49 8B D4           mov         rdx,r12
  0000000000000415: E8 00 00 00 00     call        ?WildCompareHwIds@@YAHPEAPEA_WAEBUIdEntry@@@Z
  000000000000041A: 85 C0              test        eax,eax
  000000000000041C: 75 0F              jne         000000000000042D
  000000000000041E: 49 8B D4           mov         rdx,r12
  0000000000000421: 48 8B CE           mov         rcx,rsi
  0000000000000424: E8 00 00 00 00     call        ?WildCompareHwIds@@YAHPEAPEA_WAEBUIdEntry@@@Z
  0000000000000429: 85 C0              test        eax,eax
  000000000000042B: 74 06              je          0000000000000433
  000000000000042D: 41 BE 01 00 00 00  mov         r14d,1
  0000000000000433: 48 85 FF           test        rdi,rdi
  0000000000000436: 74 17              je          000000000000044F
  0000000000000438: 48 8B 4F F8        mov         rcx,qword ptr [rdi-8]
  000000000000043C: 48 85 C9           test        rcx,rcx
  000000000000043F: 74 05              je          0000000000000446
  0000000000000441: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000446: 48 8D 4F F8        lea         rcx,[rdi-8]
  000000000000044A: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  000000000000044F: 48 85 F6           test        rsi,rsi
  0000000000000452: 74 17              je          000000000000046B
  0000000000000454: 48 8B 4E F8        mov         rcx,qword ptr [rsi-8]
  0000000000000458: 48 85 C9           test        rcx,rcx
  000000000000045B: 74 05              je          0000000000000462
  000000000000045D: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000462: 48 8D 4E F8        lea         rcx,[rsi-8]
  0000000000000466: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  000000000000046B: 4C 8B 64 24 48     mov         r12,qword ptr [rsp+48h]
  0000000000000470: FF C3              inc         ebx
  0000000000000472: 49 83 C7 18        add         r15,18h
  0000000000000476: 3B 9D 08 02 00 00  cmp         ebx,dword ptr [rbp+208h]
  000000000000047C: 0F 8C EE FE FF FF  jl          0000000000000370
  0000000000000482: 8B BD 08 02 00 00  mov         edi,dword ptr [rbp+208h]
  0000000000000488: 8B 74 24 40        mov         esi,dword ptr [rsp+40h]
  000000000000048C: 45 85 F6           test        r14d,r14d
  000000000000048F: 74 28              je          00000000000004B9
  0000000000000491: EB 0A              jmp         000000000000049D
  0000000000000493: 8B BD 08 02 00 00  mov         edi,dword ptr [rbp+208h]
  0000000000000499: 8B 74 24 40        mov         esi,dword ptr [rsp+40h]
  000000000000049D: 4C 8B 8D 20 02 00  mov         r9,qword ptr [rbp+220h]
                    00
  00000000000004A4: 48 8D 54 24 78     lea         rdx,[rsp+78h]
  00000000000004A9: 44 8B C6           mov         r8d,esi
  00000000000004AC: 49 8B CD           mov         rcx,r13
  00000000000004AF: FF 95 18 02 00 00  call        qword ptr [rbp+218h]
  00000000000004B5: 85 C0              test        eax,eax
  00000000000004B7: 75 38              jne         00000000000004F1
  00000000000004B9: FF C6              inc         esi
  00000000000004BB: 4C 8D 44 24 78     lea         r8,[rsp+78h]
  00000000000004C0: 49 8B CD           mov         rcx,r13
  00000000000004C3: 8B D6              mov         edx,esi
  00000000000004C5: 89 74 24 40        mov         dword ptr [rsp+40h],esi
  00000000000004C9: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiEnumDeviceInfo]
  00000000000004CF: 41 BE 00 00 00 00  mov         r14d,0
  00000000000004D5: 85 C0              test        eax,eax
  00000000000004D7: 48 8B 44 24 70     mov         rax,qword ptr [rsp+70h]
  00000000000004DC: 0F 85 5E FE FF FF  jne         0000000000000340
  00000000000004E2: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  00000000000004E7: 44 89 74 24 40     mov         dword ptr [rsp+40h],r14d
  00000000000004EC: E9 15 FC FF FF     jmp         $final$97
  00000000000004F1: 89 44 24 40        mov         dword ptr [rsp+40h],eax
  00000000000004F5: E9 07 FC FF FF     jmp         0000000000000101

?FormatToStream@@YAXPEAU_iobuf@@KZZ (void __cdecl FormatToStream(struct _iobuf *,unsigned long,...)):
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 4C 8B DC           mov         r11,rsp
  0000000000000007: 4D 89 43 18        mov         qword ptr [r11+18h],r8
  000000000000000B: 4D 89 4B 20        mov         qword ptr [r11+20h],r9
  000000000000000F: 53                 push        rbx
  0000000000000010: 56                 push        rsi
  0000000000000011: 57                 push        rdi
  0000000000000012: 48 83 EC 50        sub         rsp,50h
  0000000000000016: 49 8D 43 18        lea         rax,[r11+18h]
  000000000000001A: 33 FF              xor         edi,edi
  000000000000001C: 48 8B F1           mov         rsi,rcx
  000000000000001F: 49 89 43 E0        mov         qword ptr [r11-20h],rax
  0000000000000023: 49 8D 43 E0        lea         rax,[r11-20h]
  0000000000000027: 44 8B C2           mov         r8d,edx
  000000000000002A: 49 89 43 C8        mov         qword ptr [r11-38h],rax
  000000000000002E: 49 8D 43 D8        lea         rax,[r11-28h]
  0000000000000032: 45 33 C9           xor         r9d,r9d
  0000000000000035: 33 D2              xor         edx,edx
  0000000000000037: B9 00 09 00 00     mov         ecx,900h
  000000000000003C: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  0000000000000040: 49 89 43 B8        mov         qword ptr [r11-48h],rax
  0000000000000044: 49 89 7B D8        mov         qword ptr [r11-28h],rdi
  0000000000000048: FF 15 00 00 00 00  call        qword ptr [__imp_FormatMessageA]
  000000000000004E: 48 8B 4C 24 40     mov         rcx,qword ptr [rsp+40h]
  0000000000000053: 8B D8              mov         ebx,eax
  0000000000000055: 48 85 C9           test        rcx,rcx
  0000000000000058: 74 5C              je          00000000000000B6
  000000000000005A: 85 C0              test        eax,eax
  000000000000005C: 74 52              je          00000000000000B0
  000000000000005E: 66 90              xchg        ax,ax
  0000000000000060: 8B D3              mov         edx,ebx
  0000000000000062: 48 03 D1           add         rdx,rcx
  0000000000000065: FF 15 00 00 00 00  call        qword ptr [__imp_CharPrevA]
  000000000000006B: 0F BE 08           movsx       ecx,byte ptr [rax]
  000000000000006E: 83 F9 0D           cmp         ecx,0Dh
  0000000000000071: 74 05              je          0000000000000078
  0000000000000073: 83 F9 0A           cmp         ecx,0Ah
  0000000000000076: 75 0B              jne         0000000000000083
  0000000000000078: 48 8B 4C 24 40     mov         rcx,qword ptr [rsp+40h]
  000000000000007D: FF CB              dec         ebx
  000000000000007F: FF C7              inc         edi
  0000000000000081: EB DD              jmp         0000000000000060
  0000000000000083: 85 FF              test        edi,edi
  0000000000000085: 74 16              je          000000000000009D
  0000000000000087: 48 8B 44 24 40     mov         rax,qword ptr [rsp+40h]
  000000000000008C: 8B CB              mov         ecx,ebx
  000000000000008E: FF C3              inc         ebx
  0000000000000090: C6 04 01 0A        mov         byte ptr [rcx+rax],0Ah
  0000000000000094: 48 8B 44 24 40     mov         rax,qword ptr [rsp+40h]
  0000000000000099: C6 04 03 00        mov         byte ptr [rbx+rax],0
  000000000000009D: 48 8B 4C 24 40     mov         rcx,qword ptr [rsp+40h]
  00000000000000A2: 48 8B D6           mov         rdx,rsi
  00000000000000A5: FF 15 00 00 00 00  call        qword ptr [__imp_fputs]
  00000000000000AB: 48 8B 4C 24 40     mov         rcx,qword ptr [rsp+40h]
  00000000000000B0: FF 15 00 00 00 00  call        qword ptr [__imp_LocalFree]
  00000000000000B6: 48 83 C4 50        add         rsp,50h
  00000000000000BA: 5F                 pop         rdi
  00000000000000BB: 5E                 pop         rsi
  00000000000000BC: 5B                 pop         rbx
  00000000000000BD: C3                 ret

?GetDevMultiSz@@YAPEAPEADPEAXPEAU_SP_DEVINFO_DATA@@K@Z (char * * __cdecl GetDevMultiSz(void *,struct _SP_DEVINFO_DATA *,unsigned long)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 41 56              push        r14
  0000000000000009: 48 83 EC 50        sub         rsp,50h
  000000000000000D: 4C 8B F1           mov         r14,rcx
  0000000000000010: B9 02 20 00 00     mov         ecx,2002h
  0000000000000015: 41 8B F0           mov         esi,r8d
  0000000000000018: 48 8B EA           mov         rbp,rdx
  000000000000001B: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000020: 48 8B D8           mov         rbx,rax
  0000000000000023: 48 85 C0           test        rax,rax
  0000000000000026: 75 0E              jne         0000000000000036
  0000000000000028: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  000000000000002D: 48 83 C4 50        add         rsp,50h
  0000000000000031: 41 5E              pop         r14
  0000000000000033: 5E                 pop         rsi
  0000000000000034: 5D                 pop         rbp
  0000000000000035: C3                 ret
  0000000000000036: 48 8D 84 24 88 00  lea         rax,[rsp+88h]
                    00 00
  000000000000003E: 4C 8D 4C 24 40     lea         r9,[rsp+40h]
  0000000000000043: 44 8B C6           mov         r8d,esi
  0000000000000046: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  000000000000004B: 48 8B D5           mov         rdx,rbp
  000000000000004E: 49 8B CE           mov         rcx,r14
  0000000000000051: C7 44 24 28 00 20  mov         dword ptr [rsp+28h],2000h
                    00 00
  0000000000000059: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005E: 48 89 7C 24 70     mov         qword ptr [rsp+70h],rdi
  0000000000000063: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceRegistryPropertyA]
  0000000000000069: 85 C0              test        eax,eax
  000000000000006B: 75 63              jne         00000000000000D0
  000000000000006D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000070: FF 15 00 00 00 00  call        qword ptr [__imp_GetLastError]
  0000000000000076: 83 F8 7A           cmp         eax,7Ah
  0000000000000079: 75 74              jne         $failed$23
  000000000000007B: 83 7C 24 40 07     cmp         dword ptr [rsp+40h],7
  0000000000000080: 75 6D              jne         $failed$23
  0000000000000082: 8B BC 24 88 00 00  mov         edi,dword ptr [rsp+88h]
                    00
  0000000000000089: 48 8B CB           mov         rcx,rbx
  000000000000008C: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000091: 48 8D 4F 02        lea         rcx,[rdi+2]
  0000000000000095: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000009A: 48 8B D8           mov         rbx,rax
  000000000000009D: 48 85 C0           test        rax,rax
  00000000000000A0: 74 55              je          00000000000000F7
  00000000000000A2: 48 8D 84 24 88 00  lea         rax,[rsp+88h]
                    00 00
  00000000000000AA: 4C 8D 4C 24 40     lea         r9,[rsp+40h]
  00000000000000AF: 44 8B C6           mov         r8d,esi
  00000000000000B2: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  00000000000000B7: 48 8B D5           mov         rdx,rbp
  00000000000000BA: 49 8B CE           mov         rcx,r14
  00000000000000BD: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  00000000000000C1: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  00000000000000C6: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceRegistryPropertyA]
  00000000000000CC: 85 C0              test        eax,eax
  00000000000000CE: 74 A0              je          0000000000000070
  00000000000000D0: 8B 8C 24 88 00 00  mov         ecx,dword ptr [rsp+88h]
                    00
  00000000000000D7: 8D 41 01           lea         eax,[rcx+1]
  00000000000000DA: C6 04 19 00        mov         byte ptr [rcx+rbx],0
  00000000000000DE: 48 8B CB           mov         rcx,rbx
  00000000000000E1: C6 04 18 00        mov         byte ptr [rax+rbx],0
  00000000000000E5: E8 00 00 00 00     call        ?GetMultiSzIndexArray@@YAPEAPEADPEAD@Z
  00000000000000EA: 48 85 C0           test        rax,rax
  00000000000000ED: 75 0A              jne         00000000000000F9
$failed$23:
  00000000000000EF: 48 8B CB           mov         rcx,rbx
  00000000000000F2: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000000F7: 33 C0              xor         eax,eax
  00000000000000F9: 48 8B 7C 24 70     mov         rdi,qword ptr [rsp+70h]
  00000000000000FE: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  0000000000000103: 48 83 C4 50        add         rsp,50h
  0000000000000107: 41 5E              pop         r14
  0000000000000109: 5E                 pop         rsi
  000000000000010A: 5D                 pop         rbp
  000000000000010B: C3                 ret

?GetDeviceDescription@@YAPEADPEAXPEAU_SP_DEVINFO_DATA@@@Z (char * __cdecl GetDeviceDescription(void *,struct _SP_DEVINFO_DATA *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 41 B8 0C 00 00 00  mov         r8d,0Ch
  0000000000000010: 48 8B DA           mov         rbx,rdx
  0000000000000013: 48 8B F9           mov         rdi,rcx
  0000000000000016: E8 00 00 00 00     call        ?GetDeviceStringProperty@@YAPEADPEAXPEAU_SP_DEVINFO_DATA@@K@Z
  000000000000001B: 48 85 C0           test        rax,rax
  000000000000001E: 75 0E              jne         000000000000002E
  0000000000000020: 45 33 C0           xor         r8d,r8d
  0000000000000023: 48 8B D3           mov         rdx,rbx
  0000000000000026: 48 8B CF           mov         rcx,rdi
  0000000000000029: E8 00 00 00 00     call        ?GetDeviceStringProperty@@YAPEADPEAXPEAU_SP_DEVINFO_DATA@@K@Z
  000000000000002E: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000033: 48 83 C4 20        add         rsp,20h
  0000000000000037: 5F                 pop         rdi
  0000000000000038: C3                 ret

?GetDeviceStringProperty@@YAPEADPEAXPEAU_SP_DEVINFO_DATA@@K@Z (char * __cdecl GetDeviceStringProperty(void *,struct _SP_DEVINFO_DATA *,unsigned long)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 41 56              push        r14
  0000000000000009: 48 83 EC 50        sub         rsp,50h
  000000000000000D: 4C 8B F1           mov         r14,rcx
  0000000000000010: B9 01 04 00 00     mov         ecx,401h
  0000000000000015: 41 8B F0           mov         esi,r8d
  0000000000000018: 48 8B EA           mov         rbp,rdx
  000000000000001B: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000020: 48 8B D8           mov         rbx,rax
  0000000000000023: 48 85 C0           test        rax,rax
  0000000000000026: 75 0E              jne         0000000000000036
  0000000000000028: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  000000000000002D: 48 83 C4 50        add         rsp,50h
  0000000000000031: 41 5E              pop         r14
  0000000000000033: 5E                 pop         rsi
  0000000000000034: 5D                 pop         rbp
  0000000000000035: C3                 ret
  0000000000000036: 48 8D 84 24 88 00  lea         rax,[rsp+88h]
                    00 00
  000000000000003E: 4C 8D 4C 24 40     lea         r9,[rsp+40h]
  0000000000000043: 44 8B C6           mov         r8d,esi
  0000000000000046: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  000000000000004B: 48 8B D5           mov         rdx,rbp
  000000000000004E: 49 8B CE           mov         rcx,r14
  0000000000000051: C7 44 24 28 00 04  mov         dword ptr [rsp+28h],400h
                    00 00
  0000000000000059: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000005E: 48 89 7C 24 70     mov         qword ptr [rsp+70h],rdi
  0000000000000063: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceRegistryPropertyA]
  0000000000000069: 85 C0              test        eax,eax
  000000000000006B: 75 63              jne         00000000000000D0
  000000000000006D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000070: FF 15 00 00 00 00  call        qword ptr [__imp_GetLastError]
  0000000000000076: 83 F8 7A           cmp         eax,7Ah
  0000000000000079: 75 76              jne         $failed$22
  000000000000007B: 83 7C 24 40 01     cmp         dword ptr [rsp+40h],1
  0000000000000080: 75 6F              jne         $failed$22
  0000000000000082: 8B BC 24 88 00 00  mov         edi,dword ptr [rsp+88h]
                    00
  0000000000000089: 48 8B CB           mov         rcx,rbx
  000000000000008C: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000091: 48 8D 4F 01        lea         rcx,[rdi+1]
  0000000000000095: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000009A: 48 8B D8           mov         rbx,rax
  000000000000009D: 48 85 C0           test        rax,rax
  00000000000000A0: 74 57              je          00000000000000F9
  00000000000000A2: 48 8D 84 24 88 00  lea         rax,[rsp+88h]
                    00 00
  00000000000000AA: 4C 8D 4C 24 40     lea         r9,[rsp+40h]
  00000000000000AF: 44 8B C6           mov         r8d,esi
  00000000000000B2: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  00000000000000B7: 48 8B D5           mov         rdx,rbp
  00000000000000BA: 49 8B CE           mov         rcx,r14
  00000000000000BD: 89 7C 24 28        mov         dword ptr [rsp+28h],edi
  00000000000000C1: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  00000000000000C6: FF 15 00 00 00 00  call        qword ptr [__imp_SetupDiGetDeviceRegistryPropertyA]
  00000000000000CC: 85 C0              test        eax,eax
  00000000000000CE: 74 A0              je          0000000000000070
  00000000000000D0: 8B 84 24 88 00 00  mov         eax,dword ptr [rsp+88h]
                    00
  00000000000000D7: C6 04 18 00        mov         byte ptr [rax+rbx],0
  00000000000000DB: 48 8B C3           mov         rax,rbx
  00000000000000DE: 48 8B 7C 24 70     mov         rdi,qword ptr [rsp+70h]
  00000000000000E3: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  00000000000000E8: 48 83 C4 50        add         rsp,50h
  00000000000000EC: 41 5E              pop         r14
  00000000000000EE: 5E                 pop         rsi
  00000000000000EF: 5D                 pop         rbp
  00000000000000F0: C3                 ret
$failed$22:
  00000000000000F1: 48 8B CB           mov         rcx,rbx
  00000000000000F4: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000000F9: 33 C0              xor         eax,eax
  00000000000000FB: EB E1              jmp         00000000000000DE

?GetIdType@@YA?AUIdEntry@@PEBD@Z (struct IdEntry __cdecl GetIdType(char const *)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 33 C0              xor         eax,eax
  0000000000000008: 80 3A 40           cmp         byte ptr [rdx],40h
  000000000000000B: 48 8B D9           mov         rbx,rcx
  000000000000000E: 89 41 10           mov         dword ptr [rcx+10h],eax
  0000000000000011: 48 89 41 08        mov         qword ptr [rcx+8],rax
  0000000000000015: 48 89 11           mov         qword ptr [rcx],rdx
  0000000000000018: 75 13              jne         000000000000002D
  000000000000001A: C7 41 10 01 00 00  mov         dword ptr [rcx+10h],1
                    00
  0000000000000021: 48 8B CA           mov         rcx,rdx
  0000000000000024: FF 15 00 00 00 00  call        qword ptr [__imp_CharNextA]
  000000000000002A: 48 89 03           mov         qword ptr [rbx],rax
  000000000000002D: 48 8B 0B           mov         rcx,qword ptr [rbx]
  0000000000000030: 80 39 27           cmp         byte ptr [rcx],27h
  0000000000000033: 75 12              jne         0000000000000047
  0000000000000035: FF 15 00 00 00 00  call        qword ptr [__imp_CharNextA]
  000000000000003B: 48 89 03           mov         qword ptr [rbx],rax
  000000000000003E: 48 8B C3           mov         rax,rbx
  0000000000000041: 48 83 C4 20        add         rsp,20h
  0000000000000045: 5B                 pop         rbx
  0000000000000046: C3                 ret
  0000000000000047: BA 2A 00 00 00     mov         edx,2Ah
  000000000000004C: FF 15 00 00 00 00  call        qword ptr [__imp__mbschr]
  0000000000000052: 48 89 43 08        mov         qword ptr [rbx+8],rax
  0000000000000056: 48 8B C3           mov         rax,rbx
  0000000000000059: 48 83 C4 20        add         rsp,20h
  000000000000005D: 5B                 pop         rbx
  000000000000005E: C3                 ret

?GetMultiSzIndexArray@@YAPEAPEADPEAD@Z (char * * __cdecl GetMultiSzIndexArray(char *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 48 89 7C 24 18     mov         qword ptr [rsp+18h],rdi
  000000000000000F: 41 56              push        r14
  0000000000000011: 48 83 EC 20        sub         rsp,20h
  0000000000000015: 33 FF              xor         edi,edi
  0000000000000017: 48 8B D9           mov         rbx,rcx
  000000000000001A: 48 8B F1           mov         rsi,rcx
  000000000000001D: 40 38 39           cmp         byte ptr [rcx],dil
  0000000000000020: 74 17              je          0000000000000039
  0000000000000022: 48 8B CE           mov         rcx,rsi
  0000000000000025: FF 15 00 00 00 00  call        qword ptr [__imp_lstrlenA]
  000000000000002B: FF C7              inc         edi
  000000000000002D: FF C0              inc         eax
  000000000000002F: 48 98              cdqe
  0000000000000031: 48 03 F0           add         rsi,rax
  0000000000000034: 80 3E 00           cmp         byte ptr [rsi],0
  0000000000000037: 75 E9              jne         0000000000000022
  0000000000000039: 8D 47 02           lea         eax,[rdi+2]
  000000000000003C: 48 63 C8           movsxd      rcx,eax
  000000000000003F: B8 08 00 00 00     mov         eax,8
  0000000000000044: 48 F7 E1           mul         rax,rcx
  0000000000000047: 48 C7 C1 FF FF FF  mov         rcx,0FFFFFFFFFFFFFFFFh
                    FF
  000000000000004E: 48 0F 40 C1        cmovo       rax,rcx
  0000000000000052: 48 8B C8           mov         rcx,rax
  0000000000000055: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000005A: 4C 8B F0           mov         r14,rax
  000000000000005D: 48 85 C0           test        rax,rax
  0000000000000060: 74 40              je          00000000000000A2
  0000000000000062: 48 89 18           mov         qword ptr [rax],rbx
  0000000000000065: 85 FF              test        edi,edi
  0000000000000067: 74 29              je          0000000000000092
  0000000000000069: 33 FF              xor         edi,edi
  000000000000006B: 40 38 3B           cmp         byte ptr [rbx],dil
  000000000000006E: 74 22              je          0000000000000092
  0000000000000070: 48 8D 70 08        lea         rsi,[rax+8]
  0000000000000074: 48 8B CB           mov         rcx,rbx
  0000000000000077: 48 89 1E           mov         qword ptr [rsi],rbx
  000000000000007A: FF 15 00 00 00 00  call        qword ptr [__imp_lstrlenA]
  0000000000000080: FF C7              inc         edi
  0000000000000082: 48 8D 76 08        lea         rsi,[rsi+8]
  0000000000000086: FF C0              inc         eax
  0000000000000088: 48 98              cdqe
  000000000000008A: 48 03 D8           add         rbx,rax
  000000000000008D: 80 3B 00           cmp         byte ptr [rbx],0
  0000000000000090: 75 E2              jne         0000000000000074
  0000000000000092: 48 63 C7           movsxd      rax,edi
  0000000000000095: 49 C7 44 C6 08 00  mov         qword ptr [r14+rax*8+8],0
                    00 00 00
  000000000000009E: 49 8D 46 08        lea         rax,[r14+8]
  00000000000000A2: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000A7: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  00000000000000AC: 48 8B 7C 24 40     mov         rdi,qword ptr [rsp+40h]
  00000000000000B1: 48 83 C4 20        add         rsp,20h
  00000000000000B5: 41 5E              pop         r14
  00000000000000B7: C3                 ret

?GetRegMultiSz@@YAPEAPEADPEAUHKEY__@@PEBD@Z (char * * __cdecl GetRegMultiSz(struct HKEY__ *,char const *)):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 56                 push        rsi
  0000000000000003: 57                 push        rdi
  0000000000000004: 48 83 EC 30        sub         rsp,30h
  0000000000000008: 48 8B E9           mov         rbp,rcx
  000000000000000B: B9 02 20 00 00     mov         ecx,2002h
  0000000000000010: 48 8B F2           mov         rsi,rdx
  0000000000000013: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000018: 48 8B F8           mov         rdi,rax
  000000000000001B: 48 85 C0           test        rax,rax
  000000000000001E: 75 08              jne         0000000000000028
  0000000000000020: 48 83 C4 30        add         rsp,30h
  0000000000000024: 5F                 pop         rdi
  0000000000000025: 5E                 pop         rsi
  0000000000000026: 5D                 pop         rbp
  0000000000000027: C3                 ret
  0000000000000028: 48 8D 44 24 60     lea         rax,[rsp+60h]
  000000000000002D: 4C 8D 4C 24 68     lea         r9,[rsp+68h]
  0000000000000032: 45 33 C0           xor         r8d,r8d
  0000000000000035: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  000000000000003A: 48 8B D6           mov         rdx,rsi
  000000000000003D: 48 8B CD           mov         rcx,rbp
  0000000000000040: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  0000000000000045: C7 44 24 60 00 20  mov         dword ptr [rsp+60h],2000h
                    00 00
  000000000000004D: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000052: FF 15 00 00 00 00  call        qword ptr [__imp_RegQueryValueExA]
  0000000000000058: 85 C0              test        eax,eax
  000000000000005A: 74 5C              je          00000000000000B8
  000000000000005C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000060: FF 15 00 00 00 00  call        qword ptr [__imp_GetLastError]
  0000000000000066: 3D EA 00 00 00     cmp         eax,0EAh
  000000000000006B: 75 67              jne         $failed$23
  000000000000006D: 83 7C 24 68 07     cmp         dword ptr [rsp+68h],7
  0000000000000072: 75 60              jne         $failed$23
  0000000000000074: 8B 5C 24 60        mov         ebx,dword ptr [rsp+60h]
  0000000000000078: 48 8B CF           mov         rcx,rdi
  000000000000007B: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  0000000000000080: 48 8D 4B 02        lea         rcx,[rbx+2]
  0000000000000084: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000089: 48 8B F8           mov         rdi,rax
  000000000000008C: 48 85 C0           test        rax,rax
  000000000000008F: 74 4B              je          00000000000000DC
  0000000000000091: 48 8D 44 24 60     lea         rax,[rsp+60h]
  0000000000000096: 4C 8D 4C 24 68     lea         r9,[rsp+68h]
  000000000000009B: 45 33 C0           xor         r8d,r8d
  000000000000009E: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000A3: 48 8B D6           mov         rdx,rsi
  00000000000000A6: 48 8B CD           mov         rcx,rbp
  00000000000000A9: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  00000000000000AE: FF 15 00 00 00 00  call        qword ptr [__imp_RegQueryValueExA]
  00000000000000B4: 85 C0              test        eax,eax
  00000000000000B6: 75 A8              jne         0000000000000060
  00000000000000B8: 8B 4C 24 60        mov         ecx,dword ptr [rsp+60h]
  00000000000000BC: 8D 41 01           lea         eax,[rcx+1]
  00000000000000BF: C6 04 39 00        mov         byte ptr [rcx+rdi],0
  00000000000000C3: 48 8B CF           mov         rcx,rdi
  00000000000000C6: C6 04 38 00        mov         byte ptr [rax+rdi],0
  00000000000000CA: E8 00 00 00 00     call        ?GetMultiSzIndexArray@@YAPEAPEADPEAD@Z
  00000000000000CF: 48 85 C0           test        rax,rax
  00000000000000D2: 75 0A              jne         00000000000000DE
$failed$23:
  00000000000000D4: 48 8B CF           mov         rcx,rdi
  00000000000000D7: E8 00 00 00 00     call        ??3@YAXPEAX@Z
  00000000000000DC: 33 C0              xor         eax,eax
  00000000000000DE: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  00000000000000E3: 48 83 C4 30        add         rsp,30h
  00000000000000E7: 5F                 pop         rdi
  00000000000000E8: 5E                 pop         rsi
  00000000000000E9: 5D                 pop         rbp
  00000000000000EA: C3                 ret

?Reboot@@YAHXZ (int __cdecl Reboot(void)):
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: FF 15 00 00 00 00  call        qword ptr [__imp_GetCurrentProcess]
  000000000000000A: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  000000000000000F: BA 20 00 00 00     mov         edx,20h
  0000000000000014: 48 8B C8           mov         rcx,rax
  0000000000000017: FF 15 00 00 00 00  call        qword ptr [__imp_OpenProcessToken]
  000000000000001D: 85 C0              test        eax,eax
  000000000000001F: 74 5E              je          $final$10
  0000000000000021: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  0000000000000026: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BE@POPFGFGJ@SeShutdownPrivilege?$AA@]
                    00
  000000000000002D: 33 C9              xor         ecx,ecx
  000000000000002F: FF 15 00 00 00 00  call        qword ptr [__imp_LookupPrivilegeValueA]
  0000000000000035: 48 8B 4C 24 50     mov         rcx,qword ptr [rsp+50h]
  000000000000003A: 85 C0              test        eax,eax
  000000000000003C: 74 3B              je          0000000000000079
  000000000000003E: 48 8B 44 24 58     mov         rax,qword ptr [rsp+58h]
  0000000000000043: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  0000000000000048: 45 33 C9           xor         r9d,r9d
  000000000000004B: 48 89 44 24 34     mov         qword ptr [rsp+34h],rax
  0000000000000050: 33 C0              xor         eax,eax
  0000000000000052: 33 D2              xor         edx,edx
  0000000000000054: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  0000000000000059: C7 44 24 30 01 00  mov         dword ptr [rsp+30h],1
                    00 00
  0000000000000061: C7 44 24 3C 02 00  mov         dword ptr [rsp+3Ch],2
                    00 00
  0000000000000069: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  000000000000006E: FF 15 00 00 00 00  call        qword ptr [__imp_AdjustTokenPrivileges]
  0000000000000074: 48 8B 4C 24 50     mov         rcx,qword ptr [rsp+50h]
  0000000000000079: FF 15 00 00 00 00  call        qword ptr [__imp_CloseHandle]
$final$10:
  000000000000007F: 45 33 C9           xor         r9d,r9d
  0000000000000082: 45 33 C0           xor         r8d,r8d
  0000000000000085: 33 D2              xor         edx,edx
  0000000000000087: 33 C9              xor         ecx,ecx
  0000000000000089: C7 44 24 28 02 00  mov         dword ptr [rsp+28h],80010002h
                    01 80
  0000000000000091: C7 44 24 20 01 00  mov         dword ptr [rsp+20h],1
                    00 00
  0000000000000099: FF 15 00 00 00 00  call        qword ptr [__imp_InitiateSystemShutdownExA]
  000000000000009F: 48 83 C4 48        add         rsp,48h
  00000000000000A3: C3                 ret

?SplitCommandLine@@YA_NAEAHAEAPEAPEAD01@Z (bool __cdecl SplitCommandLine(int &,char * * &,int &,char * * &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 83 EC 20        sub         rsp,20h
  0000000000000018: 33 DB              xor         ebx,ebx
  000000000000001A: 4D 8B F9           mov         r15,r9
  000000000000001D: 49 8B E8           mov         rbp,r8
  0000000000000020: 4C 8B F2           mov         r14,rdx
  0000000000000023: 48 8B F1           mov         rsi,rcx
  0000000000000026: 39 19              cmp         dword ptr [rcx],ebx
  0000000000000028: 7E 28              jle         0000000000000052
  000000000000002A: 33 FF              xor         edi,edi
  000000000000002C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000030: 49 8B 06           mov         rax,qword ptr [r14]
  0000000000000033: 48 8D 15 00 00 00  lea         rdx,[??_C@_02EDKKAOBF@?3?$DN?$AA@]
                    00
  000000000000003A: 48 8B 0C 07        mov         rcx,qword ptr [rdi+rax]
  000000000000003E: FF 15 00 00 00 00  call        qword ptr [__imp__mbsicmp]
  0000000000000044: 85 C0              test        eax,eax
  0000000000000046: 74 39              je          0000000000000081
  0000000000000048: FF C3              inc         ebx
  000000000000004A: 48 83 C7 08        add         rdi,8
  000000000000004E: 3B 1E              cmp         ebx,dword ptr [rsi]
  0000000000000050: 7C DE              jl          0000000000000030
  0000000000000052: C7 45 00 00 00 00  mov         dword ptr [rbp],0
                    00
  0000000000000059: 49 8B 06           mov         rax,qword ptr [r14]
  000000000000005C: 48 63 0E           movsxd      rcx,dword ptr [rsi]
  000000000000005F: 48 8D 0C C8        lea         rcx,[rax+rcx*8]
  0000000000000063: 32 C0              xor         al,al
  0000000000000065: 49 89 0F           mov         qword ptr [r15],rcx
  0000000000000068: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006D: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  0000000000000072: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000077: 48 83 C4 20        add         rsp,20h
  000000000000007B: 41 5F              pop         r15
  000000000000007D: 41 5E              pop         r14
  000000000000007F: 5F                 pop         rdi
  0000000000000080: C3                 ret
  0000000000000081: 8B 06              mov         eax,dword ptr [rsi]
  0000000000000083: 2B C3              sub         eax,ebx
  0000000000000085: FF C8              dec         eax
  0000000000000087: 89 45 00           mov         dword ptr [rbp],eax
  000000000000008A: 8D 43 01           lea         eax,[rbx+1]
  000000000000008D: 48 63 C8           movsxd      rcx,eax
  0000000000000090: 49 8B 06           mov         rax,qword ptr [r14]
  0000000000000093: 48 8D 0C C8        lea         rcx,[rax+rcx*8]
  0000000000000097: B0 01              mov         al,1
  0000000000000099: 49 89 0F           mov         qword ptr [r15],rcx
  000000000000009C: 89 1E              mov         dword ptr [rsi],ebx
  000000000000009E: EB C8              jmp         0000000000000068

?StringCchCopyA@@YAJPEAD_KPEBD@Z (long __cdecl StringCchCopyA(char *,unsigned __int64,char const *)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 45 33 DB           xor         r11d,r11d
  0000000000000008: 48 8D 42 FF        lea         rax,[rdx-1]
  000000000000000C: 41 B9 FE FF FF 7F  mov         r9d,7FFFFFFEh
  0000000000000012: 49 3B C1           cmp         rax,r9
  0000000000000015: 45 8B D3           mov         r10d,r11d
  0000000000000018: BB 57 00 07 80     mov         ebx,80070057h
  000000000000001D: 44 0F 47 D3        cmova       r10d,ebx
  0000000000000021: 45 85 D2           test        r10d,r10d
  0000000000000024: 78 55              js          000000000000007B
  0000000000000026: 48 85 D2           test        rdx,rdx
  0000000000000029: 74 3B              je          0000000000000066
  000000000000002B: 4C 2B CA           sub         r9,rdx
  000000000000002E: 4C 2B C1           sub         r8,rcx
  0000000000000031: 49 8D 04 11        lea         rax,[r9+rdx]
  0000000000000035: 48 85 C0           test        rax,rax
  0000000000000038: 74 27              je          0000000000000061
  000000000000003A: 41 0F B6 04 08     movzx       eax,byte ptr [r8+rcx]
  000000000000003F: 84 C0              test        al,al
  0000000000000041: 74 1E              je          0000000000000061
  0000000000000043: 88 01              mov         byte ptr [rcx],al
  0000000000000045: 48 FF C1           inc         rcx
  0000000000000048: 48 FF CA           dec         rdx
  000000000000004B: 75 E4              jne         0000000000000031
  000000000000004D: 48 FF C9           dec         rcx
  0000000000000050: 41 BB 7A 00 07 80  mov         r11d,8007007Ah
  0000000000000056: 88 11              mov         byte ptr [rcx],dl
  0000000000000058: 41 8B C3           mov         eax,r11d
  000000000000005B: 48 8B 5C 24 08     mov         rbx,qword ptr [rsp+8]
  0000000000000060: C3                 ret
  0000000000000061: 48 85 D2           test        rdx,rdx
  0000000000000064: 75 09              jne         000000000000006F
  0000000000000066: 48 FF C9           dec         rcx
  0000000000000069: 41 BB 7A 00 07 80  mov         r11d,8007007Ah
  000000000000006F: C6 01 00           mov         byte ptr [rcx],0
  0000000000000072: 41 8B C3           mov         eax,r11d
  0000000000000075: 48 8B 5C 24 08     mov         rbx,qword ptr [rsp+8]
  000000000000007A: C3                 ret
  000000000000007B: 41 8B C2           mov         eax,r10d
  000000000000007E: 48 85 D2           test        rdx,rdx
  0000000000000081: 74 03              je          0000000000000086
  0000000000000083: 44 88 19           mov         byte ptr [rcx],r11b
  0000000000000086: 48 8B 5C 24 08     mov         rbx,qword ptr [rsp+8]
  000000000000008B: C3                 ret

?StringCopyWorkerA@@YAJPEAD_KPEA_KPEBD1@Z (long __cdecl StringCopyWorkerA(char *,unsigned __int64,unsigned __int64 *,char const *,unsigned __int64)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 45 33 DB           xor         r11d,r11d
  0000000000000008: 49 8B D8           mov         rbx,r8
  000000000000000B: 45 8B D3           mov         r10d,r11d
  000000000000000E: 48 85 D2           test        rdx,rdx
  0000000000000011: 74 34              je          0000000000000047
  0000000000000013: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  0000000000000018: 4C 2B C9           sub         r9,rcx
  000000000000001B: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  0000000000000020: 48 85 C0           test        rax,rax
  0000000000000023: 74 1D              je          0000000000000042
  0000000000000025: 45 0F B6 04 09     movzx       r8d,byte ptr [r9+rcx]
  000000000000002A: 45 84 C0           test        r8b,r8b
  000000000000002D: 74 13              je          0000000000000042
  000000000000002F: 44 88 01           mov         byte ptr [rcx],r8b
  0000000000000032: 48 FF C1           inc         rcx
  0000000000000035: 48 FF C8           dec         rax
  0000000000000038: 49 FF C2           inc         r10
  000000000000003B: 48 FF CA           dec         rdx
  000000000000003E: 75 E0              jne         0000000000000020
  0000000000000040: EB 05              jmp         0000000000000047
  0000000000000042: 48 85 D2           test        rdx,rdx
  0000000000000045: 75 0C              jne         0000000000000053
  0000000000000047: 48 FF C9           dec         rcx
  000000000000004A: 41 BB 7A 00 07 80  mov         r11d,8007007Ah
  0000000000000050: 49 FF CA           dec         r10
  0000000000000053: C6 01 00           mov         byte ptr [rcx],0
  0000000000000056: 41 8B C3           mov         eax,r11d
  0000000000000059: 48 85 DB           test        rbx,rbx
  000000000000005C: 74 03              je          0000000000000061
  000000000000005E: 4C 89 13           mov         qword ptr [rbx],r10
  0000000000000061: 48 8B 5C 24 08     mov         rbx,qword ptr [rsp+8]
  0000000000000066: C3                 ret

?StringValidateDestA@@YAJPEBD_K_K@Z (long __cdecl StringValidateDestA(char const *,unsigned __int64,unsigned __int64)):
  0000000000000000: 48 85 D2           test        rdx,rdx
  0000000000000003: 74 08              je          000000000000000D
  0000000000000005: 49 3B D0           cmp         rdx,r8
  0000000000000008: 77 03              ja          000000000000000D
  000000000000000A: 33 C0              xor         eax,eax
  000000000000000C: C3                 ret
  000000000000000D: B8 57 00 07 80     mov         eax,80070057h
  0000000000000012: C3                 ret

?WildCardMatch@@YAHPEBDAEBUIdEntry@@@Z (int __cdecl WildCardMatch(char const *,struct IdEntry const &)):
  0000000000000000: 48 89 6C 24 20     mov         qword ptr [rsp+20h],rbp
  0000000000000005: 56                 push        rsi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 4C 8B 42 08        mov         r8,qword ptr [rdx+8]
  000000000000000E: 48 8B F2           mov         rsi,rdx
  0000000000000011: 48 8B 12           mov         rdx,qword ptr [rdx]
  0000000000000014: 48 8B E9           mov         rbp,rcx
  0000000000000017: 4D 85 C0           test        r8,r8
  000000000000001A: 75 1A              jne         0000000000000036
  000000000000001C: FF 15 00 00 00 00  call        qword ptr [__imp__mbsicmp]
  0000000000000022: 33 C9              xor         ecx,ecx
  0000000000000024: 85 C0              test        eax,eax
  0000000000000026: 0F 94 C1           sete        cl
  0000000000000029: 8B C1              mov         eax,ecx
  000000000000002B: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  0000000000000030: 48 83 C4 20        add         rsp,20h
  0000000000000034: 5E                 pop         rsi
  0000000000000035: C3                 ret
  0000000000000036: 4C 2B C2           sub         r8,rdx
  0000000000000039: FF 15 00 00 00 00  call        qword ptr [__imp__mbsnbicmp]
  000000000000003F: 85 C0              test        eax,eax
  0000000000000041: 74 0D              je          0000000000000050
  0000000000000043: 33 C0              xor         eax,eax
  0000000000000045: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000004A: 48 83 C4 20        add         rsp,20h
  000000000000004E: 5E                 pop         rsi
  000000000000004F: C3                 ret
  0000000000000050: 48 89 5C 24 30     mov         qword ptr [rsp+30h],rbx
  0000000000000055: 48 89 7C 24 38     mov         qword ptr [rsp+38h],rdi
  000000000000005A: 48 8B 7E 08        mov         rdi,qword ptr [rsi+8]
  000000000000005E: 0F B6 07           movzx       eax,byte ptr [rdi]
  0000000000000061: 48 8B DF           mov         rbx,rdi
  0000000000000064: 4C 89 74 24 40     mov         qword ptr [rsp+40h],r14
  0000000000000069: 48 2B 1E           sub         rbx,qword ptr [rsi]
  000000000000006C: 48 03 DD           add         rbx,rbp
  000000000000006F: 84 C0              test        al,al
  0000000000000071: 0F 84 CA 00 00 00  je          0000000000000141
  0000000000000077: 48 8B CF           mov         rcx,rdi
  000000000000007A: 3C 2A              cmp         al,2Ah
  000000000000007C: 75 0E              jne         000000000000008C
  000000000000007E: FF 15 00 00 00 00  call        qword ptr [__imp_CharNextA]
  0000000000000084: 48 8B F8           mov         rdi,rax
  0000000000000087: E9 AA 00 00 00     jmp         0000000000000136
  000000000000008C: BA 2A 00 00 00     mov         edx,2Ah
  0000000000000091: FF 15 00 00 00 00  call        qword ptr [__imp__mbschr]
  0000000000000097: 48 8B F0           mov         rsi,rax
  000000000000009A: 48 85 C0           test        rax,rax
  000000000000009D: 0F 84 C1 00 00 00  je          0000000000000164
  00000000000000A3: 0F BE 0F           movsx       ecx,byte ptr [rdi]
  00000000000000A6: 48 2B F7           sub         rsi,rdi
  00000000000000A9: FF 15 00 00 00 00  call        qword ptr [__imp__ismbcalpha]
  00000000000000AF: 85 C0              test        eax,eax
  00000000000000B1: 74 48              je          00000000000000FB
  00000000000000B3: 0F BE 0F           movsx       ecx,byte ptr [rdi]
  00000000000000B6: FF 15 00 00 00 00  call        qword ptr [__imp__mbctoupper]
  00000000000000BC: 0F BE 0F           movsx       ecx,byte ptr [rdi]
  00000000000000BF: 8B E8              mov         ebp,eax
  00000000000000C1: FF 15 00 00 00 00  call        qword ptr [__imp__mbctolower]
  00000000000000C7: 0F B6 0B           movzx       ecx,byte ptr [rbx]
  00000000000000CA: 44 8B F0           mov         r14d,eax
  00000000000000CD: 84 C9              test        cl,cl
  00000000000000CF: 0F 84 AC 00 00 00  je          0000000000000181
  00000000000000D5: 40 3A CD           cmp         cl,bpl
  00000000000000D8: 74 1C              je          00000000000000F6
  00000000000000DA: 41 3A CE           cmp         cl,r14b
  00000000000000DD: 74 17              je          00000000000000F6
  00000000000000DF: 48 8B CB           mov         rcx,rbx
  00000000000000E2: FF 15 00 00 00 00  call        qword ptr [__imp_CharNextA]
  00000000000000E8: 48 8B D8           mov         rbx,rax
  00000000000000EB: 0F B6 08           movzx       ecx,byte ptr [rax]
  00000000000000EE: 84 C9              test        cl,cl
  00000000000000F0: 75 E3              jne         00000000000000D5
  00000000000000F2: 33 C0              xor         eax,eax
  00000000000000F4: EB 54              jmp         000000000000014A
  00000000000000F6: 80 3B 00           cmp         byte ptr [rbx],0
  00000000000000F9: EB 12              jmp         000000000000010D
  00000000000000FB: 0F BE 17           movsx       edx,byte ptr [rdi]
  00000000000000FE: 48 8B CB           mov         rcx,rbx
  0000000000000101: FF 15 00 00 00 00  call        qword ptr [__imp__mbschr]
  0000000000000107: 48 8B D8           mov         rbx,rax
  000000000000010A: 48 85 C0           test        rax,rax
  000000000000010D: 74 72              je          0000000000000181
  000000000000010F: 4C 8B C6           mov         r8,rsi
  0000000000000112: 48 8B D7           mov         rdx,rdi
  0000000000000115: 48 8B CB           mov         rcx,rbx
  0000000000000118: FF 15 00 00 00 00  call        qword ptr [__imp__mbsnbicmp]
  000000000000011E: 85 C0              test        eax,eax
  0000000000000120: 74 0E              je          0000000000000130
  0000000000000122: 48 8B CB           mov         rcx,rbx
  0000000000000125: FF 15 00 00 00 00  call        qword ptr [__imp_CharNextA]
  000000000000012B: 48 8B D8           mov         rbx,rax
  000000000000012E: EB 06              jmp         0000000000000136
  0000000000000130: 48 03 DE           add         rbx,rsi
  0000000000000133: 48 03 FE           add         rdi,rsi
  0000000000000136: 0F B6 07           movzx       eax,byte ptr [rdi]
  0000000000000139: 84 C0              test        al,al
  000000000000013B: 0F 85 36 FF FF FF  jne         0000000000000077
  0000000000000141: 33 C9              xor         ecx,ecx
  0000000000000143: 38 0F              cmp         byte ptr [rdi],cl
  0000000000000145: 0F 94 C1           sete        cl
  0000000000000148: 8B C1              mov         eax,ecx
  000000000000014A: 48 8B 7C 24 38     mov         rdi,qword ptr [rsp+38h]
  000000000000014F: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000154: 4C 8B 74 24 40     mov         r14,qword ptr [rsp+40h]
  0000000000000159: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000015E: 48 83 C4 20        add         rsp,20h
  0000000000000162: 5E                 pop         rsi
  0000000000000163: C3                 ret
  0000000000000164: 48 8B CB           mov         rcx,rbx
  0000000000000167: FF 15 00 00 00 00  call        qword ptr [__imp_lstrlenA]
  000000000000016D: 48 8B CF           mov         rcx,rdi
  0000000000000170: 48 63 F0           movsxd      rsi,eax
  0000000000000173: FF 15 00 00 00 00  call        qword ptr [__imp_lstrlenA]
  0000000000000179: 48 63 C8           movsxd      rcx,eax
  000000000000017C: 48 3B F1           cmp         rsi,rcx
  000000000000017F: 73 04              jae         0000000000000185
  0000000000000181: 33 C0              xor         eax,eax
  0000000000000183: EB C5              jmp         000000000000014A
  0000000000000185: 48 2B F1           sub         rsi,rcx
  0000000000000188: 48 8B D7           mov         rdx,rdi
  000000000000018B: 48 8D 0C 33        lea         rcx,[rbx+rsi]
  000000000000018F: FF 15 00 00 00 00  call        qword ptr [__imp__mbsicmp]
  0000000000000195: 33 C9              xor         ecx,ecx
  0000000000000197: 85 C0              test        eax,eax
  0000000000000199: EB AA              jmp         0000000000000145

?WildCompareHwIds@@YAHPEAPEA_WAEBUIdEntry@@@Z (int __cdecl WildCompareHwIds(wchar_t * *,struct IdEntry const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 54              push        r12
  0000000000000016: 41 56              push        r14
  0000000000000018: 41 57              push        r15
  000000000000001A: 48 83 EC 20        sub         rsp,20h
  000000000000001E: 4C 8B E2           mov         r12,rdx
  0000000000000021: 4C 8B F9           mov         r15,rcx
  0000000000000024: 48 85 C9           test        rcx,rcx
  0000000000000027: 0F 84 49 01 00 00  je          0000000000000176
  000000000000002D: 48 8B 31           mov         rsi,qword ptr [rcx]
  0000000000000030: 48 85 F6           test        rsi,rsi
  0000000000000033: 0F 84 3D 01 00 00  je          0000000000000176
  0000000000000039: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000040: 4D 8B 44 24 08     mov         r8,qword ptr [r12+8]
  0000000000000045: 49 8B 14 24        mov         rdx,qword ptr [r12]
  0000000000000049: 48 8B CE           mov         rcx,rsi
  000000000000004C: 4D 85 C0           test        r8,r8
  000000000000004F: 75 0F              jne         0000000000000060
  0000000000000051: FF 15 00 00 00 00  call        qword ptr [__imp__mbsicmp]
  0000000000000057: 33 C9              xor         ecx,ecx
  0000000000000059: 85 C0              test        eax,eax
  000000000000005B: E9 FE 00 00 00     jmp         000000000000015E
  0000000000000060: 4C 2B C2           sub         r8,rdx
  0000000000000063: FF 15 00 00 00 00  call        qword ptr [__imp__mbsnbicmp]
  0000000000000069: 85 C0              test        eax,eax
  000000000000006B: 0F 85 F4 00 00 00  jne         0000000000000165
  0000000000000071: 49 8B 7C 24 08     mov         rdi,qword ptr [r12+8]
  0000000000000076: 48 8B DF           mov         rbx,rdi
  0000000000000079: 49 2B 1C 24        sub         rbx,qword ptr [r12]
  000000000000007D: 0F B6 07           movzx       eax,byte ptr [rdi]
  0000000000000080: 48 03 DE           add         rbx,rsi
  0000000000000083: 84 C0              test        al,al
  0000000000000085: 0F 84 CF 00 00 00  je          000000000000015A
  000000000000008B: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  0000000000000090: 48 8B CF           mov         rcx,rdi
  0000000000000093: 3C 2A              cmp         al,2Ah
  0000000000000095: 75 0E              jne         00000000000000A5
  0000000000000097: FF 15 00 00 00 00  call        qword ptr [__imp_CharNextA]
  000000000000009D: 48 8B F8           mov         rdi,rax
  00000000000000A0: E9 AA 00 00 00     jmp         000000000000014F
  00000000000000A5: BA 2A 00 00 00     mov         edx,2Ah
  00000000000000AA: FF 15 00 00 00 00  call        qword ptr [__imp__mbschr]
  00000000000000B0: 48 8B F0           mov         rsi,rax
  00000000000000B3: 48 85 C0           test        rax,rax
  00000000000000B6: 0F 84 DB 00 00 00  je          0000000000000197
  00000000000000BC: 0F BE 0F           movsx       ecx,byte ptr [rdi]
  00000000000000BF: 48 2B F7           sub         rsi,rdi
  00000000000000C2: FF 15 00 00 00 00  call        qword ptr [__imp__ismbcalpha]
  00000000000000C8: 85 C0              test        eax,eax
  00000000000000CA: 74 48              je          0000000000000114
  00000000000000CC: 0F BE 0F           movsx       ecx,byte ptr [rdi]
  00000000000000CF: FF 15 00 00 00 00  call        qword ptr [__imp__mbctoupper]
  00000000000000D5: 0F BE 0F           movsx       ecx,byte ptr [rdi]
  00000000000000D8: 8B E8              mov         ebp,eax
  00000000000000DA: FF 15 00 00 00 00  call        qword ptr [__imp__mbctolower]
  00000000000000E0: 0F B6 0B           movzx       ecx,byte ptr [rbx]
  00000000000000E3: 44 8B F0           mov         r14d,eax
  00000000000000E6: 84 C9              test        cl,cl
  00000000000000E8: 74 7B              je          0000000000000165
  00000000000000EA: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  00000000000000F0: 40 3A CD           cmp         cl,bpl
  00000000000000F3: 74 1A              je          000000000000010F
  00000000000000F5: 41 3A CE           cmp         cl,r14b
  00000000000000F8: 74 15              je          000000000000010F
  00000000000000FA: 48 8B CB           mov         rcx,rbx
  00000000000000FD: FF 15 00 00 00 00  call        qword ptr [__imp_CharNextA]
  0000000000000103: 48 8B D8           mov         rbx,rax
  0000000000000106: 0F B6 08           movzx       ecx,byte ptr [rax]
  0000000000000109: 84 C9              test        cl,cl
  000000000000010B: 75 E3              jne         00000000000000F0
  000000000000010D: EB 56              jmp         0000000000000165
  000000000000010F: 80 3B 00           cmp         byte ptr [rbx],0
  0000000000000112: EB 12              jmp         0000000000000126
  0000000000000114: 0F BE 17           movsx       edx,byte ptr [rdi]
  0000000000000117: 48 8B CB           mov         rcx,rbx
  000000000000011A: FF 15 00 00 00 00  call        qword ptr [__imp__mbschr]
  0000000000000120: 48 8B D8           mov         rbx,rax
  0000000000000123: 48 85 C0           test        rax,rax
  0000000000000126: 74 3D              je          0000000000000165
  0000000000000128: 4C 8B C6           mov         r8,rsi
  000000000000012B: 48 8B D7           mov         rdx,rdi
  000000000000012E: 48 8B CB           mov         rcx,rbx
  0000000000000131: FF 15 00 00 00 00  call        qword ptr [__imp__mbsnbicmp]
  0000000000000137: 85 C0              test        eax,eax
  0000000000000139: 74 0E              je          0000000000000149
  000000000000013B: 48 8B CB           mov         rcx,rbx
  000000000000013E: FF 15 00 00 00 00  call        qword ptr [__imp_CharNextA]
  0000000000000144: 48 8B D8           mov         rbx,rax
  0000000000000147: EB 06              jmp         000000000000014F
  0000000000000149: 48 03 DE           add         rbx,rsi
  000000000000014C: 48 03 FE           add         rdi,rsi
  000000000000014F: 0F B6 07           movzx       eax,byte ptr [rdi]
  0000000000000152: 84 C0              test        al,al
  0000000000000154: 0F 85 36 FF FF FF  jne         0000000000000090
  000000000000015A: 33 C9              xor         ecx,ecx
  000000000000015C: 38 0F              cmp         byte ptr [rdi],cl
  000000000000015E: 0F 94 C1           sete        cl
  0000000000000161: 85 C9              test        ecx,ecx
  0000000000000163: 75 65              jne         00000000000001CA
  0000000000000165: 49 8B 77 08        mov         rsi,qword ptr [r15+8]
  0000000000000169: 49 83 C7 08        add         r15,8
  000000000000016D: 48 85 F6           test        rsi,rsi
  0000000000000170: 0F 85 CA FE FF FF  jne         0000000000000040
  0000000000000176: 33 C0              xor         eax,eax
  0000000000000178: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000017D: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  0000000000000182: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000187: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  000000000000018C: 48 83 C4 20        add         rsp,20h
  0000000000000190: 41 5F              pop         r15
  0000000000000192: 41 5E              pop         r14
  0000000000000194: 41 5C              pop         r12
  0000000000000196: C3                 ret
  0000000000000197: 48 8B CB           mov         rcx,rbx
  000000000000019A: FF 15 00 00 00 00  call        qword ptr [__imp_lstrlenA]
  00000000000001A0: 48 8B CF           mov         rcx,rdi
  00000000000001A3: 48 63 F0           movsxd      rsi,eax
  00000000000001A6: FF 15 00 00 00 00  call        qword ptr [__imp_lstrlenA]
  00000000000001AC: 48 63 C8           movsxd      rcx,eax
  00000000000001AF: 48 3B F1           cmp         rsi,rcx
  00000000000001B2: 72 B1              jb          0000000000000165
  00000000000001B4: 48 2B F1           sub         rsi,rcx
  00000000000001B7: 48 8B D7           mov         rdx,rdi
  00000000000001BA: 48 8D 0C 33        lea         rcx,[rbx+rsi]
  00000000000001BE: FF 15 00 00 00 00  call        qword ptr [__imp__mbsicmp]
  00000000000001C4: 33 C9              xor         ecx,ecx
  00000000000001C6: 85 C0              test        eax,eax
  00000000000001C8: EB 94              jmp         000000000000015E
  00000000000001CA: B8 01 00 00 00     mov         eax,1
  00000000000001CF: EB A7              jmp         0000000000000178

?cmdRestart@@YAHPEBD0HQEAPEAD@Z (int __cdecl cmdRestart(char const *,char const *,int,char * * const)):
  0000000000000000: 48 81 EC 68 01 00  sub         rsp,168h
                    00
  0000000000000007: 45 85 C0           test        r8d,r8d
  000000000000000A: 75 0D              jne         0000000000000019
  000000000000000C: B8 03 00 00 00     mov         eax,3
  0000000000000011: 48 81 C4 68 01 00  add         rsp,168h
                    00
  0000000000000018: C3                 ret
  0000000000000019: 48 85 D2           test        rdx,rdx
  000000000000001C: 75 EE              jne         000000000000000C
  000000000000001E: 33 C0              xor         eax,eax
  0000000000000020: 48 C7 44 24 44 03  mov         qword ptr [rsp+44h],3
                    00 00 00
  0000000000000029: 89 44 24 40        mov         dword ptr [rsp+40h],eax
  000000000000002D: 48 8D 44 24 70     lea         rax,[rsp+70h]
  0000000000000032: 48 89 44 24 58     mov         qword ptr [rsp+58h],rax
  0000000000000037: 48 8D 84 24 C0 00  lea         rax,[rsp+0C0h]
                    00 00
  000000000000003F: 48 89 44 24 50     mov         qword ptr [rsp+50h],rax
  0000000000000044: 48 8D 84 24 10 01  lea         rax,[rsp+110h]
                    00 00
  000000000000004C: 48 89 44 24 60     mov         qword ptr [rsp+60h],rax
  0000000000000051: 48 8D 44 24 40     lea         rax,[rsp+40h]
  0000000000000056: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  000000000000005B: 48 8D 05 00 00 00  lea         rax,[?ControlCallback@@YAHPEAXPEAU_SP_DEVINFO_DATA@@K0@Z]
                    00
  0000000000000062: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  0000000000000067: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  000000000000006C: 45 8B C8           mov         r9d,r8d
  000000000000006F: 44 8D 42 02        lea         r8d,[rdx+2]
  0000000000000073: E8 00 00 00 00     call        ?EnumerateDevices@@YAHPEBD0KHPEAPEA_WP6AHPEAXPEAU_SP_DEVINFO_DATA@@K2@Z2@Z
  0000000000000078: 85 C0              test        eax,eax
  000000000000007A: 75 12              jne         000000000000008E
  000000000000007C: 39 44 24 40        cmp         dword ptr [rsp+40h],eax
  0000000000000080: 74 0C              je          000000000000008E
  0000000000000082: 39 44 24 48        cmp         dword ptr [rsp+48h],eax
  0000000000000086: B9 01 00 00 00     mov         ecx,1
  000000000000008B: 0F 45 C1           cmovne      eax,ecx
  000000000000008E: 48 81 C4 68 01 00  add         rsp,168h
                    00
  0000000000000095: C3                 ret

_tcschr:
  0000000000000000: 48 FF 25 00 00 00  jmp         qword ptr [__imp__mbschr]
                    00

_tcsicmp:
  0000000000000000: 48 FF 25 00 00 00  jmp         qword ptr [__imp__mbsicmp]
                    00

_tcsnicmp:
  0000000000000000: 48 FF 25 00 00 00  jmp         qword ptr [__imp__mbsnbicmp]
                    00

  Summary

           8 .00cfg
          60 .bss
         3F4 .data
         2D0 .data$r
       74E1E .debug$S
        93F4 .debug$T
         D9F .drectve
          28 .idata$2
          28 .idata$3
          10 .idata$4
          10 .idata$5
          1A .idata$6
        141C .pdata
         955 .rdata
         90C .rdata$r
       106A7 .text$mn
          31 .text$mn$00
        1B60 .xdata
